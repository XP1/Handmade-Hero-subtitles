1
00:00:01,000 --> 00:00:04,300
Okay, hello everyone, and welcome to handmade hero.

2
00:00:04,300 --> 00:00:06,800
The show we go to complete game live on stream.

3
00:00:07,500 --> 00:00:11,700
We are in the middle of doing some, debug code stuff and I think we

4
00:00:11,700 --> 00:00:16,400
kind of got to a pretty good place with the debug code last week.

5
00:00:16,800 --> 00:00:21,100
And so now we kind of just need to start doing a little work on making

6
00:00:21,100 --> 00:00:25,500
the interface stuff play well with the fact that the data like all of

7
00:00:25,500 --> 00:00:26,700
the data is buffered.

8
00:00:26,900 --> 00:00:30,200
So there's a bunch of stuff that we kind of like you know left to the

9
00:00:30,400 --> 00:00:34,400
I'd as we sort of move things around to make it nice and concise.

10
00:00:34,400 --> 00:00:38,200
So that you could put stuff in sort of the debug buffers and have that

11
00:00:38,200 --> 00:00:39,000
display as data.

12
00:00:41,000 --> 00:00:42,300
That's all nice now.

13
00:00:42,600 --> 00:00:48,800
Well certainly nicer but we don't really have any way of interacting

14
00:00:48,800 --> 00:00:49,400
with that stuff.

15
00:00:49,400 --> 00:00:52,200
The way that we used to because we kind of broke that code as we were

16
00:00:52,200 --> 00:00:53,000
doing the changes.

17
00:00:53,000 --> 00:00:56,500
And so what I'd like to look at today as I'd like to look how look at

18
00:00:56,500 --> 00:00:59,200
like how to like now go through and clean up our interface path.

19
00:01:00,000 --> 00:01:03,600
Like we clean up there are data path so that we can start to get all

20
00:01:03,600 --> 00:01:06,600
of those features, kind of unified and playing nicely with each other.

21
00:01:07,300 --> 00:01:09,800
Now that we sort of have an idea of what that looks like.

22
00:01:10,800 --> 00:01:15,800
Again today is day 2 12, so if you would like to follow along with the

23
00:01:15,800 --> 00:01:18,900
code, we do today at home, and you preorder the game on handmade her

24
00:01:18,900 --> 00:01:22,900
dot-org, you can go ahead and unpack that into a directory because

25
00:01:22,900 --> 00:01:24,800
that is the code that I am going to start with today.

26
00:01:24,800 --> 00:01:28,800
So, if you start with the same code, we will be in sync.

27
00:01:28,900 --> 00:01:32,200
Like the band, like the Backstreet, Boys.

28
00:01:33,200 --> 00:01:34,500
But different.

29
00:01:34,600 --> 00:01:34,900
All right.

30
00:01:34,900 --> 00:01:38,800
So, here's where we left things on Friday.

31
00:01:40,200 --> 00:01:44,400
You can see that actually the stuff that we wanted to do is working.

32
00:01:45,300 --> 00:01:48,000
You can highlight entities and print out information.

33
00:01:48,000 --> 00:01:50,800
That information goes into the debug buffers and then kind of gets

34
00:01:51,300 --> 00:01:53,200
picked up later by the collation code.

35
00:01:53,200 --> 00:01:57,300
So it doesn't actually have to exist for a long period of time.

36
00:01:57,300 --> 00:01:58,600
It doesn't have to exist.

37
00:01:58,800 --> 00:02:01,400
Even at the end of the frame, it's something that can just kind of be

38
00:02:01,400 --> 00:02:05,300
captured and played with, but things that are interactable such as

39
00:02:05,300 --> 00:02:08,800
like, expandable things or like in this case, you know, we got this

40
00:02:08,800 --> 00:02:09,600
sort of concept here.

41
00:02:09,800 --> 00:02:13,200
But sort of a thing that gets like, dragged out, right?

42
00:02:13,200 --> 00:02:13,900
You can see that.

43
00:02:13,900 --> 00:02:16,700
There's there's a lot of kind of janky Enos there and we also have

44
00:02:16,700 --> 00:02:18,900
some things like, you know, while it's highlighting its there and as I

45
00:02:18,900 --> 00:02:21,800
move away, it's not, which might be kind of understandable, but we

46
00:02:21,800 --> 00:02:24,400
sort of have this, you know, just a number of problems there were

47
00:02:24,400 --> 00:02:27,100
like, okay, so maybe we need to be able to click on something and we

48
00:02:27,100 --> 00:02:30,300
need to be able to store the information about that thing a little bit

49
00:02:30,300 --> 00:02:30,500
better.

50
00:02:30,500 --> 00:02:34,300
There's all sorts of things that we kind of need to start doing it and

51
00:02:34,300 --> 00:02:37,800
having a more coherent plan for, so that's what I'd like to start out

52
00:02:37,800 --> 00:02:38,400
doing.

53
00:02:38,600 --> 00:02:39,600
Maybe we'll just start out with.

54
00:02:39,700 --> 00:02:42,500
Something very simple like starting to get just debug you, I

55
00:02:42,500 --> 00:02:46,800
interactions in in general like we had that sort of radial menu and we

56
00:02:46,800 --> 00:02:49,700
have you know sort of these ideas interactions maybe we'll try to sort

57
00:02:49,700 --> 00:02:52,200
of get those unified so that we can use them in the game as well.

58
00:02:54,200 --> 00:02:56,700
And then from there, I think we have a little bit of work to do.

59
00:02:58,100 --> 00:02:59,800
looking at how we actually,

60
00:03:00,000 --> 00:03:04,700
Talk about what a debug element is in terms of its ID and that's

61
00:03:04,700 --> 00:03:06,100
important for storing.

62
00:03:06,200 --> 00:03:09,500
The information about how it's being viewed and that stuff like, you

63
00:03:09,500 --> 00:03:12,000
know, like this kind of thing where I'm doing this sort of pull out

64
00:03:12,000 --> 00:03:13,700
and those sorts of things, right?

65
00:03:14,800 --> 00:03:19,000
Okay, so the first thing that I'm going to just take a look at here

66
00:03:19,000 --> 00:03:21,400
or, you know, bring to your attention, right?

67
00:03:21,400 --> 00:03:25,900
Is the extreme Jank Enos of that selection process, that was going on

68
00:03:25,900 --> 00:03:26,800
there, right?

69
00:03:27,000 --> 00:03:29,800
So if you imagine like, you know, we've kind of got this working in

70
00:03:29,800 --> 00:03:33,100
we, you know, some of it is pretty good but you can kind of see that

71
00:03:33,100 --> 00:03:37,000
this stuff is really pretty random and janky at this point because in

72
00:03:37,000 --> 00:03:40,600
a real scenario if you imagine when we actually go to try and use

73
00:03:40,600 --> 00:03:43,700
this, the obvious thing that I'm going to want to do is I'm going to

74
00:03:43,700 --> 00:03:44,500
want to select one of these

75
00:03:44,600 --> 00:03:45,400
He's or something.

76
00:03:45,500 --> 00:03:47,400
And then I'm going to want to go over here and interact with it.

77
00:03:47,400 --> 00:03:49,600
But just by the nature of how it works, right?

78
00:03:49,600 --> 00:03:52,100
I've kind of got the situation where I suffer over it and it shows the

79
00:03:52,100 --> 00:03:52,600
thing.

80
00:03:52,700 --> 00:03:55,000
And then when I, if I was to go over here, to try and react with

81
00:03:55,000 --> 00:03:58,000
whatever it was, it would go away because I'm no longer hovering over

82
00:03:58,000 --> 00:03:58,700
it, right?

83
00:03:58,900 --> 00:04:02,700
So at the very least we need to start having things like the ability

84
00:04:02,700 --> 00:04:06,400
to like click and select something, you know, so that's, you know,

85
00:04:06,400 --> 00:04:07,800
something we definitely would want to do.

86
00:04:07,800 --> 00:04:11,500
But if you think about what happens, there we have a few more problems

87
00:04:11,500 --> 00:04:12,900
even deeper than that.

88
00:04:13,200 --> 00:04:14,500
And even deeper than that,

89
00:04:14,600 --> 00:04:19,200
That is just that action, that activity, even of itself, right now, it

90
00:04:19,200 --> 00:04:23,200
conflicts, with any selection, that I might do for the actual system,

91
00:04:23,300 --> 00:04:23,900
right?

92
00:04:23,900 --> 00:04:27,000
So, in here, like that, little nub is a selectable nub.

93
00:04:27,000 --> 00:04:29,600
You'll notice that when I select the nub, now, technically I'm

94
00:04:29,600 --> 00:04:32,000
highlighting both the tree and the nub, right?

95
00:04:32,100 --> 00:04:34,700
So there's no Concept in the system of what.

96
00:04:34,700 --> 00:04:38,600
Like, you know, the fact that both the debug system and the game, now

97
00:04:38,600 --> 00:04:42,700
have things that might want to be part of a, debug UI interaction and

98
00:04:42,700 --> 00:04:44,400
that's not going to fly, right?

99
00:04:46,800 --> 00:04:48,700
What's going to happen if we let that stand?

100
00:04:49,700 --> 00:04:53,500
Is that as I try to interact with things in here, I will be silently

101
00:04:53,500 --> 00:04:56,600
selecting like entities underneath and ruining whatever it was that I

102
00:04:56,600 --> 00:04:57,400
was trying to work on.

103
00:04:57,400 --> 00:05:00,900
So we need the debug system in the game to have a unified

104
00:05:00,900 --> 00:05:04,200
understanding of what a debug interaction is and who is actually doing

105
00:05:04,200 --> 00:05:05,000
stuff with it.

106
00:05:05,000 --> 00:05:11,300
And in addition to that, we need to do a thing where we can have that

107
00:05:11,300 --> 00:05:13,000
be as unintrusive.

108
00:05:13,000 --> 00:05:16,700
Like, we need that to be as transparent to the game as possible

109
00:05:16,700 --> 00:05:19,700
because we don't want all the code, you know, all of the

110
00:05:19,600 --> 00:05:23,100
The code in the game to get complexified by like, inserting code into

111
00:05:23,100 --> 00:05:23,200
it.

112
00:05:23,200 --> 00:05:25,500
That's just for dealing with the debug system.

113
00:05:25,500 --> 00:05:30,100
So we, you know, ideally we want as much complexity as we can in that

114
00:05:30,100 --> 00:05:33,900
system to live inside the debug system itself and as little of the

115
00:05:33,900 --> 00:05:36,400
complexity as possible to live on the side of the game.

116
00:05:36,400 --> 00:05:41,200
So that it's easy for the game to sort of expose new things that might

117
00:05:41,200 --> 00:05:43,800
get clicked on, or that might get selected for debugging purposes

118
00:05:43,800 --> 00:05:46,900
without having to like complexify the code.

119
00:05:46,900 --> 00:05:49,600
That's being debugged because the last thing we want to do is

120
00:05:49,600 --> 00:05:53,200
Is export complexity from the debug system out into the game, because

121
00:05:53,200 --> 00:05:55,100
the debug system is only supposed to be for debugging.

122
00:05:55,100 --> 00:05:57,700
It should be easy as easy as possible to use.

123
00:05:59,100 --> 00:05:59,900
so, if we take a look,

124
00:06:00,000 --> 00:06:01,600
It where this is actually happening.

125
00:06:01,800 --> 00:06:04,400
Right in handmade hero dot CPP.

126
00:06:04,700 --> 00:06:08,200
We have this thing here where we sort of have, like begin data block

127
00:06:08,200 --> 00:06:08,800
hot entity.

128
00:06:09,100 --> 00:06:12,300
We can see that this code right here is the code that like, does the

129
00:06:12,300 --> 00:06:17,200
picking, you know, we Loop over the volumes for the, you know, we Loop

130
00:06:17,200 --> 00:06:20,000
over the, the Collision volumes for a given entity.

131
00:06:20,400 --> 00:06:23,400
And then we look at, you know, whether the mouse is over them or

132
00:06:23,400 --> 00:06:23,900
whatever.

133
00:06:24,300 --> 00:06:27,900
Now, what we want to do here, ideally is have some way that this would

134
00:06:27,900 --> 00:06:29,700
interact with our debug system and

135
00:06:30,000 --> 00:06:32,600
we can see like when we look at this code, right?

136
00:06:32,600 --> 00:06:36,000
Is that it probably wouldn't be very difficult for us to just do

137
00:06:36,000 --> 00:06:38,700
something that said like okay when we're going to begin this data

138
00:06:38,700 --> 00:06:41,600
block, or when we're going to push this data block, you could imagine

139
00:06:41,600 --> 00:06:45,200
something probably pretty straightforward which was just some way of

140
00:06:45,200 --> 00:06:46,200
asking the debug system.

141
00:06:46,200 --> 00:06:49,500
You know, like, hey should I push this data block or not right?

142
00:06:49,600 --> 00:06:52,200
Or maybe it's a speculative push or something like that.

143
00:06:52,300 --> 00:06:54,700
You know, you could imagine ways in which this would work.

144
00:06:55,000 --> 00:06:56,900
All of this stuff goes into this data, block right?

145
00:06:56,900 --> 00:06:58,800
You can see it happening there.

146
00:06:59,500 --> 00:07:00,800
and one thing that I could do,

147
00:07:04,900 --> 00:07:08,900
Is just make that data block somehow magically predicated itself on

148
00:07:08,900 --> 00:07:11,000
one of these interaction things, right?

149
00:07:11,500 --> 00:07:14,400
So that's the first thing that I'm going to look at as an option

150
00:07:14,500 --> 00:07:17,400
because ideally since we know that like, this is the minimum that we

151
00:07:17,400 --> 00:07:20,400
have to do either, you know, and this, you know, maybe in the future,

152
00:07:20,400 --> 00:07:23,200
we can get this down to something even swankier where, we're just like

153
00:07:23,300 --> 00:07:25,300
debug Auto data block.

154
00:07:25,300 --> 00:07:28,000
And we say something, you know, like this.

155
00:07:30,800 --> 00:07:31,300
Right.

156
00:07:31,400 --> 00:07:33,000
We might be able to do something like that.

157
00:07:33,000 --> 00:07:35,700
Using the meta programming stuff that we wrote if we wanted to because

158
00:07:35,700 --> 00:07:36,900
all of this stuff, right?

159
00:07:37,000 --> 00:07:38,900
Could be automatically determined from there.

160
00:07:39,100 --> 00:07:41,600
So we know that we might be able to get it down to a much simpler

161
00:07:41,600 --> 00:07:44,800
thing in terms of us not having to specify all the values.

162
00:07:44,800 --> 00:07:47,500
But the only thing that really would be different there is that the

163
00:07:47,500 --> 00:07:50,400
you know, the sort of meta program knows where all the values are and

164
00:07:50,400 --> 00:07:52,500
that's why we don't have to do it but it would still get sort of

165
00:07:52,500 --> 00:07:53,500
pushed in the exact same way.

166
00:07:53,500 --> 00:07:55,300
So just be this code automatically generated.

167
00:07:55,500 --> 00:07:58,400
So basically we know that this code is what's going to run for sure.

168
00:07:59,100 --> 00:08:01,600
And we could simplify it down quite nice with the meta program if you

169
00:08:01,600 --> 00:08:02,100
wanted to.

170
00:08:02,200 --> 00:08:03,100
So, that's good.

171
00:08:03,200 --> 00:08:06,200
So all we need to think about now, is, how do we simplify the fact

172
00:08:06,200 --> 00:08:09,300
that it is an interaction that might involve like the concept of

173
00:08:09,300 --> 00:08:12,200
selecting something or something like this, right?

174
00:08:12,600 --> 00:08:16,700
So the other thing that I want to point out to you is this occurs this

175
00:08:16,800 --> 00:08:20,700
exporting of the data right now does exporting the data occurs inside

176
00:08:20,700 --> 00:08:23,100
the thing that selects The Entity, right?

177
00:08:23,200 --> 00:08:26,000
And the fact that it occurs inside the thing, that selects The Entity

178
00:08:26,000 --> 00:08:28,400
means that if the entity were not being hovered,

179
00:08:28,800 --> 00:08:31,700
This data would not be exported now, that's not necessarily a problem

180
00:08:31,700 --> 00:08:34,100
because the debug system could keep us a copy of it.

181
00:08:34,100 --> 00:08:36,299
If it wanted to keep displaying it, we could do that.

182
00:08:36,299 --> 00:08:37,700
It wouldn't be particularly difficult.

183
00:08:37,700 --> 00:08:41,600
But the problem with that is it means that once you're no longer

184
00:08:41,600 --> 00:08:44,900
hovering over the entity, the data would no longer update, right?

185
00:08:45,000 --> 00:08:48,700
Because this is what actually sends the data to the debug system and

186
00:08:48,700 --> 00:08:52,700
so if we don't have this getting called every frame, then the debug

187
00:08:52,700 --> 00:08:56,000
system will not know of you know if these things change like let's say

188
00:08:56,000 --> 00:08:58,700
the entities moving this p-value will change every frame.

189
00:08:58,800 --> 00:08:59,900
umm, but if we only

190
00:09:00,000 --> 00:09:02,800
When we were hovering then if you like clicked on it, select it as an

191
00:09:02,800 --> 00:09:04,600
entity that you want to view for a while.

192
00:09:04,900 --> 00:09:08,000
And it shows up in a window on the side when you then stop hovering

193
00:09:08,000 --> 00:09:10,600
over that entity the P would no longer update, right?

194
00:09:10,600 --> 00:09:12,800
And neither would anything else because it's not getting updated at

195
00:09:12,800 --> 00:09:13,000
all.

196
00:09:13,000 --> 00:09:14,000
It's not getting sent.

197
00:09:14,700 --> 00:09:18,100
So, more likely the thing that I suspect we would want to do is

198
00:09:18,100 --> 00:09:19,500
something like this, right?

199
00:09:19,600 --> 00:09:21,300
And this is just me conceptualizing.

200
00:09:21,300 --> 00:09:25,600
How I suspect this would have to work in order to do what I wanted to

201
00:09:25,600 --> 00:09:28,800
do, which is that as we Loop through these entities here, right?

202
00:09:28,800 --> 00:09:29,800
And you can see us dealing with

203
00:09:30,000 --> 00:09:32,400
These entities, we do our updates and all that stuff.

204
00:09:32,400 --> 00:09:34,300
We have a thing here that does the Collision detection.

205
00:09:34,300 --> 00:09:38,800
What I probably want to do is say, you know what, at the end of all

206
00:09:38,800 --> 00:09:41,900
this stuff, after we do the Collision detection, right?

207
00:09:42,000 --> 00:09:44,300
Which is all this stuff and we don't need this anymore.

208
00:09:45,800 --> 00:09:47,900
Excuse me, right?

209
00:09:50,300 --> 00:09:51,000
There we go.

210
00:09:54,600 --> 00:09:57,900
So after we do all of this stuff, we do the Collision detection, which

211
00:09:57,900 --> 00:10:00,800
is only really necessary for for debug mode.

212
00:10:00,900 --> 00:10:03,700
So, you might say this should be something where we do handmade

213
00:10:03,700 --> 00:10:06,800
internal, we could also have sort of add another thing for this, which

214
00:10:06,800 --> 00:10:10,900
is like, if, you know, debug you I enabled or something like this,

215
00:10:10,900 --> 00:10:11,100
right?

216
00:10:11,100 --> 00:10:12,800
You could imagine it being something like this.

217
00:10:13,900 --> 00:10:16,500
But basically what we have is a section where we do our hit testing

218
00:10:16,500 --> 00:10:18,000
for that debug stuff, right?

219
00:10:18,600 --> 00:10:22,300
And then we have an output for the debug stuff and what I'd like to do

220
00:10:22,300 --> 00:10:23,300
is decouple these.

221
00:10:23,500 --> 00:10:24,300
So I'd like to do is

222
00:10:24,500 --> 00:10:28,900
okay, they hit testing happens and if we have a situation where we hit

223
00:10:28,900 --> 00:10:32,500
test somebody and it turns out that that somebody is the guy who was

224
00:10:32,500 --> 00:10:33,300
was outlined

225
00:10:37,600 --> 00:10:41,100
Then I'd like to have something in here where we can sort of announce

226
00:10:41,100 --> 00:10:49,000
that to the big system like if debug, you know, hit hit data, I don't

227
00:10:49,000 --> 00:10:49,200
know.

228
00:10:49,200 --> 00:10:52,600
Something like this hit thing, you know.

229
00:10:52,700 --> 00:10:56,500
I don't know if debug hit and we want to sort of announce this thing

230
00:10:56,500 --> 00:10:57,900
and we kind of know what this thing is.

231
00:10:57,900 --> 00:10:58,200
Right.

232
00:10:58,200 --> 00:11:00,000
It's this this is its ID, right?

233
00:11:00,000 --> 00:11:02,400
That we decided it had that was a pointer that had there.

234
00:11:03,200 --> 00:11:06,600
So if you know you hit this thing then what we

235
00:11:06,700 --> 00:11:11,000
Like to do is we'd like to display it or whatever and otherwise you

236
00:11:11,000 --> 00:11:15,200
know maybe we don't and then same with here, we like, if debug, you

237
00:11:15,200 --> 00:11:18,700
know system, anybody say if the debug system wants whatever this thing

238
00:11:18,700 --> 00:11:24,100
is, you know, then we would we'd sort of open this data block and

239
00:11:24,100 --> 00:11:26,100
stream out the values to it, right?

240
00:11:26,500 --> 00:11:31,100
And that would be something more like this, if maybe we would call it

241
00:11:31,100 --> 00:11:34,500
even something like this, we just have the data Block in there.

242
00:11:36,000 --> 00:11:40,600
It maybe it opens it automatically and we just say, if debug begin

243
00:11:40,600 --> 00:11:44,100
like optional data block or something and hear it that is

244
00:11:46,100 --> 00:11:52,700
so in that case, now we have a situation where the debug system itself

245
00:11:52,700 --> 00:11:58,500
can sort of ask for which entities it wants to have updated and some,

246
00:11:58,500 --> 00:11:59,000
you know,

247
00:12:01,500 --> 00:12:02,900
Some logic.

248
00:12:04,000 --> 00:12:08,200
Can occur behind the scenes to make sure all of this stuff gets

249
00:12:08,700 --> 00:12:11,300
integrated with the debug UI system itself.

250
00:12:11,700 --> 00:12:16,000
And so in here we would say hey we have a hit do you want us to

251
00:12:16,000 --> 00:12:18,900
highlight it basically do you want us to like do a highlight of that

252
00:12:18,900 --> 00:12:19,800
or something like this?

253
00:12:20,600 --> 00:12:21,700
You know, yes or no.

254
00:12:22,100 --> 00:12:25,600
And I suppose the other thing we could sort of do here, we could sort

255
00:12:25,600 --> 00:12:29,900
of have a thing where, you know, this could sort of have a double

256
00:12:29,900 --> 00:12:30,700
meaning as well.

257
00:12:30,900 --> 00:12:33,400
Maybe it could have a, something a little more,

258
00:12:33,900 --> 00:12:34,900
Cancel associated with it.

259
00:12:34,900 --> 00:12:38,000
So for example, when we do this operation,

260
00:12:39,100 --> 00:12:43,900
We could do something more like this where instead of the operation,

261
00:12:45,300 --> 00:12:45,900
let's do it.

262
00:12:45,900 --> 00:12:46,700
Something like this.

263
00:12:46,800 --> 00:12:49,600
We could we could do a two-part thing where we say okay.

264
00:12:50,000 --> 00:12:54,100
If you know the thing is true, then we have a debug hit and then we

265
00:12:54,100 --> 00:12:55,200
could also have a thing here.

266
00:12:55,200 --> 00:12:58,700
Remember we said, okay there was a debug kit and there is a debug or

267
00:12:58,700 --> 00:13:00,400
like highlighted, right?

268
00:13:05,300 --> 00:13:08,100
And the other thing that you can see about this is we have a lot of

269
00:13:08,100 --> 00:13:10,800
sort of the same thing going on here with this nonsense.

270
00:13:11,000 --> 00:13:14,800
And so I also feel like we would want to have a way of encapsulating

271
00:13:14,800 --> 00:13:16,300
that debug ID, you know.

272
00:13:16,800 --> 00:13:20,000
So if we took a look at the way, the debug ID thing was working there,

273
00:13:20,000 --> 00:13:21,200
debug ID,

274
00:13:23,000 --> 00:13:24,300
That's in platform.

275
00:13:24,400 --> 00:13:24,800
Oh sorry.

276
00:13:24,800 --> 00:13:27,000
That's we move that out recently.

277
00:13:27,000 --> 00:13:28,800
It's actually in debug interface.

278
00:13:29,800 --> 00:13:35,800
So in here where we have this notion of like the debug ID, which is, I

279
00:13:35,800 --> 00:13:36,800
guess not in here.

280
00:13:36,800 --> 00:13:39,600
It's actually in here as it turns out.

281
00:13:41,300 --> 00:13:47,000
So if we have this notion of a debug ID you know we can make that a

282
00:13:47,000 --> 00:13:49,700
more sort of first class citizen sort of thing.

283
00:13:50,000 --> 00:13:52,000
We could say that the debug idea

284
00:13:52,200 --> 00:13:57,900
Self is actually a thing that is understood outside the debug system.

285
00:13:58,100 --> 00:14:01,400
And so that way, when we're in code like this, we can do something

286
00:14:01,400 --> 00:14:04,500
like, say, like entity debug ID, right?

287
00:14:05,200 --> 00:14:09,800
And we can have like, you know, a pointer ID or something like this

288
00:14:09,800 --> 00:14:10,500
sort of thing.

289
00:14:13,200 --> 00:14:17,700
So we can make one of these out of whatever we want and when we make a

290
00:14:17,700 --> 00:14:22,900
pointer ID out of this thing, it then knows that like okay, that's

291
00:14:22,900 --> 00:14:25,000
what we're going to use for everything.

292
00:14:25,100 --> 00:14:28,200
So instead of having something where this could get like out of phase

293
00:14:28,200 --> 00:14:31,000
and we or we decide to change the way we're Computing it and it gets

294
00:14:31,000 --> 00:14:31,800
to be a pain.

295
00:14:32,200 --> 00:14:34,100
We could do something more like this.

296
00:14:34,500 --> 00:14:35,900
Where we just sort of have

297
00:14:37,400 --> 00:14:41,500
Hey, it was probably more properly, a simulation simulation ND.

298
00:14:42,400 --> 00:14:46,200
So if we do something more like this, right now, we sort of have that

299
00:14:46,300 --> 00:14:49,800
entity debug ideas kind of unify through the system and it's much

300
00:14:49,800 --> 00:14:50,700
better, right?

301
00:14:51,400 --> 00:14:54,000
So if you look at what we would need to add the system to do this.

302
00:14:54,000 --> 00:14:57,400
Again, I'm following sort of the write the code in the place that we

303
00:14:57,400 --> 00:14:58,900
know the most about first.

304
00:14:58,900 --> 00:14:59,800
So, and then back it out,

305
00:15:00,500 --> 00:15:02,600
You can kind of see the way that I'm envisioning it.

306
00:15:02,600 --> 00:15:03,000
It's like.

307
00:15:03,000 --> 00:15:05,700
Okay, we've got some switch that can turn this stuff off entirely

308
00:15:05,700 --> 00:15:09,000
because if we don't want any of this happening, we don't so we could

309
00:15:09,000 --> 00:15:11,800
make that be a pound to find that just turns off or who knows what we

310
00:15:11,800 --> 00:15:12,400
do there.

311
00:15:13,000 --> 00:15:16,000
We then have you know this code like what the debug ID and stuff like

312
00:15:16,000 --> 00:15:16,500
that.

313
00:15:16,800 --> 00:15:18,500
We have this code where we can do

314
00:15:25,100 --> 00:15:28,900
Announcements of stuff in our system that we want to track and we can

315
00:15:28,900 --> 00:15:32,600
give it some kind of a universal identifier that hopefully, the debug

316
00:15:32,600 --> 00:15:35,000
system can use to know which one we're talking about from frame to

317
00:15:35,000 --> 00:15:35,500
frame.

318
00:15:35,800 --> 00:15:36,900
And, again, that's a common trick.

319
00:15:36,900 --> 00:15:37,800
I use often.

320
00:15:37,800 --> 00:15:41,400
I kind of originally started doing that back in the immediate mode,

321
00:15:41,400 --> 00:15:45,400
graphical user, interface days, where I was sort of working out how to

322
00:15:45,400 --> 00:15:46,500
do those sorts of systems.

323
00:15:46,800 --> 00:15:51,500
It's this notion of a identifier that is generated from things that,

324
00:15:51,500 --> 00:15:53,400
you know, will be unique, right?

325
00:15:53,500 --> 00:15:54,800
And so in this case, I know that

326
00:15:55,000 --> 00:15:58,300
Are Pointers that would uniquely identify this entity.

327
00:15:58,500 --> 00:16:02,800
I know that we have that constant system, so I want to communicate to

328
00:16:02,800 --> 00:16:07,100
the debug system that I'm talking about the same thing that I might

329
00:16:07,100 --> 00:16:09,900
talk about later on, right, in multiple ways.

330
00:16:10,200 --> 00:16:14,100
And so, this is just a way of sort of creating that unique ID.

331
00:16:14,400 --> 00:16:20,300
It's a lot of times in C and C++ programmers, get confused about the

332
00:16:20,300 --> 00:16:24,500
difference conceptually of a pointer.

333
00:16:24,900 --> 00:16:28,600
Being a location in memory and a pointer being a name for something,

334
00:16:28,800 --> 00:16:29,500
right?

335
00:16:29,600 --> 00:16:35,600
And so, retain mode systems, traditionally have not understood the

336
00:16:35,600 --> 00:16:40,400
concept that the pointer to something and the name of something are

337
00:16:40,400 --> 00:16:41,200
different.

338
00:16:41,400 --> 00:16:47,300
So like it's a really empowering thing to understand that a pointer

339
00:16:47,700 --> 00:16:54,000
can both be a pointer can be serving as a name and storage but you

340
00:16:54,000 --> 00:16:54,600
could also

341
00:16:54,900 --> 00:16:59,000
Associate those two and just say as long as you do, have a way of

342
00:16:59,000 --> 00:17:03,100
generating, some kind of name for this thing, that is unique, then you

343
00:17:03,100 --> 00:17:08,500
can talk about it in multiple places without ever having to track its

344
00:17:08,500 --> 00:17:10,700
storage, across that boundary.

345
00:17:10,700 --> 00:17:13,200
And that's exactly what we're talking about here.

346
00:17:13,200 --> 00:17:17,300
This debug system, we're writing to a buffer that's just streaming out

347
00:17:17,300 --> 00:17:17,599
data.

348
00:17:17,599 --> 00:17:23,200
We don't want to round trip to the debug system and get back the

349
00:17:23,200 --> 00:17:24,700
storage that this will.

350
00:17:24,900 --> 00:17:28,200
Eventually occupy because we don't even know if it will be stored.

351
00:17:28,500 --> 00:17:31,300
And furthermore, we don't even know if the demon systems operational.

352
00:17:31,400 --> 00:17:33,700
We might just be sending this stuff out and it may just be ignoring

353
00:17:33,700 --> 00:17:34,500
them, right?

354
00:17:35,100 --> 00:17:35,700
Not only that.

355
00:17:35,700 --> 00:17:38,800
We don't want this code that were writing here to be complexified by

356
00:17:38,800 --> 00:17:40,500
having to insert pointers into it.

357
00:17:40,500 --> 00:17:43,500
So for example, I don't want to take my sim entity and have to attach

358
00:17:43,500 --> 00:17:46,000
a debug entity pointer to it, right?

359
00:17:46,200 --> 00:17:47,600
I don't want to do any of those things.

360
00:17:48,500 --> 00:17:52,100
So what we can recognize right is just the fact that the pointer to

361
00:17:52,100 --> 00:17:53,800
the storage on our side.

362
00:17:53,800 --> 00:17:56,900
What we're using as a unique pointer which is this low entity thing.

363
00:17:57,700 --> 00:17:59,700
We can just use that as a pointer

364
00:18:00,000 --> 00:18:03,900
The name that the debug system can use to associate with storage on

365
00:18:03,900 --> 00:18:05,300
the other side, right?

366
00:18:05,400 --> 00:18:06,800
And it's a very common technique.

367
00:18:06,800 --> 00:18:10,100
It's anytime you see someone using a map in code, right?

368
00:18:10,100 --> 00:18:13,500
Like a key value pair, that's what that is, right?

369
00:18:13,500 --> 00:18:17,100
The key is this thing that doesn't necessarily Point directly to the

370
00:18:17,100 --> 00:18:17,400
storage.

371
00:18:17,400 --> 00:18:21,400
It's just a name that we know will give us the storage or the it, or

372
00:18:21,400 --> 00:18:22,800
the value back, right?

373
00:18:23,700 --> 00:18:26,300
And it's very important because C and C++ programmers, aren't used to

374
00:18:26,300 --> 00:18:26,600
destroy you.

375
00:18:26,600 --> 00:18:29,600
Thinking that way as much other programmers are used to thinking

376
00:18:29,600 --> 00:18:32,500
exclusively, that way there are used to thinking exclusively as

377
00:18:32,500 --> 00:18:34,900
they're being names for things and they have no idea where they're

378
00:18:34,900 --> 00:18:36,400
stored or even what storage is there.

379
00:18:36,400 --> 00:18:39,200
Just like, I don't know, I put the name like a MySQL partner was like,

380
00:18:39,200 --> 00:18:41,600
I don't know, I put in the key and I got the record, right?

381
00:18:41,900 --> 00:18:43,600
The key is not a pointer to the record.

382
00:18:43,600 --> 00:18:45,700
I have no idea where the record is record, could be anywhere.

383
00:18:45,700 --> 00:18:47,600
I don't even know if it's in memory, or on disc or whatever.

384
00:18:47,600 --> 00:18:47,800
Right?

385
00:18:47,800 --> 00:18:48,800
I just know that, right?

386
00:18:50,100 --> 00:18:52,800
So it's kind of important sometimes receive C and C++ or

387
00:18:53,500 --> 00:18:56,600
They're new to C and C++ to remember that.

388
00:18:56,600 --> 00:19:02,600
Just because pointers are often used as both the name and the storage.

389
00:19:02,700 --> 00:19:06,900
They can also be used by just a simple map or a hash table or anything

390
00:19:06,900 --> 00:19:07,200
else.

391
00:19:07,400 --> 00:19:11,600
They can also be used as the name, right?

392
00:19:11,800 --> 00:19:15,700
And the storage could be somewhere else and so on and so forth, right?

393
00:19:16,100 --> 00:19:19,100
So anyway, that's just a little like brief diversion to the concept

394
00:19:19,100 --> 00:19:23,200
here and that's just a common thing again, first for newer, see,

395
00:19:23,400 --> 00:19:27,200
Best regards to forget because the language is because it allows such

396
00:19:27,200 --> 00:19:29,100
explicit manipulation of storage.

397
00:19:29,100 --> 00:19:32,600
Most a lot of the time you don't need separate names for things.

398
00:19:32,600 --> 00:19:36,200
You don't need a name for something and a storage because the pointer

399
00:19:36,200 --> 00:19:40,800
is both but in sort of certain circumstances where you want to

400
00:19:40,800 --> 00:19:42,500
partition things more cleanly.

401
00:19:43,900 --> 00:19:46,300
You can reintroduce that naming difference.

402
00:19:46,600 --> 00:19:50,400
And basically, you know, again, you sort of have the best of both

403
00:19:50,400 --> 00:19:50,800
worlds.

404
00:19:51,100 --> 00:19:52,900
It's one of the nice things about C++, right?

405
00:19:52,900 --> 00:19:56,400
Is that you are really seized single just really have anything to do

406
00:19:56,400 --> 00:19:59,100
with it, but it's one of the nice things about see is you have the

407
00:19:59,100 --> 00:20:04,000
option of choosing when you introduce a name as a name versus a name

408
00:20:04,000 --> 00:20:08,100
as the storage and you can every time that they are the same collapse,

409
00:20:08,100 --> 00:20:11,400
all of that intermediary code which is something that's a JavaScript

410
00:20:11,400 --> 00:20:13,000
can't do right because it's always

411
00:20:13,200 --> 00:20:16,100
Going through an intermediary in a number of ways and so on.

412
00:20:16,100 --> 00:20:19,800
And only if a just-in-time compiler can like figure out just the right

413
00:20:19,800 --> 00:20:23,000
things, can it ever like, you know, get past that limitation that

414
00:20:23,000 --> 00:20:24,000
names are just names.

415
00:20:24,700 --> 00:20:28,600
So anyway, if we go ahead and proceed a little bit forward with this,

416
00:20:29,300 --> 00:20:30,900
we can sort of see how this is going to play out.

417
00:20:30,900 --> 00:20:33,700
So we're going to generate some debug ID and it's going to have to be

418
00:20:33,700 --> 00:20:35,900
some way that we can sort of tell the debug system.

419
00:20:35,900 --> 00:20:38,800
This is the name I'm going to use every time I refer to this thing, in

420
00:20:38,800 --> 00:20:41,100
this case it's going to be an entity and we know that the low entity

421
00:20:41,100 --> 00:20:42,700
ID is unique in our system.

422
00:20:42,700 --> 00:20:43,000
So we can

423
00:20:43,100 --> 00:20:45,300
Can just use that pointer.

424
00:20:47,200 --> 00:20:49,400
Then we go ahead and do the hit testing.

425
00:20:49,600 --> 00:20:54,100
And whenever we find a hit we can just go ahead and say OK.

426
00:20:54,700 --> 00:20:58,800
Whenever we find that hit, we know that the entity debug ID needs to

427
00:20:58,800 --> 00:20:59,800
be announced as

428
00:21:00,000 --> 00:21:02,900
Thumping, the mouse is hovering over right now.

429
00:21:02,900 --> 00:21:07,600
We could also try to announce the Z value here so that there could be

430
00:21:07,600 --> 00:21:09,600
some sorting involved.

431
00:21:09,600 --> 00:21:13,000
I don't know how useful that would be but we do know what the Sorting

432
00:21:13,000 --> 00:21:15,100
is to some degree, right?

433
00:21:15,300 --> 00:21:20,200
We do know that the Sorting is like whatever that back project we did,

434
00:21:20,200 --> 00:21:20,700
right?

435
00:21:20,700 --> 00:21:21,200
So

436
00:21:23,200 --> 00:21:26,600
We know that whatever we do this, look at most P Uhn project thing.

437
00:21:26,600 --> 00:21:31,300
This local Mouse pz is sort of the z-depth right?

438
00:21:31,300 --> 00:21:33,500
And so we can throw that in there.

439
00:21:33,500 --> 00:21:37,600
Maybe the debug system will want to sort the hits or who knows in a 3D

440
00:21:37,600 --> 00:21:37,800
game.

441
00:21:37,800 --> 00:21:41,000
We'd obviously definitely want that in a 2-D game.

442
00:21:41,000 --> 00:21:44,800
You know how useful is that going to be probably not.

443
00:21:44,800 --> 00:21:47,600
There's not like so many things stacked on top of each other all the

444
00:21:47,600 --> 00:21:50,100
time but in a 3D game you know, you definitely want that.

445
00:21:50,100 --> 00:21:53,100
And then what we want to do is we want to check this debug highwomen.

446
00:21:53,200 --> 00:21:56,800
Like to say, hey okay, you know, is this thing supposed to be

447
00:21:56,800 --> 00:21:59,800
highlighted if so that I might do a little bit of work to render it

448
00:21:59,800 --> 00:22:02,200
and that's just generally the code that we would need to expose this

449
00:22:02,200 --> 00:22:04,900
stuff to the debug system, right?

450
00:22:05,800 --> 00:22:09,800
And then later we say, all right, if this thing was something that was

451
00:22:09,800 --> 00:22:12,800
supposed to be output, then we will output it and notice I've

452
00:22:12,800 --> 00:22:14,500
decoupled that from the Collision detection now.

453
00:22:14,500 --> 00:22:17,000
So the Collision detection happens in here or since they kill

454
00:22:17,000 --> 00:22:19,900
injections, like it is conjunction, but it's hit detection.

455
00:22:19,900 --> 00:22:20,100
Really?

456
00:22:20,100 --> 00:22:20,500
What I'm saying?

457
00:22:20,500 --> 00:22:22,700
Cause we're colliding with the mouse cursor, right?

458
00:22:24,000 --> 00:22:26,600
It's not just to not be confused because Nick normally.

459
00:22:27,100 --> 00:22:30,000
So, if you look at this code, this debug optional data block is

460
00:22:30,000 --> 00:22:33,800
basically saying, okay, every entity is going to ask the debug system

461
00:22:33,800 --> 00:22:36,000
whether or not it should be output here, right?

462
00:22:36,000 --> 00:22:39,300
So, even if the thing is not being hovered over, you'll see the debug

463
00:22:39,300 --> 00:22:42,700
system could still suck up that data, which is exactly what I wanted

464
00:22:42,700 --> 00:22:44,300
to be able to have happen before, or right.

465
00:22:44,300 --> 00:22:47,300
Like I was saying, now, it is true that this will only happen for

466
00:22:47,300 --> 00:22:49,200
entities that are within the simulation region.

467
00:22:49,400 --> 00:22:52,300
So you could imagine wanting to do something even a little bit more

468
00:22:52,800 --> 00:22:53,400
fancy later.

469
00:22:53,600 --> 00:22:57,400
On right, we could do something even fancier where we asked the debug

470
00:22:57,400 --> 00:23:00,800
system to tell us all the entities that it wants us to display and

471
00:23:00,800 --> 00:23:03,900
then we unpack them all but that starts to get a little more heavy

472
00:23:03,900 --> 00:23:08,100
weight and that becomes less of less debug annotation and more full on

473
00:23:08,100 --> 00:23:11,500
debug inspection system that we're writing custom.

474
00:23:11,800 --> 00:23:14,900
And so I'd like to stay away from that for now because until I

475
00:23:14,900 --> 00:23:17,900
actually see if we ever need something that advanced I'd rather stick

476
00:23:17,900 --> 00:23:20,200
with something that's more general-purpose where that it just kind of

477
00:23:20,200 --> 00:23:23,000
has like debug stuff that gets streamed out, right.

478
00:23:23,100 --> 00:23:23,400
And there's

479
00:23:23,500 --> 00:23:28,200
No, there's no reverse sort of announcement where the debug system

480
00:23:28,200 --> 00:23:31,600
never announces IDs back to the game and says, could you give me the

481
00:23:31,600 --> 00:23:33,900
data on these please right?

482
00:23:34,500 --> 00:23:34,800
Okay.

483
00:23:34,800 --> 00:23:37,500
So that's what I'd like to do and you can see if we compile it,

484
00:23:37,500 --> 00:23:40,900
basically all of these new things that we've introduced of course,

485
00:23:41,000 --> 00:23:42,700
they are not going to be found.

486
00:23:42,900 --> 00:23:47,100
So I need to open up the debug interface code again and just add in

487
00:23:47,100 --> 00:23:50,200
these values that we no longer have, right?

488
00:23:50,200 --> 00:23:51,100
So here I go.

489
00:23:51,100 --> 00:23:52,300
I'm just putting these in here.

490
00:23:53,000 --> 00:23:53,400
I'm going.

491
00:23:53,500 --> 00:23:57,200
To go ahead and first declare them as being compiled out we haven't

492
00:23:57,200 --> 00:23:59,200
really done much testing of the compiling out.

493
00:23:59,200 --> 00:23:59,900
So we're probably going to have

494
00:24:00,000 --> 00:24:03,500
Test out again, sometime soon to let clean up all the stuff that would

495
00:24:03,500 --> 00:24:04,100
not compile.

496
00:24:04,100 --> 00:24:08,300
Now that we have made changes, but nominally we know we're going to

497
00:24:08,300 --> 00:24:10,500
want these things here like so.

498
00:24:11,900 --> 00:24:19,500
And then I'm going to need to actually Implement these things and and

499
00:24:19,500 --> 00:24:22,600
those are going to have to go up here and I suppose when we do like

500
00:24:22,600 --> 00:24:25,300
debug you and I enabled that's actually going to evaluate to 0.

501
00:24:25,300 --> 00:24:28,300
So that that actually evaluates to something this as well.

502
00:24:28,300 --> 00:24:32,700
Like debug pointer ID, that's actually also going to presumably

503
00:24:32,700 --> 00:24:34,200
initialize to something.

504
00:24:34,200 --> 00:24:37,400
It would probably be something.

505
00:24:37,400 --> 00:24:39,100
You know, this just zeros.

506
00:24:39,100 --> 00:24:41,700
It would be this if we knew we were always

507
00:24:42,000 --> 00:24:46,100
Is, I don't know if you can do this and see now, see those first.

508
00:24:46,200 --> 00:24:48,700
You didn't used to be able to do this sort of thing.

509
00:24:48,900 --> 00:24:51,400
I don't know if you are allowed to do that now like you know I'm

510
00:24:51,400 --> 00:24:54,600
talking about this sort of thing, I don't know if you're actually

511
00:24:54,600 --> 00:24:57,100
allowed to do that yet I feel like you should have been able to do

512
00:24:57,100 --> 00:24:59,700
that for a long time but you can't.

513
00:25:00,100 --> 00:25:03,700
So we may have to do something like this where we have just an inline

514
00:25:03,700 --> 00:25:04,800
that's like okay.

515
00:25:06,100 --> 00:25:10,900
There's a debug ID and it's actually this sort of a thing, right?

516
00:25:11,800 --> 00:25:16,300
And it takes whatever it takes, I guess it would take it just takes a

517
00:25:16,300 --> 00:25:17,800
pointer, right?

518
00:25:18,200 --> 00:25:21,100
And it Returns the null ID.

519
00:25:23,600 --> 00:25:26,600
And actually I suppose we could even just do that where we just say

520
00:25:26,600 --> 00:25:28,700
that this is a global variable, right.

521
00:25:28,700 --> 00:25:34,800
There's just this until ID that's just there and you know it always

522
00:25:34,800 --> 00:25:38,500
just returns just whatever that value of that variable is, you know,

523
00:25:39,100 --> 00:25:39,800
but I don't know.

524
00:25:39,800 --> 00:25:42,600
I'm going to leave it like this for now so there we go.

525
00:25:47,200 --> 00:25:52,100
And the rest of this stuff, debug kit is also zero.

526
00:25:52,100 --> 00:25:53,100
Debug highlighted.

527
00:25:53,100 --> 00:25:55,200
Those are just assuming that you're never going to hit or highlight

528
00:25:55,200 --> 00:25:58,600
everything and begin optional people datablock.

529
00:25:58,600 --> 00:26:00,400
None of that stuff will do anything, right?

530
00:26:00,400 --> 00:26:02,100
So they all just evaluate 20's.

531
00:26:03,000 --> 00:26:07,000
I could also test to make sure that that works here, I guess.

532
00:26:07,300 --> 00:26:08,100
So, here we go.

533
00:26:08,500 --> 00:26:09,100
Debug you.

534
00:26:09,100 --> 00:26:10,200
I enabled.

535
00:26:12,500 --> 00:26:13,600
Wait, it's right there.

536
00:26:14,400 --> 00:26:16,300
Debug you I enabled Undeclared.

537
00:26:16,300 --> 00:26:18,500
Identifier, what are you talking about?

538
00:26:18,600 --> 00:26:23,900
Oh, I see it's because it's not actually a function, so that has to be

539
00:26:23,900 --> 00:26:25,100
removed.

540
00:26:25,100 --> 00:26:28,400
There we go, in debug pointer ID.

541
00:26:28,400 --> 00:26:30,800
Not found, that's true because we have not done that one yet.

542
00:26:30,800 --> 00:26:34,900
Okay, and so here are debug pointer ID actually would do the thing,

543
00:26:35,700 --> 00:26:36,100
right?

544
00:26:36,100 --> 00:26:38,400
And in some sense I suppose, we could still use that.

545
00:26:38,400 --> 00:26:38,800
I don't know.

546
00:26:38,800 --> 00:26:41,800
We probably don't want to do, but this is this is what we would do

547
00:26:41,800 --> 00:26:42,100
here.

548
00:26:44,900 --> 00:26:45,400
Yeah.

549
00:26:46,900 --> 00:26:50,200
And so that's all good and now we're compiling.

550
00:26:50,600 --> 00:26:52,900
All right, so now I have to actually Implement these guys.

551
00:26:53,100 --> 00:26:53,700
Debug you.

552
00:26:53,700 --> 00:26:56,200
I enabled I suppose would be one here, right?

553
00:26:56,200 --> 00:26:57,600
Because we do want the debug you.

554
00:26:57,600 --> 00:26:59,800
I enable the least for the moment, it would always be enabled.

555
00:27:00,400 --> 00:27:03,100
And so, then what we would have is we'd have these, like, debug kit,

556
00:27:03,100 --> 00:27:06,000
debug highlighted and debug begin optional data block stuff.

557
00:27:06,400 --> 00:27:09,300
And with those need to do, is those need to actually probably call

558
00:27:09,300 --> 00:27:13,700
into the debug system to find out what's actually going on.

559
00:27:14,200 --> 00:27:16,700
So, these might actually be functions, they might not actually be

560
00:27:16,700 --> 00:27:18,300
macros at the moment anyway.

561
00:27:19,700 --> 00:27:22,700
They're definitely macros when you compile out but they would not be

562
00:27:22,700 --> 00:27:24,300
macros when you're compiled in.

563
00:27:25,200 --> 00:27:29,600
So, this is more of a, you know, probably something like this.

564
00:27:29,800 --> 00:27:33,100
It's going to return a Bool in both cases.

565
00:27:33,600 --> 00:27:35,600
Oh, well, the debug kit doesn't.

566
00:27:36,100 --> 00:27:36,600
It's that.

567
00:27:36,600 --> 00:27:37,400
Is that right?

568
00:27:37,900 --> 00:27:38,400
Sorry.

569
00:27:38,400 --> 00:27:39,600
So I kind of messed that one up.

570
00:27:39,900 --> 00:27:42,600
Debug kit actually doesn't do anything at all.

571
00:27:42,800 --> 00:27:43,600
That's not true.

572
00:27:44,300 --> 00:27:48,400
So what happens actually here in debug kit, it'll take a debug ID.

573
00:27:49,600 --> 00:27:52,300
And it would take a z value, right?

574
00:27:53,600 --> 00:27:55,100
And that's actually a function.

575
00:27:55,100 --> 00:27:59,100
That's some function that we would have to you know actually described

576
00:27:59,100 --> 00:27:59,600
somewhere.

577
00:28:00,300 --> 00:28:04,900
It's obviously going to be internal and then debug highlighted again

578
00:28:04,900 --> 00:28:06,100
going to be the exact same thing.

579
00:28:06,300 --> 00:28:11,700
It's going to take one of these IDs here and return it right whether

580
00:28:11,700 --> 00:28:15,600
or not that thing should be highlighted, debug begin optional data

581
00:28:15,600 --> 00:28:16,200
block.

582
00:28:16,200 --> 00:28:18,100
That actually is going to be a macro.

583
00:28:18,400 --> 00:28:21,100
And the reason that's going to be a macro is because it has to call

584
00:28:21,100 --> 00:28:23,200
debug begin data Block in the correct place.

585
00:28:23,400 --> 00:28:26,400
Because we want the file line and um, and number directives to be

586
00:28:26,400 --> 00:28:28,000
correct in case we ever want to print those out.

587
00:28:28,000 --> 00:28:30,300
We may get decide to get rid of those because we don't really need

588
00:28:30,300 --> 00:28:31,600
them in the future, who knows?

589
00:28:31,600 --> 00:28:36,400
But, at least for the moment we want this to be expanded in line so

590
00:28:36,400 --> 00:28:40,500
that that'll work but we just want to put an if around it essentially,

591
00:28:41,200 --> 00:28:41,800
which I guess.

592
00:28:41,800 --> 00:28:44,300
Now that I think about it, it's going to be a little bit easier said

593
00:28:44,300 --> 00:28:45,100
than done.

594
00:28:46,500 --> 00:28:48,800
This is kind of one of those card macros to write and I'm going to

595
00:28:48,800 --> 00:28:51,500
have to think about whether or not we can really do it this way.

596
00:28:51,600 --> 00:28:53,000
We may have to do it as a

597
00:28:53,300 --> 00:28:56,000
As a series of two, as much as I wish that we didn't have to.

598
00:28:56,400 --> 00:29:02,500
It might be really gnarly to write it without that because you can't

599
00:29:02,500 --> 00:29:04,600
like open a brackets inside an.

600
00:29:04,600 --> 00:29:09,900
If right, you can't open that, that it wouldn't work because of sees

601
00:29:09,900 --> 00:29:14,700
bust expression syntax kind of the bane of existence of see that C++.

602
00:29:14,700 --> 00:29:17,300
Of course, inherited is the fact that expressions and statements are

603
00:29:17,300 --> 00:29:20,100
different for no reason that anyone has ever been able to articulate.

604
00:29:20,100 --> 00:29:23,200
To me, it means it can't.

605
00:29:23,400 --> 00:29:27,500
Code inside an if statement because doesn't evaluate anything.

606
00:29:27,500 --> 00:29:29,900
So Kate Open, brackets.

607
00:29:30,500 --> 00:29:34,900
Oh, well, anyway, ignoring that downside, I would say that probably

608
00:29:34,900 --> 00:29:37,900
means that, you know, just to save ourselves the aggravation of trying

609
00:29:37,900 --> 00:29:39,800
to do something ridiculous.

610
00:29:39,800 --> 00:29:43,500
We could do something like this here, we just do debugging data block

611
00:29:44,600 --> 00:29:48,200
and then we say, like, you know, debug like kind of we have

612
00:29:48,200 --> 00:29:50,900
highlighted here, we could do debug

613
00:29:55,500 --> 00:29:59,400
requested, something like this, you know, like if you wanted this

614
00:29:59,400 --> 00:29:59,800
thing,

615
00:30:00,500 --> 00:30:03,000
Then I'll tell you about it, right?

616
00:30:04,500 --> 00:30:06,800
That seems like a pretty reasonable thing to do.

617
00:30:09,800 --> 00:30:13,200
Not as nice as the other way, not the end of the world.

618
00:30:14,200 --> 00:30:17,500
All right, so this is actually now going to be debug requested.

619
00:30:18,800 --> 00:30:22,400
And this is also debug requested.

620
00:30:22,600 --> 00:30:25,400
So what debug requested is again, same exact thing.

621
00:30:25,400 --> 00:30:29,000
Here we have a debug question, it would take a debug ID and you know

622
00:30:29,000 --> 00:30:29,700
off you go

623
00:30:31,500 --> 00:30:32,300
Something like this.

624
00:30:33,100 --> 00:30:38,000
And so I think that's mostly all we really need here.

625
00:30:38,100 --> 00:30:42,200
In fact, if we compile this, I think, at least very soon, now we

626
00:30:42,200 --> 00:30:47,700
should be able to get to a place where we don't have any compile

627
00:30:47,700 --> 00:30:48,000
error.

628
00:30:48,000 --> 00:30:49,300
So it looks like just in there.

629
00:30:49,400 --> 00:30:49,800
Okay.

630
00:30:50,300 --> 00:30:53,200
So when we do debug begin data, block, obviously, I kind of change

631
00:30:53,200 --> 00:30:56,800
that to taking when we do debugging day about we're taking Porter

632
00:30:56,900 --> 00:31:00,200
0.01, what I'd like to do is sort of change it to.

633
00:31:00,400 --> 00:31:01,200
Thing like this.

634
00:31:01,400 --> 00:31:04,000
Right where you do that sort of thing?

635
00:31:07,200 --> 00:31:07,600
Right?

636
00:31:07,600 --> 00:31:09,100
Or like something like this.

637
00:31:11,600 --> 00:31:15,200
And that way, you know, the event itself now has the concept like a

638
00:31:15,200 --> 00:31:18,600
formal concept that there are debug IDs in those debug ideas, kind of

639
00:31:18,600 --> 00:31:20,000
come through here, right?

640
00:31:20,700 --> 00:31:21,400
Like that.

641
00:31:22,400 --> 00:31:27,800
That seems like a good idea to me, and now you can see, right?

642
00:31:27,900 --> 00:31:30,800
We're getting to that point where now, the only problem that we've got

643
00:31:30,800 --> 00:31:32,600
now, is that we have these debug functions?

644
00:31:32,600 --> 00:31:36,000
Everything's working every compiling, we just have to get it now to

645
00:31:36,000 --> 00:31:38,900
the point where those things are actually understood by the debug

646
00:31:38,900 --> 00:31:40,500
system in some meaningful way, right?

647
00:31:40,500 --> 00:31:40,800
We have to

648
00:31:41,200 --> 00:31:41,700
Make them.

649
00:31:42,900 --> 00:31:45,800
Like actual valid Concepts because when it gets to the end of the

650
00:31:45,800 --> 00:31:48,400
compilation, it's like, hey, by the way, you never implemented any of

651
00:31:48,400 --> 00:31:48,700
this.

652
00:31:48,800 --> 00:31:49,300
It's true.

653
00:31:49,700 --> 00:31:50,500
We haven't.

654
00:31:51,300 --> 00:31:53,700
So, if I start implementing these again, I'm looking basically.

655
00:31:53,700 --> 00:31:57,300
Now at the code, I'm the code we're talking about here is that, that

656
00:31:57,300 --> 00:32:00,900
sort of interface code, where we've got the sort of debug interaction

657
00:32:00,900 --> 00:32:01,800
stuff happening.

658
00:32:02,300 --> 00:32:06,200
And if we kind of look through the code here, we have this, this code

659
00:32:06,200 --> 00:32:07,000
here, right?

660
00:32:07,200 --> 00:32:10,400
Is working with this sort of block of stuff here.

661
00:32:10,400 --> 00:32:12,500
Where we have these debug interactions, we have like hot.

662
00:32:12,700 --> 00:32:15,100
Traction, next hot interaction, all that sort of stuff, right?

663
00:32:15,400 --> 00:32:18,800
And the debug interaction code you can see it can actually you know,

664
00:32:18,800 --> 00:32:22,400
interact with very specific stuff and every interaction does have a

665
00:32:22,400 --> 00:32:23,600
debug ID with it.

666
00:32:23,600 --> 00:32:26,300
So we could very clearly know whether we were interacting with a

667
00:32:26,300 --> 00:32:29,100
particular thing or not and that sort of stuff.

668
00:32:29,600 --> 00:32:32,600
Now what we don't have at the moment in the debug system though is any

669
00:32:32,600 --> 00:32:36,200
concept of selection so there's really no way to like add or remove

670
00:32:36,200 --> 00:32:38,700
things from a selection but that's not something to be particularly

671
00:32:38,700 --> 00:32:40,700
difficult for us to add certainly right.

672
00:32:40,700 --> 00:32:42,400
It'd be pretty easy for us to kind of add a

673
00:32:42,600 --> 00:32:45,000
Thing where we just allow you to select something and then you click

674
00:32:45,000 --> 00:32:48,000
on something else and you select that something else, you know, if

675
00:32:48,000 --> 00:32:50,900
that's not particularly hard and you know, we can sort of as we work

676
00:32:50,900 --> 00:32:52,000
with the debug UI stuff.

677
00:32:52,000 --> 00:32:53,700
We can make that happen pretty easily as well.

678
00:32:55,100 --> 00:32:58,400
Alright, so if we're going to go ahead and Implement these guys here,

679
00:32:59,400 --> 00:32:59,900
we've kind of

680
00:33:00,000 --> 00:33:01,900
All of this interaction stuff happening.

681
00:33:02,600 --> 00:33:06,000
What we want to do is sort of start to implement these things here,

682
00:33:06,600 --> 00:33:11,200
where we can handle these things that are coming in in, through us,

683
00:33:11,200 --> 00:33:11,900
right?

684
00:33:12,000 --> 00:33:17,100
So if we have this code, it's going to need to store some state.

685
00:33:17,300 --> 00:33:19,300
So you know, the debug State stuff.

686
00:33:19,400 --> 00:33:22,000
Obviously, the game is never going to pass that stuff.

687
00:33:22,200 --> 00:33:25,400
So, if you take a look at all of the things here, when we're doing

688
00:33:25,400 --> 00:33:27,500
debug State, we're going to need the one.

689
00:33:27,500 --> 00:33:29,800
And I don't remember exactly where we put that guy it.

690
00:33:30,000 --> 00:33:33,000
It's up here somewhere, where we actually access the deep web site.

691
00:33:33,000 --> 00:33:37,100
Here it is, where we access the debug State, using the game memory.

692
00:33:37,400 --> 00:33:39,800
And if I remember correctly, the way that we did that.

693
00:33:39,800 --> 00:33:40,200
Yeah, okay.

694
00:33:40,200 --> 00:33:40,800
So here it is.

695
00:33:41,200 --> 00:33:42,500
We actually already have the helper function.

696
00:33:42,500 --> 00:33:46,400
We need, we just use that sort of global and then we start going from

697
00:33:46,400 --> 00:33:47,600
there, right?

698
00:33:48,600 --> 00:33:51,200
So what I want to do and, you know, actually the other thing that's

699
00:33:51,200 --> 00:33:54,700
interesting answer, this doesn't seem to work properly if this was

700
00:33:54,700 --> 00:33:58,900
null, if debug Global memory hadn't been set yet, so I feel like we

701
00:33:58,900 --> 00:33:59,900
probably want

702
00:34:00,000 --> 00:34:06,500
Up to look like this where we do that, you know, that seems like sort

703
00:34:06,500 --> 00:34:11,300
of a little bit more of what we would want.

704
00:34:11,699 --> 00:34:12,100
I don't know.

705
00:34:12,100 --> 00:34:14,800
Maybe it's just stupid because that's never going to happen.

706
00:34:14,800 --> 00:34:19,000
I don't really know, but I feel like, yeah, I feel like getting case

707
00:34:19,000 --> 00:34:20,300
you accurately called something.

708
00:34:20,300 --> 00:34:23,600
Before the system was initializer, something you just want to pass

709
00:34:23,600 --> 00:34:23,900
through?

710
00:34:23,900 --> 00:34:24,199
I don't know.

711
00:34:24,199 --> 00:34:24,800
Maybe not.

712
00:34:25,500 --> 00:34:26,800
But anyway, there we go.

713
00:34:27,400 --> 00:34:29,800
So if I want to, I can just in these

714
00:34:29,900 --> 00:34:32,500
These functions when I need the debug state, right?

715
00:34:32,800 --> 00:34:34,100
I should be able to

716
00:34:36,600 --> 00:34:41,600
Oops, just get it directly by dereferencing that pointer.

717
00:34:41,600 --> 00:34:44,699
And so again, the reason that we're doing that, instead of passing it

718
00:34:44,699 --> 00:34:48,800
in here, is because we really don't want to introduce any complexity

719
00:34:48,800 --> 00:34:52,000
on the side of the using Code, the code that's using this stuff.

720
00:34:52,000 --> 00:34:55,300
We don't want it to have to like track that debug State pointer and

721
00:34:55,300 --> 00:34:56,300
pass it around stuff.

722
00:34:56,300 --> 00:34:59,000
We want people to feel the cold, call the debug system from wherever

723
00:34:59,000 --> 00:35:02,200
they are with, even no matter if they have no idea what's going on,

724
00:35:02,300 --> 00:35:02,900
right?

725
00:35:03,000 --> 00:35:05,600
So we want to be able to do this inside these guys, so that they

726
00:35:05,700 --> 00:35:08,400
Just get to the debug State immediately and not have to do anything

727
00:35:08,400 --> 00:35:09,700
else, right?

728
00:35:10,500 --> 00:35:13,600
So at the moment there's a number of things we could do to test this.

729
00:35:13,600 --> 00:35:14,000
Right?

730
00:35:14,100 --> 00:35:17,900
So for example, one thing we could do is just do a return true in here

731
00:35:18,500 --> 00:35:20,000
and a return true in here.

732
00:35:20,000 --> 00:35:21,800
Actually, we could just, let's do that one.

733
00:35:21,800 --> 00:35:23,200
Let's do a return false here.

734
00:35:25,100 --> 00:35:25,700
Right.

735
00:35:26,600 --> 00:35:29,800
And now in theory, everything should draw like an outline around

736
00:35:29,800 --> 00:35:30,300
itself.

737
00:35:30,500 --> 00:35:31,900
I would think, right?

738
00:35:33,800 --> 00:35:37,300
So yeah, here, even that suggests to me that this is definitely the

739
00:35:37,300 --> 00:35:37,600
case.

740
00:35:37,800 --> 00:35:41,700
So here we go in game update and render, we're getting at the debug

741
00:35:41,700 --> 00:35:44,900
system and it looks like it has not been initialized yet, right?

742
00:35:46,200 --> 00:35:49,500
So I'm not sure why that actually is.

743
00:35:49,800 --> 00:35:53,000
I have to look at the call order here, but that was exactly what I was

744
00:35:53,000 --> 00:35:53,300
thinking.

745
00:35:53,300 --> 00:35:54,800
As like, sometimes this thing they know.

746
00:35:54,800 --> 00:35:56,000
Is it started up yet?

747
00:35:58,800 --> 00:35:59,800
All right, so let's see where that.

748
00:36:00,000 --> 00:36:00,400
Happens.

749
00:36:02,600 --> 00:36:04,400
Initialized equals true happens here.

750
00:36:04,600 --> 00:36:08,700
It's in debug start and so it looks like something maybe gets called

751
00:36:08,700 --> 00:36:10,100
before debug Stark, it's called.

752
00:36:10,100 --> 00:36:11,900
In fact, I'm gonna go ahead and run back in there and see where we are

753
00:36:11,900 --> 00:36:12,800
on the call stack.

754
00:36:17,400 --> 00:36:21,400
Yeah, so so essentially that debug says that debug start, right?

755
00:36:21,400 --> 00:36:24,000
That's not going to happen until after the end of the frame because I

756
00:36:24,000 --> 00:36:27,400
believe the way we left it was that debug start actually happens for

757
00:36:27,400 --> 00:36:30,700
the first time all the way down here, right?

758
00:36:30,700 --> 00:36:35,100
Like, it's like after everything else is about to happen.

759
00:36:37,600 --> 00:36:38,300
Debug frame.

760
00:36:38,300 --> 00:36:42,400
And so I'm guessing it probably happens in here.

761
00:36:48,300 --> 00:36:48,700
Oops.

762
00:36:53,100 --> 00:36:54,600
Where is my debug frame end?

763
00:36:56,100 --> 00:36:56,600
There it is.

764
00:36:58,000 --> 00:36:59,700
So I'm guessing that it happens in here.

765
00:36:59,700 --> 00:37:01,300
Yeah, debug start debugging.

766
00:37:01,500 --> 00:37:04,900
So basically you know this is just going to happen at the end when

767
00:37:04,900 --> 00:37:05,900
everything else happens.

768
00:37:06,300 --> 00:37:10,700
And so we really need some way of making sure that the debug system.

769
00:37:11,000 --> 00:37:15,000
Either a gets initialized before we start, right?

770
00:37:15,600 --> 00:37:19,900
Or that we ignore any any attempts to use it before them.

771
00:37:20,400 --> 00:37:22,500
And again, I don't really know which one we want to do.

772
00:37:24,900 --> 00:37:25,300
I kind of

773
00:37:25,500 --> 00:37:27,500
Like maybe we just want to ignore those things.

774
00:37:27,500 --> 00:37:27,900
I'm not sure.

775
00:37:27,900 --> 00:37:30,800
Maybe that's a little dangerous and we should force it to kind of get

776
00:37:30,800 --> 00:37:33,800
initialized, but I'm going to, I'm going to lean towards that one.

777
00:37:34,000 --> 00:37:36,900
I'm going to lean towards saying that we really don't want to do this,

778
00:37:37,100 --> 00:37:37,500
right?

779
00:37:37,500 --> 00:37:41,900
And so what we'd want to do is say something more like this.

780
00:37:49,500 --> 00:37:51,300
So that we just don't return anything.

781
00:37:51,700 --> 00:37:55,300
In the case that that we don't, that we don't have one, you know what

782
00:37:55,300 --> 00:37:55,700
I mean?

783
00:37:56,500 --> 00:37:59,100
And so that seems a little bit more reasonable to me.

784
00:37:59,300 --> 00:38:02,200
So these guys always just kind of do this thing.

785
00:38:03,400 --> 00:38:04,200
I'm not sure.

786
00:38:04,400 --> 00:38:06,000
Again, that may be a bad decision.

787
00:38:06,300 --> 00:38:09,200
We'll find out as we go, whether it is or isn't

788
00:38:14,600 --> 00:38:15,300
So there we go.

789
00:38:15,300 --> 00:38:16,800
Now the debug system, right?

790
00:38:16,800 --> 00:38:20,000
Like I said is telling everyone that they should highlight and we can

791
00:38:20,000 --> 00:38:20,800
see that that's working.

792
00:38:20,800 --> 00:38:21,300
Just fine.

793
00:38:21,900 --> 00:38:24,800
And so now what we want to do is maybe let's try to make it.

794
00:38:25,000 --> 00:38:28,000
So that only the thing that actually the mouse is over gets

795
00:38:28,000 --> 00:38:29,000
highlighted, right?

796
00:38:29,100 --> 00:38:31,500
So we know that when the mouse is over something, we're going to get a

797
00:38:31,500 --> 00:38:32,400
debug hip call.

798
00:38:32,800 --> 00:38:35,500
So we want to do is we want to track that, right?

799
00:38:35,500 --> 00:38:38,000
We want to say that if the mouse is over something with remember what

800
00:38:38,000 --> 00:38:41,500
it's over and then maybe, you know, we can just do the simplest

801
00:38:41,500 --> 00:38:44,300
possible version here where we just kind of like return.

802
00:38:44,400 --> 00:38:46,400
And whether or not you were that highlighted one.

803
00:38:47,100 --> 00:38:49,900
So obviously the simplest possible way to do that without doing

804
00:38:49,900 --> 00:38:51,400
anything more fancy here.

805
00:38:52,600 --> 00:38:56,500
we've got hot interaction, you know I'm saying, we could just set the

806
00:38:56,500 --> 00:38:59,800
hot interaction to have that ID and the type

807
00:39:00,000 --> 00:39:04,400
Right where we have here, the type could just be a no op or something

808
00:39:04,400 --> 00:39:06,600
or it could be a select, right?

809
00:39:06,600 --> 00:39:09,800
We could have like debug interaction like select or something like

810
00:39:09,800 --> 00:39:10,000
this.

811
00:39:10,000 --> 00:39:14,800
And so in order to do that, what we do is any time that we got this

812
00:39:14,800 --> 00:39:19,300
debug hit, maybe we do something where we say, like okay, when we get

813
00:39:19,300 --> 00:39:24,000
a debug hit, I feel like we've got that sort of like hot interaction

814
00:39:24,000 --> 00:39:24,900
concept going here.

815
00:39:24,900 --> 00:39:28,800
You can see that we have this this concept of like next hot

816
00:39:28,800 --> 00:39:29,500
interaction.

817
00:39:29,500 --> 00:39:29,700
Getting

818
00:39:30,000 --> 00:39:30,700
At two things.

819
00:39:31,200 --> 00:39:35,300
So I feel like we could use maybe next hot interaction, just the way

820
00:39:35,300 --> 00:39:37,400
that it was being used, right?

821
00:39:37,500 --> 00:39:38,700
Just just straight up.

822
00:39:39,100 --> 00:39:44,100
And so if we wanted to do that, what we could do is Hoops, that's not

823
00:39:44,100 --> 00:39:44,500
good.

824
00:39:45,200 --> 00:39:50,200
We could just go to debug kit and we could do something like make that

825
00:39:50,200 --> 00:39:50,900
interaction, right?

826
00:39:50,900 --> 00:39:54,100
So you can say, like, debug interaction interaction,

827
00:39:57,000 --> 00:39:59,100
And when we're making those interactions.

828
00:40:00,500 --> 00:40:03,700
There we go, debug interaction.

829
00:40:04,400 --> 00:40:06,700
You can see that we've kind of got these different helper functions

830
00:40:06,700 --> 00:40:06,900
here.

831
00:40:06,900 --> 00:40:12,400
So tears, VAR, link interaction, we could do something like, you know,

832
00:40:12,400 --> 00:40:16,500
like debug hit interaction where we make one of these, from a debug

833
00:40:16,500 --> 00:40:17,400
idea, of course.

834
00:40:17,400 --> 00:40:19,800
Now, I think about that might be kind of stupid and redundant because

835
00:40:19,800 --> 00:40:21,000
we already have on there but I don't know.

836
00:40:21,000 --> 00:40:23,900
I'm going to do it anyway, something like that.

837
00:40:24,100 --> 00:40:27,300
You bug ID interaction, something like that, where we just pass a

838
00:40:27,300 --> 00:40:29,400
debug ID and that's all it has.

839
00:40:29,400 --> 00:40:30,100
There's no tree and

840
00:40:30,300 --> 00:40:30,800
Moved.

841
00:40:31,100 --> 00:40:34,600
And so when we make one of those, we've just passed the ID here, the

842
00:40:34,600 --> 00:40:35,300
type.

843
00:40:35,300 --> 00:40:39,800
And then obviously, this, this interaction stuff here doesn't have

844
00:40:39,800 --> 00:40:41,800
anything presumably other than the ID.

845
00:40:42,200 --> 00:40:44,900
So, like in here, there really wouldn't be anything other than that

846
00:40:44,900 --> 00:40:45,500
debug ID.

847
00:40:45,500 --> 00:40:50,100
I think because it doesn't have any anything else I suppose, we could.

848
00:40:50,100 --> 00:40:52,500
If there was any other information here, we could store it but I don't

849
00:40:52,500 --> 00:40:54,000
think there really is.

850
00:40:54,500 --> 00:40:57,300
So I'm just going to go ahead and say that, that's all that we're

851
00:40:57,300 --> 00:40:58,300
actually going to get for now.

852
00:40:59,200 --> 00:40:59,700
Okay.

853
00:40:59,900 --> 00:41:00,100
So

854
00:41:00,300 --> 00:41:02,800
So let's let's just go ahead and leave it that way.

855
00:41:04,700 --> 00:41:08,000
like so, and we could actually set generic

856
00:41:09,600 --> 00:41:13,600
20 just to clear that out if we want to oh well it's already cleared.

857
00:41:13,800 --> 00:41:15,000
You know what, that already clears it.

858
00:41:15,800 --> 00:41:17,500
So okay we set this stuff up.

859
00:41:18,700 --> 00:41:19,400
That's all good.

860
00:41:19,400 --> 00:41:23,400
So here we're just saying, debug ID interaction, the type again, like

861
00:41:23,400 --> 00:41:25,100
I said is going to be that select type.

862
00:41:25,600 --> 00:41:30,800
So we're going to go ahead and pass the Select, Plus the ID and then

863
00:41:30,800 --> 00:41:33,200
the next type interactions going to be that interaction.

864
00:41:34,600 --> 00:41:35,900
You can even just do it like this.

865
00:41:40,700 --> 00:41:44,000
And so in that case, if someone doesn't Mouse down now it will do,

866
00:41:44,000 --> 00:41:49,200
it'll start the select process on that guy and then we could also sort

867
00:41:49,200 --> 00:41:50,300
of test that tests for now.

868
00:41:50,300 --> 00:41:53,800
Let's pretend we've got, you know, some kind of a selection thing for

869
00:41:53,800 --> 00:41:54,000
now.

870
00:41:54,000 --> 00:41:56,200
We don't really have one but let's pretend we did.

871
00:41:57,600 --> 00:41:59,800
That's so maybe we just got something here, which is like you by God.

872
00:42:00,000 --> 00:42:02,800
Selected or something, right?

873
00:42:03,400 --> 00:42:07,900
And so in here we could say, all right, the result for this guy, the

874
00:42:07,900 --> 00:42:10,700
result is going to be if the ID

875
00:42:12,500 --> 00:42:13,100
Equals.

876
00:42:13,600 --> 00:42:17,200
I don't know if we have like a way to check if debug IDs or equal yet

877
00:42:17,400 --> 00:42:20,100
but it equals whatever the selected debug ID is.

878
00:42:22,200 --> 00:42:23,500
I could just call it's like that ID.

879
00:42:24,000 --> 00:42:25,100
We know it's in the debug system.

880
00:42:25,100 --> 00:42:26,100
It's probably that.

881
00:42:27,500 --> 00:42:31,800
So OK I now just need some way of testing whether or not they're

882
00:42:31,800 --> 00:42:32,100
equal.

883
00:42:32,100 --> 00:42:35,400
Looks like we do have a way of doing that at least for now.

884
00:42:37,300 --> 00:42:41,200
So I could say debug is IDs are equal and I can check to see if these

885
00:42:41,200 --> 00:42:42,300
two ones are.

886
00:42:42,900 --> 00:42:47,100
So when we check to see if to debug IDs are equal, if the selected one

887
00:42:47,100 --> 00:42:49,200
is equal to the one that we're being asked about then that means that

888
00:42:49,200 --> 00:42:50,100
it's highlighted.

889
00:42:50,200 --> 00:42:52,000
And similarly what we could do is just for.

890
00:42:52,000 --> 00:42:56,000
Now we could do the exact same thing for the debug requested, even

891
00:42:56,000 --> 00:42:59,600
though that's probably not exactly what we would want to do for that.

892
00:43:00,700 --> 00:43:04,100
And I suppose, another thing we could do here is actually just say be

893
00:43:04,100 --> 00:43:05,900
through to is selected.

894
00:43:07,500 --> 00:43:10,300
You know, and is selected might be this.

895
00:43:18,800 --> 00:43:20,500
Which is exactly what these guys are doing.

896
00:43:21,700 --> 00:43:25,500
But it means that in a little while if we wanted to have like

897
00:43:25,500 --> 00:43:28,300
multi-select or something, these routines wouldn't really have to do

898
00:43:28,300 --> 00:43:29,300
anything different.

899
00:43:29,400 --> 00:43:29,600
Right.

900
00:43:29,600 --> 00:43:30,500
They could just

901
00:43:33,500 --> 00:43:36,100
they could just go ahead and keep calling that function and that

902
00:43:36,100 --> 00:43:37,400
function with them become smarter.

903
00:43:37,500 --> 00:43:41,000
It would be able to look through a list of people who are selected or

904
00:43:41,000 --> 00:43:44,100
anything else that it might need to do to figure that out.

905
00:43:44,100 --> 00:43:44,800
It could do.

906
00:43:44,900 --> 00:43:48,300
So at that point, we could have something much more, you know,

907
00:43:48,300 --> 00:43:50,500
interesting happening in there and these routines don't really have to

908
00:43:50,500 --> 00:43:54,200
care, they just know that they're going to operate off of that, right?

909
00:43:54,200 --> 00:43:56,600
So now, what will happen in theory at least?

910
00:43:57,000 --> 00:44:00,300
Is that well, actually, I guess technically absolutely nothing.

911
00:44:00,400 --> 00:44:01,200
I would think.

912
00:44:03,200 --> 00:44:06,500
Although now that I think about it to debug highlighted should

913
00:44:06,500 --> 00:44:10,400
probably also look at hot interaction because if the hot interaction,

914
00:44:10,400 --> 00:44:12,200
we probably would want to highlight that as well.

915
00:44:12,300 --> 00:44:18,100
So we'd want to do like is Select selected or like if that hot

916
00:44:18,100 --> 00:44:18,900
interaction.

917
00:44:19,700 --> 00:44:23,200
So, hot interaction, debug ID.

918
00:44:23,500 --> 00:44:28,700
If those debug IDs were equal, then I'd want to, I want to do that as

919
00:44:28,700 --> 00:44:29,100
well.

920
00:44:30,000 --> 00:44:30,400
Okay.

921
00:44:33,200 --> 00:44:37,800
So, it is not a member not a member, huh?

922
00:44:39,000 --> 00:44:39,900
Yes, that's true.

923
00:44:40,200 --> 00:44:41,100
It does not a member

924
00:44:42,500 --> 00:44:44,900
Okay, so yeah.

925
00:44:45,200 --> 00:44:46,700
So well, you know what?

926
00:44:46,700 --> 00:44:49,400
We should probably instead of returning true actually return the

927
00:44:49,400 --> 00:44:53,000
results from these functions because that would be a lot easier to

928
00:44:53,000 --> 00:44:57,500
test to say, the very least, okay?

929
00:44:57,800 --> 00:44:59,800
So, if I take a look at this now,

930
00:45:00,200 --> 00:45:02,500
Well, that's doesn't look very exciting to me.

931
00:45:02,500 --> 00:45:06,200
That doesn't look great and the reason presumably and I guess I should

932
00:45:06,200 --> 00:45:07,700
have thought of this before hand, but I only thought of it.

933
00:45:07,700 --> 00:45:11,900
Just now when that didn't work is we always clear out the hot

934
00:45:11,900 --> 00:45:16,400
interaction when we start, but really what we want to do is clear it

935
00:45:16,400 --> 00:45:21,700
out when we end, because now hot interactions might be happening kind

936
00:45:21,700 --> 00:45:24,000
of in the middle of the frame, right?

937
00:45:24,200 --> 00:45:27,700
So if you see like we're sort of clearing the stuff out,

938
00:45:29,600 --> 00:45:31,100
Before stuff happens.

939
00:45:31,200 --> 00:45:34,900
But really, what we want to do I believe is clear stuff out at the

940
00:45:34,900 --> 00:45:35,400
end.

941
00:45:35,600 --> 00:45:40,900
So after everything's over like, you know, note Casey clear the UI

942
00:45:40,900 --> 00:45:44,700
State for the next frame, you know, that's something that we want to

943
00:45:44,700 --> 00:45:46,200
do kind of over here.

944
00:45:47,500 --> 00:45:51,000
And that now we're now we're in much better shape, right?

945
00:45:51,500 --> 00:45:56,100
So now that that process, right is all going through, sort of our

946
00:45:57,600 --> 00:46:01,200
that's all going through our debug system, which is great because now

947
00:46:01,200 --> 00:46:04,100
all of that code is you know any complexity that we're going to

948
00:46:04,100 --> 00:46:07,000
introduce until like selecting objects or doing that stuff is hidden

949
00:46:07,000 --> 00:46:10,300
in the debug code and doesn't have to expose itself in the game in any

950
00:46:10,300 --> 00:46:11,000
way, right?

951
00:46:11,000 --> 00:46:12,600
Which is exactly what we want.

952
00:46:13,400 --> 00:46:16,300
We've kind of got like, you know, a minimum amount of complexity that

953
00:46:16,300 --> 00:46:16,800
gets exposed

954
00:46:17,000 --> 00:46:18,100
And that's good.

955
00:46:18,500 --> 00:46:21,200
However what's not good is you can kind of see what's happening here

956
00:46:21,400 --> 00:46:24,700
where once we get to the space entity, that's the only thing that gets

957
00:46:24,700 --> 00:46:25,500
highlighted ever.

958
00:46:25,600 --> 00:46:26,000
Right?

959
00:46:26,000 --> 00:46:28,300
So these entities and it's because we're just checking out of the

960
00:46:28,300 --> 00:46:28,700
order.

961
00:46:29,100 --> 00:46:32,000
So this is a place again where we may want to start to think about

962
00:46:32,000 --> 00:46:32,800
using that.

963
00:46:34,700 --> 00:46:37,700
That's Z value, for sorting might be a good idea.

964
00:46:37,700 --> 00:46:40,600
There's also some other things we could do there, but using that Z

965
00:46:40,600 --> 00:46:42,300
value for sorting seems like a good idea.

966
00:46:42,900 --> 00:46:45,500
I'm not sure what the best thing to sort on would be.

967
00:46:46,500 --> 00:46:49,500
Like I said, I'm passing in sort of that value, but I'm not sure what

968
00:46:49,500 --> 00:46:54,900
the best Z value to pass in would be when we do this sort of the

969
00:46:54,900 --> 00:46:56,100
unprojected, right?

970
00:46:56,900 --> 00:47:01,300
It's hard to say because their volumes and some of them are Hollow and

971
00:47:01,300 --> 00:47:02,200
some of them aren't so.

972
00:47:02,200 --> 00:47:04,400
It would depend on which kind of volume, it was probably

973
00:47:04,500 --> 00:47:05,500
It's a hollow volume.

974
00:47:05,500 --> 00:47:06,000
You'd pass.

975
00:47:06,000 --> 00:47:09,700
One it one way and if it was not a hollow volume, you pass it the

976
00:47:09,700 --> 00:47:10,000
other.

977
00:47:10,200 --> 00:47:11,400
So it's a little bit tricky.

978
00:47:12,700 --> 00:47:14,100
Just about how those work.

979
00:47:14,500 --> 00:47:16,800
But anyway, that's that's the basics of it.

980
00:47:17,000 --> 00:47:18,900
We've gotten to the end of the stream.

981
00:47:19,000 --> 00:47:21,200
So I'll go ahead and switch over to the Q&A for now.

982
00:47:21,900 --> 00:47:24,400
But you can see kind of how we'd start extending that tomorrow.

983
00:47:27,500 --> 00:47:29,600
All right, q a Time.

984
00:47:32,700 --> 00:47:36,600
If you have questions about what we were doing, please post them with

985
00:47:36,600 --> 00:47:37,600
a Q:.

986
00:47:40,700 --> 00:47:41,100
Oh wait.

987
00:47:41,100 --> 00:47:41,800
You know what?

988
00:47:42,000 --> 00:47:45,200
That's not actually true because I started with like 10 minutes on the

989
00:47:45,200 --> 00:47:45,800
clock.

990
00:47:47,800 --> 00:47:49,700
So forget that I can do the selection.

991
00:47:49,700 --> 00:47:52,100
I'm going to go ahead and do this election because I was about to do

992
00:47:52,100 --> 00:47:52,500
that.

993
00:47:52,600 --> 00:47:56,300
We might as well do this election part as well, right?

994
00:47:58,800 --> 00:47:59,900
That seems like a good idea.

995
00:48:00,000 --> 00:48:01,000
It to me.

996
00:48:02,800 --> 00:48:05,200
And furthermore, I feel like we could do something like this.

997
00:48:12,700 --> 00:48:13,400
Potentially.

998
00:48:15,100 --> 00:48:16,000
You know, I'm saying to you.

999
00:48:17,400 --> 00:48:19,000
I don't know that.

1000
00:48:19,000 --> 00:48:20,100
That's a good idea.

1001
00:48:21,300 --> 00:48:25,100
But I'm going to do it anyway because why not?

1002
00:48:26,200 --> 00:48:27,700
I've got two minutes left on the clock.

1003
00:48:27,700 --> 00:48:28,800
So I'm going to use them.

1004
00:48:29,400 --> 00:48:32,500
I'm going to use them to nefarious ends as what I'm going to do.

1005
00:48:32,900 --> 00:48:36,900
I'm just going to go ahead and straight up, do weird stuff with that.

1006
00:48:37,400 --> 00:48:44,000
So, yeah, so debug highlighted, the four color, and what I'll do is

1007
00:48:44,000 --> 00:48:45,800
I'll just go ahead and write to that.

1008
00:48:47,600 --> 00:48:49,400
You know, another thing that I should point out, I don't know if I

1009
00:48:49,400 --> 00:48:52,100
ever explicitly mention this, you'll notice on the stream whenever I

1010
00:48:52,100 --> 00:48:54,800
compiled something out, I always just use dot dot dot.

1011
00:48:54,800 --> 00:48:57,600
As the parameter is because now that that C++ supports variadic

1012
00:48:57,600 --> 00:48:58,300
macros,

1013
00:49:00,300 --> 00:49:03,900
it just means that you don't have to change the compiled out version

1014
00:49:04,000 --> 00:49:05,200
every time you change the parameter.

1015
00:49:05,200 --> 00:49:06,800
So, like right there, I did by Khalid.

1016
00:49:06,800 --> 00:49:08,500
I added a V4 color to it.

1017
00:49:08,800 --> 00:49:11,800
It means that now when it compiles out, I don't have to go change that

1018
00:49:11,800 --> 00:49:13,200
place as well, right?

1019
00:49:13,200 --> 00:49:14,300
And that's just kind of nice.

1020
00:49:16,100 --> 00:49:16,900
So yeah.

1021
00:49:18,000 --> 00:49:19,400
So here's what we'll do.

1022
00:49:19,400 --> 00:49:20,900
We'll say something like this.

1023
00:49:22,100 --> 00:49:25,100
If is selected

1024
00:49:28,200 --> 00:49:29,400
Result equals true.

1025
00:49:30,400 --> 00:49:33,500
If debug IDs are equal,

1026
00:49:35,600 --> 00:49:36,600
Result, equals true.

1027
00:49:37,600 --> 00:49:41,400
But in this case, we will use one color, and in this case, we lose

1028
00:49:41,400 --> 00:49:42,200
another color.

1029
00:49:42,300 --> 00:49:44,900
So in this case, we know that if something is selected, for example,

1030
00:49:45,200 --> 00:49:46,600
maybe that's cyan.

1031
00:49:46,600 --> 00:49:48,300
Who knows why it just is.

1032
00:49:48,400 --> 00:49:50,900
And then another case, it's yellow, right?

1033
00:49:51,300 --> 00:49:55,200
And so now, if we run this, we should see no change from before,

1034
00:49:55,200 --> 00:49:55,400
right?

1035
00:49:55,400 --> 00:49:56,600
So everything is yellow.

1036
00:49:58,000 --> 00:49:59,100
Like for highlight.

1037
00:49:59,600 --> 00:50:02,000
And then now, what I'll do is I'll go ahead and Implement some

1038
00:50:02,000 --> 00:50:04,100
selection in here.

1039
00:50:04,300 --> 00:50:04,900
Hopefully,

1040
00:50:06,500 --> 00:50:11,000
so when we're interacting with things, I don't actually remember if we

1041
00:50:11,000 --> 00:50:13,700
have anything in particular that I have to do for selection because

1042
00:50:13,700 --> 00:50:17,100
it's kind of a straightforward thing to have happen.

1043
00:50:17,300 --> 00:50:21,900
So I think the only real thing that I would need to do is like when

1044
00:50:21,900 --> 00:50:26,200
you begin or when the interaction is kind of going, right?

1045
00:50:26,200 --> 00:50:27,700
You can kind of see how this works here, right?

1046
00:50:27,700 --> 00:50:30,500
Where we're doing the interaction type, you can see this red thing.

1047
00:50:30,500 --> 00:50:34,100
When the interaction is going, I feel like I could just sort of say

1048
00:50:34,100 --> 00:50:36,100
well if you're inside if you're with

1049
00:50:36,700 --> 00:50:40,100
If you're within the bounds or if the thing had been hit recently,

1050
00:50:40,500 --> 00:50:42,000
then it's still selected.

1051
00:50:42,100 --> 00:50:46,100
If not, then not, I'm guessing so it would be something like, I don't

1052
00:50:46,100 --> 00:50:46,700
know.

1053
00:50:53,600 --> 00:50:56,100
It probably be something like debug interaction.

1054
00:50:57,200 --> 00:50:59,800
Selected or select rather.

1055
00:51:02,100 --> 00:51:04,700
And I you know, if we wanted the cheesiest possible version of it

1056
00:51:04,700 --> 00:51:05,500
which maybe we do now.

1057
00:51:05,500 --> 00:51:06,300
I think about it.

1058
00:51:06,400 --> 00:51:08,500
Just when we begin we just say, okay?

1059
00:51:08,500 --> 00:51:15,100
Like whatever the interaction is when we go in here whenever we begin,

1060
00:51:15,100 --> 00:51:16,800
we'll just say like okay, whatever.

1061
00:51:16,800 --> 00:51:23,600
The debug State selected ideas is going to be whatever the hot

1062
00:51:23,600 --> 00:51:24,400
interaction.

1063
00:51:29,500 --> 00:51:30,800
Whatever its ID was.

1064
00:51:33,900 --> 00:51:37,500
So now you can kind of see we can pick like what our thing is that we

1065
00:51:37,500 --> 00:51:41,100
want, and it will stay available there in theory.

1066
00:51:41,700 --> 00:51:42,500
You know what I mean?

1067
00:51:44,100 --> 00:51:45,800
And at the moment there it is.

1068
00:51:45,800 --> 00:51:46,400
A little weird.

1069
00:51:46,400 --> 00:51:50,700
I'm not actually seeing so this it all seems to work.

1070
00:51:50,700 --> 00:51:54,800
Ok, but you'll notice, I don't seem to be seeing the highlighted one.

1071
00:51:56,200 --> 00:52:03,300
Ever, and I thought that, I thought, well, I thought I did something

1072
00:52:03,300 --> 00:52:03,900
with that.

1073
00:52:04,200 --> 00:52:07,700
Maybe I didn't hard to say, let's take a look.

1074
00:52:08,300 --> 00:52:11,200
So, in here, when we to debug requested, oh, nope.

1075
00:52:11,300 --> 00:52:14,400
That's exactly how it was supposed to work as it turns out.

1076
00:52:15,000 --> 00:52:15,700
All right.

1077
00:52:15,700 --> 00:52:16,300
Never mind.

1078
00:52:16,600 --> 00:52:17,200
So we could.

1079
00:52:17,200 --> 00:52:19,800
If we wanted to, though, you know, we could do something like this.

1080
00:52:22,500 --> 00:52:24,400
We could make it operate here as well.

1081
00:52:26,000 --> 00:52:26,800
So, you know,

1082
00:52:29,900 --> 00:52:30,900
if I do this,

1083
00:52:36,700 --> 00:52:38,900
that would make it so that I saw both of them.

1084
00:52:40,000 --> 00:52:43,400
So, you know, I can hover over something and it shows me the hovered

1085
00:52:43,400 --> 00:52:45,200
one that can also click.

1086
00:52:45,600 --> 00:52:47,100
And now it would show me both of them.

1087
00:52:47,300 --> 00:52:50,200
If I only, if I hover over the selected one, it would just show me

1088
00:52:50,200 --> 00:52:52,300
that just the one, but here you can see.

1089
00:52:52,300 --> 00:52:56,900
Okay, I've got 43 and 42, both entities are being viewed right by the

1090
00:52:56,900 --> 00:52:59,600
beach, the, by the system, right?

1091
00:53:00,300 --> 00:53:03,600
So again, that's also something where if we wanted to, you know, we

1092
00:53:03,600 --> 00:53:04,300
could sort of

1093
00:53:04,600 --> 00:53:10,000
Have again more more of those in the system we could have some kind of

1094
00:53:10,000 --> 00:53:11,100
a selection thing.

1095
00:53:11,700 --> 00:53:15,000
I don't actually know that we care about this all that much, but just

1096
00:53:15,000 --> 00:53:18,100
to again, since I've got like, four minutes or something, you can

1097
00:53:18,100 --> 00:53:22,300
throw in something pretty stupid here where we just did like, you

1098
00:53:22,300 --> 00:53:25,800
know, the selected ID or, you know,

1099
00:53:29,200 --> 00:53:30,500
Something really stupid.

1100
00:53:30,800 --> 00:53:33,800
I don't know what, but that would just be

1101
00:53:35,300 --> 00:53:40,600
When you do is selected, it actually just checks to see, you know, for

1102
00:53:40,600 --> 00:53:42,700
any given ID looks at all of those.

1103
00:53:52,800 --> 00:53:56,400
so this would just say like select in, you know, or, you know, just

1104
00:53:56,400 --> 00:53:59,000
just some index that were checking against

1105
00:54:06,800 --> 00:54:11,000
Here we would just do selected ID of that and so we check all of these

1106
00:54:11,300 --> 00:54:14,000
and then we just have some a couple things which is like you know

1107
00:54:14,000 --> 00:54:19,600
clear selection and clear selection would just again take a debug

1108
00:54:19,600 --> 00:54:23,400
State and all that's going to do is say hey you know what?

1109
00:54:23,800 --> 00:54:29,000
Now there's no selection anymore there's nothing is selected right

1110
00:54:29,000 --> 00:54:33,000
into setting the count 0 and then select.

1111
00:54:45,400 --> 00:54:46,900
When we actually select something.

1112
00:54:48,200 --> 00:54:50,600
Then technically, you know, we'd probably still want to do this.

1113
00:54:50,900 --> 00:54:53,700
And we just want to say like well, we could actually do this.

1114
00:54:53,800 --> 00:54:55,600
If is selected

1115
00:54:58,100 --> 00:55:01,300
Just say is not selected, then we doubt it.

1116
00:55:13,300 --> 00:55:13,500
Right.

1117
00:55:15,700 --> 00:55:18,300
And we probably also say, well you only get a certain number of these.

1118
00:55:29,900 --> 00:55:30,400
All right.

1119
00:55:36,900 --> 00:55:39,200
And the only reason I'm checking their is just because I don't

1120
00:55:39,200 --> 00:55:43,200
actually want to add something multiple times to the selected set.

1121
00:55:43,500 --> 00:55:50,800
So that's all that really is, I guess I don't remember.

1122
00:55:50,800 --> 00:55:52,400
So this is just yes, this is probably.

1123
00:55:52,400 --> 00:55:54,800
I should probably say add to selection or something like that.

1124
00:55:55,200 --> 00:55:59,900
So this is add to selection when we do this select and you know,

1125
00:55:59,900 --> 00:56:03,200
here's where, you know, we would want some modifier Keys, certainly.

1126
00:56:03,800 --> 00:56:04,200
So we'd

1127
00:56:04,500 --> 00:56:07,600
Like, I'm going to add to the selection, here's the debug State.

1128
00:56:07,600 --> 00:56:09,100
Here's the thing to add to it.

1129
00:56:09,700 --> 00:56:12,900
And normally, what we would do here is we'd say, like, you know, if

1130
00:56:14,100 --> 00:56:14,800
The shift keys.

1131
00:56:14,800 --> 00:56:15,600
Not down.

1132
00:56:18,500 --> 00:56:20,000
We do clear selection or whatever.

1133
00:56:20,000 --> 00:56:20,500
Right.

1134
00:56:21,500 --> 00:56:25,400
So basically, if if the shift key is down, we just keep adding the

1135
00:56:25,400 --> 00:56:27,700
selection like this typical thing that you do with selection, where

1136
00:56:27,700 --> 00:56:29,900
you hold down shift and you can select multiple objects.

1137
00:56:30,700 --> 00:56:33,100
If the shift Keys up, we would just clear the selection.

1138
00:56:33,100 --> 00:56:36,300
Two shift Keys down, then we would not clear the selection we just

1139
00:56:36,300 --> 00:56:37,100
append to it.

1140
00:56:37,400 --> 00:56:38,100
Right?

1141
00:56:38,800 --> 00:56:39,300
Right now.

1142
00:56:39,300 --> 00:56:42,500
I don't think we have modifier keys at the moment.

1143
00:56:49,600 --> 00:56:50,400
I don't think so.

1144
00:56:52,000 --> 00:56:53,000
It doesn't ring a bell.

1145
00:56:54,300 --> 00:56:54,800
Right?

1146
00:56:54,800 --> 00:56:56,700
So we have like the Mouse stuff, right?

1147
00:56:56,700 --> 00:56:59,900
We've got buttons and things, but we don't have

1148
00:57:00,000 --> 00:57:01,400
Any modifier keys there.

1149
00:57:01,800 --> 00:57:04,500
And you know, part of the reason that we don't have any modifier Keys.

1150
00:57:04,500 --> 00:57:06,000
Is that the game itself?

1151
00:57:07,300 --> 00:57:07,700
She's me.

1152
00:57:09,600 --> 00:57:11,400
Is being played with the keyboard.

1153
00:57:11,900 --> 00:57:14,500
And so like I don't know whether you know, like shift would maybe be a

1154
00:57:14,500 --> 00:57:18,000
bad modifier key to be using it because, you know, maybe the person is

1155
00:57:18,000 --> 00:57:20,100
like, trying to play the game and you can't tell the difference

1156
00:57:20,100 --> 00:57:21,800
between the two of those you'd have to be in.

1157
00:57:21,800 --> 00:57:24,400
Like are you in debug mode or are you not in debug mode or something

1158
00:57:24,400 --> 00:57:24,900
like that?

1159
00:57:25,200 --> 00:57:29,200
So I don't know exactly how would you want to do that but point being,

1160
00:57:29,300 --> 00:57:32,900
you know, we'll have to figure that out so

1161
00:57:35,600 --> 00:57:36,300
For now.

1162
00:57:37,500 --> 00:57:41,600
We just won't clear the selection and now we should be able to like

1163
00:57:41,600 --> 00:57:45,200
select as many things as we want.

1164
00:57:45,200 --> 00:57:45,800
Right?

1165
00:57:46,800 --> 00:57:48,500
And you can kind of see that that works.

1166
00:57:49,000 --> 00:57:51,000
Exactly has how we would expect

1167
00:57:55,300 --> 00:57:57,300
All right, so we're getting there.

1168
00:57:57,800 --> 00:57:58,900
Starting to look pretty good.

1169
00:58:00,700 --> 00:58:03,100
I guess I'll put it to do in here to, to do

1170
00:58:05,500 --> 00:58:11,300
Modifier keys for some way of doing.

1171
00:58:12,500 --> 00:58:13,400
Multi-select.

1172
00:58:16,500 --> 00:58:17,100
All right.

1173
00:58:20,800 --> 00:58:23,400
Okay, so now let's actually go to the Q&A.

1174
00:58:24,300 --> 00:58:28,500
So we've got about 19 minutes so yeah.

1175
00:58:33,100 --> 00:58:36,700
Anyone who has questions can hit me with a Q:.

1176
00:59:05,000 --> 00:59:10,900
Is the in sohbat smart enough to know that it should use Q: during the

1177
00:59:10,900 --> 00:59:11,300
Q&A?

1178
00:59:25,100 --> 00:59:26,600
Disused symmetry.

1179
00:59:26,600 --> 00:59:28,400
You can emulate expression blocks with lambdas.

1180
00:59:28,400 --> 00:59:32,400
If you don't mind the craziness of C++ 11, I do mind the craziness of

1181
00:59:32,400 --> 00:59:33,200
C++ 11.

1182
00:59:33,200 --> 00:59:33,800
Of course.

1183
00:59:44,900 --> 00:59:47,300
Chronodragon insta, but checks for your cue a thing I believe.

1184
00:59:47,300 --> 00:59:52,800
Yes, so that in sohbat, at what point can we replace the chat with

1185
00:59:52,800 --> 00:59:58,100
just in sohbats and then, at what point can we replace me with just

1186
00:59:58,100 --> 00:59:59,800
some programming bot and then

1187
01:00:00,000 --> 01:00:00,800
Select Bots.

1188
01:00:00,900 --> 01:00:01,700
Showing Bots.

1189
01:00:02,000 --> 01:00:03,200
Some programming.

1190
01:00:06,200 --> 01:00:09,100
Elvin, would you think it's better to start at a junior position at a

1191
01:00:09,100 --> 01:00:10,900
company than working my way up?

1192
01:00:10,900 --> 01:00:12,700
Or try to apply for hydrogen dude?

1193
01:00:12,700 --> 01:00:14,000
I have no idea.

1194
01:00:15,300 --> 01:00:18,900
I know nothing about modern hiring practices.

1195
01:00:23,300 --> 01:00:23,600
Mr.

1196
01:00:23,600 --> 01:00:26,000
Fourth dimension about Universal IDs.

1197
01:00:26,100 --> 01:00:28,500
What if some things want to be identified in the same system?

1198
01:00:28,800 --> 01:00:31,800
But don't have fixed storage location or conflicts in some other way

1199
01:00:31,800 --> 01:00:33,200
with the universal uniqueness.

1200
01:00:34,000 --> 01:00:39,000
So what I generally do, you'll notice very specifically this was even

1201
01:00:39,000 --> 01:00:42,800
like sort of predictive of me because we didn't actually have a need

1202
01:00:42,800 --> 01:00:43,300
for it.

1203
01:00:43,900 --> 01:00:45,200
But you'll notice skin cure.

1204
01:00:45,200 --> 01:00:48,800
The way that I did it is there's two pointers.

1205
01:00:49,600 --> 01:00:52,300
It's like why are there two pointers right?

1206
01:00:53,000 --> 01:00:58,800
And the reason is specifically because you can almost always generate

1207
01:00:58,800 --> 01:01:03,700
a unique ID with enough space and like, you know, I've seen it in my

1208
01:01:03,700 --> 01:01:05,300
system sometimes as high as four.

1209
01:01:06,100 --> 01:01:09,300
But basically what it is, is like, okay, let's say that I've got

1210
01:01:09,400 --> 01:01:13,700
something that only exists as some sequence of things that get

1211
01:01:13,700 --> 01:01:16,200
executed in a for loop from 1 to whatever.

1212
01:01:16,200 --> 01:01:19,300
And then, you know, I will typically like pile that stuff

1213
01:01:19,400 --> 01:01:21,900
Gather where I'll just be like, okay, I know that this point are

1214
01:01:21,900 --> 01:01:25,700
uniquely identifies this set of things that I'm doing and the integer

1215
01:01:25,700 --> 01:01:29,000
of the for Loop would uniquely identify like, which one of those, it

1216
01:01:29,000 --> 01:01:30,200
was right.

1217
01:01:30,700 --> 01:01:34,800
And so, I typically find that if you in systems where you want to use

1218
01:01:34,800 --> 01:01:39,100
an ID, you can usually find a way to generate them.

1219
01:01:39,300 --> 01:01:40,100
Usually.

1220
01:01:40,700 --> 01:01:44,600
Now, will it always work necessarily but for certainly, for debug

1221
01:01:44,600 --> 01:01:45,900
system, I think we'll be fine.

1222
01:01:51,900 --> 01:01:53,100
Adam and 12:17.

1223
01:01:54,200 --> 01:01:57,400
Do you know yet if the hammock on talks are going to be streamed and

1224
01:01:57,400 --> 01:01:59,800
recorded, I do not know.

1225
01:02:01,500 --> 01:02:02,600
I suspect, we won't know.

1226
01:02:02,600 --> 01:02:04,600
Probably up until pretty close to the event.

1227
01:02:04,600 --> 01:02:09,500
Since that's like, still kind of an active issue that I'm trying to

1228
01:02:09,500 --> 01:02:10,300
get resolved.

1229
01:02:10,700 --> 01:02:15,900
It's a lot harder than you might think to get people to actually reply

1230
01:02:15,900 --> 01:02:16,700
to emails.

1231
01:02:16,700 --> 01:02:18,200
Sometimes for whatever reasons,

1232
01:02:20,300 --> 01:02:23,900
Flamed Parts on Bart's, imagine of all the often winners.

1233
01:02:24,800 --> 01:02:26,900
Well, I make off-by-one errors, myself and I'm not a bot.

1234
01:02:26,900 --> 01:02:31,200
So Kira, Caleb wouldn't possibly teaching Bots how to program be the

1235
01:02:31,200 --> 01:02:34,200
beginning of the singularity, or the end of The Singularity, depending

1236
01:02:34,200 --> 01:02:36,900
how good at teaching they were doing League of?

1237
01:02:36,900 --> 01:02:38,900
Wow, scape, you've recommended C.

1238
01:02:38,900 --> 01:02:41,500
Programming language book after watching your directory series, are

1239
01:02:41,500 --> 01:02:43,800
there any other books you would suggest such as proper programming

1240
01:02:43,800 --> 01:02:45,200
practices or reference books?

1241
01:02:45,800 --> 01:02:48,400
Not really there probably are some out there, but I'm not

1242
01:02:49,300 --> 01:02:51,900
Up on them enough if that makes sense.

1243
01:02:53,100 --> 01:02:57,000
So I don't really know what probably the right books to read these

1244
01:02:57,000 --> 01:02:59,800
days would be that's not to say that there aren't

1245
01:03:00,000 --> 01:03:00,500
Good books.

1246
01:03:00,500 --> 01:03:01,700
Are you these days are probably our?

1247
01:03:01,700 --> 01:03:03,400
I just don't I don't know what they are.

1248
01:03:05,500 --> 01:03:09,000
Elvin you mentioned that the pointer could be used as the key and the

1249
01:03:09,000 --> 01:03:10,900
thing is pointing to is the value.

1250
01:03:11,100 --> 01:03:15,300
So do you mean something like this pair of X star X?

1251
01:03:16,200 --> 01:03:20,500
I just mean, as any way, anything that implements a map like a hash

1252
01:03:20,500 --> 01:03:23,000
table or anything like that, you know.

1253
01:03:25,700 --> 01:03:28,900
VZ trees e, what else you working on outside of this project?

1254
01:03:31,000 --> 01:03:35,600
So my main project you can go to Mali rocket.com and this is our Dev

1255
01:03:35,600 --> 01:03:36,200
blog here.

1256
01:03:36,200 --> 01:03:39,400
You know you can use the little buttons to like scroll through it.

1257
01:03:39,700 --> 01:03:44,900
We have not announced the project yet but this is the page for for all

1258
01:03:44,900 --> 01:03:49,200
of our announcements, every Monday gets posted and you can also go to

1259
01:03:49,200 --> 01:03:51,200
the follow page and there's a mailing list.

1260
01:03:51,200 --> 01:03:53,400
So if you do want to know what we're working on, is soon as we

1261
01:03:53,400 --> 01:03:54,900
announced, it would go out on that.

1262
01:04:00,200 --> 01:04:00,400
B.b.

1263
01:04:00,400 --> 01:04:01,300
King twitch.

1264
01:04:01,400 --> 01:04:03,100
If you're just starting out to watch these videos and you don't have

1265
01:04:03,100 --> 01:04:05,900
time to watch them all which ones are most important.

1266
01:04:06,800 --> 01:04:11,000
I wouldn't really say that there's a moster important or not.

1267
01:04:11,600 --> 01:04:14,900
It's because the the different thing about handmade hero is this is

1268
01:04:14,900 --> 01:04:18,200
not trying to teach you any specific programming techniques.

1269
01:04:18,600 --> 01:04:23,400
It's just trying to teach you one useful way of programming so it's

1270
01:04:23,400 --> 01:04:26,700
more just the mentality and how that goes you know it, how you just

1271
01:04:26,700 --> 01:04:28,100
generally approach problems

1272
01:04:29,600 --> 01:04:32,400
So I wouldn't say that there's a particularly important or not

1273
01:04:32,400 --> 01:04:35,500
important videos, I'd say just like, you know, as long as you're

1274
01:04:35,500 --> 01:04:38,400
understanding, what I'm doing in the video, then they're all roughly

1275
01:04:38,400 --> 01:04:39,200
equivalent.

1276
01:04:40,000 --> 01:04:43,400
There are certain times when, if really, what you cared about was

1277
01:04:43,400 --> 01:04:46,500
learning a very specific technique.

1278
01:04:46,800 --> 01:04:49,700
Maybe it's like, oh, I really wanted to learn how to rasterize a

1279
01:04:49,700 --> 01:04:53,900
Sprite and then I watch the rasterizing, the Sprite episode, you know,

1280
01:04:54,200 --> 01:04:55,400
then obviously, that's true.

1281
01:04:55,600 --> 01:04:58,700
But, you know, on the whole it's not really supposed to sort of be

1282
01:04:58,700 --> 01:04:59,400
that if that

1283
01:04:59,500 --> 01:05:00,100
makes sense.

1284
01:05:10,400 --> 01:05:13,500
How do you pick a part code of other programs?

1285
01:05:13,500 --> 01:05:15,100
Websites, Etc.

1286
01:05:15,400 --> 01:05:16,800
Sorry for the newest spam.

1287
01:05:16,800 --> 01:05:19,100
I just want to get started in the morning.

1288
01:05:22,400 --> 01:05:27,100
You know, I don't really pick apart other programs that much.

1289
01:05:27,100 --> 01:05:30,200
I mean, you know, sometimes I do like, when I was working on the

1290
01:05:30,200 --> 01:05:34,100
witness and even I guess sometimes still today, if I have to work on

1291
01:05:34,100 --> 01:05:38,300
the witness, I mean I have to go read the code of the other people who

1292
01:05:38,300 --> 01:05:43,300
worked on the project or whatever but you know I mean it's not like I

1293
01:05:43,900 --> 01:05:47,100
have to it's not like a reverse engineering job or anything like that.

1294
01:05:47,100 --> 01:05:48,700
If that's what you mean, you know, I

1295
01:05:49,700 --> 01:05:52,200
And most of the time I'm working on code that I wrote.

1296
01:05:52,200 --> 01:05:55,700
So I, you know, I'm really reading my own code most of the time.

1297
01:05:56,600 --> 01:05:59,800
So I'm not sure, I really understand the question.

1298
01:06:00,000 --> 01:06:05,300
If maybe you mean something a little bit more different than sort of

1299
01:06:05,300 --> 01:06:06,800
what I'm imagining that to be.

1300
01:06:06,800 --> 01:06:07,400
But

1301
01:06:10,100 --> 01:06:10,700
yeah.

1302
01:06:12,400 --> 01:06:13,300
I'm not, I'm not sure.

1303
01:06:13,300 --> 01:06:14,900
I understand really the question, Maybe.

1304
01:06:28,900 --> 01:06:30,800
Any other questions?

1305
01:06:34,000 --> 01:06:35,800
K trying to work with others.

1306
01:06:35,800 --> 01:06:38,400
In Reading their code, do try to understand everything they wrote or

1307
01:06:38,400 --> 01:06:40,200
just understand enough to solve your problems.

1308
01:06:41,700 --> 01:06:42,200
Um,

1309
01:06:45,400 --> 01:06:50,500
well, I mean, you know, it depends on the situation.

1310
01:06:50,700 --> 01:06:54,000
I try to understand a fair bit about stuff, but I find that generally

1311
01:06:54,000 --> 01:06:57,800
like it's if you know, at least like with the witness, for example,

1312
01:06:58,700 --> 01:07:02,100
it's a large enough code base that I'm not really going to understand

1313
01:07:02,100 --> 01:07:06,800
it all, unless I do work in it, like, typically I have to do some work

1314
01:07:06,800 --> 01:07:07,800
and break some stuff.

1315
01:07:07,800 --> 01:07:11,000
And then go, oh, I see like this system over here, actually depends on

1316
01:07:11,000 --> 01:07:13,900
this other system and I didn't know that and then like, fix it.

1317
01:07:14,000 --> 01:07:17,600
And we're like okay and so you know, as I worked with certain parts of

1318
01:07:17,600 --> 01:07:21,900
it, I certainly you know got better at understanding those parts.

1319
01:07:22,800 --> 01:07:26,400
But rarely is it the case that I like read the code and like totally

1320
01:07:26,400 --> 01:07:30,400
understood like all the code before trying to make some changes to it

1321
01:07:30,400 --> 01:07:33,600
because oftentimes you can't really fully understand the code.

1322
01:07:33,600 --> 01:07:37,100
At least I find I can't just by reading it, it would have to be like

1323
01:07:37,100 --> 01:07:41,800
super, it has to be like very, very small code for me to be able to do

1324
01:07:41,800 --> 01:07:43,800
that most of the time I have to kind of push.

1325
01:07:44,000 --> 01:07:44,700
On it a little and go.

1326
01:07:44,700 --> 01:07:46,900
Okay, I see what's going on here.

1327
01:07:47,000 --> 01:07:50,100
Like, I can't change this value because this other thing blows up or

1328
01:07:50,100 --> 01:07:50,600
whatever.

1329
01:07:50,800 --> 01:07:54,500
So, I see how that gets picked up here or whatever, you know,

1330
01:08:00,300 --> 01:08:02,100
Z z 3 Z, is there a programming pattern?

1331
01:08:02,100 --> 01:08:04,800
You see all the time that you can't stand or hate?

1332
01:08:07,100 --> 01:08:07,500
Um,

1333
01:08:16,300 --> 01:08:18,200
I don't, I don't think so.

1334
01:08:18,800 --> 01:08:22,300
I mean, usually the thing that I don't like well Getters and Setters

1335
01:08:22,899 --> 01:08:23,500
is one

1336
01:08:24,800 --> 01:08:26,100
I hate Getters and Setters there.

1337
01:08:26,100 --> 01:08:30,800
Like the silliest thing, I don't get why they were ever a thing.

1338
01:08:33,899 --> 01:08:35,399
So, Getters and Setters are pretty dumb.

1339
01:08:38,100 --> 01:08:41,000
And and that's and the whole Getters and Setters thing is just because

1340
01:08:41,000 --> 01:08:45,100
the people who made C++ didn't know what they were doing, they never

1341
01:08:45,100 --> 01:08:47,899
should have been that concept of a getter and Setter never should have

1342
01:08:47,899 --> 01:08:51,899
existed in the first place but due to the way that they'd efficiently

1343
01:08:51,899 --> 01:08:56,000
did the design of C++, it's a natural thing that somebody might do if

1344
01:08:56,000 --> 01:08:57,500
they weren't thinking it through all the way.

1345
01:08:57,500 --> 01:08:59,800
So it's like it's really that

1346
01:09:00,000 --> 01:09:01,300
That one's on screw strip.

1347
01:09:01,899 --> 01:09:05,399
That was a really, really bad his design for the way member functions

1348
01:09:05,399 --> 01:09:07,600
worked is like, is like exceptionally bad.

1349
01:09:08,399 --> 01:09:09,000
So, yeah.

1350
01:09:09,800 --> 01:09:11,700
So, I'd say, Getters and Setters, might be one.

1351
01:09:12,100 --> 01:09:14,600
But in general, I just don't like things that are overly complicated

1352
01:09:14,600 --> 01:09:17,100
like things where there's a lot of code that doesn't actually end up.

1353
01:09:17,100 --> 01:09:19,100
Really doing very much tends to be.

1354
01:09:19,100 --> 01:09:22,000
The only thing that I really don't like and I try to fight that as

1355
01:09:22,000 --> 01:09:24,399
much as possible, my code as well, like already in handmade here.

1356
01:09:24,399 --> 01:09:26,300
There's definitely some things that need to be simplified.

1357
01:09:26,800 --> 01:09:29,800
But, you know, in general, I think it him, a hero most the stuff isn't

1358
01:09:30,000 --> 01:09:31,100
It to ridiculous.

1359
01:09:31,200 --> 01:09:33,700
Like there aren't like giant systems that end up like setting one

1360
01:09:33,700 --> 01:09:36,300
integer or whatever but that's actually a pretty common thing to see

1361
01:09:36,300 --> 01:09:39,000
and some game code bases or other code bases, where it's like, oh my

1362
01:09:39,000 --> 01:09:39,500
God.

1363
01:09:42,800 --> 01:09:43,200
K.

1364
01:09:43,200 --> 01:09:45,399
How do you deal with Roman columns that use Loop?

1365
01:09:45,399 --> 01:09:46,300
Get her centers, Etc.

1366
01:09:46,300 --> 01:09:48,800
Do you try to give them advice or stay away from them as possible?

1367
01:09:48,899 --> 01:09:50,600
Yeah, I probably wouldn't work in that environment.

1368
01:09:50,600 --> 01:09:55,700
If I could avoid it like that, I like I would try to not work in a

1369
01:09:55,700 --> 01:09:57,900
company that I had to do stuff like that.

1370
01:10:07,400 --> 01:10:10,000
Ash Mario, I only know, C++ really.

1371
01:10:10,000 --> 01:10:11,300
But what's the alternative to get her sisters?

1372
01:10:11,300 --> 01:10:13,100
The alternative is just exposed the variable.

1373
01:10:14,100 --> 01:10:14,600
Right.

1374
01:10:15,900 --> 01:10:20,200
It's just to put the variable out in the thing and so the real so

1375
01:10:20,200 --> 01:10:23,900
basically like a brief whole story got like seven minutes left.

1376
01:10:25,000 --> 01:10:27,500
so, the first time someone told me about C++,

1377
01:10:30,500 --> 01:10:33,600
It was pretty funny because I thought they were describing something

1378
01:10:33,600 --> 01:10:34,300
sensible.

1379
01:10:35,900 --> 01:10:39,200
The first time someone told me about C++, they were like, you can make

1380
01:10:39,200 --> 01:10:41,300
a class, right?

1381
01:10:41,600 --> 01:10:45,600
You can say, you can make this class and they're like, and what you

1382
01:10:45,600 --> 01:10:49,300
can do is, you can make it so that there's functions so that if you

1383
01:10:49,300 --> 01:10:53,600
access stuff in the class, the functions get called, right?

1384
01:10:54,000 --> 01:10:56,200
And what I thought they were talking about

1385
01:10:57,600 --> 01:10:58,500
Was this?

1386
01:10:58,800 --> 01:11:00,300
I thought they were talking about.

1387
01:11:00,300 --> 01:11:02,500
Something that would have looked like this.

1388
01:11:03,100 --> 01:11:07,600
Right here is the thing that I would make, and then someone in code

1389
01:11:07,700 --> 01:11:12,400
right would do this.

1390
01:11:13,500 --> 01:11:13,900
Oops.

1391
01:11:17,200 --> 01:11:18,400
So many code would do this.

1392
01:11:26,400 --> 01:11:28,800
Right, this makes sense.

1393
01:11:34,300 --> 01:11:37,700
What I thought they were talking about is that you could write this.

1394
01:11:58,300 --> 01:11:59,000
Make sense.

1395
01:12:00,300 --> 01:12:03,300
Without anyone having to change any of the code, it would just

1396
01:12:03,300 --> 01:12:08,300
silently insert a call to this every time the value got set and

1397
01:12:08,300 --> 01:12:12,200
silently insert a call to this every time the variable was accessed.

1398
01:12:13,900 --> 01:12:14,600
Make sense.

1399
01:12:15,500 --> 01:12:21,400
Anyone with even like a small, like, a teaspoon of functioning, brain

1400
01:12:21,400 --> 01:12:25,900
matter which rules out strew strip would, that's what you would do.

1401
01:12:26,300 --> 01:12:30,500
Because this way anyone who wrote code in the natural way, you would

1402
01:12:30,500 --> 01:12:36,400
write, the code can just leave it and the person who's implementing

1403
01:12:36,400 --> 01:12:40,200
this class can override your access of that thing.

1404
01:12:40,900 --> 01:12:43,500
When, when and only when he needs to

1405
01:12:43,900 --> 01:12:44,500
Right.

1406
01:12:44,700 --> 01:12:48,900
It's really really obvious that that's how an object-oriented

1407
01:12:48,900 --> 01:12:50,000
programming language would work.

1408
01:12:51,100 --> 01:12:54,800
It's just, it's just, it's as clear and tons of programming languages.

1409
01:12:54,800 --> 01:12:57,400
Do this, like, like inform does this.

1410
01:12:57,400 --> 01:13:00,800
If you were programming the infocom game, you would have this, right?

1411
01:13:01,400 --> 01:13:05,200
But instead, what this idiot does is he puts this thing down here,

1412
01:13:05,300 --> 01:13:05,900
right?

1413
01:13:07,000 --> 01:13:08,500
And he puts this thing up here.

1414
01:13:10,700 --> 01:13:13,900
Any forces you to call it yourself?

1415
01:13:15,200 --> 01:13:16,800
How is that even possible?

1416
01:13:16,800 --> 01:13:21,500
Like it boggles my mind that the dude was so dumb that he couldn't

1417
01:13:21,500 --> 01:13:22,400
figure that out.

1418
01:13:22,400 --> 01:13:23,700
That that's ridiculous.

1419
01:13:24,200 --> 01:13:28,400
It forces, the dependency between, what whether the person who

1420
01:13:28,400 --> 01:13:31,500
initially created the thing thought, they were going to over it, need

1421
01:13:31,500 --> 01:13:34,700
to override it or you know or did it right.

1422
01:13:35,000 --> 01:13:36,800
It's just absolutely ridiculous.

1423
01:13:37,100 --> 01:13:43,900
So as a result by being so dumb key created this like epidemic of what

1424
01:13:43,900 --> 01:13:44,800
people do now

1425
01:13:45,200 --> 01:13:49,300
Which is for every value whether they need a getter or Setter or not,

1426
01:13:49,400 --> 01:13:51,300
they just create one, right?

1427
01:13:51,300 --> 01:13:55,400
And the reason that they're creating one is because they don't know

1428
01:13:55,400 --> 01:13:58,500
whether they're going to need to do it or not, and they don't want

1429
01:13:58,500 --> 01:14:02,000
everyone to have to change their usage code, which is totally

1430
01:14:02,000 --> 01:14:04,000
reasonable in some abstract sense.

1431
01:14:04,000 --> 01:14:04,300
Right?

1432
01:14:04,300 --> 01:14:05,100
I suppose.

1433
01:14:06,500 --> 01:14:08,100
But just forget about that, man.

1434
01:14:08,200 --> 01:14:12,800
Just do this instead and then if you ever need to do it, just go ahead

1435
01:14:12,800 --> 01:14:14,800
the one the time when you actually the rare.

1436
01:14:15,000 --> 01:14:16,600
I was on you actually then need to do.

1437
01:14:16,600 --> 01:14:19,700
It just put like an underscore at the end of it or drop it into the

1438
01:14:19,700 --> 01:14:22,300
private section at that point, right?

1439
01:14:22,500 --> 01:14:27,200
And change the like 50 places where it's actually accessed, it's way

1440
01:14:27,200 --> 01:14:28,800
less work and saves everyone.

1441
01:14:28,800 --> 01:14:32,300
All of this ridiculous typing and nonsensical function calls and all

1442
01:14:32,300 --> 01:14:33,500
this other stuff, right?

1443
01:14:35,900 --> 01:14:38,200
Yeah, I mean it's just like, like I said, I have no respect for these

1444
01:14:38,200 --> 01:14:38,600
people.

1445
01:14:38,600 --> 01:14:39,800
They were there complete idiots.

1446
01:14:39,800 --> 01:14:41,000
And I don't even know it.

1447
01:14:41,000 --> 01:14:44,000
Bothers me even to talk about this stuff because it's so dumb.

1448
01:15:10,600 --> 01:15:12,300
Insofar as what about a getter that?

1449
01:15:12,300 --> 01:15:15,600
Does some calculation on private variables, like a get day function in

1450
01:15:15,600 --> 01:15:18,500
a class that stores, an integer representation of time and date, you

1451
01:15:18,500 --> 01:15:20,500
can still do that, right?

1452
01:15:20,500 --> 01:15:21,800
That's totally still works.

1453
01:15:23,000 --> 01:15:26,600
It's just a simple, we're just talking about syntax Manic, the nobody.

1454
01:15:26,600 --> 01:15:28,700
John should be should do that for ji.

1455
01:15:28,700 --> 01:15:29,400
He already did.

1456
01:15:29,500 --> 01:15:30,100
I think?

1457
01:15:30,400 --> 01:15:31,700
I think it already does that.

1458
01:15:32,700 --> 01:15:33,600
The good version.

1459
01:15:33,600 --> 01:15:34,600
Not the bad version.

1460
01:15:37,200 --> 01:15:39,300
Easy size, C sharp does what you described?

1461
01:15:39,300 --> 01:15:40,700
Yes, C sharp does.

1462
01:15:41,300 --> 01:15:42,600
And so, do a bunch of other languages.

1463
01:15:42,600 --> 01:15:43,600
Like I said, it's obvious.

1464
01:15:43,600 --> 01:15:46,900
It's like, it's very obvious, like the much, like everything else in

1465
01:15:46,900 --> 01:15:50,700
C++, the only people who didn't get it are the people who design C++,

1466
01:15:50,700 --> 01:15:51,900
like, everyone else.

1467
01:15:52,100 --> 01:15:57,900
It's just painfully obvious but like C++ and like it's, you know, it's

1468
01:15:57,900 --> 01:16:02,400
a little, you know, malformed brother Java.

1469
01:16:02,700 --> 01:16:06,500
They just always manage to look miss, these super obvious things that

1470
01:16:06,500 --> 01:16:06,900
you would just

1471
01:16:13,000 --> 01:16:16,200
These are trees to Getters and Setters are less performant to, right?

1472
01:16:16,400 --> 01:16:19,100
Probably not, if the compiler knows what it's doing at all.

1473
01:16:21,700 --> 01:16:22,000
Qbert.

1474
01:16:22,000 --> 01:16:22,400
Caleb.

1475
01:16:22,400 --> 01:16:25,800
I know you mostly work on code in smaller groups of people of the what

1476
01:16:25,800 --> 01:16:29,300
is it like to program in teams and how does the work get split?

1477
01:16:31,500 --> 01:16:35,500
The work gets split usually by what people are just implementing at

1478
01:16:35,500 --> 01:16:36,200
the time, right?

1479
01:16:36,200 --> 01:16:40,100
You know it's like usually like okay I'm going to work on this

1480
01:16:40,100 --> 01:16:40,900
Collision detection thing.

1481
01:16:40,900 --> 01:16:43,700
So I'm doing the clothes injection code and typically whoever went and

1482
01:16:43,700 --> 01:16:44,000
did something.

1483
01:16:44,000 --> 01:16:47,500
First is typically the person who like ends up doing it later, as well

1484
01:16:48,200 --> 01:16:49,300
on small teams.

1485
01:16:50,100 --> 01:16:51,900
But a bigger companies and stuff like that.

1486
01:16:51,900 --> 01:16:55,100
You know, you'll typically have stuff, maybe where people are doing

1487
01:16:55,100 --> 01:16:55,600
more.

1488
01:16:57,900 --> 01:17:02,300
You know, sort of sort of more top-down management where you actually

1489
01:17:02,300 --> 01:17:02,800
like the side.

1490
01:17:02,800 --> 01:17:05,700
Look, I'm going to feel, you know, give this a to this person or give

1491
01:17:05,700 --> 01:17:09,300
this to the other person and so on, right?

1492
01:17:10,500 --> 01:17:11,300
This Isaac.

1493
01:17:11,300 --> 01:17:13,700
What about the downside that you don't know whether a value, you're

1494
01:17:13,700 --> 01:17:15,400
accessing, does a function call or not?

1495
01:17:15,500 --> 01:17:19,500
Well, that'd be a real difficult one for the C++ people to defend

1496
01:17:19,500 --> 01:17:23,700
since everything else they did doesn't tell you, operator overloading

1497
01:17:23,700 --> 01:17:26,500
does not tell you if you call a function construction, does not tell

1498
01:17:26,500 --> 01:17:29,600
you, whether you call a function like nothing in C++, does your cost

1499
01:17:29,600 --> 01:17:33,700
function, except that one, and that's the one where you really don't

1500
01:17:33,700 --> 01:17:36,100
want to have to know if you're calling a function, right?

1501
01:17:37,800 --> 01:17:39,900
So it's kind of ridiculous.

1502
01:17:47,300 --> 01:17:48,800
Yeah, it just frustrates me.

1503
01:17:48,800 --> 01:17:49,600
I have no sister.

1504
01:17:49,600 --> 01:17:52,400
Just such bad language.

1505
01:17:52,400 --> 01:17:54,400
Design, epically bad.

1506
01:17:54,500 --> 01:17:55,100
Anyway.

1507
01:17:56,100 --> 01:17:57,500
Let's go ahead and wrap this up.

1508
01:18:00,200 --> 01:18:03,500
I think I can only take so much griping about that particular topic.

1509
01:18:04,100 --> 01:18:05,700
Thank you, everyone for joining me for having me here.

1510
01:18:05,700 --> 01:18:06,900
It's been a pleasure coding with you.

1511
01:18:06,900 --> 01:18:09,700
As always, if you would like to follow along at home, you can always

1512
01:18:09,700 --> 01:18:11,500
pre-order the game and it comes to the source code.

1513
01:18:11,500 --> 01:18:14,700
So, if you want to play around with it, you can do that on, handmade

1514
01:18:14,700 --> 01:18:15,600
hero, dot-org.

1515
01:18:16,400 --> 01:18:19,700
You can also go to our forums and ask questions or viewer anti-deficit

1516
01:18:19,700 --> 01:18:20,200
guide.

1517
01:18:20,400 --> 01:18:24,000
You can go to the patreon page just for 3 or surgeon, go to the Tweet

1518
01:18:24,000 --> 01:18:25,900
bot to find out the schedule.

1519
01:18:26,900 --> 01:18:29,900
And if you are in the mood to join,

1520
01:18:30,000 --> 01:18:32,300
Us for our convention on December 5th.

1521
01:18:32,500 --> 01:18:36,200
Just this morning, the speaker list was announced and it is pretty

1522
01:18:36,200 --> 01:18:36,800
epic.

1523
01:18:37,200 --> 01:18:40,700
You can actually type handmade conduct or if I actually registered a

1524
01:18:40,700 --> 01:18:44,600
domain name that just goes directly there and you can read about it.

1525
01:18:44,900 --> 01:18:48,900
This is all the information about the like the location and all that

1526
01:18:48,900 --> 01:18:49,600
stuff.

1527
01:18:49,800 --> 01:18:51,600
And you can also buy the tickets here.

1528
01:18:51,800 --> 01:18:55,100
And then we also had just today as our blog post for the day.

1529
01:18:55,100 --> 01:18:57,600
We introduce the speaker is it's going to be pretty awesome.

1530
01:18:58,400 --> 01:18:59,700
Like it's kind of a crazy.

1531
01:18:59,700 --> 01:18:59,900
Awesome.

1532
01:19:00,000 --> 01:19:03,500
Line up Tommy reference is like obviously this is me play Mike act in

1533
01:19:04,300 --> 01:19:07,700
the head of development at Insomniac for like wisely all the games

1534
01:19:07,700 --> 01:19:09,800
ration, Clank resistance Etc blah blah blah blah.

1535
01:19:09,800 --> 01:19:15,300
Like every everything is here, Pat Wyatt like one of the original

1536
01:19:15,300 --> 01:19:19,400
programmers on Warcraft and and like all the early blizzard games and

1537
01:19:19,400 --> 01:19:23,100
then left and did a re Nanette where he did like the Guild Wars and

1538
01:19:23,100 --> 01:19:24,000
that code and stuff.

1539
01:19:24,800 --> 01:19:28,800
And then John Blow obviously talking about his language braid in the

1540
01:19:28,800 --> 01:19:29,700
witness and then

1541
01:19:29,900 --> 01:19:33,500
At the end, Ron Gilbert, who obviously guy, who did like secret of

1542
01:19:33,500 --> 01:19:35,600
Monkey Island and the, you know, event to the point-and-click

1543
01:19:35,600 --> 01:19:36,200
adventure game.

1544
01:19:36,700 --> 01:19:40,600
He's going to be talking and yeah, it's gonna be pretty awesome.

1545
01:19:41,400 --> 01:19:42,700
I'm pretty excited about it.

1546
01:19:43,000 --> 01:19:45,900
So it's going to be a pretty awesome programming Khan.

1547
01:19:46,800 --> 01:19:52,300
And obviously, all tried trying to figure out how to get it streamed.

1548
01:19:52,400 --> 01:19:55,300
It's been a real uphill battle, trying to get someone to agree to

1549
01:19:55,300 --> 01:19:58,800
stream it, but I'm looking to see if maybe now that the speakers are

1550
01:19:58,800 --> 01:19:59,800
announced and people.

1551
01:20:00,000 --> 01:20:01,500
We'll take a little more seriously, I don't know.

1552
01:20:01,900 --> 01:20:05,700
Anyway, if you do want to go to that though and you can make it to

1553
01:20:05,700 --> 01:20:06,900
Seattle on December 5th.

1554
01:20:07,400 --> 01:20:12,000
You can always buy tickets on the site and then they're pretty cheap

1555
01:20:12,200 --> 01:20:16,500
the price goes up to $45 November 5th.

1556
01:20:16,500 --> 01:20:20,300
So you still got still got a week or two to grab tickets at the

1557
01:20:20,300 --> 01:20:21,100
discount price.

1558
01:20:22,100 --> 01:20:24,000
All right, that's about it.

1559
01:20:24,900 --> 01:20:25,900
I'll see you guys tomorrow.

1560
01:20:25,900 --> 01:20:27,100
Back here, 5 p.m.

1561
01:20:27,100 --> 01:20:32,800
Pacific Daylight time, until then have fun programming and I will see

1562
01:20:32,800 --> 01:20:33,700
you guys on the internet.

1563
01:20:33,700 --> 01:20:34,500
Take it easy, everyone.

