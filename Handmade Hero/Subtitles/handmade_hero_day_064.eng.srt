1
00:00:00,000 --> 00:00:02,900
As I had explained to you all my great monetization ideas, hopefully

2
00:00:02,900 --> 00:00:05,900
this won't be too bad, with the drop frames.

3
00:00:06,000 --> 00:00:08,400
If not, you can catch it on the YouTube, I guess.

4
00:00:09,000 --> 00:00:12,500
All right, ladies and gentlemen, welcome to handmade here of the show

5
00:00:12,500 --> 00:00:15,800
where we code an entire game live on Twitch.

6
00:00:15,800 --> 00:00:25,000
No libraries, no engine, just us and code, and awesomeness, honestly,

7
00:00:25,100 --> 00:00:28,400
you know, I'm feeling pretty good about it, where it's at these days

8
00:00:28,400 --> 00:00:29,900
because we've been working on our engine

9
00:00:30,000 --> 00:00:32,900
Peck stuff and we just I feel like had a really big breakthrough

10
00:00:32,900 --> 00:00:35,300
yesterday where we were like ah here is a good way.

11
00:00:35,300 --> 00:00:39,800
We can make a lot of the code nice and simplified and still do all the

12
00:00:39,800 --> 00:00:40,900
things that we want.

13
00:00:41,200 --> 00:00:44,700
And it was pretty exciting, but we only did half of the sort of

14
00:00:44,700 --> 00:00:45,800
restructuring work yesterday.

15
00:00:45,800 --> 00:00:49,200
I want to go do the other half now and get right back into it.

16
00:00:49,500 --> 00:00:52,800
So I'm not even going to spend any time on the Preamble.

17
00:00:52,800 --> 00:00:56,500
I'm just going to say, if you have pre-ordered, the game on handmade

18
00:00:56,500 --> 00:00:59,800
hero dot-org and made hero dot-org.

19
00:01:00,000 --> 00:01:02,000
If you preorder the game using a little Peter button, you should have

20
00:01:02,000 --> 00:01:05,900
gotten any Link in your email and that link allows you to download the

21
00:01:05,900 --> 00:01:07,600
source code to the game every night.

22
00:01:07,600 --> 00:01:10,900
If you download it, you should have gotten a zip file and inside that

23
00:01:10,900 --> 00:01:11,300
zip file.

24
00:01:11,300 --> 00:01:16,300
There's lots of little Zips day 363 since we're on day, 60 for

25
00:01:16,300 --> 00:01:18,100
unzipped a 63 zip file.

26
00:01:18,500 --> 00:01:21,700
That is the one that I am basically on right now.

27
00:01:21,800 --> 00:01:24,000
And so you'll be exactly where I am if you want to follow along at

28
00:01:24,000 --> 00:01:24,200
home.

29
00:01:24,200 --> 00:01:27,900
So that's what you want to do if you're into that so

30
00:01:29,300 --> 00:01:33,700
Let's take a look here at the situation as it stands.

31
00:01:33,700 --> 00:01:36,900
We got a bunch of stuff to do, so let's do it.

32
00:01:38,100 --> 00:01:41,500
So basically, I made the change yesterday where I decided we were

33
00:01:41,500 --> 00:01:43,900
going to break things down into simulation regions.

34
00:01:44,300 --> 00:01:46,300
There are sort of these things, you can create any time that

35
00:01:46,300 --> 00:01:51,400
Encompass, some area of the game world, and then you can simulate it

36
00:01:51,700 --> 00:01:52,800
and then you can write it back.

37
00:01:52,800 --> 00:01:55,400
So it basically like lost it up into a simulated will form.

38
00:01:55,400 --> 00:01:58,800
Does the simulation and chunks of back out again, right?

39
00:01:59,200 --> 00:02:03,600
Now I thought of something yesterday after we'd started as well, but

40
00:02:03,600 --> 00:02:04,900
we didn't actually quite get to it.

41
00:02:05,500 --> 00:02:10,199
Yes, I was like I also feel like there's something we can do now that

42
00:02:10,199 --> 00:02:12,900
will sort of make it easier for us to get to where we want to go.

43
00:02:12,900 --> 00:02:19,000
Programming wise and that is since low entity and high entity aren't

44
00:02:19,000 --> 00:02:21,200
really what we wanted to use.

45
00:02:21,200 --> 00:02:25,000
Anyway, I'll explain this a little bit more detail if I open up the

46
00:02:25,000 --> 00:02:27,500
same region file here, we've got the same entity and that's what we

47
00:02:27,500 --> 00:02:28,700
were working on, right?

48
00:02:28,900 --> 00:02:32,300
And then it had we were still referencing the low entities stuff

49
00:02:32,300 --> 00:02:35,700
because while we're working on the similarity, we have to go back and

50
00:02:35,700 --> 00:02:36,700
get this other data.

51
00:02:37,000 --> 00:02:39,200
Now that's not actually the way I envisioned it working.

52
00:02:40,100 --> 00:02:42,600
When we're actually done with the entity system, what I actually

53
00:02:42,600 --> 00:02:45,200
wanted to do and I sort of alluded to this yesterday.

54
00:02:45,400 --> 00:02:48,600
Was I wanted to make it so that the the storage version of The Entity

55
00:02:48,600 --> 00:02:52,600
is like the most minimal compressed set of information that stores

56
00:02:52,600 --> 00:02:54,900
what that entity needs to remember.

57
00:02:56,000 --> 00:02:57,200
But then, the high entity.

58
00:02:59,400 --> 00:02:59,900
Just has all.

59
00:03:00,000 --> 00:03:01,100
Stuff blown out.

60
00:03:01,600 --> 00:03:03,100
And so what I thought we could do

61
00:03:05,700 --> 00:03:09,400
Before we get to the point where we've actually done that work to make

62
00:03:09,400 --> 00:03:13,200
that sort of forward and backward, Tappan instead of constantly

63
00:03:13,200 --> 00:03:15,200
referring to the two entities, what I was thinking would actually be

64
00:03:15,200 --> 00:03:19,800
much better is we just essentially have one entity type and we just

65
00:03:19,800 --> 00:03:20,700
move it between the two.

66
00:03:20,700 --> 00:03:23,200
We just block copy it basically, right?

67
00:03:24,800 --> 00:03:28,800
So what I was thinking is we just say, okay, basically we've got you

68
00:03:28,800 --> 00:03:32,900
know, the extra stuff that's on the Sim entity will just stick the low

69
00:03:32,900 --> 00:03:35,200
entity just flat-out in here, right?

70
00:03:35,900 --> 00:03:38,500
Like that, like it's just there, right?

71
00:03:39,300 --> 00:03:41,600
And furthermore we could even do something a little more aggressive.

72
00:03:41,600 --> 00:03:43,800
Like we could actually just stick this guy in here.

73
00:03:43,800 --> 00:03:47,200
We could actually make a Sim entity, you know, have all the same

74
00:03:47,300 --> 00:03:51,400
members as this guy does and then just have the low entity like look

75
00:03:51,400 --> 00:03:51,600
do it.

76
00:03:51,600 --> 00:03:52,400
The other way around.

77
00:03:52,400 --> 00:03:55,700
In fact, I think I like that better for now because like I said we

78
00:03:55,700 --> 00:04:00,500
don't care at all about the storage space yet because this is not the

79
00:04:00,500 --> 00:04:02,700
way we're going to do it at the very end, we just want something

80
00:04:02,700 --> 00:04:05,400
that's easy for us to do prototyping, wise in that sense.

81
00:04:05,700 --> 00:04:08,300
Um, so I think I might do it exactly the opposite.

82
00:04:08,300 --> 00:04:10,400
Way basically go like this.

83
00:04:12,200 --> 00:04:15,500
So everything's in the same entity and then what happens is, the low

84
00:04:15,500 --> 00:04:19,399
entity is just a Sim entity storage, right?

85
00:04:19,399 --> 00:04:21,800
This is the stored version of that, right?

86
00:04:22,900 --> 00:04:23,700
If that makes sense.

87
00:04:23,900 --> 00:04:26,500
And so, we'll actually have at some point.

88
00:04:27,200 --> 00:04:30,500
We'll go ahead and start making the low entity be something actually

89
00:04:30,500 --> 00:04:30,700
real.

90
00:04:30,700 --> 00:04:34,400
But for now, it'll just be a thing that stores, everything that was in

91
00:04:34,400 --> 00:04:35,400
the same entity to begin.

92
00:04:35,600 --> 00:04:35,900
With.

93
00:04:35,900 --> 00:04:39,600
Does that make sense that way it gets us out of the business of having

94
00:04:39,600 --> 00:04:42,600
to deal with that dichotomy because we don't actually want that

95
00:04:42,600 --> 00:04:43,400
dichotomy ever.

96
00:04:43,400 --> 00:04:46,800
We just were just going to treat especially due to this new change.

97
00:04:46,800 --> 00:04:49,600
We're always just going to treat the low entities as like a packed,

98
00:04:49,600 --> 00:04:53,300
some kind of thing, where we crammed down the blown-out Simonetti

99
00:04:53,300 --> 00:04:53,800
stuff.

100
00:04:56,400 --> 00:04:59,100
Into a smaller space that we don't pay a huge memory footprint for

101
00:04:59,100 --> 00:05:01,400
having things be giant or, you know, that sort of stuff.

102
00:05:02,400 --> 00:05:03,000
All right.

103
00:05:03,600 --> 00:05:05,200
So I think that's the way I want to do it.

104
00:05:05,300 --> 00:05:08,100
And so, what that means is that I don't want to see low entity in here

105
00:05:08,100 --> 00:05:09,000
at all, basically?

106
00:05:09,200 --> 00:05:09,800
Right.

107
00:05:10,500 --> 00:05:11,600
I don't want to see this at all.

108
00:05:12,400 --> 00:05:14,900
So we're going to go through here just before we finish doing the

109
00:05:14,900 --> 00:05:18,000
porting work, and I'm going to go ahead and get rid of that that

110
00:05:18,000 --> 00:05:19,400
entire concept, right?

111
00:05:20,200 --> 00:05:23,000
So basically let's see here.

112
00:05:24,000 --> 00:05:25,300
So when we do the NCAA,

113
00:05:26,200 --> 00:05:28,100
And the stored entity here.

114
00:05:28,600 --> 00:05:31,900
When we grab that store identity, all we're really going to do on

115
00:05:31,900 --> 00:05:32,200
that.

116
00:05:32,200 --> 00:05:35,900
Yeah, so like change entity location, for example, all of that sort of

117
00:05:35,900 --> 00:05:41,400
stuff will now no longer actually look directly at one of these guys

118
00:05:41,400 --> 00:05:41,900
anymore.

119
00:05:42,400 --> 00:05:45,500
Yeah, because changing the location was still working on those guys.

120
00:05:45,700 --> 00:05:48,400
So what we do is we grab the stored entity out, right?

121
00:05:48,400 --> 00:05:51,800
We'd basically make the stored entities Sim entity.

122
00:05:51,800 --> 00:05:52,900
What did I actually call that?

123
00:05:52,900 --> 00:05:55,200
They're the stored version, right.

124
00:05:55,500 --> 00:05:57,900
So, this is called a SIM for now.

125
00:05:57,900 --> 00:05:59,900
It's just going to be equal to

126
00:06:00,000 --> 00:06:01,200
Entity, right?

127
00:06:02,000 --> 00:06:07,300
So basically to block copy it into the store identity and then the

128
00:06:07,300 --> 00:06:10,800
other thing we have to do is we have to update that low position,

129
00:06:10,800 --> 00:06:11,300
right?

130
00:06:11,300 --> 00:06:14,500
And that low position I guess is the one thing that we wouldn't want

131
00:06:14,500 --> 00:06:15,700
in here, right?

132
00:06:15,700 --> 00:06:19,500
Because that's something that only exists for the low entity, right?

133
00:06:19,500 --> 00:06:24,600
Like so so basically we just have all of this stuff is legitimate

134
00:06:24,600 --> 00:06:28,000
things that we had in here for our Sim entities.

135
00:06:28,400 --> 00:06:29,100
Yeah.

136
00:06:29,400 --> 00:06:29,900
But then this

137
00:06:30,000 --> 00:06:31,300
This world position P.

138
00:06:31,300 --> 00:06:33,700
Obviously, only exists for the low entity, that's not a thing that we

139
00:06:33,700 --> 00:06:35,700
ever talked about in some space.

140
00:06:36,000 --> 00:06:37,900
So there we go, that's fine.

141
00:06:38,600 --> 00:06:40,400
And then this would still work I guess.

142
00:06:40,400 --> 00:06:44,500
So we could still use the change any location thing and in fact I

143
00:06:44,500 --> 00:06:48,700
guess all of this stuff pretty much still works exactly that way.

144
00:06:48,800 --> 00:06:51,000
There really isn't actually a guess anything else that we would have

145
00:06:51,000 --> 00:06:53,400
to change because the only places that we were talking about it in

146
00:06:53,400 --> 00:06:57,700
here, where the place is where we decompress it essentially.

147
00:06:57,900 --> 00:06:59,900
So when we go to do a density,

148
00:07:00,700 --> 00:07:02,500
I guess all we would do is say now.

149
00:07:04,300 --> 00:07:07,900
Yeah, instead of instead of

150
00:07:09,200 --> 00:07:09,600
Here.

151
00:07:13,200 --> 00:07:18,300
Hmm, instead of just copying the position in like we were doing here,

152
00:07:18,300 --> 00:07:21,000
we would actually just copy the rest of it so we'd basically say

153
00:07:21,400 --> 00:07:24,800
everything that's in our Sim region entity.

154
00:07:24,800 --> 00:07:30,200
There we would go ahead and just overwrite basically all of this

155
00:07:30,200 --> 00:07:33,400
except for the storage index although that we can even over at the

156
00:07:33,400 --> 00:07:37,600
storage index because technically that's coming from the other guy as

157
00:07:37,600 --> 00:07:37,900
well.

158
00:07:38,100 --> 00:07:38,400
Right?

159
00:07:38,500 --> 00:07:40,800
And normally, the way I would do this is I would make

160
00:07:40,900 --> 00:07:43,500
I would pull out these members that work.

161
00:07:44,600 --> 00:07:47,700
So the storage index only existence them, and in the same entity,

162
00:07:47,800 --> 00:07:51,800
normally, I would pull these guys out so that these guys are in their

163
00:07:51,800 --> 00:07:54,000
own struct that we talk about separately.

164
00:07:54,100 --> 00:07:57,400
But since I know that eventually, this is not how it's going to

165
00:07:57,400 --> 00:07:58,400
actually be stored.

166
00:07:58,400 --> 00:08:01,300
I'm not going to bother doing that because I don't care about the fact

167
00:08:02,000 --> 00:08:02,300
Hoops.

168
00:08:02,300 --> 00:08:05,200
That were storing that additional you went in there?

169
00:08:05,500 --> 00:08:05,900
Yeah.

170
00:08:06,300 --> 00:08:10,600
So basically I'm just going to go ahead and copy it out wholesale just

171
00:08:10,900 --> 00:08:15,800
He that Sim out entirely and later on, we'll do the compression there

172
00:08:16,500 --> 00:08:20,200
and I feel like did we ever actually set?

173
00:08:21,900 --> 00:08:22,300
I don't know.

174
00:08:22,300 --> 00:08:25,200
If we ever actually set the storage index to the storage index has to

175
00:08:25,200 --> 00:08:27,700
be set properly, but I don't think we ever did.

176
00:08:28,000 --> 00:08:29,300
So actually add entity.

177
00:08:29,300 --> 00:08:33,700
What add into T should be doing when we call it here, right?

178
00:08:33,700 --> 00:08:37,000
Identity should be taking where it should store it back.

179
00:08:37,000 --> 00:08:39,799
So that low entity index should actually be there and that was just a

180
00:08:39,799 --> 00:08:40,500
mistake.

181
00:08:41,000 --> 00:08:44,000
We hadn't finished porting yesterday so we probably didn't get to

182
00:08:44,000 --> 00:08:45,500
everything that we should have been doing.

183
00:08:46,100 --> 00:08:47,900
So let's go ahead and make sure that that's true.

184
00:08:48,100 --> 00:08:52,100
So when we do that, ad entity will go ahead and pass the low entity

185
00:08:52,100 --> 00:08:56,000
index here low entity, I'm not in a good typing alignment.

186
00:08:56,300 --> 00:08:58,000
Things sweetie is off or something.

187
00:08:58,000 --> 00:08:59,900
There, the feng shui is

188
00:09:00,200 --> 00:09:02,400
People move this.

189
00:09:03,400 --> 00:09:03,900
There we go.

190
00:09:05,300 --> 00:09:06,500
Okay, much better.

191
00:09:08,000 --> 00:09:12,100
So I'm going to pass that low into the index and that way, I can store

192
00:09:12,100 --> 00:09:12,600
it in here.

193
00:09:12,600 --> 00:09:18,400
So after we're up this guy, we will go ahead and put a storage index

194
00:09:18,700 --> 00:09:19,900
in there like that.

195
00:09:20,700 --> 00:09:23,500
And actually, what I could do to, let's move Loft that up.

196
00:09:23,500 --> 00:09:28,200
Even one more, I guess, the reason we can't quite do that it's because

197
00:09:28,200 --> 00:09:29,800
we overwrite everybody here.

198
00:09:30,200 --> 00:09:30,900
Mmm.

199
00:09:31,500 --> 00:09:31,800
Yeah.

200
00:09:31,800 --> 00:09:33,200
That's that's unfortunate.

201
00:09:33,300 --> 00:09:36,900
So I guess what a dignity would want to do too is want to take one of

202
00:09:36,900 --> 00:09:40,700
these like so so that it could do this.

203
00:09:41,300 --> 00:09:41,800
There we go.

204
00:09:43,200 --> 00:09:44,900
And we'll have to think about, I guess.

205
00:09:44,900 --> 00:09:48,300
I guess all of this will be sorted when we actually do the compression

206
00:09:48,300 --> 00:09:51,300
decompression stuff, because then we won't be using kind of, a Cheesy

207
00:09:51,300 --> 00:09:54,100
little romp romp over thing that we're doing there.

208
00:09:54,400 --> 00:09:55,000
All right?

209
00:09:55,000 --> 00:09:56,700
So any this ad entity,

210
00:09:58,500 --> 00:10:01,900
After we go ahead and get the entity instead of clearing it now, we're

211
00:10:01,900 --> 00:10:02,900
not going to actually do that.

212
00:10:02,900 --> 00:10:05,500
Clear what we're going to do is do the decompression.

213
00:10:05,500 --> 00:10:12,700
And so I'll say here to do this should really be a decompression.

214
00:10:12,700 --> 00:10:18,000
Step not a copy but we don't have that part yet.

215
00:10:18,400 --> 00:10:22,500
So we've got our entity, we have our source, I guess I'll still call

216
00:10:22,500 --> 00:10:26,400
The Source, and we're going to grab that and copy it over.

217
00:10:26,400 --> 00:10:28,100
And then we also want to make sure that

218
00:10:28,200 --> 00:10:31,600
Our storage index is going to be that low into the index, and I guess

219
00:10:31,600 --> 00:10:33,200
I'll change it to storage index as well.

220
00:10:35,300 --> 00:10:35,800
There we go.

221
00:10:37,100 --> 00:10:42,200
So now that we've got that straightened away, this is just passing

222
00:10:42,200 --> 00:10:43,500
those on to the next guy.

223
00:10:43,500 --> 00:10:46,300
And then it also happens to have already computed its position.

224
00:10:47,200 --> 00:10:50,200
And so it'll actually just go ahead and overwrite the position there.

225
00:10:51,900 --> 00:10:52,900
Yeah.

226
00:10:53,000 --> 00:10:56,400
Again, this will be more, this would be more meaningful if we weren't

227
00:10:56,400 --> 00:10:59,300
actually still storing the position out as well, but you could imagine

228
00:10:59,500 --> 00:11:01,800
again once we can press it, we wouldn't be storing that position.

229
00:11:02,100 --> 00:11:04,200
So we kind of should leave that in there since that's the path that

230
00:11:04,200 --> 00:11:05,400
will actually have to get taken.

231
00:11:06,300 --> 00:11:06,900
All right, so that's

232
00:11:07,100 --> 00:11:07,700
Fine.

233
00:11:08,200 --> 00:11:10,100
And now we need to go ahead and move.

234
00:11:11,600 --> 00:11:15,900
Our our entity stuff here, out of handmade dot h.

235
00:11:16,200 --> 00:11:19,400
So, we want to grab that out.

236
00:11:19,600 --> 00:11:21,300
Let's take a look at what else we've got here.

237
00:11:22,100 --> 00:11:23,400
We need our hit points.

238
00:11:23,800 --> 00:11:27,400
So there's our hit points, that may be it, for the things that we

239
00:11:27,400 --> 00:11:32,300
actually use actually have in here, looks that way, alright?

240
00:11:32,300 --> 00:11:35,900
And so when we do an end Sim this, right?

241
00:11:35,900 --> 00:11:39,000
Okay, so now we've got to do, we got to do the entity mapping, hash

242
00:11:39,000 --> 00:11:39,200
table.

243
00:11:39,200 --> 00:11:41,300
We talked about that, I guess we might,

244
00:11:41,500 --> 00:11:42,600
Just jump in and do it.

245
00:11:42,600 --> 00:11:44,100
So basically, what's going to happen?

246
00:11:46,000 --> 00:11:49,300
We talked about this yesterday, we'll talk about it again, when we

247
00:11:49,300 --> 00:11:53,700
left everything up into a Sim region, we basically are creating a

248
00:11:53,700 --> 00:11:58,200
secondary array of these sort of cement Keys, which are all going to

249
00:11:58,200 --> 00:11:59,300
be processed.

250
00:12:00,100 --> 00:12:01,500
No, as part of the simulation.

251
00:12:02,100 --> 00:12:06,800
But since we have entities stored often in, we have the permanent

252
00:12:06,800 --> 00:12:09,300
storage of all the entities in the world, that's in a different place.

253
00:12:11,900 --> 00:12:12,800
May be compressed.

254
00:12:14,300 --> 00:12:17,600
May be stored like like what we're saying?

255
00:12:17,600 --> 00:12:18,500
The position changes.

256
00:12:18,500 --> 00:12:21,500
When you go from one to the other, that sort of thing, we need to be

257
00:12:21,500 --> 00:12:24,100
able to persist references to entities.

258
00:12:24,300 --> 00:12:29,900
So basically an entity is going to want to talk about when it's

259
00:12:29,900 --> 00:12:34,000
talking about say, the fact that it's going on, here we go.

260
00:12:34,900 --> 00:12:37,900
When it's talking about another entity, it's going to use its index,

261
00:12:37,900 --> 00:12:41,100
probably into the low entity array, right?

262
00:12:41,100 --> 00:12:43,600
Because that's a stable index that you could always use,

263
00:12:43,900 --> 00:12:48,500
Your index into the array of the other kinds of entities.

264
00:12:48,500 --> 00:12:50,000
The same entities, right?

265
00:12:50,800 --> 00:12:56,100
This array is not stable that your index in that array is just depends

266
00:12:56,100 --> 00:12:58,900
only dependent on where what SIM region is being talked about at a

267
00:12:58,900 --> 00:13:00,000
given time, right?

268
00:13:00,300 --> 00:13:05,800
So if in here we have something like for example what the sword was

269
00:13:05,900 --> 00:13:06,100
right?

270
00:13:06,100 --> 00:13:08,900
Because we remember we use this to point to the sword was right.

271
00:13:09,800 --> 00:13:13,000
If we have something like that, we need that to be able to persist and

272
00:13:13,000 --> 00:13:13,600
so a sword.

273
00:13:13,700 --> 00:13:14,400
Index.

274
00:13:15,400 --> 00:13:19,000
We need to be able to get from that to the actual sword.

275
00:13:19,000 --> 00:13:23,200
And the problem with that is we don't actually know how to do that in

276
00:13:23,200 --> 00:13:23,800
our current system.

277
00:13:23,800 --> 00:13:28,300
We love things up into the Sim and we don't really have any way of

278
00:13:28,300 --> 00:13:29,800
actually dealing with.

279
00:13:30,600 --> 00:13:33,500
We don't have any way of actually dealing with the fact that we need

280
00:13:33,500 --> 00:13:35,200
to reference or do cross-referencing.

281
00:13:35,400 --> 00:13:38,100
So what we need to do is we need to have some way of doing that

282
00:13:38,100 --> 00:13:41,400
cross-referencing and so what I thought I would do is again I can just

283
00:13:41,400 --> 00:13:43,300
make like a hash table in here for example,

284
00:13:44,500 --> 00:13:49,400
And hash table would just tell me for any low entity index, it would

285
00:13:49,400 --> 00:13:54,400
tell me where the high entity index was like, basically where the Sim

286
00:13:54,400 --> 00:13:58,300
entity was in this array, it's not an operation.

287
00:13:58,300 --> 00:14:05,200
We'd probably do that often, so I don't really care too much about

288
00:14:05,400 --> 00:14:09,700
making it be particularly fast or anything, but that's basically it.

289
00:14:09,900 --> 00:14:11,700
And so what we'd want to do, right?

290
00:14:11,700 --> 00:14:14,100
Is we'd want to be able to change this into

291
00:14:14,200 --> 00:14:18,400
Essentially a Sim entity pointer, right like, so we'd want to be able

292
00:14:18,400 --> 00:14:21,700
to change that into a cement to the pointer so that we could just get

293
00:14:21,700 --> 00:14:25,300
it, the sword whenever we wanted to and then when it gets stored back,

294
00:14:25,500 --> 00:14:29,300
that is when we would actually go and turn it into a low, you know,

295
00:14:29,300 --> 00:14:30,500
into a low index, right?

296
00:14:32,600 --> 00:14:33,500
That's what we'd want to do.

297
00:14:33,500 --> 00:14:34,100
Ideally

298
00:14:35,800 --> 00:14:37,800
So that's what I'm thinking about, right?

299
00:14:37,800 --> 00:14:41,000
That's what I was thinking about and what we could do.

300
00:14:42,800 --> 00:14:45,900
In fact, this kind of seems like maybe it's worth doing already, just

301
00:14:45,900 --> 00:14:48,500
because it kind of points towards the direction we want to go.

302
00:14:48,900 --> 00:14:52,400
What we could do is make a little Union here, right, where we

303
00:14:52,400 --> 00:14:56,200
basically have a low index and a Sim entity pointer, right?

304
00:14:57,300 --> 00:14:57,900
Like this.

305
00:14:59,500 --> 00:14:59,800
so, if

306
00:15:00,000 --> 00:15:02,800
Wanted to we could do like index and pointer.

307
00:15:02,800 --> 00:15:05,100
I guess something like that.

308
00:15:05,100 --> 00:15:09,200
I don't know what we could do is say that this is actually like an

309
00:15:09,200 --> 00:15:15,100
entity reference like so I'm having trouble typing today and any

310
00:15:15,100 --> 00:15:18,500
reference and this is like, you know, an entity references.

311
00:15:18,500 --> 00:15:20,800
The thing that references the sword,

312
00:15:22,700 --> 00:15:28,100
And so it'll happen is when these things get loaded right references,

313
00:15:28,100 --> 00:15:33,400
get pulled in and when they go away, they get converted back to index

314
00:15:33,400 --> 00:15:35,200
indexes, right.

315
00:15:35,700 --> 00:15:40,200
And that seems like a pretty reasonable thing to me.

316
00:15:40,200 --> 00:15:40,500
I don't know.

317
00:15:40,500 --> 00:15:44,000
We'll see again, like, this is our experimentation period.

318
00:15:44,500 --> 00:15:49,000
So, we are allowed to sort of figure out what sorts of stuff we want

319
00:15:49,000 --> 00:15:49,900
to do by trying.

320
00:15:51,000 --> 00:15:51,900
So that's what I would say.

321
00:15:51,900 --> 00:15:54,400
I'd say, that's what we want to do, and then for the entity references

322
00:15:54,400 --> 00:15:57,700
are in here basically, we map them in and map them out, in that exact

323
00:15:57,700 --> 00:15:59,600
same way that we used to do.

324
00:15:59,700 --> 00:16:04,800
So, you can imagine in here when we actually do our storage operation,

325
00:16:04,900 --> 00:16:05,400
right?

326
00:16:05,400 --> 00:16:10,900
When we do our stored Sim entity, this block copies, that entity into

327
00:16:10,900 --> 00:16:11,800
the Sim version.

328
00:16:12,000 --> 00:16:15,500
Well, we want to go ahead and change that sword.

329
00:16:16,800 --> 00:16:18,800
We want to go and chat with me.

330
00:16:19,100 --> 00:16:23,700
Go ahead and change that sword pointer into a an index.

331
00:16:23,900 --> 00:16:25,500
So we essentially want to do this.

332
00:16:26,100 --> 00:16:29,300
In fact, I guess we could just make a function for it, which is like,

333
00:16:30,100 --> 00:16:33,400
you know, I don't know.

334
00:16:33,600 --> 00:16:37,500
We don't have a good, I guess we could call it store entity reference.

335
00:16:38,400 --> 00:16:46,400
Like so and then we would just pass it that address and it turns out

336
00:16:46,400 --> 00:16:49,200
that we really don't have to do anything to make that happen, right?

337
00:16:49,200 --> 00:16:50,300
It's really, really simple.

338
00:16:50,500 --> 00:16:56,400
If we want to convert into a reference from its pointer into to me.

339
00:16:58,900 --> 00:17:00,200
Into a permanent index.

340
00:17:00,200 --> 00:17:02,000
We have a really easy way of doing that.

341
00:17:02,000 --> 00:17:03,200
I guess we don't want to call that sword.

342
00:17:03,200 --> 00:17:03,800
Probably, huh.

343
00:17:04,700 --> 00:17:06,400
And actually get this as a Sim entity.

344
00:17:06,400 --> 00:17:10,700
This is actually an interesting reference like so, all right, and so

345
00:17:10,700 --> 00:17:15,500
what we would do there is say, first of all, if the ref pointer is not

346
00:17:15,500 --> 00:17:17,000
equal to 0, right?

347
00:17:17,000 --> 00:17:19,800
If the ref pointer is equal to 0, then hey, the index would also be 0,

348
00:17:19,800 --> 00:17:20,000
right?

349
00:17:20,000 --> 00:17:23,300
Because it's zero and zero so we don't have to do anything, but if the

350
00:17:23,300 --> 00:17:26,599
ref pointer is not equal to 0, then what we would do is we just say

351
00:17:26,599 --> 00:17:27,599
well whatever its pointing

352
00:17:27,800 --> 00:17:30,000
That it's just that guy's storage Index.

353
00:17:30,200 --> 00:17:30,600
Right?

354
00:17:30,600 --> 00:17:32,700
Is what we want to actually store, right?

355
00:17:32,700 --> 00:17:34,300
Really, really straightforward.

356
00:17:34,400 --> 00:17:36,300
Not particularly difficult at.

357
00:17:36,300 --> 00:17:37,200
All right.

358
00:17:37,400 --> 00:17:41,300
So what we would do there is we just say the index equals the storage

359
00:17:41,300 --> 00:17:42,900
index and then we're done.

360
00:17:43,500 --> 00:17:45,100
And so, that's really easy.

361
00:17:45,100 --> 00:17:47,800
When we do the NCM, that's a really easy thing to do and that would

362
00:17:47,800 --> 00:17:51,000
pack our that would, you know, translate our stuff back into storage

363
00:17:51,000 --> 00:17:51,900
and everything's fine.

364
00:17:52,400 --> 00:17:56,400
But the part that I was more concerned about in the my reason I say we

365
00:17:56,400 --> 00:17:57,700
need to Hash table is the

366
00:17:57,800 --> 00:17:58,100
Opposite.

367
00:17:58,100 --> 00:17:59,800
So, when we actually bring an

368
00:18:00,000 --> 00:18:01,700
The in, right?

369
00:18:02,600 --> 00:18:06,700
That's the point where we have to actually start to care about that

370
00:18:07,400 --> 00:18:09,200
that hash table some way of mapping.

371
00:18:11,500 --> 00:18:12,700
because what's going to happen is,

372
00:18:14,300 --> 00:18:17,700
When we have one of our low entities come in right.

373
00:18:18,800 --> 00:18:21,100
And I suppose we should assert here that not supposed to add an

374
00:18:21,100 --> 00:18:21,300
entity.

375
00:18:21,300 --> 00:18:23,000
That doesn't have a source at the moment.

376
00:18:23,000 --> 00:18:25,100
Maybe in the future will allow that.

377
00:18:26,300 --> 00:18:27,600
Yes, we could allow that.

378
00:18:28,300 --> 00:18:28,500
Yeah.

379
00:18:28,500 --> 00:18:28,900
All right.

380
00:18:28,900 --> 00:18:29,400
Never mind.

381
00:18:29,700 --> 00:18:30,600
I'll do that yet.

382
00:18:31,400 --> 00:18:35,400
So when we actually go in here, what I'll do is lock, say if source,

383
00:18:35,400 --> 00:18:38,600
so assuming that there was a source entity, right then what we want to

384
00:18:38,600 --> 00:18:40,400
do is now we want to map

385
00:18:42,100 --> 00:18:46,400
Like things like this sword, we want to map that in and so much.

386
00:18:46,400 --> 00:18:51,100
Like I had the store version store in view reference, right?

387
00:18:51,100 --> 00:18:53,200
I want to have a load as well, right?

388
00:18:53,200 --> 00:18:56,100
I want to have a way to do a load entity reference and that's just a

389
00:18:56,100 --> 00:18:57,000
lot harder.

390
00:18:57,100 --> 00:18:59,100
Because what do we do, right?

391
00:18:59,100 --> 00:19:05,000
All we have is, well, we have the same start, I guess, which is to say

392
00:19:05,400 --> 00:19:08,100
if it's not equal to 0 we have to do something about it.

393
00:19:09,000 --> 00:19:11,100
But what exactly is it that we're going to?

394
00:19:14,300 --> 00:19:15,900
And the answer is, I don't actually know.

395
00:19:18,400 --> 00:19:21,500
Hash table was my first hash table was my first instinct.

396
00:19:21,600 --> 00:19:22,000
Right?

397
00:19:22,300 --> 00:19:25,600
What I want to be able to do is I want to be able to say something

398
00:19:26,700 --> 00:19:28,600
like, okay the ref.

399
00:19:28,600 --> 00:19:28,900
Oops.

400
00:19:28,900 --> 00:19:29,900
That's that's around much.

401
00:19:30,000 --> 00:19:30,400
Sorry.

402
00:19:30,800 --> 00:19:33,200
We only have that we only have the index, right?

403
00:19:33,600 --> 00:19:39,100
So what I want to be able to do is say okay the pointer equals like

404
00:19:39,100 --> 00:19:42,100
get SIM entity from Index, right?

405
00:19:42,100 --> 00:19:47,500
I want to be able to say that and pass whatever that index actually is

406
00:19:47,500 --> 00:19:48,000
and get

407
00:19:48,100 --> 00:19:51,700
I could pointer to an entity that's in the same region, right?

408
00:19:51,900 --> 00:19:54,100
And so, the reason that the reason I was thinking of hash table is

409
00:19:54,100 --> 00:19:57,600
because I have an index, I want a pointer, I could just have a, it's

410
00:19:57,600 --> 00:19:58,900
just a straightforward map.

411
00:19:59,500 --> 00:20:04,500
It's just a mapping from pointer to index and that seems like the

412
00:20:04,500 --> 00:20:06,100
easiest thing to do, right?

413
00:20:06,100 --> 00:20:10,300
That just seems like the easiest way to go and then that will go ahead

414
00:20:10,300 --> 00:20:12,600
and give me that that'll translate that reference and that'll be the

415
00:20:12,600 --> 00:20:13,700
end of it, right?

416
00:20:14,500 --> 00:20:17,500
What I could actually do here to just to double-check

417
00:20:18,500 --> 00:20:21,500
I might want to do something like getting this.

418
00:20:23,700 --> 00:20:28,400
And asserting that the pointer was actually valid because there should

419
00:20:28,400 --> 00:20:30,800
never be a case where you're referencing something and it's not in

420
00:20:30,800 --> 00:20:31,000
there.

421
00:20:31,000 --> 00:20:35,200
And in fact, what we should do is we should all, I think we actually

422
00:20:35,200 --> 00:20:37,700
want to have a policy where we actually pull in.

423
00:20:39,100 --> 00:20:41,900
We probably want to pull things in because thinking about this a

424
00:20:41,900 --> 00:20:45,600
little bit more when you go for a simulation region, anything that

425
00:20:45,600 --> 00:20:48,900
other people were using, you presumably want to pull those things in

426
00:20:48,900 --> 00:20:50,100
as well, right?

427
00:20:51,600 --> 00:20:52,200
That's kind of interesting.

428
00:20:52,400 --> 00:20:52,600
Thing.

429
00:20:54,000 --> 00:20:54,800
So much fun.

430
00:20:54,900 --> 00:20:55,500
I love.

431
00:20:55,500 --> 00:20:58,200
I love programming complex systems because there's so many interesting

432
00:20:58,200 --> 00:20:59,800
things to think about, but if you think about

433
00:21:00,000 --> 00:21:00,300
That right?

434
00:21:00,300 --> 00:21:05,800
Like if I go ahead and do a region query, if I'm referencing somebody

435
00:21:05,900 --> 00:21:10,300
presumably, I'd want to pull them in as well and maybe not anything

436
00:21:10,300 --> 00:21:14,000
that they're referencing because they won't get simulated, perhaps

437
00:21:14,000 --> 00:21:17,200
themselves but we because we already have that notion of simulated,

438
00:21:17,200 --> 00:21:19,200
not simulated that we're going to put in, right?

439
00:21:19,600 --> 00:21:22,800
But just in terms of whether they're referenceable, so that's kind of

440
00:21:22,800 --> 00:21:23,200
interesting.

441
00:21:23,200 --> 00:21:23,700
I don't know.

442
00:21:23,700 --> 00:21:25,400
And I don't know how far we want to crawl out.

443
00:21:25,400 --> 00:21:27,500
We may want to crawl out through all the references.

444
00:21:27,500 --> 00:21:29,400
We may not, I don't know, that's kind of interesting.

445
00:21:30,000 --> 00:21:30,300
Question.

446
00:21:30,300 --> 00:21:33,600
And it depends on how complicated our game logic gets what we want

447
00:21:33,600 --> 00:21:36,000
that answer to be and I'm not exactly sure.

448
00:21:37,500 --> 00:21:38,400
So that'll be interesting.

449
00:21:38,700 --> 00:21:39,700
That'll be very interesting.

450
00:21:40,000 --> 00:21:43,800
So I'm going to leave that there for now actually and that should go

451
00:21:43,800 --> 00:21:46,500
that a search should fire for the sword.

452
00:21:46,500 --> 00:21:50,900
Specifically actually probably I'm thinking.

453
00:21:51,400 --> 00:21:53,700
And so I'm going to go ahead and just let that be for now.

454
00:21:53,700 --> 00:21:56,100
And then we're going to come back and take a look at that in a minute.

455
00:21:56,400 --> 00:21:58,800
But anyway, that's the that's the current situation.

456
00:21:59,800 --> 00:22:04,000
So what I want to do is every time that I add an entity, what I want

457
00:22:04,000 --> 00:22:09,300
to do is basically add that entity and I guess when you add into,

458
00:22:09,300 --> 00:22:11,700
you've got to give it a storage index, that's kind of requirement at

459
00:22:11,700 --> 00:22:12,500
the moment.

460
00:22:13,000 --> 00:22:16,500
I suspect I can't think of any reason why we would allow a zero

461
00:22:16,500 --> 00:22:17,300
storage index.

462
00:22:17,500 --> 00:22:19,900
Those are the entities that don't get written back there.

463
00:22:19,900 --> 00:22:23,700
Only, they only exist inside the same region that doesn't seem logical

464
00:22:23,700 --> 00:22:23,900
to me.

465
00:22:23,900 --> 00:22:27,000
So for now I'm going to go ahead and assert that the storage index is

466
00:22:27,000 --> 00:22:29,400
always something ballad and if we can think of a case,

467
00:22:29,500 --> 00:22:31,600
Later where we did want to change that, that's fine.

468
00:22:31,600 --> 00:22:34,200
But for now I don't think I'm gonna allow that.

469
00:22:34,500 --> 00:22:35,700
So go ahead and do this.

470
00:22:35,800 --> 00:22:39,900
Then, what we want to do is say, all right, for that storage index.

471
00:22:39,900 --> 00:22:44,200
What we want to do is remember that, this is that that's where this

472
00:22:44,200 --> 00:22:44,800
entity is.

473
00:22:45,000 --> 00:22:49,000
So I want to do basically, to store it in that hash table.

474
00:22:49,100 --> 00:22:50,700
So I want to do something like

475
00:22:54,900 --> 00:22:59,900
Map storage index to entity or something like this, right?

476
00:23:00,400 --> 00:23:03,800
And then I passed the same region which will store the hash table, and

477
00:23:03,800 --> 00:23:08,400
I will go ahead and end and pass that storage index.

478
00:23:08,600 --> 00:23:11,900
So then from then on and I guess the end of the pointer right now.

479
00:23:11,900 --> 00:23:13,200
So there's storage under their CD player.

480
00:23:13,300 --> 00:23:15,900
So then from then, on anyone else who asked about the storage index

481
00:23:15,900 --> 00:23:19,100
will get this entity back and so they basically just have that nice

482
00:23:19,100 --> 00:23:20,500
mapping done, right?

483
00:23:20,800 --> 00:23:22,000
So that's pretty trivial.

484
00:23:22,300 --> 00:23:24,500
I don't think that'd be very difficult to write.

485
00:23:24,600 --> 00:23:28,300
So we'll just go ahead and write those two right here, right?

486
00:23:29,200 --> 00:23:36,300
Like so, so we've got a one that returns an entity and takes an index.

487
00:23:38,100 --> 00:23:41,000
Like so that's going to have to take the same region as well, right?

488
00:23:41,000 --> 00:23:42,700
Because it needs to be able to look it up in there.

489
00:23:43,100 --> 00:23:46,000
We could just make this a general entity mapping pointer.

490
00:23:46,000 --> 00:23:47,400
I don't know if we want to do that.

491
00:23:48,000 --> 00:23:48,500
What we'll see.

492
00:23:48,500 --> 00:23:49,800
We can always pull the code out later.

493
00:23:52,100 --> 00:23:53,300
And this one returns nothing.

494
00:23:53,600 --> 00:23:58,200
This one is just a thing that is in charge of yeah, of bringing.

495
00:24:00,400 --> 00:24:01,500
Upsetting it, right?

496
00:24:01,500 --> 00:24:04,300
So it doesn't actually return any values, it just sets it.

497
00:24:04,500 --> 00:24:05,200
And so, same thing.

498
00:24:05,200 --> 00:24:07,200
I'm going to do exactly the same thing I did before with the tile

499
00:24:07,200 --> 00:24:07,800
chunk.

500
00:24:07,800 --> 00:24:10,300
I think I'm going to make a hash table, I feel like that's the easiest

501
00:24:10,300 --> 00:24:10,300
thing.

502
00:24:10,300 --> 00:24:11,700
We want to do a quick look up.

503
00:24:11,900 --> 00:24:13,100
That seems totally fine.

504
00:24:13,600 --> 00:24:17,300
And so, what I want to do is just set my hash table to be some fairly

505
00:24:17,300 --> 00:24:18,000
large thing.

506
00:24:21,200 --> 00:24:22,100
For fast look ups.

507
00:24:23,200 --> 00:24:26,300
And I want it to make sure it would store at least the max entity

508
00:24:26,300 --> 00:24:32,100
count, you know, for this, for this, for this Sim region, right?

509
00:24:32,400 --> 00:24:39,700
So, I guess what I do here is say that we've got I guess a Sim entity

510
00:24:39,700 --> 00:24:40,500
hash

511
00:24:41,900 --> 00:24:44,400
Something like that, same empty cache.

512
00:24:45,000 --> 00:24:48,900
And that's just going to store the index and it's going to store the

513
00:24:48,900 --> 00:24:51,100
the pointer, right?

514
00:24:51,800 --> 00:24:54,500
So essentially, it's actually just one of these but instead of having

515
00:24:54,500 --> 00:24:57,200
it as a union, it's actually both of them.

516
00:24:57,400 --> 00:24:58,900
Right, that makes sense.

517
00:24:59,500 --> 00:25:02,600
So what I'd like to do is I'd like to go ahead and say all right I've

518
00:25:02,600 --> 00:25:04,900
got some number of these in the hash table.

519
00:25:05,200 --> 00:25:09,600
There's the hash table, I guess for now, I'll go ahead and hard-code

520
00:25:09,600 --> 00:25:11,600
this size but I'm not sure.

521
00:25:12,300 --> 00:25:17,800
That I want that to be the case for Evers, if that makes sense.

522
00:25:18,500 --> 00:25:22,100
So we'll go ahead and see and this, this is something that may be

523
00:25:22,100 --> 00:25:24,700
problematic, just because of the clear 20 nature of it.

524
00:25:24,800 --> 00:25:31,400
A little little bit nervous about it because the reason I'm a little

525
00:25:31,400 --> 00:25:37,200
nervous about it, is it probably will end up being better to do some

526
00:25:37,200 --> 00:25:38,200
kind of a

527
00:25:41,100 --> 00:25:44,000
because there's so few lookups like a tree or something that's more

528
00:25:44,000 --> 00:25:44,700
compact.

529
00:25:44,700 --> 00:25:47,500
Might be a more logical way to do it.

530
00:25:47,500 --> 00:25:49,400
Something that requires less clearing.

531
00:25:49,400 --> 00:25:50,200
I don't actually know.

532
00:25:50,300 --> 00:25:52,700
It's just something to think about, but we'll see.

533
00:25:53,000 --> 00:25:55,700
In fact, I can put it to do there to Casey.

534
00:25:56,000 --> 00:25:59,500
Do I really want a hash for this?

535
00:26:00,300 --> 00:26:01,900
Who knows, right?

536
00:26:03,800 --> 00:26:04,500
So,

537
00:26:09,500 --> 00:26:15,100
Okay, when we add these guys in their chances are, I guess we're

538
00:26:15,100 --> 00:26:17,400
probably adding them relatively sequentially.

539
00:26:19,300 --> 00:26:20,200
I think, I don't know.

540
00:26:20,200 --> 00:26:23,800
We might just go ahead and directly use the index into the hash table

541
00:26:23,800 --> 00:26:26,300
for now, because I don't think we need to do anything fancier than

542
00:26:26,300 --> 00:26:27,100
that, so we'll see.

543
00:26:27,600 --> 00:26:31,500
But anyway, when we go ahead and do our begin Sim what I would like to

544
00:26:31,500 --> 00:26:33,800
do is just go ahead and zero that hash out.

545
00:26:33,800 --> 00:26:38,800
I don't know if we actually ever made a function for zeroing things.

546
00:26:39,200 --> 00:26:42,700
It would be nice but I don't know if we ever actually did so we'll

547
00:26:42,700 --> 00:26:43,200
see.

548
00:26:43,300 --> 00:26:44,800
Yeah I don't think we actually ever did.

549
00:26:45,500 --> 00:26:48,600
We did not, I don't think yeah.

550
00:26:48,900 --> 00:26:49,600
So I don't know.

551
00:26:49,600 --> 00:26:51,600
I don't actually know if you can do.

552
00:26:51,900 --> 00:26:55,300
I don't think there's any real good way to do zeroing on this guy.

553
00:26:55,700 --> 00:26:58,000
So I'm going to go ahead and have to write a 0 in function.

554
00:26:58,600 --> 00:26:59,200
So

555
00:27:01,000 --> 00:27:01,500
Excuse me.

556
00:27:02,900 --> 00:27:07,200
Yeah, so when I go ahead and get this guy, I think I'm going to use

557
00:27:07,300 --> 00:27:09,800
internal probing this time, you're embar, we talked about external and

558
00:27:09,800 --> 00:27:13,400
internal training, I should say of our hash table.

559
00:27:13,500 --> 00:27:14,800
I don't know if you guys remember this.

560
00:27:14,800 --> 00:27:15,800
What day are we?

561
00:27:16,400 --> 00:27:17,300
Where's our where's our?

562
00:27:17,900 --> 00:27:19,200
Let's get some Blank Space here.

563
00:27:19,800 --> 00:27:20,300
There we go.

564
00:27:21,300 --> 00:27:23,100
Here's day 64.

565
00:27:23,100 --> 00:27:28,100
So I don't know if you remember this but last time we did a hash

566
00:27:28,100 --> 00:27:32,400
table, we kind of went through it and we said like all right we're

567
00:27:32,400 --> 00:27:36,300
going to fill in a slot of the hash table and then if the another

568
00:27:36,300 --> 00:27:39,100
thing wants to be in that same slot because their hash key is the

569
00:27:39,100 --> 00:27:44,000
same, then what we'll do is we'll just make another sort of one out

570
00:27:44,000 --> 00:27:45,100
here and point to it.

571
00:27:45,100 --> 00:27:46,600
I don't think they do that this time.

572
00:27:46,600 --> 00:27:49,800
I think I'm going to use internal training which basically means that

573
00:27:49,800 --> 00:27:51,300
if it's not found in

574
00:27:51,300 --> 00:27:54,000
This slot, then it will basically go.

575
00:27:54,000 --> 00:27:56,000
It'll step through the hash table.

576
00:27:57,100 --> 00:28:00,500
Looking for an empty space sequentially, right?

577
00:28:00,500 --> 00:28:03,800
So we'll just kind of do this sort of thing and we can go just by

578
00:28:03,800 --> 00:28:05,600
stepping by one if we wanted to.

579
00:28:07,100 --> 00:28:07,900
He's a better thing to do.

580
00:28:07,900 --> 00:28:09,300
Sometimes it step by prime numbers.

581
00:28:09,300 --> 00:28:11,800
There's all kinds of theory to Hash table stuff again, right now,

582
00:28:11,800 --> 00:28:13,400
that's all performance stuff.

583
00:28:13,400 --> 00:28:14,800
We don't really care about that right now.

584
00:28:15,300 --> 00:28:18,100
So for now we're just going to do the simplest possible thing and then

585
00:28:18,100 --> 00:28:20,800
later will actually try to figure out it won't.

586
00:28:20,800 --> 00:28:24,400
If we even determine that, we do want to Hash here, we'll actually go

587
00:28:24,400 --> 00:28:26,700
ahead and figure out what to do performance wise for

588
00:28:27,400 --> 00:28:31,500
All right, so what we want to do is we're going to look up our index.

589
00:28:31,500 --> 00:28:33,100
So let's say we have a hash value for right now.

590
00:28:33,100 --> 00:28:35,300
We're going to make it equal to the index so that's fine.

591
00:28:36,000 --> 00:28:38,800
And then what I'm going to do is I'm going to go ahead and step

592
00:28:38,800 --> 00:28:45,800
through like so and look in the hash to try and find one of these guys

593
00:28:45,800 --> 00:28:46,900
to try and find a match.

594
00:28:46,900 --> 00:28:52,000
And also again index can't really be equal to 0 here, right?

595
00:28:52,400 --> 00:28:56,700
Because we're not allowing the we always say that.

596
00:28:56,800 --> 00:29:00,200
At low end of the index is, like, the storage index is 0 means null.

597
00:29:00,200 --> 00:29:04,900
So you shouldn't ever be looking up a know, what we could do to make

598
00:29:04,900 --> 00:29:09,600
things easier, I guess is if, if we wanted to, we could also say that

599
00:29:09,600 --> 00:29:12,900
this, this gets them into D from index, always just automatically

600
00:29:12,900 --> 00:29:17,000
returns a 0 in the case where it was Zero, you know, we do this

601
00:29:17,000 --> 00:29:17,900
basically, right?

602
00:29:20,500 --> 00:29:22,100
And maybe that's a better way to go.

603
00:29:22,200 --> 00:29:27,900
So basically, this function just becomes that write something like

604
00:29:27,900 --> 00:29:28,200
this.

605
00:29:31,300 --> 00:29:32,800
Yeah, that kind of thing.

606
00:29:33,500 --> 00:29:35,900
I'm not actually going to overwrite directly there because I'd rather

607
00:29:35,900 --> 00:29:38,700
since it's a union, I'd rather be able to still see what the index is

608
00:29:38,700 --> 00:29:39,500
when we're in the debugger.

609
00:29:39,500 --> 00:29:40,900
So I'm going to leave it like that for now.

610
00:29:41,700 --> 00:29:42,100
But yeah.

611
00:29:42,100 --> 00:29:44,000
So this gets immunity from index.

612
00:29:44,000 --> 00:29:47,300
Will handle the case where index is 0, if an x is 0, it will just

613
00:29:47,300 --> 00:29:49,100
return a null pointer.

614
00:29:49,100 --> 00:29:52,000
So that way, we still have the ability to pass nose through directly,

615
00:29:52,000 --> 00:29:55,300
which I like so, we'll go ahead and get the hash value will call, just

616
00:29:55,300 --> 00:29:56,500
call that the index for now.

617
00:29:57,200 --> 00:29:59,600
And then we'll go ahead and say our probe

618
00:30:00,100 --> 00:30:02,900
Is going to be equal to the hash value or actually, are I guess we'll

619
00:30:02,900 --> 00:30:04,000
call this our offset.

620
00:30:04,400 --> 00:30:05,700
I'll call that zero.

621
00:30:05,900 --> 00:30:10,000
I'll step through the entire array essentially, right?

622
00:30:10,900 --> 00:30:15,000
Whatever that hash is worth of offsets stepping through.

623
00:30:15,200 --> 00:30:19,700
And then the the place that we're going to look up in the hash is just

624
00:30:19,700 --> 00:30:22,700
going to be the hash Value Plus the offset.

625
00:30:23,400 --> 00:30:27,300
And then we're going to go ahead and and off that mask.

626
00:30:27,300 --> 00:30:29,800
So like just just wrap it into the table.

627
00:30:30,000 --> 00:30:31,800
Put it into the table properly, right?

628
00:30:32,300 --> 00:30:35,100
And again, that just stands with that array count.

629
00:30:38,300 --> 00:30:39,100
- 1.

630
00:30:39,300 --> 00:30:42,800
This is all stuff we've done before, but just in case just to refresh

631
00:30:42,800 --> 00:30:44,300
your memory again.

632
00:30:44,700 --> 00:30:46,800
Basically, what I'm doing here is I'm saying, all right, I'm going to

633
00:30:46,800 --> 00:30:48,900
look up into this hash table, right?

634
00:30:49,200 --> 00:30:50,900
And I want to look up.

635
00:30:51,500 --> 00:30:53,300
I want to basically search through the hash table.

636
00:30:53,300 --> 00:30:56,800
So, most of the time I'm hoping that I hit it the first time, so this

637
00:30:56,800 --> 00:30:59,300
Loop won't really loop at all right.

638
00:30:59,400 --> 00:31:01,200
It'll just hit the first time and then return.

639
00:31:02,100 --> 00:31:06,500
But in case it doesn't, it has to look through sequential values and

640
00:31:06,500 --> 00:31:07,900
again, we could make it probe

641
00:31:08,000 --> 00:31:10,000
Something other here, like a prime number or something like that.

642
00:31:10,000 --> 00:31:12,400
Like I said, is there's more hash table Theory stuff.

643
00:31:12,500 --> 00:31:15,000
Maybe we'll get into a little bit later, but for right now, we'll

644
00:31:15,000 --> 00:31:18,700
just, we'll just probe by one's looking through the hash table to see

645
00:31:18,700 --> 00:31:21,800
if we can find what we're, what we're looking for.

646
00:31:21,800 --> 00:31:24,300
In order to do that, I need to search the whole hash table, right?

647
00:31:24,500 --> 00:31:27,200
So, I need to make sure that I would check every individual item in

648
00:31:27,200 --> 00:31:28,000
the whole hash table.

649
00:31:28,000 --> 00:31:30,600
If for some reason, the hash table got totally filled which is a

650
00:31:30,600 --> 00:31:32,600
catastrophic case that we don't ever want to happen.

651
00:31:32,700 --> 00:31:34,900
So we'd always make sure I have tables too big to ever have that

652
00:31:34,900 --> 00:31:37,500
happen but point being that's the correct way to write it.

653
00:31:38,400 --> 00:31:42,100
So after we figure out where we're probing, we're starting at some

654
00:31:42,100 --> 00:31:43,700
place in the array, right?

655
00:31:43,700 --> 00:31:45,900
And when we get to the end of the array, we want to wrap back around

656
00:31:45,900 --> 00:31:48,100
the beginning of the re because we didn't start at the beginning of

657
00:31:48,100 --> 00:31:49,300
the race and we need to check their.

658
00:31:49,900 --> 00:31:54,800
So we're going to do is we're going to mask off the sort of just the

659
00:31:54,800 --> 00:31:55,800
those High bits.

660
00:31:55,900 --> 00:31:58,100
And we're only going to use the bits, that would actually map into the

661
00:31:58,100 --> 00:31:58,600
array.

662
00:31:59,400 --> 00:32:02,200
And so, right now, like, for example, I put a thing here too.

663
00:32:02,200 --> 00:32:04,900
It just says must be a power of 2.

664
00:32:06,000 --> 00:32:09,000
Because we're using that ending off trick obviously, if we're just

665
00:32:09,000 --> 00:32:11,900
using and enough to wrap into the table that only works for the power

666
00:32:11,900 --> 00:32:16,600
of to size, because we're going to check all of the values that those

667
00:32:16,600 --> 00:32:19,300
bottom B could possibly be set to which obviously means it's power of

668
00:32:19,300 --> 00:32:19,600
2.

669
00:32:20,300 --> 00:32:24,400
And so what we want to do here is just generate that that simple Mass

670
00:32:24,400 --> 00:32:30,400
from the power of to 4096 - one is 4095 that's the bottom 11 bits set.

671
00:32:30,400 --> 00:32:31,700
I believe right?

672
00:32:32,500 --> 00:32:35,500
And and then we're going to not that because

673
00:32:35,600 --> 00:32:37,700
We want to wait.

674
00:32:37,700 --> 00:32:38,900
No, we don't need to not that.

675
00:32:40,000 --> 00:32:40,500
Never mind.

676
00:32:42,000 --> 00:32:43,200
That's the way it should go, right?

677
00:32:43,400 --> 00:32:46,600
We want to subtract one from that because that will set the bottom B.

678
00:32:46,600 --> 00:32:47,800
And that's the only bits that we want.

679
00:32:47,800 --> 00:32:48,900
So we don't actually want the not there.

680
00:32:48,900 --> 00:32:50,500
That was my bad, shouldn't had enough.

681
00:32:50,500 --> 00:32:51,300
So I don't think so.

682
00:32:52,500 --> 00:32:56,500
Hard to say, I make mistakes on stream all the time, so yeah, it

683
00:32:56,500 --> 00:32:57,000
happens.

684
00:32:57,000 --> 00:32:59,900
Anyway, so what I'm going to do here is I'm going to pull out

685
00:33:00,100 --> 00:33:02,800
This Sim entity hash right now.

686
00:33:02,800 --> 00:33:05,300
So this is the hash value or let's try.

687
00:33:05,300 --> 00:33:07,100
This is the entry I should say.

688
00:33:09,100 --> 00:33:13,500
So I'm going to grab that entry and going to grab it like this.

689
00:33:14,300 --> 00:33:17,700
I'm going to look at the entry and I'm going to see if the entry index

690
00:33:18,300 --> 00:33:25,900
equals the index that we're looking for, assuming it does.

691
00:33:26,000 --> 00:33:29,800
I'm going to set the result equal to whatever the pointer is and I'm

692
00:33:29,800 --> 00:33:30,800
going to break out of the loop.

693
00:33:32,700 --> 00:33:36,500
Otherwise I'm going to assert that the entry index is not equal to 0.

694
00:33:37,400 --> 00:33:40,200
Because if the entry index was equal to 0, that means that we've hit

695
00:33:40,200 --> 00:33:41,500
an empty, hash lot.

696
00:33:41,600 --> 00:33:42,300
And

697
00:33:44,800 --> 00:33:48,400
At the moment that is not supposed to be allowed, right?

698
00:33:48,900 --> 00:33:51,100
Like we're actually not supposed to, we're always supposed to be able

699
00:33:51,100 --> 00:33:51,900
to find it here.

700
00:33:52,400 --> 00:33:54,000
So, yeah.

701
00:33:54,100 --> 00:33:57,400
So basically what we want to do is this is the place and we'll put up

702
00:33:57,400 --> 00:33:58,500
to do there, right?

703
00:33:58,900 --> 00:34:03,200
This is the place where we would add, oh well, you know what?

704
00:34:03,300 --> 00:34:04,600
Let's just go ahead and do that.

705
00:34:04,700 --> 00:34:05,800
Let's just go ahead and add it.

706
00:34:05,900 --> 00:34:10,800
So if at this point, the enteric the EM entry index is zero meaning,

707
00:34:10,800 --> 00:34:11,800
we've hit an empty slot.

708
00:34:11,800 --> 00:34:13,699
Meaning that this hasn't been stored before.

709
00:34:14,400 --> 00:34:15,600
We'll just go ahead and store it.

710
00:34:17,800 --> 00:34:18,300
Right.

711
00:34:18,400 --> 00:34:21,600
That will be the case where we actually add the entity in.

712
00:34:23,000 --> 00:34:28,400
So do you want to do there is kind of a little tricky, right?

713
00:34:28,900 --> 00:34:34,000
What we'd want to do there is we would want to be able to call this

714
00:34:34,000 --> 00:34:35,900
directly from their, right.

715
00:34:35,900 --> 00:34:39,800
We'd want to be able to call this call where we just do the identity

716
00:34:40,400 --> 00:34:41,100
right here.

717
00:34:41,300 --> 00:34:44,000
We'd want to do entry.

718
00:34:47,699 --> 00:34:53,300
Index equals index entry pointer equals, you know, identity and then

719
00:34:53,300 --> 00:34:59,000
results equals entry pointer break.

720
00:34:59,000 --> 00:35:00,600
So we just make a new one right there.

721
00:35:01,200 --> 00:35:04,500
And what we want to do here is we want to be able to pass.

722
00:35:05,800 --> 00:35:08,200
I guess these are actually technically storage index as well.

723
00:35:08,800 --> 00:35:11,700
What we'd want to do here is we want to actually be able to pass

724
00:35:14,600 --> 00:35:19,000
Those storage indexes and the source entity into this.

725
00:35:19,000 --> 00:35:23,100
So like or rather a way to get the source entity.

726
00:35:23,300 --> 00:35:26,800
So that in this particular case, when it comes back and it didn't

727
00:35:26,800 --> 00:35:30,100
actually exist, it would get pulled in in the process of actually

728
00:35:30,100 --> 00:35:31,800
going to get the entity right.

729
00:35:34,300 --> 00:35:38,400
Maybe that's a little bit too much to do in that call.

730
00:35:38,700 --> 00:35:42,500
So the other way I could do it is make this guy, this gets em entity

731
00:35:42,500 --> 00:35:46,100
from index that could actually just return the same entity.

732
00:35:46,100 --> 00:35:51,300
The cement entity hash lot that it found that actually seems like a,

733
00:35:51,600 --> 00:35:54,800
that actually seems like a pretty good way to do that as well

734
00:35:54,800 --> 00:35:55,100
actually.

735
00:35:55,100 --> 00:35:56,200
Now that I think about it.

736
00:35:56,800 --> 00:35:58,600
Yeah, that's that's not bad.

737
00:36:00,100 --> 00:36:00,600
Right.

738
00:36:00,700 --> 00:36:02,600
So basically if there's a similarity, hash

739
00:36:05,500 --> 00:36:07,600
Slot there, then that's going to.

740
00:36:07,800 --> 00:36:10,100
Yeah, I like this better.

741
00:36:10,100 --> 00:36:13,600
I think there was too much stuff going on in this routine because it

742
00:36:13,600 --> 00:36:16,600
what you wanted to do inside here would probably depend on who was

743
00:36:16,600 --> 00:36:18,900
actually looking up the thing and it just seemed like I was getting a

744
00:36:18,900 --> 00:36:21,800
little bit too, too much stuff packed in there.

745
00:36:22,000 --> 00:36:25,200
So what I'd rather do is say, alright let's go ahead and say that this

746
00:36:25,700 --> 00:36:29,500
gets back the hash lot itself and then the person on the outside can

747
00:36:29,500 --> 00:36:31,400
decide what they want to do with that hash lat.

748
00:36:31,400 --> 00:36:33,800
So in this case, if the hash equals

749
00:36:34,700 --> 00:36:39,300
Then what I would do is I just break out right on there and the result

750
00:36:39,300 --> 00:36:43,600
again equals the entry directly like so right.

751
00:36:44,100 --> 00:36:49,500
So I guess what we could say is if it's 0 or it's the storage Index,

752
00:36:49,700 --> 00:36:50,300
right?

753
00:36:51,900 --> 00:36:55,500
If either of those two things are true, then the probe is done bail

754
00:36:55,800 --> 00:36:56,500
right?

755
00:36:57,200 --> 00:36:59,800
And that seems pretty good to me.

756
00:37:01,500 --> 00:37:03,800
Yeah, yeah.

757
00:37:03,900 --> 00:37:07,300
So I could even get rid of this as well because this would just work

758
00:37:08,300 --> 00:37:10,500
the first empty index would return it.

759
00:37:10,800 --> 00:37:13,900
And so maybe I'm going to go back to my original thinking and say that

760
00:37:13,900 --> 00:37:17,900
storage index has to be something and then that other stuff gets

761
00:37:17,900 --> 00:37:19,100
handled out here.

762
00:37:19,800 --> 00:37:21,000
Okay, I like that.

763
00:37:21,300 --> 00:37:21,500
So,

764
00:37:21,700 --> 00:37:26,400
So when we call gets him into the get SIM entity from index, what we

765
00:37:26,400 --> 00:37:30,500
want to do now is we want to be able to pull those things in

766
00:37:30,500 --> 00:37:32,700
recursively, basically, right?

767
00:37:33,000 --> 00:37:37,400
So what we want to do is we want to have more things in here.

768
00:37:37,400 --> 00:37:41,200
When we're doing our identity call, we want to be able to do more

769
00:37:41,200 --> 00:37:42,100
stuff in here.

770
00:37:42,200 --> 00:37:44,300
Right now.

771
00:37:44,300 --> 00:37:47,200
Of course what I will do is let me before I go and handle some more of

772
00:37:47,200 --> 00:37:47,400
that.

773
00:37:47,400 --> 00:37:51,500
Let me go ahead and just put some stuff together here that's like

774
00:37:51,600 --> 00:37:52,900
Sort of a destination hash.

775
00:37:53,300 --> 00:37:57,100
So when we're storing somebody, we want to go ahead and do this,

776
00:37:57,100 --> 00:37:57,400
right?

777
00:37:57,400 --> 00:37:59,000
Where we do the same thing again.

778
00:38:00,100 --> 00:38:02,800
And this is probably in aptly named at this point.

779
00:38:03,100 --> 00:38:08,200
This is actually get, you know hash from Storage index.

780
00:38:08,400 --> 00:38:09,500
That's actually what it is.

781
00:38:10,100 --> 00:38:12,300
So we'll call the get the hash from Storage index.

782
00:38:12,300 --> 00:38:15,900
That gets us back the hash entry that we're looking for.

783
00:38:17,500 --> 00:38:20,900
And then, what we want to do is we want to make sure we want to

784
00:38:20,900 --> 00:38:24,500
basically assert that if someone's telling us to map the storage entry

785
00:38:24,500 --> 00:38:27,200
in and maybe, you know what, maybe we don't even care.

786
00:38:27,500 --> 00:38:31,000
So all we have to do is basically say, all right, if they've stored it

787
00:38:31,000 --> 00:38:32,100
before, that's fine.

788
00:38:32,300 --> 00:38:36,700
So let's assert that the, the index that's in the, the entry equals

789
00:38:36,700 --> 00:38:39,900
our storage index or it's null, right?

790
00:38:39,900 --> 00:38:45,300
So either, there was nothing in this hash lot before the one that

791
00:38:45,300 --> 00:38:47,000
we're trying to set or

792
00:38:48,300 --> 00:38:51,600
It's equal to the one that we're trying to put in there, right?

793
00:38:51,600 --> 00:38:54,300
And that'll just allow us to overset entities, right?

794
00:38:54,300 --> 00:38:58,000
It allows to overset Hash slots which seems fine to me as well.

795
00:38:58,500 --> 00:38:59,800
So what I basically do is

796
00:39:00,000 --> 00:39:02,400
No, at that point will initialize it.

797
00:39:03,300 --> 00:39:05,400
Like so like that.

798
00:39:05,500 --> 00:39:05,800
Oops.

799
00:39:07,200 --> 00:39:12,000
And so that actually will put an entry into our hash table and say now

800
00:39:12,000 --> 00:39:18,000
whenever whenever anyone asks where this storage index is entity

801
00:39:18,000 --> 00:39:21,500
pointer wise will give him this back and off we go, right?

802
00:39:21,900 --> 00:39:23,600
So that seems pretty easy.

803
00:39:24,400 --> 00:39:27,300
And now that this is the, the trickier part like I was saying, store,

804
00:39:27,300 --> 00:39:27,900
any references?

805
00:39:27,900 --> 00:39:30,200
Easy load entity reference is going to be the hard one.

806
00:39:30,400 --> 00:39:32,300
Basically, what we want to do here again.

807
00:39:32,300 --> 00:39:36,100
Same thing we were doing before we're basically we grab out.

808
00:39:36,900 --> 00:39:38,900
That ref index but now let's actually check.

809
00:39:39,200 --> 00:39:42,300
Let's make sure that ref index is actually something we care about

810
00:39:42,300 --> 00:39:42,700
now.

811
00:39:43,100 --> 00:39:47,300
So assuming that ref index actually is indexing into an entity.

812
00:39:55,300 --> 00:39:55,800
We're going to get out.

813
00:39:55,800 --> 00:39:56,600
Its hash lat.

814
00:39:57,900 --> 00:40:02,500
And then we're going to see, okay, we're going to, we're going to

815
00:40:02,500 --> 00:40:05,300
basically assume that either.

816
00:40:08,800 --> 00:40:10,500
I'm trying to think of how exactly we want to do this.

817
00:40:10,500 --> 00:40:14,200
It's a little fuzzy in my head right now either.

818
00:40:15,600 --> 00:40:18,600
It's already there because it's already been loaded or, it's not there

819
00:40:18,600 --> 00:40:21,000
yet, and we would like to load it, right?

820
00:40:21,300 --> 00:40:22,000
That makes sense.

821
00:40:29,300 --> 00:40:30,600
So, this is going to create.

822
00:40:31,900 --> 00:40:34,800
A little bit of a recursion here, I'm not sure if I'm thrilled about

823
00:40:34,800 --> 00:40:38,600
that recursion and I'm not sure if maybe we should change it into

824
00:40:38,700 --> 00:40:40,600
something a little less recursive.

825
00:40:41,700 --> 00:40:45,200
But for now, we'll leave it recursive and we'll see how that goes, I

826
00:40:45,200 --> 00:40:48,700
guess, I guess.

827
00:40:49,500 --> 00:40:51,500
So, if I want to load an entity reference

828
00:40:53,600 --> 00:40:57,800
Basically, what that would do is it'll get out that entry if the entry

829
00:40:57,800 --> 00:41:03,500
pointer is null, then we need to load a new entity into their right?

830
00:41:03,500 --> 00:41:06,200
But if it's not then we're pretty much good to go.

831
00:41:06,200 --> 00:41:10,900
And I could also say, okay, so basically the ref pointer equals the

832
00:41:10,900 --> 00:41:12,400
entry pointer, right?

833
00:41:13,100 --> 00:41:15,500
So basically, the case that I have to worry about is the case where

834
00:41:15,500 --> 00:41:18,200
the entry pointer equals no, which means we tried to reference entity

835
00:41:18,200 --> 00:41:20,100
like the sort, but the sword wasn't in there yet.

836
00:41:21,600 --> 00:41:22,100
Excuse me.

837
00:41:22,800 --> 00:41:25,300
So, what I want to do in that case, right?

838
00:41:25,400 --> 00:41:28,800
Because I want to go ahead and pull that sword in any way.

839
00:41:29,500 --> 00:41:31,100
So I want to basically say here.

840
00:41:31,100 --> 00:41:31,500
All right.

841
00:41:31,500 --> 00:41:34,500
Well then, we're going to keep calling down will call down into their

842
00:41:34,600 --> 00:41:35,100
right.

843
00:41:37,200 --> 00:41:42,000
With the storage index of of this guy, right?

844
00:41:42,000 --> 00:41:47,000
The ref index and I want the low entity that corresponds to that

845
00:41:47,000 --> 00:41:47,700
Index, right?

846
00:41:47,700 --> 00:41:51,500
Which I can get, I think we have a get low and do we have Get Low

847
00:41:51,500 --> 00:41:51,900
entity?

848
00:41:51,900 --> 00:41:55,700
Yeah, what we want to do is basically do this call, right?

849
00:41:56,400 --> 00:41:57,700
And so this call

850
00:41:59,400 --> 00:41:59,900
which we've actually,

851
00:42:00,000 --> 00:42:04,900
We actually want to put in the H file so we can call it from other

852
00:42:04,900 --> 00:42:06,600
places that make sense.

853
00:42:06,800 --> 00:42:08,700
So that would go in here for now.

854
00:42:08,700 --> 00:42:13,400
I guess, so what I want to do here is I want to get that low entity

855
00:42:13,500 --> 00:42:16,600
that the one that corresponds to this index.

856
00:42:17,200 --> 00:42:17,700
There we go.

857
00:42:19,100 --> 00:42:20,600
So yeah off we go.

858
00:42:20,900 --> 00:42:22,100
So I'm going to go ahead and get that.

859
00:42:22,100 --> 00:42:27,100
I need the world's or I guess I need the game State there and I really

860
00:42:27,100 --> 00:42:29,800
wanted these to be I really would have preferred

861
00:42:30,000 --> 00:42:33,100
And again, that they were stored in the world but they're not stored

862
00:42:33,100 --> 00:42:35,200
in the world yet, so I guess that's just the way it's going to have to

863
00:42:35,200 --> 00:42:36,500
go, which is fine.

864
00:42:37,000 --> 00:42:40,200
It just means that basically, these guys will have to take the game

865
00:42:40,200 --> 00:42:44,700
State instead of just taking the the world.

866
00:42:45,200 --> 00:42:48,000
That's something I want to get rid of, but we got so many things that

867
00:42:48,000 --> 00:42:51,700
we have to do to do this full thing correctly just to put everything

868
00:42:51,700 --> 00:42:53,800
into the right places and have it work correctly.

869
00:42:54,700 --> 00:42:57,600
I just don't want to deal with it at the moment, one thing at a time.

870
00:42:58,500 --> 00:43:01,200
So anyway, all right, so I added the entity.

871
00:43:02,500 --> 00:43:07,200
So now when we do that reference mapping which we're going to do in

872
00:43:07,200 --> 00:43:08,100
here, right?

873
00:43:08,200 --> 00:43:13,800
So we do that copy in we have to do map storage unit that saves this

874
00:43:13,800 --> 00:43:14,600
particular guy.

875
00:43:14,600 --> 00:43:18,800
In fact I guess this should be done immediately upon entry so as soon

876
00:43:18,800 --> 00:43:22,800
as we map it as soon as we have it we map it like so on.

877
00:43:24,400 --> 00:43:25,600
Yeah that looks good to me.

878
00:43:26,100 --> 00:43:26,700
So anyway

879
00:43:29,300 --> 00:43:32,100
What we'd want to do is after we do that romping, we now want to

880
00:43:32,100 --> 00:43:34,600
translate that sort Index, right?

881
00:43:34,600 --> 00:43:38,800
So we want to do a load entity reference to load the sword index,

882
00:43:39,100 --> 00:43:43,300
translate it from the olds from the old kind of reference from the

883
00:43:43,300 --> 00:43:45,300
index into a pointer, right?

884
00:43:45,500 --> 00:43:46,900
So we're going to go ahead and do that.

885
00:43:47,400 --> 00:43:47,900
Like so,

886
00:43:49,500 --> 00:43:50,400
Oops not source.

887
00:43:50,600 --> 00:43:54,900
So this is entity sword like that and when we do that, we have to pass

888
00:43:54,900 --> 00:43:56,300
it this stuff.

889
00:43:56,300 --> 00:43:59,000
Now unfortunately, that's just the way that goes.

890
00:43:59,500 --> 00:44:03,700
So now what this does is this will call at entity recursively

891
00:44:03,700 --> 00:44:07,800
basically to pull in any other references that we find.

892
00:44:07,800 --> 00:44:11,900
So we're kind of spidering outwards grabbing new things into the

893
00:44:11,900 --> 00:44:13,500
simulation set as we go.

894
00:44:14,300 --> 00:44:16,800
And I probably forgot a bunch of things there because we've landed a

895
00:44:16,800 --> 00:44:18,600
bunch of things at once.

896
00:44:19,700 --> 00:44:23,300
But that is just, that's just the way it goes sometimes.

897
00:44:24,100 --> 00:44:25,800
So let's see.

898
00:44:27,000 --> 00:44:32,900
Hash Value Plus offset and array count - one less.

899
00:44:33,500 --> 00:44:34,100
What is the problem?

900
00:44:34,200 --> 00:44:36,200
Oh, sorry we go.

901
00:44:36,300 --> 00:44:42,200
It's got a print size that put see here, ref is not a member of sim

902
00:44:42,200 --> 00:44:43,400
region.

903
00:44:43,400 --> 00:44:44,700
I agree with that.

904
00:44:45,300 --> 00:44:49,200
So what we need here is the game State, I think, and Annie

905
00:44:49,400 --> 00:44:51,600
Not take three arguments, that's true.

906
00:44:51,600 --> 00:44:56,600
It takes game state that we had to pass their this is as well.

907
00:44:56,600 --> 00:44:59,100
Same thing, same entity.

908
00:45:00,300 --> 00:45:03,700
Story to dereference store, entity reference.

909
00:45:06,800 --> 00:45:07,400
There we go.

910
00:45:08,000 --> 00:45:09,300
That's not supposed to be an arrow.

911
00:45:09,300 --> 00:45:12,100
These are basically just a little typos that we have to clean up that

912
00:45:12,100 --> 00:45:13,700
they're particularly interested in going on here.

913
00:45:14,500 --> 00:45:15,300
And then finally.

914
00:45:15,300 --> 00:45:19,200
Okay, so now we're actually in a position to do this properly as well.

915
00:45:19,700 --> 00:45:20,100
Right.

916
00:45:20,100 --> 00:45:21,400
We've got a Sim entity.

917
00:45:22,700 --> 00:45:28,500
And what we want to do here is we want to go ahead and actually do we,

918
00:45:28,700 --> 00:45:32,000
where we have our load entity reference, right?

919
00:45:32,300 --> 00:45:36,600
But we'd also like to do, instead of the load we'd like to have a

920
00:45:36,600 --> 00:45:38,100
similar version of this, right?

921
00:45:39,100 --> 00:45:42,300
Which is basically like, you know, check entity reference or something

922
00:45:42,300 --> 00:45:51,900
like this or or like get entity by index or something like that by

923
00:45:51,900 --> 00:45:52,300
storage in.

924
00:45:52,500 --> 00:45:55,100
X, something like that.

925
00:45:55,300 --> 00:45:59,500
Where we can basically call do a check, just to see if it's in there,

926
00:45:59,800 --> 00:46:05,600
if that makes any sense, just seeing purely if it happens to exist in

927
00:46:05,600 --> 00:46:06,200
the set.

928
00:46:06,400 --> 00:46:10,400
And so, basically, what that would do is, we'd say, alright, you pass

929
00:46:10,400 --> 00:46:15,200
the same region, you pass the storage index and all it does, is it

930
00:46:15,200 --> 00:46:15,700
straight up?

931
00:46:15,700 --> 00:46:20,600
Does the check, it grabs the entry out and just returns you whatever

932
00:46:20,600 --> 00:46:21,600
the entries pointer.

933
00:46:21,600 --> 00:46:22,300
Was it?

934
00:46:22,500 --> 00:46:23,600
Doesn't actually matter.

935
00:46:25,500 --> 00:46:28,800
Whether it's null or not because you're going to Chuck, right?

936
00:46:29,100 --> 00:46:29,800
That makes sense.

937
00:46:30,100 --> 00:46:32,500
So now we can actually go ahead and Implement that here.

938
00:46:32,900 --> 00:46:38,600
The camera following entity is just get ND by storage index and we

939
00:46:38,600 --> 00:46:45,500
just go ahead and ask it like so for the camera following entity

940
00:46:45,500 --> 00:46:46,900
Index, right?

941
00:46:46,900 --> 00:46:50,700
So if that ended, if the entity that we are, following happens to be

942
00:46:50,700 --> 00:46:54,400
in the same region, then we'll do the update for it.

943
00:46:54,400 --> 00:46:55,200
If it doesn't then

944
00:46:55,300 --> 00:46:57,500
You don't and we don't really have to do anything more specific than

945
00:46:57,500 --> 00:46:59,100
that that just works.

946
00:46:59,300 --> 00:46:59,900
I think.

947
00:47:01,100 --> 00:47:02,900
Yeah I think there's really nothing else to it.

948
00:47:03,200 --> 00:47:07,200
So all we have to do is say all right, the camera following entity, we

949
00:47:07,200 --> 00:47:11,900
grabbed it out, this doesn't actually have to happen on every Index.

950
00:47:11,900 --> 00:47:12,500
Right?

951
00:47:14,000 --> 00:47:17,300
In fact, you know what, we don't even have, this is actually easier

952
00:47:17,500 --> 00:47:17,800
really.

953
00:47:17,800 --> 00:47:20,000
All we have to do is do this check.

954
00:47:20,000 --> 00:47:20,600
This is stupid.

955
00:47:20,600 --> 00:47:21,300
I don't even know why.

956
00:47:21,300 --> 00:47:23,500
I just wrote that call, we don't maybe don't even need that.

957
00:47:23,500 --> 00:47:25,100
Call will see really

958
00:47:25,200 --> 00:47:27,100
All we have to do is just go.

959
00:47:27,100 --> 00:47:30,900
Oh, is the entity that we just wrote out, right?

960
00:47:31,000 --> 00:47:35,400
Is this guy's storage index equal to the camera the one that we're

961
00:47:35,400 --> 00:47:36,900
following, that's it.

962
00:47:37,000 --> 00:47:38,000
Why are we even looking the hash table?

963
00:47:38,000 --> 00:47:42,900
We don't need to write if it is then what we want to do is move the

964
00:47:42,900 --> 00:47:44,100
camera, right?

965
00:47:44,100 --> 00:47:48,600
So entity or I guess stored right?

966
00:47:51,300 --> 00:47:53,100
Where's that piece toward P?

967
00:47:53,500 --> 00:47:55,100
Dot chunk Z and then it just goes

968
00:47:55,300 --> 00:47:56,600
Head and does that, right?

969
00:47:56,700 --> 00:47:57,300
That's it.

970
00:47:58,500 --> 00:47:59,800
That's really simple kind.

971
00:48:00,000 --> 00:48:00,500
Nice to.

972
00:48:00,500 --> 00:48:01,300
That's kind of cool.

973
00:48:01,300 --> 00:48:03,100
How that worked out, that's it.

974
00:48:03,100 --> 00:48:04,300
Nothing else to it out.

975
00:48:04,300 --> 00:48:04,600
Think.

976
00:48:04,600 --> 00:48:11,300
Yeah, so set camera, set camera doesn't we don't even need such camera

977
00:48:11,300 --> 00:48:11,900
anymore, right?

978
00:48:11,900 --> 00:48:14,300
Because we've done everything now, all we need to do is just remember

979
00:48:14,300 --> 00:48:17,100
that the camera is at a different location, but that's it.

980
00:48:17,300 --> 00:48:20,100
The set camera call was there to do all of this mapping stuff, but

981
00:48:20,100 --> 00:48:21,800
now, we're just doing that during the same stuff.

982
00:48:21,900 --> 00:48:25,100
So, as far as I know set camera is just not, do we already delete it?

983
00:48:25,300 --> 00:48:27,100
Yes, probably just gone, right?

984
00:48:27,500 --> 00:48:28,500
So that's totally fine.

985
00:48:28,700 --> 00:48:30,000
So we can get rid of

986
00:48:30,000 --> 00:48:31,900
Is that camera that camera just gone?

987
00:48:32,000 --> 00:48:33,800
Nobody cares about that camera at all.

988
00:48:34,300 --> 00:48:37,500
We don't care about any of this stuff that's just that just goes away.

989
00:48:37,900 --> 00:48:39,800
Although I didn't actually couldn't read that because by my head let

990
00:48:39,800 --> 00:48:40,600
me actually read it.

991
00:48:40,900 --> 00:48:43,400
Mapping tiles and stairs into the entity set.

992
00:48:43,500 --> 00:48:45,900
Yeah, well, we'll know to do that when we actually go to implement

993
00:48:45,900 --> 00:48:47,200
them, we don't really need to do there.

994
00:48:48,300 --> 00:48:49,800
All right, so that just does all that.

995
00:48:49,900 --> 00:48:52,400
And that's, that's just, that's just fine.

996
00:48:52,400 --> 00:48:54,000
It's just done done.

997
00:48:55,600 --> 00:48:59,700
So I think this is mostly just going to be mapping to the Sim the fact

998
00:48:59,700 --> 00:48:59,900
that

999
00:49:00,000 --> 00:49:01,500
Scott that Sim pointer now.

1000
00:49:01,700 --> 00:49:02,400
Right.

1001
00:49:04,000 --> 00:49:06,400
But I'm thinking that probably the way that will do this is we might

1002
00:49:06,400 --> 00:49:09,700
actually just add stuff in the same entity eventually as well.

1003
00:49:10,200 --> 00:49:11,700
But again, one thing at a time.

1004
00:49:11,900 --> 00:49:14,800
So really all this stuff is just some dot, right.

1005
00:49:15,700 --> 00:49:19,800
In fact we could almost say that low Arrow just becomes low Arrow, Sim

1006
00:49:19,800 --> 00:49:22,400
dot for most things, right?

1007
00:49:22,400 --> 00:49:23,500
I think that just works.

1008
00:49:24,500 --> 00:49:26,400
So off we go.

1009
00:49:27,200 --> 00:49:32,900
To to do blah blah blah look so that sword thing will have to change.

1010
00:49:32,900 --> 00:49:38,100
Obviously these are all this, this is this is going to get a lot

1011
00:49:38,100 --> 00:49:41,700
simpler than it was, so that's all good.

1012
00:49:41,700 --> 00:49:42,600
That doesn't have to change.

1013
00:49:42,600 --> 00:49:46,900
Although the move entity stuff does have to get updated so just check

1014
00:49:46,900 --> 00:49:48,600
that, right?

1015
00:49:48,600 --> 00:49:49,500
These are things.

1016
00:49:49,500 --> 00:49:51,100
These These are going to all change.

1017
00:49:51,100 --> 00:49:51,700
Totally.

1018
00:49:52,400 --> 00:49:55,700
They're going to get vastly simplified probably tomorrow tomorrow

1019
00:49:55,700 --> 00:49:56,000
morning.

1020
00:49:56,000 --> 00:49:56,700
In fact.

1021
00:49:57,000 --> 00:50:01,300
Um, yes, we're not to worry too much about those so change that.

1022
00:50:01,700 --> 00:50:02,400
All right.

1023
00:50:02,500 --> 00:50:08,700
So now what we have here is our sword dot index.

1024
00:50:09,300 --> 00:50:10,900
So, that's what we want to do there.

1025
00:50:12,200 --> 00:50:13,800
And how is this happening?

1026
00:50:13,800 --> 00:50:17,100
Now, when the add player, we add our sword.

1027
00:50:17,200 --> 00:50:20,600
Yeah, so when we add things now, when we get our ad low entity

1028
00:50:20,600 --> 00:50:23,700
results, you got it back that looks like just, we just need to set it

1029
00:50:23,700 --> 00:50:26,500
because we have that ref type now nothing particularly interesting

1030
00:50:26,500 --> 00:50:26,800
going on.

1031
00:50:26,900 --> 00:50:27,500
On there.

1032
00:50:28,000 --> 00:50:32,300
So now our move entity call that really has to get ported out to the

1033
00:50:32,300 --> 00:50:33,600
Sim, right?

1034
00:50:34,600 --> 00:50:36,700
Because that supposed to be something that happens in the Sim.

1035
00:50:37,700 --> 00:50:39,300
So let's go ahead and get that in there.

1036
00:50:39,800 --> 00:50:45,800
So here's our simulation stuff begins, immense M, and so probably I'll

1037
00:50:45,800 --> 00:50:47,600
put that down at the bottom for now.

1038
00:50:48,700 --> 00:50:53,000
So when we do move entity, what that's going to do that's going to be

1039
00:50:53,000 --> 00:50:55,500
on the same region now, right?

1040
00:50:56,400 --> 00:50:56,800
And

1041
00:50:56,900 --> 00:50:59,800
it's going to take just an entity pointer and

1042
00:51:00,000 --> 00:51:03,200
And that's going to be the entity who is getting moved.

1043
00:51:03,700 --> 00:51:09,000
We still want the moves back and his acceleration that all seems good.

1044
00:51:09,400 --> 00:51:14,300
We have the world like so this is all easy to deal with what else we

1045
00:51:14,300 --> 00:51:14,800
got.

1046
00:51:16,200 --> 00:51:21,700
That's immunity em, entity, the move specs.

1047
00:51:22,100 --> 00:51:24,100
Where do those moves specs come from?

1048
00:51:24,100 --> 00:51:28,100
We didn't we didn't ever Loft those out into an h-file which we should

1049
00:51:28,100 --> 00:51:28,400
have.

1050
00:51:28,400 --> 00:51:29,100
So there we go.

1051
00:51:29,500 --> 00:51:29,700
So

1052
00:51:30,000 --> 00:51:33,000
of specs or something that I'm going to put in the same region as

1053
00:51:33,000 --> 00:51:33,500
well.

1054
00:51:33,600 --> 00:51:39,300
Just put them out here for now think about them a little bit later and

1055
00:51:39,300 --> 00:51:44,300
now entity da Hai is always just just just entity, right?

1056
00:51:44,300 --> 00:51:48,000
We don't have any more of the stock High nonsense that all goes away

1057
00:51:48,200 --> 00:51:49,100
into just entity.

1058
00:51:49,100 --> 00:51:49,800
And this is nice.

1059
00:51:49,800 --> 00:51:53,100
Because, again, this is starting to now collapse down into code that

1060
00:51:53,100 --> 00:51:56,900
just looks like if you wrote something without ever having to think

1061
00:51:56,900 --> 00:51:59,800
about the fact that there's all this complexity in terms of

1062
00:52:00,000 --> 00:52:03,600
Managing large entity sets and you know, not simulate everything,

1063
00:52:03,600 --> 00:52:05,600
every frame which is what we'd like right.

1064
00:52:05,600 --> 00:52:10,200
Ideally, we'd like the code to not most of our code to never look like

1065
00:52:10,300 --> 00:52:13,000
there's anything special going on because then that means every time

1066
00:52:13,000 --> 00:52:15,100
someone adds something to it, they don't have to think about it too

1067
00:52:15,100 --> 00:52:16,000
hard, right?

1068
00:52:16,400 --> 00:52:19,500
Before it was definitely in this place where you had to think a lot

1069
00:52:19,500 --> 00:52:21,500
about it when you added stuff and we don't want that.

1070
00:52:21,700 --> 00:52:24,600
So it's really good seeing this stuff collapse that way because

1071
00:52:24,600 --> 00:52:27,300
that's, you know what I was hoping for right.

1072
00:52:28,200 --> 00:52:29,800
And so again Dot Low

1073
00:52:29,900 --> 00:52:38,500
Also, and I guess .lo Arrow Sim just goes away entirely, right?

1074
00:52:38,600 --> 00:52:44,800
That just becomes straight up accessors and this right here, the test.

1075
00:52:44,900 --> 00:52:48,400
Hi entity index where we're this is going to Loop over all the stuff

1076
00:52:48,400 --> 00:52:50,300
in our Sim region which is again.

1077
00:52:50,300 --> 00:52:51,500
You know, something we want?

1078
00:52:52,300 --> 00:52:54,500
This is something we're going to want spatial partition for eventually

1079
00:52:55,300 --> 00:52:58,800
spatial partition here, right but for now

1080
00:53:00,000 --> 00:53:01,000
We're totally fine.

1081
00:53:01,100 --> 00:53:02,500
So we have our entity count.

1082
00:53:03,000 --> 00:53:04,000
We're going to Loop over.

1083
00:53:04,000 --> 00:53:08,300
Our Region's entity count, like, so should probably call that a Sim

1084
00:53:08,300 --> 00:53:09,300
region instead of region.

1085
00:53:09,300 --> 00:53:11,500
I don't know why I'm calling it region in some places.

1086
00:53:12,100 --> 00:53:13,900
So, I kind of want that to be called same region.

1087
00:53:14,800 --> 00:53:21,100
And so that's going to Loop over those like, so, and test High entity

1088
00:53:21,100 --> 00:53:22,800
index is not what we want to do.

1089
00:53:22,800 --> 00:53:27,500
Here is basically say that the entity pointers are not the same,

1090
00:53:27,500 --> 00:53:28,900
probably, right.

1091
00:53:29,000 --> 00:53:29,300
Oh,

1092
00:53:29,900 --> 00:53:31,500
Man, I was just getting into that.

1093
00:53:32,300 --> 00:53:37,000
I hate having to stop on the our boundaries, man.

1094
00:53:37,800 --> 00:53:39,000
That's just not the way.

1095
00:53:39,000 --> 00:53:39,900
It should go.

1096
00:53:43,600 --> 00:53:45,600
Well, you know what can you do?

1097
00:53:46,000 --> 00:53:46,700
That's the rules.

1098
00:53:46,700 --> 00:53:47,900
Only an hour, a night.

1099
00:53:48,100 --> 00:53:51,500
You don't get to just keep going just cause you want to unfortunately,

1100
00:53:51,500 --> 00:53:53,600
that's that's the way it goes.

1101
00:53:54,200 --> 00:53:54,700
So yeah.

1102
00:53:54,700 --> 00:53:59,000
So we'll just do Envy is not equal to test entity like so and then

1103
00:53:59,000 --> 00:53:59,600
this just just

1104
00:53:59,700 --> 00:53:59,900
it goes.

1105
00:54:00,300 --> 00:54:01,400
No, more of that.

1106
00:54:01,400 --> 00:54:04,600
No, more of this, no more of that, no more of any of this.

1107
00:54:04,900 --> 00:54:08,600
That is just now, a nice, little simple thing just looks like what you

1108
00:54:08,600 --> 00:54:12,200
would normally write without having to think about anything and it's

1109
00:54:12,200 --> 00:54:12,600
fine.

1110
00:54:14,100 --> 00:54:18,400
Same thing, but hit High, Catlow that stuff all goes away, pretty much

1111
00:54:18,800 --> 00:54:24,500
because we can now just do entity star hit right entity.

1112
00:54:24,900 --> 00:54:25,700
And Let's do.

1113
00:54:25,700 --> 00:54:28,300
Let's take a look at where that happens, right?

1114
00:54:29,300 --> 00:54:29,800
So,

1115
00:54:30,000 --> 00:54:31,100
Hit entity.

1116
00:54:31,200 --> 00:54:36,500
Now just equals test entity that get rid of all that food.

1117
00:54:37,400 --> 00:54:40,500
So and then down here, you don't have to do any of that.

1118
00:54:40,500 --> 00:54:44,400
You just have hit entity and later we can do stuff with it.

1119
00:54:45,200 --> 00:54:45,900
All right.

1120
00:54:47,000 --> 00:54:49,300
Almost done Andy.

1121
00:54:50,600 --> 00:54:52,100
Test wall.

1122
00:54:53,000 --> 00:54:55,000
Yeah, test wall should probably moved in here.

1123
00:54:55,100 --> 00:54:55,400
All right.

1124
00:54:55,400 --> 00:54:59,000
I said I was going to stop I'm just I'm kind of into it right now so

1125
00:54:59,000 --> 00:55:02,400
you know sometimes you go just a couple minutes extra and I started 5

1126
00:55:02,400 --> 00:55:03,000
minutes late.

1127
00:55:03,100 --> 00:55:09,100
I want to point out the fact to you but I did start five minutes late

1128
00:55:09,100 --> 00:55:12,400
so I technically I feel like you owe me an extra five minutes, you

1129
00:55:12,400 --> 00:55:13,000
know I'm saying.

1130
00:55:15,400 --> 00:55:16,400
That's what I think.

1131
00:55:17,000 --> 00:55:17,700
So, anyway.

1132
00:55:18,300 --> 00:55:21,900
All right, we no longer have to do this, that's done and we know if

1133
00:55:21,900 --> 00:55:23,100
longer have to do either of these.

1134
00:55:23,500 --> 00:55:24,300
So that's good too.

1135
00:55:25,000 --> 00:55:28,100
So that just moves The Entity and now, everything in there is just

1136
00:55:28,100 --> 00:55:31,200
nice and clean and it's totally none of this.

1137
00:55:31,200 --> 00:55:32,000
I don't even know.

1138
00:55:32,200 --> 00:55:35,100
I don't even know what this stuff was even here for this is some old.

1139
00:55:35,400 --> 00:55:37,000
Yeah that was some rain shucking stuff.

1140
00:55:37,000 --> 00:55:38,300
Let's get rid of that entirely.

1141
00:55:39,600 --> 00:55:40,200
Yeah.

1142
00:55:40,800 --> 00:55:41,700
Yeah.

1143
00:55:42,100 --> 00:55:44,900
Starting to look nicer started.

1144
00:55:45,100 --> 00:55:45,900
Look nicer.

1145
00:55:46,500 --> 00:55:47,100
All right.

1146
00:55:48,400 --> 00:55:51,700
Yeah, I guess that's a good place and any from high index.

1147
00:55:51,900 --> 00:55:53,000
I don't know what that was there for.

1148
00:55:53,000 --> 00:55:53,600
That's gone.

1149
00:55:53,700 --> 00:55:54,200
Goodbye.

1150
00:55:55,000 --> 00:55:55,300
Yeah.

1151
00:55:55,300 --> 00:55:57,100
So we still have a bunch of work to do.

1152
00:55:57,400 --> 00:56:01,700
Obviously, to finish our Port, plenty and plenty, and plenty of work

1153
00:56:01,700 --> 00:56:02,200
to do.

1154
00:56:02,800 --> 00:56:08,000
But tomorrow morning, could we could finish, we could fit system

1155
00:56:08,000 --> 00:56:10,300
possibility, it is a possibility.

1156
00:56:10,400 --> 00:56:11,300
Trust Friday, right?

1157
00:56:11,300 --> 00:56:11,900
Friday morning.

1158
00:56:12,800 --> 00:56:13,500
It's possible.

1159
00:56:13,800 --> 00:56:16,400
I don't know, not gonna promise anything but it's possible.

1160
00:56:17,200 --> 00:56:18,800
And then we would be in really good shape.

1161
00:56:18,800 --> 00:56:21,900
I think that would be some good so be some good clean up work that we

1162
00:56:21,900 --> 00:56:22,500
did there.

1163
00:56:22,700 --> 00:56:24,000
Good architectural shift.

1164
00:56:25,800 --> 00:56:29,100
So I think that's mostly what we want to do.

1165
00:56:29,100 --> 00:56:31,600
We're going to have, I'm going to leave a couple notes in here for

1166
00:56:31,600 --> 00:56:32,300
ourselves.

1167
00:56:32,700 --> 00:56:39,700
We begin Sim to do Casey important, clear?

1168
00:56:39,700 --> 00:56:40,900
The hash table.

1169
00:56:43,100 --> 00:56:45,800
Otherwise we're going to be very sad, pandas about that.

1170
00:56:47,300 --> 00:56:51,400
And then we also have another thing to do which is notion of

1171
00:56:54,300 --> 00:56:59,200
active versus inactive entities for the apron.

1172
00:57:00,000 --> 00:57:00,300
About yesterday.

1173
00:57:00,800 --> 00:57:02,700
So just so, I don't forget those.

1174
00:57:02,800 --> 00:57:03,800
Okay?

1175
00:57:03,800 --> 00:57:08,700
Now, we can go to the Q&A, we can go to the Q&A.

1176
00:57:08,700 --> 00:57:16,000
If you would, please put Q: before your questions.

1177
00:57:16,000 --> 00:57:16,800
So I can see them.

1178
00:57:17,100 --> 00:57:23,900
And in addition to that, please keep the questions to stuff that we've

1179
00:57:23,900 --> 00:57:25,600
actually coded so far.

1180
00:57:25,600 --> 00:57:29,900
If you want to talk about off-topic things or like speculation.

1181
00:57:30,000 --> 00:57:33,800
About what we're going to do, you know, that sort of stuff that's

1182
00:57:33,800 --> 00:57:36,500
totally fine for before the stream but not after the Stream.

1183
00:57:36,500 --> 00:57:39,300
So if you want to ask those questions, come about 15 minutes before a

1184
00:57:39,300 --> 00:57:43,300
scheduled start time and we always do off-topic questions again

1185
00:57:43,300 --> 00:57:43,700
stream.

1186
00:57:44,200 --> 00:57:44,600
So,

1187
00:57:46,800 --> 00:57:49,000
Alright, okay, let me see.

1188
00:57:49,000 --> 00:57:50,300
Can I start the Q&A?

1189
00:57:50,300 --> 00:57:51,900
I don't actually know if I can or not.

1190
00:57:52,400 --> 00:57:54,000
Don't know if I can do it Q&A.

1191
00:57:56,500 --> 00:57:57,200
I don't think I can.

1192
00:57:57,200 --> 00:58:01,000
I think the bot totally ignores me the boss just like, yeah, we don't

1193
00:58:01,000 --> 00:58:01,800
care about you.

1194
00:58:02,100 --> 00:58:03,000
Why are you even?

1195
00:58:03,300 --> 00:58:05,200
Why are you putting exclamation point things?

1196
00:58:05,500 --> 00:58:07,100
Yeah, I can't.

1197
00:58:08,300 --> 00:58:09,100
So sad.

1198
00:58:10,300 --> 00:58:11,700
So sad.

1199
00:58:13,100 --> 00:58:13,700
All right.

1200
00:58:14,500 --> 00:58:17,700
Well, I tried I tried.

1201
00:58:27,400 --> 00:58:31,000
Yeah, I have not been whitelisted yet on the bot.

1202
00:58:31,100 --> 00:58:34,100
I'm blacklisted on the handmade hero, but I guess,

1203
00:58:35,300 --> 00:58:36,000
Not sure though.

1204
00:58:36,900 --> 00:58:38,100
I tried to start the Q&A.

1205
00:58:38,600 --> 00:58:39,500
Just didn't happen.

1206
00:58:53,200 --> 00:58:56,500
Okay, why don't you upload chat Logs with videos?

1207
00:58:56,500 --> 00:58:57,200
Somehow?

1208
00:58:58,400 --> 00:59:01,300
I just don't really think of those as being part of the

1209
00:59:02,700 --> 00:59:03,100
serious.

1210
00:59:03,100 --> 00:59:05,400
It's basically just supposed to be video series with me going over

1211
00:59:05,400 --> 00:59:05,700
stuff.

1212
00:59:05,700 --> 00:59:10,800
So if something is important enough, it should be asked in the Q&A,

1213
00:59:11,500 --> 00:59:15,600
but if someone else wants to have a chat log, that's totally fine,

1214
00:59:15,900 --> 00:59:16,100
right?

1215
00:59:16,100 --> 00:59:18,200
You can feel free to capture them and post them somewhere.

1216
00:59:18,900 --> 00:59:21,000
As far as, I know, they're essentially public domain, right?

1217
00:59:21,000 --> 00:59:23,000
Like, no one owns the chat log.

1218
00:59:23,800 --> 00:59:27,400
So, you know, anyone who wanted to have a site that basically

1219
00:59:27,400 --> 00:59:30,200
replicates the chat log, totally fine by me.

1220
00:59:51,100 --> 00:59:52,600
Doesn't look like there's any questions.

1221
00:59:52,800 --> 00:59:56,800
It's question, free, probably, because the scream was acting up or, at

1222
00:59:56,800 --> 00:59:59,500
least something about streaming was tough today.

1223
01:00:00,100 --> 01:00:00,700
Right?

1224
01:00:00,900 --> 01:00:02,100
Like, look at that.

1225
01:00:02,200 --> 01:00:06,000
It's really having trouble but I don't know why, right?

1226
01:00:06,000 --> 01:00:07,600
I don't know what the problem is.

1227
01:00:10,300 --> 01:00:11,400
It's very confusing.

1228
01:00:15,000 --> 01:00:21,100
So it's very confusing like this is way worse than we usually have

1229
01:00:21,200 --> 01:00:25,400
ever, but I don't think there's an internet problem at the moment, so

1230
01:00:25,400 --> 01:00:31,000
don't know if it's just twitch or something else.

1231
01:00:32,800 --> 01:00:34,100
It's kind of hard to say I suppose.

1232
01:00:34,100 --> 01:00:39,900
One thing we could do to is just take a look at like you know, this

1233
01:00:39,900 --> 01:00:40,600
kind of thing.

1234
01:00:42,500 --> 01:00:43,100
Right.

1235
01:00:44,500 --> 01:00:45,100
I mean.

1236
01:00:47,200 --> 01:00:50,300
It ain't a problem with the internet far as I can tell.

1237
01:00:51,200 --> 01:00:57,400
It looks like a problem with the old Witchiepoo but we'll leave that

1238
01:00:57,400 --> 01:00:57,800
running.

1239
01:01:09,500 --> 01:01:11,000
There's a bug in your random number table.

1240
01:01:11,000 --> 01:01:12,900
The numbers are limited to a range.

1241
01:01:13,100 --> 01:01:14,000
Yeah, that's fine, though.

1242
01:01:14,000 --> 01:01:15,700
We're not going to use the random number table.

1243
01:01:15,700 --> 01:01:20,300
I just put that in there because I didn't want to go over the the

1244
01:01:20,700 --> 01:01:23,300
random number how to do a random number generation, right?

1245
01:01:23,500 --> 01:01:24,900
I don't know if there are bugs in that rain or whatever.

1246
01:01:24,900 --> 01:01:28,000
We just always went to random.org and got random numbers from them.

1247
01:01:29,600 --> 01:01:32,900
But again, we don't we don't care at all and that isn't a bug that

1248
01:01:32,900 --> 01:01:35,600
would affect us pretty much at all anyway, because we always mob them.

1249
01:01:35,800 --> 01:01:37,900
So the fact that they're limited to arrange isn't a problem at the

1250
01:01:37,900 --> 01:01:38,700
moment.

1251
01:01:39,300 --> 01:01:39,800
Anyway.

1252
01:01:40,400 --> 01:01:44,500
But yeah, you really don't want to use a random number table like that

1253
01:01:44,600 --> 01:01:45,100
either.

1254
01:01:45,100 --> 01:01:46,800
Like there's really no reason to.

1255
01:01:47,300 --> 01:01:50,900
So if you are using that for some reason, I would highly recommend not

1256
01:01:50,900 --> 01:01:51,800
doing that.

1257
01:01:51,800 --> 01:01:54,300
It's literally in there just because I didn't want to have to teach

1258
01:01:54,300 --> 01:01:58,400
random number generation yet and I want to save it for when we go and

1259
01:01:58,400 --> 01:02:00,600
start doing World World Generation stuff.

1260
01:02:00,800 --> 01:02:05,800
So yeah, random number two, random number table, not something you

1261
01:02:05,800 --> 01:02:08,400
want to use, just something that's in there.

1262
01:02:09,600 --> 01:02:12,400
As a placeholder till we actually cover how to generate a random

1263
01:02:12,400 --> 01:02:12,800
number.

1264
01:02:16,500 --> 01:02:19,400
You mentioned not wanting off-topic questions so I apologize if this

1265
01:02:19,400 --> 01:02:25,000
counts not off to a good start there but could you explain your naming

1266
01:02:25,000 --> 01:02:27,300
conventions or explanations behind using them?

1267
01:02:27,300 --> 01:02:29,200
I've never seen a style similar to yours.

1268
01:02:29,200 --> 01:02:34,500
It seems inverted data types versus variable names, and it's very

1269
01:02:34,500 --> 01:02:38,100
interesting to me data types versus variable names.

1270
01:02:40,000 --> 01:02:43,200
oh, are you talking about the case you're talking about, like camel

1271
01:02:43,200 --> 01:02:46,400
case versus underscore lowercase with underscores

1272
01:02:48,200 --> 01:02:51,200
If you're talking about, just just the capitalization scheme.

1273
01:02:52,100 --> 01:02:57,200
This is actually pretty standard in certain circles, but really I

1274
01:02:57,200 --> 01:02:58,300
picked it up from Chris Tucker.

1275
01:02:58,300 --> 01:02:59,800
I used to be all

1276
01:03:00,000 --> 01:03:05,000
Lower case with underscores always like there was no I never had

1277
01:03:05,000 --> 01:03:07,700
uppercase, could I don't think I ever even had uppercase letters in my

1278
01:03:07,700 --> 01:03:10,300
coach ever till I was like 18.

1279
01:03:11,400 --> 01:03:15,000
And then I picked up from Chris Hecker, doing it this way.

1280
01:03:15,200 --> 01:03:17,100
And I don't really have a strong feeling about it one way, they're

1281
01:03:17,100 --> 01:03:18,200
just how I do it now.

1282
01:03:18,400 --> 01:03:21,400
And basically, so types are always lower cases, underscores, and

1283
01:03:21,400 --> 01:03:23,600
functions and variables are always camel case.

1284
01:03:24,900 --> 01:03:28,400
The reasoning behind that is it takes longer to type underscore

1285
01:03:28,900 --> 01:03:31,500
versions than camelcase versions because there's an extra character in

1286
01:03:31,500 --> 01:03:31,900
them.

1287
01:03:32,100 --> 01:03:34,900
So you leave them on the thing, you type less frequently that was

1288
01:03:34,900 --> 01:03:38,800
that's like the entire reasoning behind it far as I know, I don't

1289
01:03:38,800 --> 01:03:40,100
think it's only.

1290
01:03:41,500 --> 01:03:45,900
I feel like there's not really a reason to or not to have a naming as

1291
01:03:45,900 --> 01:03:50,100
long as your code can be read like and it's not all really confusing

1292
01:03:50,100 --> 01:03:50,800
than that's fine.

1293
01:03:59,500 --> 01:04:00,500
Let's see.

1294
01:04:05,600 --> 01:04:08,500
Do you want the store data T's to move like normal ones or simulate

1295
01:04:08,500 --> 01:04:09,000
them?

1296
01:04:09,700 --> 01:04:12,400
Like you mentioned stuff moving around with slower updates off-screen.

1297
01:04:12,400 --> 01:04:12,700
Yeah.

1298
01:04:12,700 --> 01:04:16,100
So basically what I decided to do with the same region stuff is not go

1299
01:04:16,100 --> 01:04:20,200
that route basically I want to try at least at first and we'll see how

1300
01:04:20,200 --> 01:04:20,800
this goes.

1301
01:04:21,000 --> 01:04:22,400
I want to try everyone.

1302
01:04:22,400 --> 01:04:26,700
Always runs the same simulation code, it just some people get less

1303
01:04:26,700 --> 01:04:28,000
time stamp steps.

1304
01:04:28,600 --> 01:04:32,500
So basically like when you're far away from the player, your region

1305
01:04:32,500 --> 01:04:33,800
will get updated.

1306
01:04:34,300 --> 01:04:34,900
You know, once

1307
01:04:35,000 --> 01:04:39,600
Every ten frames, and it'll get updated for 300 milliseconds, instead

1308
01:04:39,600 --> 01:04:42,600
of being updated once for 30 milliseconds, right?

1309
01:04:44,700 --> 01:04:47,700
Let's every frame for 30 milliseconds, but everyone will run the same

1310
01:04:47,700 --> 01:04:51,000
code and that, that my goal there is to just make it easier to code

1311
01:04:51,700 --> 01:04:55,600
for when you add things to the system because I'm afraid that if I

1312
01:04:55,600 --> 01:04:58,800
make it so that you have to write two versions of every entities

1313
01:04:59,000 --> 01:04:59,500
logic.

1314
01:04:59,500 --> 01:05:02,700
And every piece of logic, it's going to be very hard to keep that bug

1315
01:05:02,700 --> 01:05:04,100
free, right?

1316
01:05:04,900 --> 01:05:08,400
So I want to try and do some things to help that what we don't know.

1317
01:05:08,400 --> 01:05:12,200
Yet, it's Ray too early to know what's going to actually happen there.

1318
01:05:12,800 --> 01:05:16,000
But that's what I'm driving towards and hopefully it'll work out.

1319
01:05:16,100 --> 01:05:16,900
We don't know yet though.

1320
01:05:22,300 --> 01:05:26,300
Maybe if you change your Twitch server, I don't know how to do that.

1321
01:05:26,300 --> 01:05:30,500
I mean, I know, sort of how to do that, but yeah, just I think we've

1322
01:05:30,500 --> 01:05:32,900
pretty much verified that my internet connection is fine and might,

1323
01:05:32,900 --> 01:05:39,500
which is messed up, because there was one lost packet that entire time

1324
01:05:42,100 --> 01:05:44,400
And that was probably the one that I control seed, right?

1325
01:05:44,400 --> 01:05:45,700
Is it always say one lost?

1326
01:05:48,200 --> 01:05:51,600
No, so I guess it did technically lose one, I don't know, maybe there

1327
01:05:51,600 --> 01:05:56,900
is something to it, but I think it probably shouldn't be quite so bad.

1328
01:05:57,100 --> 01:05:58,700
I don't know how to change my twitch server.

1329
01:05:58,700 --> 01:05:59,900
So if you want to send me an email,

1330
01:06:01,100 --> 01:06:02,000
I'm Casey at Molly.

1331
01:06:02,000 --> 01:06:04,900
Rocket.com it's on my Twitter, if you want to send me an email and

1332
01:06:04,900 --> 01:06:07,000
tell me about it, or you can post on the forums about how to change to

1333
01:06:07,000 --> 01:06:08,900
its servers or what would happen there.

1334
01:06:15,600 --> 01:06:18,400
What is the point of high and low entity when it makes sense to just

1335
01:06:18,400 --> 01:06:19,100
have one?

1336
01:06:19,900 --> 01:06:24,600
Well, I think you'll see as we go, if you were, if you watch previous

1337
01:06:24,600 --> 01:06:27,300
streams, we talk in some detail about why there are two.

1338
01:06:27,700 --> 01:06:33,000
Now, the reason that there are two is more speculative, it's because

1339
01:06:33,000 --> 01:06:35,900
eventually, I think we're going to do some stuff with the high

1340
01:06:35,900 --> 01:06:36,500
entities.

1341
01:06:38,600 --> 01:06:41,700
With what I should say, sim entities now I think they're going to be

1342
01:06:41,700 --> 01:06:44,000
much larger than we're going to want to store.

1343
01:06:44,300 --> 01:06:48,600
That's just a hunch but we'll see what happens going down the line.

1344
01:06:49,700 --> 01:06:53,600
So at the moment, we don't we at the moment, we actually don't really

1345
01:06:53,600 --> 01:06:54,600
have two types of entities.

1346
01:06:54,600 --> 01:06:57,500
Like you saw how I did it where we actually just use the same data for

1347
01:06:57,500 --> 01:06:57,900
both.

1348
01:06:58,200 --> 01:07:00,700
So at the moment we don't necessarily need it but I think we're going

1349
01:07:00,700 --> 01:07:03,100
to possibly want it down the road so we'll see.

1350
01:07:14,100 --> 01:07:15,900
Can entities reference each other?

1351
01:07:16,300 --> 01:07:18,800
Do you need to check for cyclic references?

1352
01:07:19,800 --> 01:07:21,300
So we don't really need to check for sick.

1353
01:07:21,300 --> 01:07:25,100
The references thankfully, I guess that was kind of something that I

1354
01:07:25,100 --> 01:07:27,600
just knew and didn't really mention.

1355
01:07:28,200 --> 01:07:32,500
Which is if you notice when we have cyclic references, what will

1356
01:07:32,500 --> 01:07:34,500
happen is load entity reference.

1357
01:07:35,000 --> 01:07:37,900
When it gets to the first one, it'll go get Hashem storage index.

1358
01:07:37,900 --> 01:07:39,100
It'll find the pointer zero.

1359
01:07:39,100 --> 01:07:41,100
So it'll do the identity, right?

1360
01:07:43,200 --> 01:07:45,700
And by the way, we actually should store this.

1361
01:07:46,100 --> 01:07:47,700
Well, I'm here, right?

1362
01:07:48,000 --> 01:07:48,900
We need to do this.

1363
01:07:50,900 --> 01:07:55,100
Like so otherwise it would never get filled which would be bad.

1364
01:07:55,900 --> 01:07:58,300
And similarly we probably want to put that that index in.

1365
01:07:58,300 --> 01:07:58,700
Right.

1366
01:07:59,600 --> 01:08:00,300
Glad we did.

1367
01:08:00,400 --> 01:08:01,300
That would have been annoying.

1368
01:08:01,300 --> 01:08:03,700
We have to go to bug that so I'm glad we actually found that.

1369
01:08:03,900 --> 01:08:04,500
Yay.

1370
01:08:06,200 --> 01:08:10,400
So what will happen here is when this gets the hash when this gets the

1371
01:08:10,400 --> 01:08:14,500
hash back, it'll find its 0 and it'll add that the entity in it when

1372
01:08:14,500 --> 01:08:16,800
it adds that entity, if there's a cyclic reference pointing back to

1373
01:08:16,800 --> 01:08:19,300
this entity, that's actually fine.

1374
01:08:19,500 --> 01:08:20,500
Because when it does the

1375
01:08:20,800 --> 01:08:21,100
Add.

1376
01:08:21,200 --> 01:08:24,899
It'll find that the next time through load entity reference.

1377
01:08:24,899 --> 01:08:27,899
When it's when it's doing it, it'll actually find the one that's

1378
01:08:27,899 --> 01:08:28,800
already been added.

1379
01:08:28,899 --> 01:08:31,100
So it won't trigger another call to a density.

1380
01:08:31,200 --> 01:08:33,500
So they can't won't loop around right?

1381
01:08:34,300 --> 01:08:37,500
And you'll notice that's why I put map storage and X2 entity at the

1382
01:08:37,500 --> 01:08:39,800
top of this, so that it would immediately.

1383
01:08:39,800 --> 01:08:43,000
As soon as entering here, it would immediately store it in the hash

1384
01:08:43,000 --> 01:08:43,300
table.

1385
01:08:43,300 --> 01:08:46,800
So that anyone who was trying to resolve some big cyclical, entity

1386
01:08:46,800 --> 01:08:49,399
chain would not cause it to Loop forever.

1387
01:08:49,399 --> 01:08:50,200
It would instead

1388
01:08:50,600 --> 01:08:52,399
Turn out cleanly, right?

1389
01:08:52,399 --> 01:08:54,100
So that was how that was supposed to work.

1390
01:09:05,300 --> 01:09:07,700
When is a ground up rewrite warranted.

1391
01:09:07,700 --> 01:09:10,500
How often do you just burn everything down and start fresh?

1392
01:09:13,300 --> 01:09:15,500
You almost never do that.

1393
01:09:17,600 --> 01:09:21,000
I mean unless yeah you don't really ever do that.

1394
01:09:21,200 --> 01:09:23,500
You pretty much always just change code in place.

1395
01:09:23,500 --> 01:09:27,700
I feel like like you saw a lot of time, stuff goes away entirely like

1396
01:09:27,700 --> 01:09:28,399
set camera.

1397
01:09:28,399 --> 01:09:31,000
Now, doesn't have to exist anymore because we like changed the meaning

1398
01:09:31,000 --> 01:09:33,300
of how things work such that it's not necessary.

1399
01:09:33,800 --> 01:09:37,300
So, in that sense, code gets deleted, but I don't really burn anything

1400
01:09:37,300 --> 01:09:37,800
to the ground.

1401
01:09:37,800 --> 01:09:41,000
I like to mutate code towards good.

1402
01:09:43,500 --> 01:09:46,000
I mean here's one way I could say it.

1403
01:09:52,000 --> 01:09:53,300
And this might be kind of clear.

1404
01:09:53,700 --> 01:09:55,100
So here's the theory for you.

1405
01:09:56,900 --> 01:09:58,000
This is this is

1406
01:10:00,800 --> 01:10:01,900
I'm going to spell this wrong.

1407
01:10:03,400 --> 01:10:04,500
My spelling that right.

1408
01:10:09,100 --> 01:10:10,400
Let's see if I'm spelling it right.

1409
01:10:16,600 --> 01:10:19,700
Liya poon of my, a poon of.

1410
01:10:19,700 --> 01:10:20,300
Yes, I am.

1411
01:10:20,400 --> 01:10:22,400
Sorry, I do not speak Russian, so I don't know.

1412
01:10:22,400 --> 01:10:23,500
Russian spelling very well.

1413
01:10:24,400 --> 01:10:30,700
So basically, there's a concept called live Pune of stability, which I

1414
01:10:30,700 --> 01:10:37,000
think about from time to time, which admittedly really is not have

1415
01:10:37,000 --> 01:10:39,900
anything to do with what I'm about to say, but it's just they occupied

1416
01:10:39,900 --> 01:10:41,900
Spain, mental space in my head.

1417
01:10:42,100 --> 01:10:43,400
So I'm just going to point it out.

1418
01:10:46,100 --> 01:10:49,400
Ignoring all of the actual math Venus of Life who now stability and

1419
01:10:49,400 --> 01:10:53,700
skipping, right to sort of a very, very simplistic reductionist view

1420
01:10:53,700 --> 01:10:55,300
of what it means.

1421
01:10:56,700 --> 01:11:01,400
If you were to imagine a vector field and for those of you don't know

1422
01:11:01,400 --> 01:11:06,000
what a vector field is think of something very simple, like a bunch of

1423
01:11:06,000 --> 01:11:14,600
water or you know what a divot like you know like if you were looking

1424
01:11:14,600 --> 01:11:20,200
at like a driveway and there was a pothole in the driveway, right?

1425
01:11:21,100 --> 01:11:25,800
And at any point, if I was to put something on the driveway, right?

1426
01:11:25,800 --> 01:11:27,800
And it's like like a marble or something.

1427
01:11:28,200 --> 01:11:32,400
If it was near the divot might like roll into the divot and end up in

1428
01:11:32,400 --> 01:11:33,800
the bottom, right?

1429
01:11:33,800 --> 01:11:36,100
And so, if you think about what that kind of means is like you can

1430
01:11:36,100 --> 01:11:39,500
think about everywhere around the divot, right?

1431
01:11:39,500 --> 01:11:42,100
If this was the center of the divot and here's like the radius of the

1432
01:11:42,100 --> 01:11:44,500
divot, right everywhere around the divot.

1433
01:11:44,600 --> 01:11:49,300
Our arrows are like, gravity is pointing into the divot, right?

1434
01:11:50,700 --> 01:11:54,500
And out here, Gravity is not pointing anywhere in particular, right?

1435
01:11:54,500 --> 01:11:57,800
It's not going to move the ball, maybe, but if you put the ball

1436
01:11:57,800 --> 01:11:59,800
anywhere like here or here or here,

1437
01:12:00,000 --> 01:12:00,700
Are here.

1438
01:12:00,700 --> 01:12:03,000
It's going to go right into their right.

1439
01:12:04,800 --> 01:12:07,000
This is one form of.

1440
01:12:07,300 --> 01:12:10,900
Like this is one type of vector field, you could think of where

1441
01:12:10,900 --> 01:12:15,400
basically stuff, no matter where it starts out is going to end up at

1442
01:12:15,400 --> 01:12:16,300
the same place.

1443
01:12:16,600 --> 01:12:19,200
And once it's there it's very hard to get it out of there.

1444
01:12:19,200 --> 01:12:23,000
You have to move it all the way to this boundary to have any chance of

1445
01:12:23,000 --> 01:12:23,200
it.

1446
01:12:23,200 --> 01:12:25,700
Not just rolling right back in there again, right?

1447
01:12:26,600 --> 01:12:29,800
So, that's the case of like, here's my driveway and there's oops.

1448
01:12:29,800 --> 01:12:32,000
Here's my driveway, and there's like a divot, right?

1449
01:12:32,000 --> 01:12:34,300
This is the driveway and here's the divot.

1450
01:12:35,900 --> 01:12:38,100
If the balls out here, it's okay anywhere in here.

1451
01:12:38,100 --> 01:12:40,300
It's just going to go right back down to the bottom, right.

1452
01:12:41,800 --> 01:12:44,200
Now, there's another kind of vector field though, right?

1453
01:12:44,200 --> 01:12:47,400
You can imagine and think of that as corresponding to the opposite,

1454
01:12:47,400 --> 01:12:48,000
kind of thing.

1455
01:12:48,000 --> 01:12:50,600
It's a, it's a lump in the driveway, right?

1456
01:12:50,600 --> 01:12:53,600
So it's up instead of down, okay?

1457
01:12:54,800 --> 01:12:57,600
Well now if you think about what that div, it looks like up here.

1458
01:12:57,600 --> 01:12:59,000
It's the opposite.

1459
01:12:59,000 --> 01:13:02,600
All of the vectors for Gravity are like pointing out, right there

1460
01:13:02,600 --> 01:13:04,500
pointing away from this thing.

1461
01:13:05,600 --> 01:13:08,900
So, if I was to put something on there, right?

1462
01:13:10,000 --> 01:13:12,500
Like here, it's going to roll off and it's going to, it's going to

1463
01:13:12,500 --> 01:13:12,800
leave.

1464
01:13:12,800 --> 01:13:15,300
It's very hard for me to get things up onto here, right?

1465
01:13:15,300 --> 01:13:18,400
Because they're always going to want to come off of it, but there's

1466
01:13:18,400 --> 01:13:21,600
still a point where the ball will stay here.

1467
01:13:21,600 --> 01:13:24,100
There was a point where the ball would stay and it was almost

1468
01:13:24,100 --> 01:13:26,800
impossible to get the ball off of there, right?

1469
01:13:26,900 --> 01:13:30,700
It's like it'll always just go right back down into it here.

1470
01:13:30,700 --> 01:13:32,300
There's still a point where the ball will stay.

1471
01:13:32,300 --> 01:13:33,200
It's right.

1472
01:13:33,300 --> 01:13:37,700
Right at the very top where all of the arrows, stop pointing away and

1473
01:13:37,700 --> 01:13:39,600
it's like, right, it's just perched right up on top.

1474
01:13:39,800 --> 01:13:40,800
They're right.

1475
01:13:42,800 --> 01:13:47,500
But any little perturbation like any Breeze that, so much as blows the

1476
01:13:47,500 --> 01:13:51,200
ball a little bit off and it goes right back down again, right?

1477
01:13:51,600 --> 01:13:55,400
So this is a very stable system you might say and this is very

1478
01:13:55,400 --> 01:13:56,900
unstable, right?

1479
01:13:56,900 --> 01:14:00,100
If I want to purchase something in these two, I want to put something

1480
01:14:00,100 --> 01:14:00,700
in here.

1481
01:14:01,000 --> 01:14:04,200
It's very stable to put something in here, and it's very unstable to

1482
01:14:04,200 --> 01:14:07,000
try and to get to stay in here because it'll just leave immediately.

1483
01:14:07,000 --> 01:14:10,200
Its whereas, this one actually has a very wide range where I could

1484
01:14:10,200 --> 01:14:11,800
even have it go to and it will come,

1485
01:14:12,000 --> 01:14:12,600
Back down.

1486
01:14:12,600 --> 01:14:14,100
That's how stable that is, right?

1487
01:14:15,100 --> 01:14:19,100
And so I tend to think of code bases this way, right?

1488
01:14:20,400 --> 01:14:26,300
This is a lousy code base or I shouldn't even say codebase this is a

1489
01:14:26,300 --> 01:14:28,500
lousy programming model.

1490
01:14:33,200 --> 01:14:36,800
Okay, and this is a good programming model.

1491
01:14:43,000 --> 01:14:47,600
And what I mean by that is every day when you do work, you are trying

1492
01:14:47,600 --> 01:14:51,300
to make your work, do this sort of a thing, you're trying to make it

1493
01:14:51,300 --> 01:14:55,500
so that you are always, the code, is always converging towards a good

1494
01:14:55,500 --> 01:14:57,700
better stable place than what it was.

1495
01:14:57,900 --> 01:14:59,800
Right and such that when you put

1496
01:15:00,000 --> 01:15:04,100
Is into it even if they weren't quite right there, they're going to

1497
01:15:04,100 --> 01:15:06,200
move towards good, right?

1498
01:15:07,300 --> 01:15:08,400
This is the opposite.

1499
01:15:08,400 --> 01:15:11,700
This is a programming methodology where you everything has to be just

1500
01:15:11,700 --> 01:15:15,500
so and if anything goes wrong at all, forget it we're done.

1501
01:15:15,600 --> 01:15:18,400
Like it's like bug City and things are lousy and whatever.

1502
01:15:18,400 --> 01:15:20,200
It's all kinds of terrible, right?

1503
01:15:21,700 --> 01:15:25,500
And so, the reason that I brought this up with your question is as

1504
01:15:25,500 --> 01:15:27,500
long as you're following a good programming model.

1505
01:15:27,600 --> 01:15:31,500
You almost never you almost never burn, right?

1506
01:15:31,500 --> 01:15:35,500
You almost never burn things to the ground because you can always just

1507
01:15:35,500 --> 01:15:39,100
move things incrementally towards good and things are getting better

1508
01:15:39,100 --> 01:15:39,700
all the time.

1509
01:15:39,700 --> 01:15:42,800
The longer you code, the better things are getting, you're replacing

1510
01:15:43,000 --> 01:15:46,400
like old pieces with new pieces, and you're changing old pieces.

1511
01:15:46,400 --> 01:15:49,500
Two new pieces in incremental ways that move you towards good.

1512
01:15:50,400 --> 01:15:51,300
If you're following a

1513
01:15:51,500 --> 01:15:52,500
Was he programming model?

1514
01:15:52,500 --> 01:15:54,000
Then that's when you need to burn.

1515
01:15:54,500 --> 01:15:57,400
When you get yourself into a code base, where everything is awful, and

1516
01:15:57,400 --> 01:16:00,600
no matter what you do, it becomes terrible, that's the time when you

1517
01:16:00,600 --> 01:16:01,500
would need to burn.

1518
01:16:03,000 --> 01:16:06,900
But the only thing that you can do, if you're going to burn, you'd

1519
01:16:06,900 --> 01:16:09,500
better burn and go back and go to something here.

1520
01:16:09,700 --> 01:16:13,400
If you don't know how to do this, then burning here isn't going to get

1521
01:16:13,400 --> 01:16:15,400
you anywhere because you're just going to go right back to this

1522
01:16:15,400 --> 01:16:18,600
garbage and create another code base.

1523
01:16:18,700 --> 01:16:19,400
That sucks.

1524
01:16:20,400 --> 01:16:22,900
And by the way, that's what I see, most people do when they burn, they

1525
01:16:22,900 --> 01:16:25,500
usually have a bad code base or like, starting over.

1526
01:16:25,500 --> 01:16:26,600
We need to start fresh.

1527
01:16:26,700 --> 01:16:29,700
They start fresh, and they end up with an awful thing again, because

1528
01:16:29,700 --> 01:16:31,700
it was the programming model that was bad.

1529
01:16:31,800 --> 01:16:32,800
Not the code.

1530
01:16:33,100 --> 01:16:34,500
And usually that's true.

1531
01:16:34,800 --> 01:16:38,400
Usually, the code is not the thing that was good or bad.

1532
01:16:38,800 --> 01:16:40,800
It's the programming style.

1533
01:16:40,900 --> 01:16:44,300
It was, what was, how you went to work every day, and the fact that

1534
01:16:44,300 --> 01:16:47,200
you had too many programmers going to work every day working like

1535
01:16:47,200 --> 01:16:47,800
this?

1536
01:16:48,700 --> 01:16:50,000
I meant that it didn't matter.

1537
01:16:50,100 --> 01:16:51,700
It's all it's all over.

1538
01:16:51,700 --> 01:16:55,200
You can start fresh and you're still going to get an awful code out

1539
01:16:55,200 --> 01:16:56,300
the end, right?

1540
01:16:56,400 --> 01:16:58,200
Whereas, if you have programmers that are working with a good

1541
01:16:58,200 --> 01:17:02,900
programming model, you can always March forward and just replace

1542
01:17:02,900 --> 01:17:04,700
things in the get better and better, right?

1543
01:17:05,400 --> 01:17:10,800
So that's the way I usually like to think about that and there's a lot

1544
01:17:10,800 --> 01:17:11,600
of aspects to this.

1545
01:17:11,600 --> 01:17:12,900
I try to teach a lot of them.

1546
01:17:15,000 --> 01:17:19,000
You know, but a lot of its experience to, you know, a lot of it's a

1547
01:17:19,000 --> 01:17:20,800
lot of its having done this before.

1548
01:17:20,800 --> 01:17:23,300
And now, you know, why it's bad, right?

1549
01:17:24,000 --> 01:17:25,700
So something to think about

1550
01:17:38,900 --> 01:17:40,700
Let's see.

1551
01:17:42,500 --> 01:17:48,000
Doesn't look like any more on topic questions to me.

1552
01:17:49,800 --> 01:17:51,600
So, I think we may be done.

1553
01:17:54,800 --> 01:17:56,000
You may be done.

1554
01:17:57,900 --> 01:17:59,300
You may be gone.

1555
01:18:00,600 --> 01:18:01,100
Yes.

1556
01:18:02,000 --> 01:18:02,900
Looks like we may be done.

1557
01:18:03,500 --> 01:18:04,200
All right.

1558
01:18:05,000 --> 01:18:08,000
Well, that is very good news.

1559
01:18:09,900 --> 01:18:16,200
It's kind of fun to zoom out and see the days Happening Here.

1560
01:18:16,300 --> 01:18:19,900
I think this is kind of fun having like a having a thing that

1561
01:18:22,900 --> 01:18:25,100
that allows you to zoom in and zoom out like that.

1562
01:18:25,400 --> 01:18:27,600
I'm kind of like, in the way mischiefs working out.

1563
01:18:30,500 --> 01:18:31,200
We take a look here.

1564
01:18:32,400 --> 01:18:33,400
I've got one more question.

1565
01:18:33,500 --> 01:18:36,300
What are your opinions of scrum and agile methods?

1566
01:18:39,000 --> 01:18:42,200
So I don't really know like I've never done scrum.

1567
01:18:45,200 --> 01:18:45,700
and like,

1568
01:18:49,900 --> 01:18:54,500
I mean, programming methodologies of that format, are probably the

1569
01:18:54,500 --> 01:18:55,900
kinds of things that

1570
01:19:02,400 --> 01:19:03,200
how should I say this?

1571
01:19:09,000 --> 01:19:12,300
I guess what I would say is I don't have any experience with scrum.

1572
01:19:12,300 --> 01:19:13,300
I've never done it myself.

1573
01:19:13,300 --> 01:19:15,600
I only vaguely even know what it is.

1574
01:19:15,600 --> 01:19:19,000
Like I have vague Notions of people like taking cards off of white

1575
01:19:19,000 --> 01:19:21,300
over on Note border something like this.

1576
01:19:21,500 --> 01:19:22,200
I don't really know.

1577
01:19:22,400 --> 01:19:23,100
So scrum.

1578
01:19:23,100 --> 01:19:23,900
I can't really talk.

1579
01:19:23,900 --> 01:19:25,800
I can't really say one way or the other.

1580
01:19:28,100 --> 01:19:32,100
Agile methods, I remember long ago, I think when I first saw them

1581
01:19:32,100 --> 01:19:38,000
appear in like the C++ report or something like this, I mean, it was

1582
01:19:38,000 --> 01:19:40,700
kind of like, I was like, yeah, that's how you should probably

1583
01:19:40,700 --> 01:19:46,700
program, but I don't know that I ever read any of the like agile,

1584
01:19:46,700 --> 01:19:50,600
programming literature to know whether what they think of as fast and

1585
01:19:50,600 --> 01:19:52,700
flexible programming or whatever you want to call Agile.

1586
01:19:52,700 --> 01:19:57,800
Programming is what I think of it as and so I can't really say

1587
01:19:58,300 --> 01:20:01,300
Yes or no to it in any definitive sense.

1588
01:20:01,300 --> 01:20:07,100
I think because I really just don't know so I'm afraid I can't give a

1589
01:20:07,100 --> 01:20:10,800
very good answer to that question because I'm just not familiar enough

1590
01:20:10,800 --> 01:20:14,300
with them to know if they line up with what I think is what you should

1591
01:20:14,300 --> 01:20:14,700
do.

1592
01:20:15,200 --> 01:20:16,900
But you know,

1593
01:20:18,400 --> 01:20:19,900
that, you know it might be

1594
01:20:31,000 --> 01:20:31,700
Let's see.

1595
01:20:31,700 --> 01:20:33,500
All right, so I think we're done.

1596
01:20:33,700 --> 01:20:35,600
So I'm going to go ahead and save this off.

1597
01:20:36,000 --> 01:20:38,600
Minimize close.

1598
01:20:38,600 --> 01:20:39,700
This, we're getting pretty close.

1599
01:20:39,700 --> 01:20:41,400
I'm pretty happy with how that's going there.

1600
01:20:41,400 --> 01:20:44,300
Still a couple things that I'm like, not super sure how we're going to

1601
01:20:44,300 --> 01:20:44,700
do.

1602
01:20:46,200 --> 01:20:50,900
In terms of that Sim stuff, but I think it's pretty cool the way that

1603
01:20:50,900 --> 01:20:53,700
it's going now and it'll be interesting to see how well it scales and

1604
01:20:53,700 --> 01:20:54,600
how well it performs.

1605
01:20:54,600 --> 01:20:58,000
We start timing it and there's just a lot of interesting things there,

1606
01:20:58,200 --> 01:20:59,800
but there's a couple things still that I'm not sure.

1607
01:21:00,000 --> 01:21:02,500
We're going to handle and it's going to be interesting to see like,

1608
01:21:02,500 --> 01:21:07,000
the, the, how you do the like, apron how you simulate in a region with

1609
01:21:07,000 --> 01:21:12,300
the not having it go forever in like a cascading marbles sort of way,

1610
01:21:12,300 --> 01:21:12,600
I don't know.

1611
01:21:12,600 --> 01:21:16,400
It's gonna be interesting too because we I mean it's easy to write it

1612
01:21:16,400 --> 01:21:17,200
so it doesn't do that.

1613
01:21:17,200 --> 01:21:18,700
But the question is, will it work?

1614
01:21:18,700 --> 01:21:20,100
You know in practice does it?

1615
01:21:20,100 --> 01:21:23,400
That are there problems with entity simulation that you don't think of

1616
01:21:23,400 --> 01:21:24,500
that come into play there?

1617
01:21:26,900 --> 01:21:29,500
And I don't know, but again, that's one of the reasons to why I like

1618
01:21:29,500 --> 01:21:30,400
doing this sort of stuff.

1619
01:21:31,700 --> 01:21:36,700
I like trying new systems and not doing things and trying to push the

1620
01:21:36,700 --> 01:21:39,300
boundaries a little bit and saying, what if we, what if we had to make

1621
01:21:39,300 --> 01:21:41,100
a system that could scale to this many of these?

1622
01:21:41,100 --> 01:21:44,700
What if we had to make a thing where, you know, we know that we're

1623
01:21:44,700 --> 01:21:45,700
going to be bigger than a float.

1624
01:21:45,700 --> 01:21:47,100
What if we, what if we had to do this?

1625
01:21:47,100 --> 01:21:49,100
What if you had that I like doing those things?

1626
01:21:49,100 --> 01:21:53,200
Because it kind of shows me how new stuff and it's like it's like

1627
01:21:53,200 --> 01:21:54,800
exploring new areas.

1628
01:21:55,500 --> 01:21:57,900
And, you know, I really like that sort of thing.

1629
01:21:57,900 --> 01:22:00,800
It's like, it's challenging and keeps programming fun instead of just

1630
01:22:01,100 --> 01:22:04,300
Oh, you know, the same old thing, I got a roomful entities and we just

1631
01:22:04,300 --> 01:22:07,000
simulate the room and that's it and you know whatever.

1632
01:22:07,400 --> 01:22:09,900
So I'm pretty happy about where it's going.

1633
01:22:09,900 --> 01:22:12,400
But I think there's still some challenges left ahead and I'm looking

1634
01:22:12,400 --> 01:22:16,000
forward to tackling them but they'll have to wait till we're done with

1635
01:22:16,000 --> 01:22:23,100
our current port and some more stuff so hopefully you will join me for

1636
01:22:23,300 --> 01:22:26,200
I think what may be the conclusion tomorrow although who knows how

1637
01:22:26,200 --> 01:22:28,300
long did bugging will take, we made a bunch of changes, so we have to

1638
01:22:28,300 --> 01:22:30,800
do a bunch of debugging, but the very least, I think we should be

1639
01:22:30,900 --> 01:22:36,000
BB recompiling and running tomorrow with our Sim region stuff which is

1640
01:22:36,000 --> 01:22:36,700
kind of cool.

1641
01:22:37,000 --> 01:22:38,500
So hopefully you'll join me for that tomorrow.

1642
01:22:38,500 --> 01:22:40,600
I believe tomorrow is at 9 a.m.

1643
01:22:40,800 --> 01:22:43,500
I'm going to be tired, it's going to be some breakfast programming.

1644
01:22:44,100 --> 01:22:46,400
But basically before I go to work, we will be doing some handmade

1645
01:22:46,400 --> 01:22:46,800
hero.

1646
01:22:47,000 --> 01:22:48,300
So I hope you'll join me for that.

1647
01:22:48,300 --> 01:22:49,400
I'd love to see you back here.

1648
01:22:50,200 --> 01:22:54,200
If not I understand sometimes I would like to sleep in to it's true.

1649
01:22:54,900 --> 01:22:59,500
But anyway, if not, then we will post the schedule as well for next

1650
01:22:59,500 --> 01:23:00,600
week and you can check that.

1651
01:23:00,900 --> 01:23:03,100
And come back and see how we're doing next week.

1652
01:23:03,400 --> 01:23:06,300
Anyway, if you would like to follow along at home with the source

1653
01:23:06,300 --> 01:23:09,700
code, if you preorder the game, you get the source code with it,

1654
01:23:11,000 --> 01:23:13,600
basically get a link in your email that allows you to go anytime you

1655
01:23:13,600 --> 01:23:15,300
want and download the latest source code.

1656
01:23:15,900 --> 01:23:17,600
So if you want to do that you can do that.

1657
01:23:17,600 --> 01:23:19,300
Check it out here at handmade here at dot org.

1658
01:23:20,200 --> 01:23:23,600
You can also, if you want to support this video series, we have a way

1659
01:23:23,600 --> 01:23:24,000
to do that.

1660
01:23:24,000 --> 01:23:25,000
There's the patreon uses.

1661
01:23:25,100 --> 01:23:27,900
You can subscribe to which you very much appreciate.

1662
01:23:28,300 --> 01:23:30,800
And if you want to be updated,

1663
01:23:30,900 --> 01:23:35,100
Added as to like, when it airs every night and the schedule for the

1664
01:23:35,100 --> 01:23:39,800
week, we have a tweet pot, but tweets out the schedule every day and

1665
01:23:39,800 --> 01:23:41,000
also a one hour warning.

1666
01:23:41,000 --> 01:23:43,700
So, like little tweet out and say, you know, go out goes live in an

1667
01:23:43,700 --> 01:23:43,800
hour.

1668
01:23:43,800 --> 01:23:45,000
So that's a pretty handy little guy.

1669
01:23:45,000 --> 01:23:49,200
You can get to him on this tweets button here and we also have a news

1670
01:23:49,200 --> 01:23:51,400
and Forum site, which I highly recommend checking out.

1671
01:23:51,400 --> 01:23:52,800
It's got some good stuff on there.

1672
01:23:52,900 --> 01:23:55,700
It's got like ports to Mac and Linux if you want to follow along on

1673
01:23:55,700 --> 01:23:56,500
other platforms.

1674
01:23:58,000 --> 01:23:59,800
Like your murga does illustrations to go.

1675
01:24:00,000 --> 01:24:03,100
Which the episodes and some other folks do time-coded episode guide.

1676
01:24:03,100 --> 01:24:05,200
So if you go on there and go to the episode guide page, you can get to

1677
01:24:05,200 --> 01:24:05,700
all that stuff.

1678
01:24:05,700 --> 01:24:06,500
It's pretty cool.

1679
01:24:07,700 --> 01:24:10,200
And there's also a forum that you can ask questions on.

1680
01:24:10,400 --> 01:24:13,600
So if you're trying to learn from the stream and you want to talk with

1681
01:24:13,600 --> 01:24:15,900
other people who watch the series, that's a great place to do it.

1682
01:24:15,900 --> 01:24:17,400
I highly recommend checking it out.

1683
01:24:17,600 --> 01:24:22,100
So yeah, thanks everyone for joining me and I hope to see you next

1684
01:24:22,100 --> 01:24:22,400
week.

1685
01:24:22,500 --> 01:24:23,300
Take it easy everyone.

1686
01:24:23,900 --> 01:24:25,100
Nope, I guess not next week.

1687
01:24:25,900 --> 01:24:27,200
Tomorrow tomorrow morning.

1688
01:24:27,500 --> 01:24:28,900
And then next week.

1689
01:24:29,200 --> 01:24:30,400
All right, take it easy, everyone.

