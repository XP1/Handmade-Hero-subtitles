1
00:00:01,300 --> 00:00:01,800
Okay.

2
00:00:01,800 --> 00:00:02,600
Hello everyone.

3
00:00:02,600 --> 00:00:03,300
Welcome to handmade.

4
00:00:03,300 --> 00:00:07,600
Here are the show that we werewe code a complete game from scratch

5
00:00:07,600 --> 00:00:09,500
live on Twitch know, libraries.

6
00:00:09,500 --> 00:00:12,400
No, engine we write absolutely everything ourselves here.

7
00:00:12,600 --> 00:00:17,300
It's like a fine handcrafted piece of furniture from Artisan

8
00:00:17,400 --> 00:00:22,200
Woodworkers somewhere in the, the depths of I don't know.

9
00:00:22,500 --> 00:00:23,300
Europe.

10
00:00:23,700 --> 00:00:28,800
Anyway point being we are in the middle of doing some cleanup and so

11
00:00:28,800 --> 00:00:30,800
I'd like to get back to doing that today we

12
00:00:31,000 --> 00:00:34,000
We sort of did 11 Passover, render clean up yesterday?

13
00:00:34,200 --> 00:00:35,800
We've got a little bit more stuff that we want to do.

14
00:00:35,800 --> 00:00:37,900
We kind of made a little bit of list, so I'd like to get right into

15
00:00:37,900 --> 00:00:41,000
that, but before I begin, I do want to mention that.

16
00:00:41,000 --> 00:00:44,400
If you have pre-ordered, the game today is day, 10 5.

17
00:00:44,400 --> 00:00:49,200
So if you'd like to follow along, you can unzip a day 10 for source

18
00:00:49,200 --> 00:00:53,600
code from the zip file, the source zip file, and that is exactly where

19
00:00:53,600 --> 00:00:54,700
we are starting today.

20
00:00:54,700 --> 00:00:57,200
So, if you want to follow along at home, that's the one to use.

21
00:00:57,500 --> 00:01:00,500
Let's go ahead and see where we are at here.

22
00:01:01,300 --> 00:01:04,500
Yesterday, we went ahead and switched our coordinate system.

23
00:01:04,500 --> 00:01:07,300
We had some crafty things in our coordinate system.

24
00:01:07,500 --> 00:01:10,000
For the most part, our world coordinates were all fine.

25
00:01:10,000 --> 00:01:14,400
There were m + y, is up X is to the right kind of a thing.

26
00:01:14,400 --> 00:01:15,600
But we had had our screen.

27
00:01:15,600 --> 00:01:19,100
Coordinates were flipped from that and we decided that we wanted to

28
00:01:19,100 --> 00:01:20,900
fix that to have all of our screen.

29
00:01:20,900 --> 00:01:24,900
Coordinates be going in a particular direction which we did that.

30
00:01:24,900 --> 00:01:29,000
Also fixed our test reflection code here, which is, what's that?

31
00:01:29,100 --> 00:01:30,700
That's kind of creepy sphere.

32
00:01:30,900 --> 00:01:33,500
It's kind of creepy because it kind of just moves along with you.

33
00:01:33,500 --> 00:01:34,700
Anything that moves along with you.

34
00:01:34,700 --> 00:01:37,500
Like that is you gotta admit, it's a little bit creepy, right?

35
00:01:37,500 --> 00:01:39,500
I mean, it's just a little bit creepy.

36
00:01:40,100 --> 00:01:45,100
Anyway so we did all that stuff and that worked well, but we've got a

37
00:01:45,100 --> 00:01:47,400
few more render clean up things that we want to do.

38
00:01:47,400 --> 00:01:51,600
For example, one of them is we'd like to go ahead and clean up houses

39
00:01:51,600 --> 00:01:56,800
handled and we'd also like to start making it clear what things are in

40
00:01:56,800 --> 00:01:58,800
meters and what things are in pixels.

41
00:01:58,800 --> 00:02:00,800
Because although the vast majority of

42
00:02:00,900 --> 00:02:04,500
Of our coordinate systems all function properly in meters and that

43
00:02:04,500 --> 00:02:05,100
sort of stuff.

44
00:02:05,600 --> 00:02:08,800
We do have some things like bitmap alignment which are currently

45
00:02:08,800 --> 00:02:10,000
operating in pixels.

46
00:02:10,000 --> 00:02:13,500
And we probably since it's about bitmap alignment, we probably do want

47
00:02:13,500 --> 00:02:18,200
those things to operate in pixels but we don't want to do is have that

48
00:02:18,200 --> 00:02:19,100
be ad hoc?

49
00:02:19,100 --> 00:02:23,900
We want to have very clear specifications, you know, that's in the

50
00:02:23,900 --> 00:02:24,400
code.

51
00:02:24,400 --> 00:02:25,000
That's clear.

52
00:02:25,000 --> 00:02:28,800
So that when people are using the renderer obviously, when we're

53
00:02:28,800 --> 00:02:30,800
talking about people, we're really just mean me.

54
00:02:30,900 --> 00:02:32,800
you know, anyone who sits down to use it,

55
00:02:34,500 --> 00:02:36,200
Including ourselves in the future.

56
00:02:37,100 --> 00:02:38,400
Shouldn't have to wonder.

57
00:02:38,600 --> 00:02:39,900
What am I passing this thing?

58
00:02:39,900 --> 00:02:41,000
Shouldn't have to wonder.

59
00:02:41,000 --> 00:02:42,300
You know what direction does?

60
00:02:42,300 --> 00:02:42,900
Why go?

61
00:02:42,900 --> 00:02:44,100
Is this in pixels?

62
00:02:44,100 --> 00:02:45,000
Is this whatever?

63
00:02:45,800 --> 00:02:48,900
So what we want to do is make it so that it's very rigorously defined,

64
00:02:48,900 --> 00:02:53,000
how all of that stuff works so that we can take a look at the overall

65
00:02:53,000 --> 00:02:56,900
API of the render and know that we've, you know, made something easy

66
00:02:56,900 --> 00:02:58,800
to understand and easy to work with in the future.

67
00:02:58,800 --> 00:02:59,900
So that were not constantly,

68
00:03:00,000 --> 00:03:03,100
Every time we go to write something renderer related having to deal

69
00:03:03,100 --> 00:03:07,000
with this uncertainty of wait, how do we write that code, right?

70
00:03:07,200 --> 00:03:09,700
So that kind of stuff, that's kind of fine, we're just getting stuff

71
00:03:09,700 --> 00:03:12,700
working, where we kind of throw things together, is totally fine for

72
00:03:12,700 --> 00:03:14,400
that stage, but we've kind of gotten stage.

73
00:03:14,400 --> 00:03:18,700
Now, we want to start thinking about how to solidify stuff so that's

74
00:03:18,700 --> 00:03:21,100
basically what we want to be doing.

75
00:03:22,400 --> 00:03:22,900
Today.

76
00:03:23,200 --> 00:03:26,500
And while we're doing that, we kind of one of the one of the big

77
00:03:26,500 --> 00:03:30,800
things that was happening in there as well that you may remember is we

78
00:03:30,800 --> 00:03:36,500
also had z-- H, z-- coordinate was totally ad.

79
00:03:36,500 --> 00:03:40,800
Hoc handled like we really didn't have any sort of real concept of

80
00:03:40,800 --> 00:03:42,000
houses should be handled.

81
00:03:42,200 --> 00:03:44,700
And so while we're in there kind of making, you know, going through

82
00:03:44,700 --> 00:03:48,400
and solidifying some of the stuff we want to come up with some way

83
00:03:48,400 --> 00:03:51,800
that we can make z a little more coherent as

84
00:03:52,000 --> 00:03:54,400
If possible, that would be, that would be nice.

85
00:03:55,000 --> 00:03:57,400
All right, so let's go ahead and

86
00:03:59,100 --> 00:04:06,500
Come back here to our code and you can see we've got some notes here,

87
00:04:06,500 --> 00:04:07,200
right?

88
00:04:07,600 --> 00:04:09,800
And we did one, which is everywhere.

89
00:04:09,800 --> 00:04:12,900
Outside, the renderer y0 is upper decks to the right and that was

90
00:04:12,900 --> 00:04:13,300
true.

91
00:04:13,600 --> 00:04:16,600
All bitmaps, including the render Target are assumed to be bottom up.

92
00:04:16,600 --> 00:04:19,500
Meaning that the first row points pointer points to the bottom of this

93
00:04:19,500 --> 00:04:21,100
row, if you don't screen, we did that as well.

94
00:04:21,100 --> 00:04:21,899
So we did those two.

95
00:04:23,100 --> 00:04:26,200
And then this is kind of what we're on today.

96
00:04:26,200 --> 00:04:28,700
This number three, unless otherwise specified all

97
00:04:28,900 --> 00:04:32,900
Put to the render are in World, coordinate, m not pixels, anything

98
00:04:32,900 --> 00:04:38,000
that is in pixel values will be explicitly marked as such and that is

99
00:04:38,000 --> 00:04:40,800
really the thing that we need to start working on today.

100
00:04:40,800 --> 00:04:44,300
And what I'm going to do here, I'm going to do something that I

101
00:04:44,300 --> 00:04:45,500
sometimes like to do.

102
00:04:45,600 --> 00:04:49,200
When we start to solidify something, which is I'm going to start to

103
00:04:49,200 --> 00:04:53,000
pull things out into this h-file, not because it actually is going to

104
00:04:53,000 --> 00:04:57,300
matter at all, that we have things in the H file, but more just

105
00:04:57,300 --> 00:04:58,700
because I want to start.

106
00:04:58,800 --> 00:05:02,300
Art, having an easy place to look that sort of like an API reference.

107
00:05:02,300 --> 00:05:06,400
So I can start to see if everything makes sense to me.

108
00:05:06,800 --> 00:05:10,100
It's kind of in one place and, you know, I could do that.

109
00:05:10,100 --> 00:05:13,200
There's ways you can do that in the editor, I can do.

110
00:05:13,200 --> 00:05:15,900
I don't know if I remove these, I guess I did.

111
00:05:16,400 --> 00:05:22,600
There's like a collapse view in emacs, I'll just help.

112
00:05:23,200 --> 00:05:25,000
Oops, that's not what I want to do.

113
00:05:25,300 --> 00:05:27,000
Help collapse.

114
00:05:28,400 --> 00:05:30,700
No, I can't remember what exactly it's called.

115
00:05:30,700 --> 00:05:31,700
It's called like

116
00:05:34,700 --> 00:05:36,900
I don't think it's called outline mode but I don't know.

117
00:05:36,900 --> 00:05:43,000
It might be selective display set selective display.

118
00:05:43,400 --> 00:05:45,400
I think that is actually what it was.

119
00:05:46,000 --> 00:05:51,500
So there's some stuff, any Mexican do set select a display that will

120
00:05:51,500 --> 00:05:56,500
like collapse down to just using the functions and and visual studio

121
00:05:56,500 --> 00:05:59,100
kind of has this sort of stuff as well, right?

122
00:05:59,100 --> 00:05:59,800
Like, it's that

123
00:06:00,000 --> 00:06:01,500
Sort of a thing, you know.

124
00:06:02,100 --> 00:06:04,400
But that's really just super inefficient.

125
00:06:04,400 --> 00:06:05,400
And it's super fussy.

126
00:06:05,400 --> 00:06:09,200
And also it's problematic because it doesn't pull out the functions

127
00:06:09,200 --> 00:06:10,200
that I want pulled out.

128
00:06:10,200 --> 00:06:12,100
It pulls out all the functions, right?

129
00:06:12,500 --> 00:06:15,700
And so, what I want to do here is just kind of make a little section

130
00:06:16,100 --> 00:06:20,200
that's sort of like you know, renderer API or something like this and

131
00:06:20,200 --> 00:06:22,100
I want to pull out the stuff that we have.

132
00:06:22,100 --> 00:06:25,300
So we can start to look at it a little more closely, right?

133
00:06:25,400 --> 00:06:28,000
So we have this, we have pushed piece, right?

134
00:06:28,000 --> 00:06:29,600
Which is something that we were using

135
00:06:30,300 --> 00:06:33,400
We have pushed bitmap, which is another thing we were using.

136
00:06:33,400 --> 00:06:36,600
Their, we have Push wrecked.

137
00:06:38,000 --> 00:06:41,600
It was our way of drawing sort of debug rectangles.

138
00:06:41,800 --> 00:06:44,100
We don't really use it for anything real at the moment other than

139
00:06:44,100 --> 00:06:46,500
debugging and same with the outlines.

140
00:06:46,800 --> 00:06:50,000
They may never be things that actually get called for real, but they

141
00:06:50,000 --> 00:06:51,000
are for debugging.

142
00:06:51,500 --> 00:06:54,100
We've got our clear call, right?

143
00:06:55,900 --> 00:06:59,300
I'm going to leave meleave saturation out for a moment.

144
00:06:59,300 --> 00:07:01,100
I don't, I don't think.

145
00:07:02,500 --> 00:07:05,200
Yeah, I don't know about the saturation thing I'm going to, I'm going

146
00:07:05,200 --> 00:07:06,800
to go ahead and pull that out of here.

147
00:07:06,800 --> 00:07:07,400
That was something.

148
00:07:07,400 --> 00:07:10,000
Someone asked me to add there, at the end of a stream.

149
00:07:10,100 --> 00:07:11,700
I'm going to, I'm going to go ahead and pull that up.

150
00:07:11,700 --> 00:07:16,000
We'll leave the weird code that was in there to do it, but and then we

151
00:07:16,000 --> 00:07:18,300
have our coordinates and thing, but that was just a test for the

152
00:07:18,300 --> 00:07:18,900
moment.

153
00:07:20,200 --> 00:07:22,500
All right, so let's start taking a look at these.

154
00:07:25,800 --> 00:07:29,600
When we're rendering stuff, this is currently what we have to work

155
00:07:29,600 --> 00:07:29,800
with.

156
00:07:29,800 --> 00:07:33,200
So we can go ahead and push a piece on and a piece is basically a

157
00:07:33,200 --> 00:07:38,200
bitmap that has some information on it and honestly at this point I

158
00:07:38,200 --> 00:07:41,400
don't really see what the difference between push piece and push

159
00:07:41,400 --> 00:07:46,600
bitmap even is I would like to know because I forgotten at this point

160
00:07:46,600 --> 00:07:50,100
and I suspect that we probably don't even really need both of them.

161
00:07:50,300 --> 00:07:53,600
And in fact, you can even see here that we don't if you take a look at

162
00:07:53,600 --> 00:07:53,800
pushed

163
00:07:54,400 --> 00:07:57,300
Versus fish bitmap, they're really just shorthand for each other.

164
00:07:58,900 --> 00:08:04,700
Push bitmap, it looks like is always just going to pass instead of any

165
00:08:04,700 --> 00:08:06,000
kind of Dimensions.

166
00:08:06,000 --> 00:08:09,200
I guess it just passes 00 there.

167
00:08:09,600 --> 00:08:10,400
That's what it looks like.

168
00:08:10,400 --> 00:08:13,100
Anyway, I'd be interested to know.

169
00:08:13,500 --> 00:08:14,200
So let's see.

170
00:08:14,700 --> 00:08:17,100
Offset Z, alignment and dimension.

171
00:08:17,500 --> 00:08:22,000
So yeah, it just passes, 004 Dimension, and then lets the piece get

172
00:08:22,000 --> 00:08:22,900
pushed on here.

173
00:08:23,100 --> 00:08:23,900
Now, what's interesting about

174
00:08:24,000 --> 00:08:26,600
About that, it looks like Dimension.

175
00:08:26,800 --> 00:08:28,200
Never gets used.

176
00:08:28,700 --> 00:08:31,600
So this, this looks like just stuff.

177
00:08:31,600 --> 00:08:36,299
It was kind of as we condensed our stuff into a renderer slowly over

178
00:08:36,299 --> 00:08:36,799
time.

179
00:08:37,000 --> 00:08:40,600
We just haven't fully removed all of the cruft that's in here.

180
00:08:40,600 --> 00:08:45,300
I'm also going to sort of keep get that out for a second, so I feel

181
00:08:45,300 --> 00:08:47,700
like that can just go away, right?

182
00:08:47,700 --> 00:08:50,200
I mean, am I missing something there, right?

183
00:08:50,200 --> 00:08:52,800
If that's, that's just not even doing anything.

184
00:08:53,100 --> 00:08:53,900
In fact, I can just

185
00:08:54,000 --> 00:08:56,700
had I leave this running to make sure he doesn't reduce any problems

186
00:08:56,700 --> 00:08:59,800
but you know that's just kind of not

187
00:09:00,000 --> 00:09:01,500
Not doing anything so it should go away.

188
00:09:03,700 --> 00:09:07,100
It looks like push bitmap takes just an alpha value instead of a

189
00:09:07,100 --> 00:09:07,400
color.

190
00:09:07,400 --> 00:09:10,900
But other than that, it's exactly the same as push piece.

191
00:09:11,200 --> 00:09:16,200
So I think we could probably do now is just go ahead and say that

192
00:09:16,200 --> 00:09:17,800
instead of push peace.

193
00:09:18,400 --> 00:09:20,700
We're just going to have pushed bitmap.

194
00:09:20,700 --> 00:09:24,900
I mean, it just does not seem to make any sense and our render entry

195
00:09:24,900 --> 00:09:28,000
that we were putting in there was already bitmap, right?

196
00:09:28,600 --> 00:09:29,800
And so it just yet.

197
00:09:30,000 --> 00:09:35,100
It just seems like it makes more sense to go ahead and and switch this

198
00:09:35,100 --> 00:09:35,900
up, right?

199
00:09:36,400 --> 00:09:37,800
So let's do this like this.

200
00:09:37,900 --> 00:09:42,500
Let's have this, be our color value here and our entity zc can still

201
00:09:42,500 --> 00:09:42,800
be there.

202
00:09:42,800 --> 00:09:45,200
And we'll just get rid of push, peace entirely.

203
00:09:45,400 --> 00:09:49,300
And then we'll go Port any of those calls that used to be doing.

204
00:09:51,600 --> 00:09:56,100
That used to be doing that, that old style, right?

205
00:09:56,400 --> 00:10:02,000
And so, let's see here, we've got pushed bitmap and make sure I want

206
00:10:02,000 --> 00:10:03,200
to make sure that I met

207
00:10:05,100 --> 00:10:06,400
Respecting everything properly here.

208
00:10:06,800 --> 00:10:08,400
So you've got the bitmap.

209
00:10:08,800 --> 00:10:11,300
We've got the offset and the offset Z.

210
00:10:12,000 --> 00:10:15,000
We've got the alignment and then we have the color.

211
00:10:15,000 --> 00:10:17,400
We can make the color, a default parameter because it looks like

212
00:10:17,400 --> 00:10:20,700
that's something people when they were doing push bitmap might have

213
00:10:20,700 --> 00:10:21,400
wanted right?

214
00:10:21,400 --> 00:10:25,200
Just a pure white, it doesn't actually do anything there so we can do

215
00:10:25,200 --> 00:10:25,600
that.

216
00:10:26,000 --> 00:10:31,300
And then anything that has an alpha value now has to get expanded out

217
00:10:31,300 --> 00:10:31,900
into a thing.

218
00:10:31,900 --> 00:10:32,500
And you know what?

219
00:10:32,500 --> 00:10:34,700
We should probably do here now.

220
00:10:34,800 --> 00:10:35,600
Think about it.

221
00:10:35,700 --> 00:10:40,400
There's one other thing we probably want to do which is we want to

222
00:10:40,400 --> 00:10:43,500
State something about the alpha.

223
00:10:44,000 --> 00:10:54,700
So all color values specified to the renderer as v4s are in non

224
00:10:55,000 --> 00:10:59,400
premultiplied Alpha because I think that's probably what we're going

225
00:10:59,400 --> 00:11:00,100
to want to do there.

226
00:11:00,100 --> 00:11:01,300
Just from personal experience.

227
00:11:01,300 --> 00:11:02,400
I tend to prefer that.

228
00:11:02,700 --> 00:11:04,700
And so, what I want to say there is basically that like

229
00:11:04,800 --> 00:11:08,600
The renderer will be responsible for pre multiplying the alpha.

230
00:11:08,700 --> 00:11:12,900
So basically, if we have some color that looks like that, right?

231
00:11:12,900 --> 00:11:15,900
That comes into the renderer, you know, we're going to expect the

232
00:11:15,900 --> 00:11:18,500
renderer to turn that into this, right?

233
00:11:18,600 --> 00:11:22,600
The user is not expected to pre multiply the alpha across before

234
00:11:22,700 --> 00:11:23,900
handing the color value in.

235
00:11:24,100 --> 00:11:26,600
And the reason that I want to do it that way is because usually the

236
00:11:26,600 --> 00:11:30,500
users thinking users of the render, I thinking of a color plus an

237
00:11:30,500 --> 00:11:34,100
alpha value and they would just have to keep doing that merge together

238
00:11:34,100 --> 00:11:34,700
all the time.

239
00:11:34,800 --> 00:11:37,300
I'm and so I think that's the way I would like to do that.

240
00:11:37,800 --> 00:11:40,800
And if you know, if we find that that doesn't end up being the right

241
00:11:40,800 --> 00:11:44,400
way to do it, we can change it later on but that's the way we will

242
00:11:44,400 --> 00:11:45,500
have that work for now.

243
00:11:45,700 --> 00:11:46,100
Okay?

244
00:11:48,500 --> 00:11:51,900
So, the color value that comes in here, we'll just be that default

245
00:11:51,900 --> 00:11:52,500
value.

246
00:11:53,100 --> 00:11:55,100
Let me go ahead and check this out here.

247
00:11:55,600 --> 00:11:59,300
And so, the shadow Alpha, if that's going to be passed in, just gets

248
00:11:59,300 --> 00:11:59,800
passed in.

249
00:12:00,300 --> 00:12:02,000
As of the for, right?

250
00:12:02,600 --> 00:12:03,600
Same thing here.

251
00:12:05,200 --> 00:12:05,600
Oops.

252
00:12:08,800 --> 00:12:09,600
And

253
00:12:11,200 --> 00:12:12,400
One more.

254
00:12:12,400 --> 00:12:13,300
Is that?

255
00:12:14,000 --> 00:12:14,700
That's just another.

256
00:12:14,700 --> 00:12:17,500
That's just a more complicated Alpha value that we've got there.

257
00:12:18,400 --> 00:12:18,700
Yeah.

258
00:12:20,100 --> 00:12:26,200
And let's see push bitmap pushed bit mad.

259
00:12:27,300 --> 00:12:30,400
It looks like we'd already gotten rid of all the push piece calls.

260
00:12:30,600 --> 00:12:34,200
So they were push-based, essentially already was gone from the code

261
00:12:34,200 --> 00:12:34,700
base.

262
00:12:34,800 --> 00:12:38,300
We just never actually got rid of the push piece function so that's

263
00:12:38,300 --> 00:12:38,400
good.

264
00:12:38,400 --> 00:12:40,600
That simplifies things a little bit more, right?

265
00:12:41,000 --> 00:12:43,000
You gotta push bitmap to got push wrecked.

266
00:12:43,000 --> 00:12:48,100
We've got the push wrecked outline and and then we're down to clear.

267
00:12:51,500 --> 00:12:52,000
Okay.

268
00:12:53,500 --> 00:12:57,500
So, what we want to do here is take a look at what the parameters are

269
00:12:57,500 --> 00:12:58,200
there coming in.

270
00:12:59,100 --> 00:13:02,300
And the alignment value that we've actually got here.

271
00:13:02,400 --> 00:13:06,100
What we can see is the alignment value is in pixels, like I was

272
00:13:06,100 --> 00:13:10,700
saying, but it is not marked as such and so that's kind of the place.

273
00:13:10,800 --> 00:13:15,200
So I guess like I was saying, where I want to go ahead and fix that.

274
00:13:15,200 --> 00:13:18,500
Now, one thing that's a little bit interesting here and I don't know

275
00:13:18,500 --> 00:13:19,900
if we want to do this or not.

276
00:13:19,900 --> 00:13:23,100
It's a little bit tricky to say,

277
00:13:23,400 --> 00:13:27,400
I'm just not sure, which is basically that bitmaps themselves could

278
00:13:27,400 --> 00:13:30,200
have, an alignment value baked into them, because basically, every

279
00:13:30,200 --> 00:13:33,500
bitmap sort of could have, you know, what amounts to a hot spot.

280
00:13:33,500 --> 00:13:34,000
Right.

281
00:13:34,400 --> 00:13:38,300
A place that's like this is when we say we want to draw the bitmap at

282
00:13:38,300 --> 00:13:42,200
a location, we're not talking about putting its upper corner there,

283
00:13:42,200 --> 00:13:44,400
we're putting it, we're talking about, putting It's Hot Spot there,

284
00:13:44,400 --> 00:13:47,200
whatever that is and that's what we've been doing so far with the

285
00:13:47,200 --> 00:13:50,900
alignment stuff, but we haven't Associated them directly with the

286
00:13:50,900 --> 00:13:52,200
bitmaps themselves.

287
00:13:52,600 --> 00:13:53,100
And I

288
00:13:53,200 --> 00:13:53,400
Oh no.

289
00:13:53,400 --> 00:13:55,800
That might be something that we want to do so that when you pass in a

290
00:13:55,800 --> 00:13:59,100
bitmap here you don't actually passing any alignment, the alignments

291
00:13:59,100 --> 00:14:02,300
actually just something that got specified with the bitmap probably

292
00:14:02,300 --> 00:14:06,700
when it got loaded and I'm trying to think if there's any reason why

293
00:14:06,700 --> 00:14:08,300
we don't want to do that.

294
00:14:16,900 --> 00:14:20,500
I can't really think of a reason not to do that because I can't think

295
00:14:20,500 --> 00:14:23,500
of a case where we're going to have bitmaps that will have a lot of

296
00:14:23,500 --> 00:14:25,000
different alignments to them.

297
00:14:28,100 --> 00:14:32,000
And even if we did we could make multiple sort of pointers through to

298
00:14:32,000 --> 00:14:33,500
it that you would access differently.

299
00:14:33,500 --> 00:14:37,800
So it kind of feels to me like we would want to just have those

300
00:14:37,800 --> 00:14:39,700
alignment points be in the bitmap.

301
00:14:45,600 --> 00:14:47,100
Yeah, so I think that's what I'm going to do.

302
00:14:47,600 --> 00:14:51,000
I'm going to go ahead and say that so that we don't even have to pass

303
00:14:51,000 --> 00:14:54,500
anything so that we won't be passing any pixel values into the render

304
00:14:54,900 --> 00:14:55,600
for the most part.

305
00:14:55,600 --> 00:14:59,500
Anyway, what I'd like to do is just say the loaded bitmap itself.

306
00:15:00,000 --> 00:15:00,300
It.

307
00:15:02,400 --> 00:15:06,000
The loaded bitmap, which I guess is up here, we'll just have the

308
00:15:06,000 --> 00:15:08,100
alignment baked into it, right?

309
00:15:08,300 --> 00:15:11,100
So that'll have like a line X align.

310
00:15:11,100 --> 00:15:17,400
Why baked in, let's say and that way we can just assume that whenever

311
00:15:17,400 --> 00:15:18,500
we're dealing with the bitmap.

312
00:15:18,500 --> 00:15:21,300
When you pass it in, you don't have to pass in any alignment.

313
00:15:21,400 --> 00:15:25,200
The alignment will just be something that's can be determined from the

314
00:15:25,200 --> 00:15:26,100
bitmap itself.

315
00:15:26,300 --> 00:15:31,200
So basically the bitmaps Align X and the bitmaps alive.

316
00:15:31,400 --> 00:15:34,000
Why are going to be?

317
00:15:35,200 --> 00:15:36,000
Handled for you.

318
00:15:36,700 --> 00:15:37,700
That seems pretty reasonable.

319
00:15:37,700 --> 00:15:40,800
I don't see a lot of reason not to do that, that seems pretty fair.

320
00:15:41,300 --> 00:15:44,600
So if we go ahead and sort of massage this around a little bit, just

321
00:15:45,000 --> 00:15:45,800
move that around.

322
00:15:47,100 --> 00:15:48,600
So keep those colors down there.

323
00:15:48,800 --> 00:15:53,400
Keep the wrecked I guess we'll also make default same defaults.

324
00:15:54,100 --> 00:15:54,400
Yeah.

325
00:15:59,500 --> 00:16:05,400
Yeah, so all I need to do now is go back and actually change.

326
00:16:05,400 --> 00:16:08,700
When we actually do these pushpin my calls I'm going to need to now

327
00:16:08,900 --> 00:16:14,100
make it so that we actually have, you know, those the when we load the

328
00:16:14,100 --> 00:16:18,400
bitmap, we actually do something intelligent with those alignments.

329
00:16:18,400 --> 00:16:19,000
Right?

330
00:16:19,200 --> 00:16:23,700
So first of all, the line X and the line Y there, the line X

331
00:16:25,600 --> 00:16:27,800
Where did that go under group?

332
00:16:28,500 --> 00:16:29,700
The Align X in the Align.

333
00:16:29,700 --> 00:16:30,200
Why?

334
00:16:30,600 --> 00:16:31,800
I'm going to start off.

335
00:16:31,800 --> 00:16:39,500
Assuming that they are set to the upper side and the lower left

336
00:16:39,500 --> 00:16:40,800
corner, right?

337
00:16:41,000 --> 00:16:44,100
But we'll assume that eventually, when we load things, those that'll

338
00:16:44,100 --> 00:16:46,100
be specified in the art itself somehow.

339
00:16:47,200 --> 00:16:51,500
And for now, we've been specifying those things manually, and we can

340
00:16:51,500 --> 00:16:54,300
go ahead and actually just for

341
00:16:54,400 --> 00:16:57,600
Hero bitmaps, we have a utility function at already sets that so what

342
00:16:57,600 --> 00:17:01,800
we can do, pretty easily with that is actually just record that in all

343
00:17:01,800 --> 00:17:03,400
the bitmaps, right?

344
00:17:04,099 --> 00:17:07,200
And so instead now of having that hero bitmaps, which has the

345
00:17:07,200 --> 00:17:10,000
alignment in it, in other words, this thing right here, it won't need

346
00:17:10,000 --> 00:17:10,700
that anymore.

347
00:17:11,099 --> 00:17:15,000
It'll actually just have that directly in sort of the the head Cape

348
00:17:15,000 --> 00:17:16,400
torso thing, right?

349
00:17:16,900 --> 00:17:19,599
So it'd be something like this, Ed

350
00:17:25,000 --> 00:17:27,200
Cape and torso.

351
00:17:28,900 --> 00:17:32,200
And those will be set to be aligned.

352
00:17:34,500 --> 00:17:35,900
X, the line line.

353
00:17:39,100 --> 00:17:41,600
Now unfortunately we don't have an integer style Vector.

354
00:17:41,700 --> 00:17:44,400
We've never made one and I don't know that we really want to.

355
00:17:45,000 --> 00:17:49,000
So we're just going to go ahead and do it this way even though that's

356
00:17:49,000 --> 00:17:52,600
kind of just stupid since we are converting, something from integer to

357
00:17:52,600 --> 00:17:55,900
a float and back, which doesn't really make much sense.

358
00:17:55,900 --> 00:17:59,800
But that's just how that's just the easiest way to write this.

359
00:18:00,000 --> 00:18:00,500
This point.

360
00:18:00,900 --> 00:18:01,600
So, that's fine.

361
00:18:02,500 --> 00:18:07,800
Anyway, so I think really, that's mostly all we needed to do for

362
00:18:07,800 --> 00:18:08,300
those.

363
00:18:08,300 --> 00:18:11,500
But there are a few other people who have alignments that are

364
00:18:11,500 --> 00:18:13,700
specified in their drawing code directly.

365
00:18:13,800 --> 00:18:16,700
And we want to kind of reverse that Trend.

366
00:18:16,700 --> 00:18:19,800
So like for example this guy, it's just zero zero.

367
00:18:19,800 --> 00:18:23,800
So we don't care, here's another 100 so we don't care.

368
00:18:26,200 --> 00:18:26,500
Oops.

369
00:18:26,500 --> 00:18:27,600
What's wrong here?

370
00:18:27,700 --> 00:18:30,400
No operand, that's a good point.

371
00:18:30,500 --> 00:18:32,400
Those should be dots.

372
00:18:32,400 --> 00:18:33,300
Not arrows.

373
00:18:34,100 --> 00:18:38,200
So there we go and push bitmap.

374
00:18:38,200 --> 00:18:40,900
This is passing an alignment there.

375
00:18:41,200 --> 00:18:42,300
It's passing an alignment.

376
00:18:42,300 --> 00:18:44,800
That's right in the middle, right?

377
00:18:45,500 --> 00:18:50,700
And so that's actually something that that we can just specify in that

378
00:18:50,700 --> 00:18:52,100
bitmap struct, right?

379
00:18:52,300 --> 00:18:55,200
And that's something that we probably would want to to bake in there.

380
00:18:56,700 --> 00:18:57,500
Trying to think of.

381
00:19:03,800 --> 00:19:04,900
Yeah, never mind.

382
00:19:05,100 --> 00:19:07,200
I had I have thought it passed.

383
00:19:07,300 --> 00:19:10,600
All right, so anyway we want to go ahead and bake that in that for now

384
00:19:10,600 --> 00:19:13,000
we can probably that's something we could save permanently and then we

385
00:19:13,000 --> 00:19:15,000
don't we really don't need to set it every time.

386
00:19:15,000 --> 00:19:18,400
But again, that will kind of get pushed up once we do a little bit

387
00:19:18,400 --> 00:19:22,500
more formalizing of that ground system so that should be fine there.

388
00:19:23,200 --> 00:19:24,400
Let's take a look at this.

389
00:19:25,000 --> 00:19:25,900
So Kira bitmaps.

390
00:19:25,900 --> 00:19:28,700
Align, this stuff doesn't have to be passed at all anymore because

391
00:19:28,700 --> 00:19:30,400
that's just implicit.

392
00:19:30,400 --> 00:19:33,400
So again sort of eliminating some of these things.

393
00:19:33,600 --> 00:19:36,600
Here that we don't need anymore.

394
00:19:38,000 --> 00:19:41,400
Let's see the alignment the top down the line, that's four walls.

395
00:19:41,500 --> 00:19:44,800
So we need to do is put this back up where we loaded the wall, right

396
00:19:44,800 --> 00:19:48,100
groups, where did we load the wall?

397
00:19:49,000 --> 00:19:51,100
Where did we load the wall?

398
00:19:51,400 --> 00:19:52,800
Let's see game state.

399
00:19:55,000 --> 00:19:57,900
So our wall was a tree, right?

400
00:19:58,300 --> 00:20:01,700
And so, what we want to do is make that game state tree.

401
00:20:02,200 --> 00:20:03,400
We want to do, we want?

402
00:20:03,500 --> 00:20:05,800
Want that to to be aligned.

403
00:20:05,800 --> 00:20:11,200
So I guess set top down a line will make one of those for bitmaps as

404
00:20:11,200 --> 00:20:15,500
well as Heroes and that way we can pass that in there so that when we

405
00:20:15,500 --> 00:20:18,800
make the tree we can set the alignment of the tree as well.

406
00:20:18,900 --> 00:20:22,300
You know, the other thing we could do actually is we could just have

407
00:20:22,300 --> 00:20:24,100
something where we just straight up pass it.

408
00:20:24,100 --> 00:20:28,100
When we do debug load bitmap, we could pass the alignment in like that

409
00:20:29,300 --> 00:20:31,600
which seems pretty reasonable, right?

410
00:20:31,600 --> 00:20:33,400
I mean that seems like a pretty pretty

411
00:20:33,600 --> 00:20:39,400
Thing to do, if we have our debug load bitmap function, right, it

412
00:20:39,400 --> 00:20:44,900
could just take a line X and a line Y and then just Pat set those in

413
00:20:44,900 --> 00:20:45,300
here.

414
00:20:46,300 --> 00:20:50,300
So we could just go ahead and say, okay, we know that we need to flip

415
00:20:50,300 --> 00:20:50,500
this.

416
00:20:50,500 --> 00:20:53,700
Assuming that the the bitmap itself is flipped because these are

417
00:20:53,700 --> 00:20:55,200
top-down alignments, right?

418
00:20:59,100 --> 00:20:59,800
And in some sense.

419
00:21:03,400 --> 00:21:07,400
I almost want to name them that so that we don't get confused, right?

420
00:21:07,400 --> 00:21:11,800
I mean this is the top down a line Y right which means that in here

421
00:21:12,100 --> 00:21:15,200
we're going to go ahead and flip that right?

422
00:21:16,600 --> 00:21:19,400
So that's just kind of one of those things where I just want to make

423
00:21:19,400 --> 00:21:21,500
it extra clear to whoever's using it.

424
00:21:21,900 --> 00:21:23,900
What's actually going on there, right?

425
00:21:24,600 --> 00:21:27,700
So I don't want to have to actually specify that for all of these guys

426
00:21:27,700 --> 00:21:28,700
at the moment.

427
00:21:28,900 --> 00:21:32,400
So I'm also going to make these just default to not being any offset

428
00:21:32,400 --> 00:21:32,600
at all.

429
00:21:33,300 --> 00:21:33,900
Which is fine.

430
00:21:35,000 --> 00:21:40,000
So again can get rid of the alignment here, no need and then oops.

431
00:21:42,000 --> 00:21:44,700
And then we've got that alignment which is for the sword.

432
00:21:45,000 --> 00:21:49,200
So when we load the sword as well, we can go ahead and set the

433
00:21:49,200 --> 00:21:55,700
alignment for that look so that's probably that's just looking much

434
00:21:55,700 --> 00:21:56,000
cleaner.

435
00:21:56,000 --> 00:21:57,600
Now, that's definitely was a good idea.

436
00:21:58,300 --> 00:22:02,100
All right so we can get rid of these, you can get rid of this right?

437
00:22:02,100 --> 00:22:06,400
Just getting rid of all these things and kind of just feels nice even

438
00:22:06,400 --> 00:22:07,300
just to do it.

439
00:22:08,000 --> 00:22:11,300
Alright so there we go and of course we've

440
00:22:11,500 --> 00:22:12,700
Change the size of things.

441
00:22:20,600 --> 00:22:26,000
So, everything looks fine except for our shadow, which I guess was

442
00:22:26,000 --> 00:22:31,200
using some alignment that we did not fix everything else appears to be

443
00:22:31,200 --> 00:22:37,000
fine, but the Shadows, definitely not fine, that's kind of bizarre.

444
00:22:37,500 --> 00:22:39,300
So, what's going on with our shadow there?

445
00:22:39,400 --> 00:22:43,800
And if you guys saw that, I guess that's because we were using the

446
00:22:43,800 --> 00:22:48,800
Cure alignment for the Shadow and I didn't actually specify any for

447
00:22:48,800 --> 00:22:49,200
the shadow.

448
00:22:49,200 --> 00:22:49,400
So,

449
00:22:49,700 --> 00:22:50,800
Is our shadow.

450
00:22:51,100 --> 00:22:53,000
Where is our shadow actually loaded?

451
00:22:53,300 --> 00:22:54,100
It's right here.

452
00:22:54,500 --> 00:22:58,300
So I assume that what we want to do is again use the same alignment

453
00:22:58,300 --> 00:23:00,800
that we were using for the hero on the Shadow bitmaps.

454
00:23:00,800 --> 00:23:03,200
And that's where it came from in the first place.

455
00:23:03,600 --> 00:23:06,200
So let's go ahead and put that adjustment in there.

456
00:23:09,300 --> 00:23:09,900
There we go.

457
00:23:09,900 --> 00:23:15,500
Now, our shadows are back where our shadows belong and I think that's

458
00:23:15,500 --> 00:23:21,100
mostly everything that we needed to do for that.

459
00:23:22,100 --> 00:23:24,100
Okay, so that's pretty good.

460
00:23:24,100 --> 00:23:27,900
Because now we've actually gotten pixels out of the spec entirely for

461
00:23:27,900 --> 00:23:31,400
the renderer so far, which is kind of Handy, right?

462
00:23:32,200 --> 00:23:36,600
And now we've just got that one push bitmap call which was doing all

463
00:23:36,600 --> 00:23:39,000
the book met bitmap stuff that we wanted.

464
00:23:39,400 --> 00:23:40,800
And so that's also handy.

465
00:23:41,200 --> 00:23:45,000
So taking a look at this here, it's taking the render Group, which is

466
00:23:45,000 --> 00:23:47,400
good, it's taking the bitmap, which is good obviously necessary.

467
00:23:47,700 --> 00:23:52,700
Then it's taking an offset and an offset z, a color and an entity SEC.

468
00:23:52,700 --> 00:23:55,800
Now, those things are kind of janky to me, right?

469
00:23:59,300 --> 00:23:59,800
I just don't.

470
00:24:00,000 --> 00:24:04,300
That specification like why is you know if I have an offset and offset

471
00:24:04,300 --> 00:24:08,700
Z shouldn't that be a three-dimensional coordinate anyway and and I

472
00:24:08,700 --> 00:24:10,800
don't even know what some of that stuff means the edit easy.

473
00:24:10,800 --> 00:24:13,700
See was kind of that hacked, z-height thing.

474
00:24:14,000 --> 00:24:17,100
So I think we want to drill down into push bitmap, a little bit more

475
00:24:17,100 --> 00:24:19,400
to get the Z position except correct color.

476
00:24:19,400 --> 00:24:23,600
And the color stuff is fine, I think and obviously the Pitmaster

477
00:24:23,600 --> 00:24:26,600
stations easy but the other stuff is a little bit weird.

478
00:24:27,000 --> 00:24:29,700
What I want to do first, however because

479
00:24:30,000 --> 00:24:35,000
I've got stuff that doesn't really well.

480
00:24:35,000 --> 00:24:36,800
No, these guys have entities EC as well.

481
00:24:37,100 --> 00:24:40,200
So let's let I think, basically, what I want to do is to get this down

482
00:24:40,200 --> 00:24:42,300
one more level of tightness.

483
00:24:42,300 --> 00:24:43,000
Exactly.

484
00:24:43,400 --> 00:24:47,100
I just want to go through and figure out what's going on with our Z

485
00:24:47,100 --> 00:24:50,600
positioning so that that can be a little bit more solid.

486
00:24:51,100 --> 00:24:55,300
So let's think about that for a second right now, we've got this kind

487
00:24:55,300 --> 00:24:56,600
of in our render group.

488
00:24:56,800 --> 00:24:59,900
We have this thing that's a render entity based.

489
00:25:00,000 --> 00:25:01,200
This right?

490
00:25:02,300 --> 00:25:06,300
And the render entity basis has like a pointer to a basis and it's got

491
00:25:06,300 --> 00:25:09,700
an offset here and an offset the all these sorts of things, right?

492
00:25:10,800 --> 00:25:15,400
So that when you do, when you render a bitmap, it actually goes ahead

493
00:25:15,400 --> 00:25:19,300
and it specifies this and points to some basis, which was basically

494
00:25:19,300 --> 00:25:22,200
just a point of positioning point that we were using to say.

495
00:25:22,200 --> 00:25:24,700
Okay, once we build an entity, we want to build it around this point.

496
00:25:24,700 --> 00:25:26,500
It'll all be kind of be coherent, right?

497
00:25:28,300 --> 00:25:28,900
And so what?

498
00:25:28,900 --> 00:25:31,100
I'm not sure at the moment.

499
00:25:32,200 --> 00:25:34,700
He's, I'm not sure this is the cleanest, I'm not sure.

500
00:25:34,700 --> 00:25:37,700
This is the best construction mechanism for this sort of stuff.

501
00:25:37,700 --> 00:25:38,800
Like I'm not sure.

502
00:25:39,500 --> 00:25:42,000
And you can kind of see, we've got these weird things like the end of

503
00:25:42,000 --> 00:25:43,600
these zc and the offset.

504
00:25:43,600 --> 00:25:47,400
See, it's just, it's just a little over specified in weird.

505
00:25:47,900 --> 00:25:52,200
So what I kind of want to do at this point is I want to go through and

506
00:25:52,200 --> 00:25:56,100
take a look at how we're specifying this stuff a little bit more

507
00:25:56,100 --> 00:26:00,600
specifically and try to try to kind of condense that down and make it

508
00:26:00,600 --> 00:26:01,300
a little more.

509
00:26:02,000 --> 00:26:04,800
Saying the base is stuff.

510
00:26:07,700 --> 00:26:11,300
I mean originally we had the basic stuff for a reasonable reason which

511
00:26:11,300 --> 00:26:15,100
is we want to be able to do single pass stuff, where we would sort of

512
00:26:16,300 --> 00:26:19,700
we would build, we would be able to say what the entity should look

513
00:26:19,700 --> 00:26:19,900
like.

514
00:26:19,900 --> 00:26:24,000
Without having actually done his update Loop yet, I believe that was

515
00:26:24,200 --> 00:26:28,300
sort of the reasoning behind that and you know I don't know if that's

516
00:26:28,300 --> 00:26:30,100
such a good reason to keep it that way.

517
00:26:31,500 --> 00:26:33,800
So I guess what I'd say is we just have a bunch of stuff here.

518
00:26:33,800 --> 00:26:36,700
That's making me a little uncomfortable and I kind of want to just go

519
00:26:37,000 --> 00:26:41,200
clean it out fairly thoroughly and for our rectangle stuff, you'll

520
00:26:41,200 --> 00:26:46,000
notice our rectangle stuff also has this this sort of zc things in it.

521
00:26:46,900 --> 00:26:50,300
It also uses the end of the coordinate system and I guess that makes

522
00:26:50,300 --> 00:26:53,000
some sense because essentially, you know, it's not really in any

523
00:26:53,000 --> 00:26:56,300
coordinate system anymore, it's just a coordinate system and so we

524
00:26:56,300 --> 00:26:59,800
wanted to do stuff like put the little hitpoints and stuff under the

525
00:27:00,000 --> 00:27:01,500
Of tests that sort of thing.

526
00:27:01,700 --> 00:27:02,500
It made sense.

527
00:27:02,500 --> 00:27:05,100
Why Jimmy

528
00:27:06,700 --> 00:27:09,800
Why we would be passing the same sorts of stuff to the rect function

529
00:27:09,800 --> 00:27:10,900
as the bitmap function?

530
00:27:12,000 --> 00:27:20,600
But again, I kind of want that to be more solidified and and just have

531
00:27:20,600 --> 00:27:22,100
a better handle for what's going on there.

532
00:27:22,100 --> 00:27:25,100
So we make sure that, you know, direct angles really need this stuff.

533
00:27:25,400 --> 00:27:28,000
What's the difference between offset Z and it easy?

534
00:27:28,000 --> 00:27:29,400
See, that sort of stuff.

535
00:27:30,700 --> 00:27:31,400
So, let's see.

536
00:27:31,600 --> 00:27:34,200
So what are we doing at the moment?

537
00:27:34,300 --> 00:27:35,800
Look, what are we actually doing here?

538
00:27:35,800 --> 00:27:37,100
We have some code.

539
00:27:38,100 --> 00:27:40,000
That's, that's doing those bases.

540
00:27:40,000 --> 00:27:42,000
That's like, getting the EnV render base.

541
00:27:42,000 --> 00:27:44,700
As you can see it here, what does it actually do?

542
00:27:45,200 --> 00:27:49,200
So, we start at wherever the the coordinate system said to start,

543
00:27:50,100 --> 00:27:54,500
We then have a z value which takes whatever the offset Z is.

544
00:27:57,900 --> 00:28:00,300
And the base coordinates z.

545
00:28:00,600 --> 00:28:04,000
Now I don't actually know what the base coordinate.

546
00:28:04,000 --> 00:28:04,700
Oh, yes, I do.

547
00:28:04,700 --> 00:28:05,600
I remember what that was?

548
00:28:06,400 --> 00:28:08,200
You base coordinate Z.

549
00:28:10,700 --> 00:28:12,700
Oh wait, no never mind never mind.

550
00:28:12,800 --> 00:28:14,900
That's just the Z coordinate from our basis.

551
00:28:15,100 --> 00:28:15,800
So that's yeah.

552
00:28:15,900 --> 00:28:16,600
That's totally fine.

553
00:28:16,800 --> 00:28:19,300
So that's just whatever was specified in thing originally.

554
00:28:20,000 --> 00:28:23,600
So then we add the offset Z which is the thing that was the sort of

555
00:28:23,900 --> 00:28:28,800
the extra specified thing when the entity was actually was actually

556
00:28:28,800 --> 00:28:29,400
specified.

557
00:28:29,400 --> 00:28:31,800
It was this this offset parameter, we add that in there.

558
00:28:31,800 --> 00:28:36,800
So we're basically adding whatever the initial Z was for when the The

559
00:28:36,800 --> 00:28:39,700
Entity was you know, sort of the entity group was started and then

560
00:28:39,700 --> 00:28:40,300
we're adding whatever.

561
00:28:40,500 --> 00:28:43,300
A particular piece of the entity had as its offset.

562
00:28:43,300 --> 00:28:50,100
See we sort of move upwards by that on the Z fudge right now why this

563
00:28:50,100 --> 00:28:51,800
is 1.0.

564
00:28:53,100 --> 00:28:54,900
I guess it's because we're multiplying.

565
00:28:54,900 --> 00:28:56,000
It's a scale factor.

566
00:28:56,200 --> 00:28:57,600
So we're starting at one point.

567
00:28:57,600 --> 00:29:01,200
Oh, I remember I think I threw this in, at the very end of like a Q&A

568
00:29:01,200 --> 00:29:02,000
or something once.

569
00:29:02,300 --> 00:29:03,900
Yeah, we have not thought any of this through.

570
00:29:03,900 --> 00:29:04,700
So this is kind of

571
00:29:05,700 --> 00:29:07,600
Yeah, it's good.

572
00:29:07,600 --> 00:29:08,600
Good definitely.

573
00:29:08,600 --> 00:29:11,500
Good thing for us to come through and, and clean this up before we go

574
00:29:11,500 --> 00:29:12,000
any further.

575
00:29:12,700 --> 00:29:15,000
So, we were basically trying to come up with a multiplier that would

576
00:29:15,000 --> 00:29:18,000
multiply whatever the enemy's x,y was so that things would kind of

577
00:29:18,100 --> 00:29:19,700
scale out this way, right?

578
00:29:19,700 --> 00:29:23,700
That's what we were actually doing and you can see that happening here

579
00:29:23,700 --> 00:29:25,800
is we are taking the center of the screen.

580
00:29:27,200 --> 00:29:30,900
And we were saying whatever that Z fudge value was which is basically

581
00:29:30,900 --> 00:29:32,500
the higher something gets in Z.

582
00:29:32,500 --> 00:29:34,300
The more it would kind of blow out that way.

583
00:29:35,700 --> 00:29:40,300
We were then taking the edit easy to be whatever.

584
00:29:45,100 --> 00:29:46,100
Wait a minute.

585
00:29:47,800 --> 00:29:51,100
So that's how we set the ground point, then we're ascending the

586
00:29:51,100 --> 00:29:52,400
entities Z.

587
00:29:52,700 --> 00:29:58,500
We were also using just the base Z which is like what was initially

588
00:29:58,500 --> 00:29:59,800
specified as part of the transform.

589
00:30:00,000 --> 00:30:01,400
Just the base is e.

590
00:30:04,000 --> 00:30:05,300
We're turning that.

591
00:30:06,200 --> 00:30:09,100
We're multiplying that by m 2 pixels so that they're now both in World

592
00:30:09,100 --> 00:30:09,700
space.

593
00:30:09,800 --> 00:30:14,800
I'm sorry the both in a pixel space and then at the end, we are

594
00:30:14,800 --> 00:30:17,500
multiplying those two together.

595
00:30:20,800 --> 00:30:23,800
I don't even that doesn't make much sense to me.

596
00:30:24,400 --> 00:30:25,300
This is basically.

597
00:30:25,300 --> 00:30:29,100
So I guess we wanted a coefficient I guess that's what empties

598
00:30:29,100 --> 00:30:29,700
eco-efficient.

599
00:30:29,700 --> 00:30:32,800
It's like code archaeology on some code we wrote that was really bad.

600
00:30:33,100 --> 00:30:34,100
Well wasn't bad.

601
00:30:34,100 --> 00:30:36,200
I mean it's just crazy.

602
00:30:38,400 --> 00:30:44,800
So we're we've got a coefficient on the Z value which is yeah, I

603
00:30:44,800 --> 00:30:45,300
don't.

604
00:30:45,300 --> 00:30:48,300
So let's go see how we were why we wanted that?

605
00:30:48,300 --> 00:30:49,600
Do we really need that?

606
00:30:49,800 --> 00:30:51,300
Is that really necessary?

607
00:30:51,500 --> 00:30:53,200
It's just super janky.

608
00:30:55,600 --> 00:30:56,900
It's just yeah, I don't know.

609
00:30:56,900 --> 00:30:57,700
I don't love it.

610
00:30:57,900 --> 00:30:59,200
Let's go ahead and take a look here.

611
00:30:59,200 --> 00:31:02,500
So, let's take a look at, like the hero who's the most complex shape

612
00:31:02,500 --> 00:31:03,600
we have so far.

613
00:31:03,700 --> 00:31:04,400
Right.

614
00:31:05,400 --> 00:31:08,400
And here is here, is our hero value, right?

615
00:31:08,500 --> 00:31:09,200
And our hero?

616
00:31:09,200 --> 00:31:09,400
Okay.

617
00:31:09,400 --> 00:31:13,000
So our hero doesn't even use this at, all right?

618
00:31:13,100 --> 00:31:16,800
It's got a shadow, it computes, the shadow Alpha itself, it doesn't

619
00:31:16,800 --> 00:31:19,200
use Z offsets in any way, right?

620
00:31:19,200 --> 00:31:19,500
The Z.

621
00:31:19,700 --> 00:31:21,600
Has not even touched anywhere in here.

622
00:31:23,500 --> 00:31:24,000
There's really.

623
00:31:24,000 --> 00:31:27,600
There's there's literally no nosy change whatsoever.

624
00:31:27,900 --> 00:31:29,600
No, offset nosy change.

625
00:31:29,900 --> 00:31:33,100
All right, so that's pretty boring.

626
00:31:35,900 --> 00:31:38,700
So what happens when the hero jumps?

627
00:31:38,800 --> 00:31:41,000
He's just setting his actual

628
00:31:43,900 --> 00:31:45,300
Oh wow.

629
00:31:45,800 --> 00:31:47,200
Yeah, this code is awful.

630
00:31:48,900 --> 00:31:50,200
This code is awful.

631
00:31:50,200 --> 00:31:52,400
So, all right, so here's what was happening.

632
00:31:53,500 --> 00:31:56,500
This is just so this is I guess just stuff that we were hacking in

633
00:31:56,500 --> 00:31:56,900
there.

634
00:31:57,500 --> 00:31:57,800
Yeah.

635
00:31:57,800 --> 00:32:01,600
So we want to do now that we're working on the renderer, we want to

636
00:32:01,600 --> 00:32:03,100
stop this, this madness.

637
00:32:03,400 --> 00:32:04,300
This is ridiculous.

638
00:32:05,300 --> 00:32:07,600
So here's what that was doing, man.

639
00:32:08,700 --> 00:32:09,700
What that was doing.

640
00:32:11,400 --> 00:32:17,400
Was it was saying, well, okay, I have a Kuro location, right?

641
00:32:18,000 --> 00:32:22,100
And my hero can do stuff like jump, right?

642
00:32:22,800 --> 00:32:26,900
And when the hero jumps the way that it was working, I don't know if

643
00:32:26,900 --> 00:32:32,200
you can, if you remember the hero was actually jumping, its actual,

644
00:32:32,200 --> 00:32:38,100
the actual point where the hero was he was he was jumping, right?

645
00:32:38,500 --> 00:32:41,000
And so for example this part right,

646
00:32:41,200 --> 00:32:41,600
Here.

647
00:32:41,700 --> 00:32:43,900
Get into the ground Point basis P.

648
00:32:44,000 --> 00:32:48,500
That, that part right there, the hero is actually jumping the whole

649
00:32:48,500 --> 00:32:49,800
thing, right?

650
00:32:50,800 --> 00:32:54,900
And so, the re the way we made his shadow, stay on the ground.

651
00:32:54,900 --> 00:32:56,800
Because like, as the hero jumps, right.

652
00:32:56,900 --> 00:32:58,200
This is the basis point.

653
00:32:58,200 --> 00:32:59,800
So all the things everything

654
00:33:00,000 --> 00:33:01,500
It's rendered in the heroes.

655
00:33:01,500 --> 00:33:05,700
Coordinate system gets rendered based on that position, right.

656
00:33:06,600 --> 00:33:09,300
Everything that we put there, including the hit points, everything,

657
00:33:10,100 --> 00:33:14,200
the shadow should be rendered right there as a result, but we wanted

658
00:33:14,200 --> 00:33:15,900
to render the shadow on the ground.

659
00:33:16,100 --> 00:33:20,600
So, what we introduced was a coefficient that would multiply the Z

660
00:33:20,600 --> 00:33:26,100
offset so that instead of using that Z offset, it just could be

661
00:33:26,100 --> 00:33:28,400
knocked out 20 and be down at the bottom.

662
00:33:29,400 --> 00:33:30,000
Right.

663
00:33:30,900 --> 00:33:35,300
And so let's just just to give an example of how absolutely stupid.

664
00:33:35,300 --> 00:33:38,700
This is as a thing that should never have happened.

665
00:33:38,800 --> 00:33:43,900
Suppose we got rid of it and go back and look at what happens in the

666
00:33:43,900 --> 00:33:45,200
game, right?

667
00:33:45,600 --> 00:33:49,200
You can see that the shadow moves up and down with the guy, right?

668
00:33:49,400 --> 00:33:52,000
So that is like not at all.

669
00:33:52,100 --> 00:33:52,700
Okay.

670
00:33:52,700 --> 00:33:55,900
That is not the way that you want the shadow to work.

671
00:33:56,800 --> 00:33:59,000
That is just a really, really bad idea.

672
00:33:59,200 --> 00:33:59,600
Yeah.

673
00:34:00,300 --> 00:34:02,200
And that was just something that we hacked in there.

674
00:34:02,500 --> 00:34:05,500
So as far as I'm concerned that is getting pulled that is getting

675
00:34:05,500 --> 00:34:06,700
pulled immediately.

676
00:34:07,100 --> 00:34:13,199
So entities zc no longer allowed goodbye you are all gone.

677
00:34:13,500 --> 00:34:18,100
We are going to have to come up with a better way of handling that

678
00:34:18,199 --> 00:34:22,400
scenario so that's just that's not that is not happening in the

679
00:34:22,400 --> 00:34:23,699
renderer sorry folks.

680
00:34:25,199 --> 00:34:31,900
If just not so okay that's going away, let's go down to push bitmap

681
00:34:31,900 --> 00:34:35,900
here just get rid of these entities EC get rid of this and a zzc

682
00:34:35,900 --> 00:34:39,400
concept entirely goodbye man.

683
00:34:39,400 --> 00:34:41,699
That's good to get rid of that because that's just yeah, that's just

684
00:34:41,699 --> 00:34:42,100
nonsense.

685
00:34:42,100 --> 00:34:45,199
That's been hanging on in there way too long.

686
00:34:45,199 --> 00:34:49,699
Basically, you know, we since we didn't have a renderer, we were just

687
00:34:49,699 --> 00:34:53,000
doing weird, anything, anything goes basically is what was happening

688
00:34:53,000 --> 00:34:53,400
there.

689
00:34:54,400 --> 00:34:55,600
Is not at all what we wanted.

690
00:34:55,600 --> 00:35:00,400
So let's get rid of all these goodbye and CZ C and D zc is gone,

691
00:35:00,700 --> 00:35:01,300
right?

692
00:35:02,100 --> 00:35:04,700
So that's good and we don't store it anymore.

693
00:35:04,700 --> 00:35:09,000
So now, hopefully, we can just get rid of all of this nonsense.

694
00:35:09,600 --> 00:35:17,400
That was kind of cluttering up the code anyway, and again, one more.

695
00:35:18,200 --> 00:35:21,100
We're nice, clean up pass.

696
00:35:21,400 --> 00:35:22,100
It's just nice.

697
00:35:22,100 --> 00:35:24,200
Deleting things is always good, pretty much.

698
00:35:24,400 --> 00:35:28,200
It always feels nice with a get rid of stuff.

699
00:35:29,500 --> 00:35:31,400
Okay, so

700
00:35:34,100 --> 00:35:38,400
now entities EC is gone and that's good.

701
00:35:38,600 --> 00:35:41,100
So we don't have a way to keep our shadow on the ground and we don't

702
00:35:41,100 --> 00:35:44,200
have a way to keep our hit points on the ground, which we want to do,

703
00:35:45,300 --> 00:35:49,100
but that is going to be a task for another day, and that's actually

704
00:35:49,100 --> 00:35:51,900
going to be something that is not the responsibility of the renderer.

705
00:35:51,900 --> 00:35:54,500
That's going to be responsible to calling code, to figure out where

706
00:35:54,500 --> 00:35:57,200
the ground is, and just draw the things on the ground instead of

707
00:35:57,200 --> 00:35:59,500
drawing them in the heroes reference frame.

708
00:36:00,000 --> 00:36:04,100
And then having some crazy way that they get three projected back onto

709
00:36:04,100 --> 00:36:06,600
the ground in the middle of the renderer, which shouldn't even know

710
00:36:06,600 --> 00:36:09,700
what the ground is honestly for the most part.

711
00:36:10,000 --> 00:36:10,500
So, yeah.

712
00:36:10,500 --> 00:36:12,900
So that's just, that's just bad.

713
00:36:12,900 --> 00:36:14,000
So, all right, so, that's good.

714
00:36:14,000 --> 00:36:15,600
That we've got rid of that.

715
00:36:16,000 --> 00:36:19,500
Now, let's go take a closer look at some of our

716
00:36:21,500 --> 00:36:23,900
At some of our other code for that Z stuff.

717
00:36:23,900 --> 00:36:25,600
Because we're not quite there yet.

718
00:36:26,500 --> 00:36:30,400
I guess, one thing we could do, pretty pretty easily here is switch

719
00:36:30,400 --> 00:36:32,800
from using sort of Offset.

720
00:36:32,800 --> 00:36:36,100
You know, an offset Z because that was I think before we have three

721
00:36:36,100 --> 00:36:37,600
dimensional vectors that we were using.

722
00:36:37,900 --> 00:36:41,200
So we could now switch to actually just having an offset, which is a

723
00:36:41,200 --> 00:36:41,900
V3.

724
00:36:42,300 --> 00:36:45,500
So maybe I'll just go ahead and do that as the next pass because that

725
00:36:45,500 --> 00:36:49,900
just seems like a same thing to do, which is to say that, you know,

726
00:36:50,200 --> 00:36:51,100
there's really no reason.

727
00:36:51,700 --> 00:36:57,400
We can't have those be stored sort of specifically like that, so let's

728
00:36:57,400 --> 00:37:02,400
see, empty basis offset that's going to be the X Y there.

729
00:37:02,900 --> 00:37:06,000
Plus that be two entities Z, so that's fine.

730
00:37:07,600 --> 00:37:12,300
Let's go ahead and make sure that these are all passed as V3 is now.

731
00:37:13,100 --> 00:37:17,800
Like so and that offset now is.

732
00:37:17,800 --> 00:37:23,800
Yeah, is just going to be done exactly the way that it's done?

733
00:37:24,200 --> 00:37:25,900
M, 2 pixels.

734
00:37:27,900 --> 00:37:31,300
So if we're if we're going to convert to meters to pixels, we should

735
00:37:31,300 --> 00:37:34,300
convert to meters pixels once in my opinion.

736
00:37:35,000 --> 00:37:37,100
So if we go, if we go.

737
00:37:37,300 --> 00:37:41,100
That is the basis thing again, right?

738
00:37:41,400 --> 00:37:44,200
It looks like we were multiplying m.

739
00:37:44,200 --> 00:37:47,500
2 pixels are offset.

740
00:37:47,500 --> 00:37:48,700
Z here.

741
00:37:49,300 --> 00:37:50,500
How are we doing that?

742
00:37:50,500 --> 00:37:56,300
So, here is an example of multiplying that m 2 pixels for the basis P.

743
00:37:56,700 --> 00:38:00,700
We've got the X Y be multiplied to be news to pixels.

744
00:38:01,000 --> 00:38:07,100
So we never actually multiply the Z by m 2.

745
00:38:07,200 --> 00:38:08,700
Cil's, it looks like.

746
00:38:11,600 --> 00:38:15,800
Which is kind of weird to me.

747
00:38:15,900 --> 00:38:19,900
I don't really like the way that's going.

748
00:38:20,900 --> 00:38:25,100
So I think that really at this point, we should kind of have our Z in

749
00:38:25,100 --> 00:38:27,100
the same space as our X and our y.

750
00:38:27,300 --> 00:38:30,600
If we've moved everything into pixels we should leave it in pixels

751
00:38:30,700 --> 00:38:31,400
right?

752
00:38:31,900 --> 00:38:34,800
And we should just adjust whatever we need to adjust to make that

753
00:38:34,800 --> 00:38:36,000
work, right?

754
00:38:36,900 --> 00:38:40,100
So I feel like what we actually want here is to say, okay.

755
00:38:42,000 --> 00:38:46,400
Let's convert everything to from 2, m, 2 pixels and and maybe I can do

756
00:38:46,400 --> 00:38:50,300
that in two passes so that maybe we're not as worried about it, right?

757
00:38:50,500 --> 00:38:52,300
So we'll do it this way, right?

758
00:38:52,400 --> 00:38:53,100
How's this look?

759
00:38:53,400 --> 00:38:55,300
So I look good to everyone.

760
00:38:56,700 --> 00:38:57,100
Shoot me.

761
00:38:58,900 --> 00:38:59,500
So push.

762
00:39:00,000 --> 00:39:01,500
Is also working that way.

763
00:39:01,500 --> 00:39:02,200
It looks like.

764
00:39:02,200 --> 00:39:05,000
Let's go ahead and fix some of this stuff.

765
00:39:06,000 --> 00:39:07,700
So that'll be an X Y as well.

766
00:39:07,700 --> 00:39:11,200
And then we'll have the offset Z get set as offset.

767
00:39:11,200 --> 00:39:13,700
Z we go.

768
00:39:16,500 --> 00:39:19,800
Okay and our push wrecked calls.

769
00:39:19,800 --> 00:39:24,700
So now everybody here when we're taking these in again this will just

770
00:39:24,700 --> 00:39:31,600
be a V3 offset instead and so that is really just all going to be the

771
00:39:31,600 --> 00:39:37,400
threes now but they're v3's with nothing in the last coordinate and

772
00:39:37,400 --> 00:39:39,600
similar that offset Z just goes away.

773
00:39:40,000 --> 00:39:40,800
Goodbye mr.

774
00:39:40,800 --> 00:39:42,500
Offset Z or go.

775
00:39:43,800 --> 00:39:46,200
And now all of these things we can kind of

776
00:39:47,100 --> 00:39:50,200
We can kind of v3f I if that makes sense.

777
00:39:50,900 --> 00:39:52,800
So this will be a V3.

778
00:39:52,800 --> 00:39:53,400
There we go.

779
00:39:54,700 --> 00:39:58,600
And I feel like someone was mentioning this actually on the other the

780
00:39:58,600 --> 00:40:00,900
other day we actually had V3.

781
00:40:01,000 --> 00:40:05,100
There was a version of it, that takes a V2 as the first parameter in

782
00:40:05,100 --> 00:40:09,600
the Z and then later on I did 2 V 3, which is the way I tend to do it.

783
00:40:09,600 --> 00:40:13,000
Normally, I don't know which one we should have.

784
00:40:15,200 --> 00:40:16,200
So maybe we'll do it this.

785
00:40:16,300 --> 00:40:18,300
This way, I don't know.

786
00:40:18,800 --> 00:40:23,600
It's hard to say it's hard to say, so we'll do it that way for now and

787
00:40:23,600 --> 00:40:26,900
we'll just, you know we'll we'll take two V4 and make it just be the

788
00:40:26,900 --> 00:40:27,400
four.

789
00:40:29,200 --> 00:40:30,000
How's that sound?

790
00:40:30,000 --> 00:40:30,700
Good enough?

791
00:40:30,700 --> 00:40:31,200
All right.

792
00:40:32,500 --> 00:40:34,700
All right, so we've got our P here.

793
00:40:34,700 --> 00:40:39,600
This is another case where we want to go ahead and and upconvert same

794
00:40:39,600 --> 00:40:45,900
here up convert and looks like this one and actually doesn't need to

795
00:40:45,900 --> 00:40:49,600
up convert it's already a Delta that's got everything in it so we just

796
00:40:49,600 --> 00:40:50,400
want to do that.

797
00:40:51,400 --> 00:40:53,000
Let's take a look at.

798
00:40:53,000 --> 00:40:57,900
These are just zeros everywhere so this just gets extended basically

799
00:40:58,000 --> 00:40:59,400
wrap everything in to be 3.

800
00:41:02,200 --> 00:41:03,500
Let's see what we've got here.

801
00:41:03,500 --> 00:41:03,900
V2.

802
00:41:03,900 --> 00:41:05,900
Oops, those aren't V2s.

803
00:41:10,000 --> 00:41:10,800
Same thing.

804
00:41:13,200 --> 00:41:14,300
Let's see here.

805
00:41:15,500 --> 00:41:20,500
And again same exact thing.

806
00:41:20,500 --> 00:41:24,400
So these are really pretty straightforward, like I said, we just kind

807
00:41:24,400 --> 00:41:30,800
of yeah, just kind of got to go through the code and and make sure

808
00:41:30,800 --> 00:41:32,000
that everywhere that we

809
00:41:35,000 --> 00:41:36,700
A previously passing in separate framers.

810
00:41:36,700 --> 00:41:37,600
We just bundle them together.

811
00:41:37,600 --> 00:41:38,000
Now,

812
00:41:39,600 --> 00:41:40,500
Very, very simple.

813
00:41:47,000 --> 00:41:48,200
and,

814
00:41:51,700 --> 00:41:52,400
Let's see.

815
00:41:52,700 --> 00:41:55,300
Last one that's offset.

816
00:41:55,300 --> 00:41:56,200
P.

817
00:41:56,500 --> 00:41:57,700
X y.

818
00:41:57,700 --> 00:41:59,800
So what's its Z value?

819
00:42:02,700 --> 00:42:07,700
I guess if we're saying, we want to render it at Z 0, always, I wonder

820
00:42:07,700 --> 00:42:10,900
why we want to do that while we don't want to render it.

821
00:42:16,200 --> 00:42:16,700
I'm not.

822
00:42:16,700 --> 00:42:22,000
I want to see to be honest with you, I want to see if if we can just

823
00:42:22,000 --> 00:42:24,300
just do it with its normal value.

824
00:42:24,300 --> 00:42:28,100
So I'm going to, I'm going to actually take a look and see if we can

825
00:42:28,100 --> 00:42:30,100
do that in a second here.

826
00:42:33,200 --> 00:42:39,300
All right, see, so that all looks fine.

827
00:42:40,200 --> 00:42:41,300
No, worries there.

828
00:42:44,200 --> 00:42:47,600
And the Space drawing again, is those blue lines which were showing us

829
00:42:47,600 --> 00:42:51,300
kind of where we had defined sort of rooms that you could walk around

830
00:42:51,300 --> 00:42:51,600
in.

831
00:42:54,800 --> 00:42:55,300
All right.

832
00:42:55,400 --> 00:42:56,300
Well, that's all fine.

833
00:42:57,100 --> 00:42:58,000
So let's take a look.

834
00:42:58,000 --> 00:43:03,800
Then if that's the case, I want to know when we render spaces, right?

835
00:43:05,200 --> 00:43:06,100
Which is right here.

836
00:43:06,600 --> 00:43:10,000
Is there a reason that we were getting rid of this of the of the Z

837
00:43:10,000 --> 00:43:13,100
coordinate because as those kind of go up, I feel like we would just

838
00:43:13,100 --> 00:43:19,300
want to handle that problem.

839
00:43:19,600 --> 00:43:24,400
Probably, that would be my guess although I guess the thing is

840
00:43:25,000 --> 00:43:27,700
We don't really.

841
00:43:33,900 --> 00:43:38,800
I guess we don't want there to be a z offset to it necessarily.

842
00:43:38,800 --> 00:43:39,600
I don't know this.

843
00:43:39,600 --> 00:43:42,100
This really feels like it wants to be just the offset P so I'm going

844
00:43:42,100 --> 00:43:44,600
to leave it that way and will when we come back and are working more

845
00:43:44,600 --> 00:43:45,500
at the volumes will see.

846
00:43:45,500 --> 00:43:49,100
But I'm expecting that these were all were already 0 anyway which

847
00:43:49,100 --> 00:43:50,200
looks like they were.

848
00:43:50,200 --> 00:43:55,600
And so really it's just giving us that that sort of height, D Delta

849
00:43:55,600 --> 00:43:57,800
off of it, which seems fine.

850
00:43:58,100 --> 00:43:59,000
So I don't know.

851
00:44:01,000 --> 00:44:02,100
Maybe that's not what we wanted.

852
00:44:02,100 --> 00:44:03,600
I'm not sure trying to think if there's

853
00:44:03,700 --> 00:44:06,300
A reason for that, Jimmy.

854
00:44:08,400 --> 00:44:12,800
I guess one reason is that if we want to maybe draw it at its at its

855
00:44:12,800 --> 00:44:17,300
lowest level, so we might want to do legitimately though is say we

856
00:44:17,300 --> 00:44:22,600
want to subtract half the half the Y value right since we're drawing

857
00:44:22,600 --> 00:44:26,400
like an outline, we may want to do something like this so that way

858
00:44:26,400 --> 00:44:31,200
it's not floating in sort of halfway up, right?

859
00:44:31,500 --> 00:44:34,500
And so that's more pegged to the ground, right?

860
00:44:35,200 --> 00:44:37,100
I don't know if that makes sense but basically the, you know, the

861
00:44:37,100 --> 00:44:38,000
volumes are basically.

862
00:44:38,200 --> 00:44:39,900
A center and dimension.

863
00:44:40,000 --> 00:44:43,400
And this is essentially the center of that of that volume.

864
00:44:43,600 --> 00:44:47,000
So I was just saying, well, let me put it at the base of the volume

865
00:44:47,000 --> 00:44:49,000
instead, which seems a little scene.

866
00:44:50,100 --> 00:44:52,100
All right, so now we've got that.

867
00:44:52,600 --> 00:44:56,900
Let's go ahead and try to handle our Z in a more sane way here.

868
00:44:58,800 --> 00:44:59,800
We'll go up to the

869
00:45:00,000 --> 00:45:00,500
The.

870
00:45:03,400 --> 00:45:04,900
My voice is like, totally gone.

871
00:45:05,600 --> 00:45:06,300
I don't know why.

872
00:45:08,600 --> 00:45:11,000
Alright, so here we are in our get entity basis.

873
00:45:11,200 --> 00:45:14,200
What I was saying before, is the m, 2 pixel thing, I would like to go

874
00:45:14,200 --> 00:45:17,200
ahead and figure out how to get M to pixels to happen.

875
00:45:17,200 --> 00:45:20,700
Only in one place and maybe I don't know exactly where I want that

876
00:45:20,700 --> 00:45:22,100
place to be just yet.

877
00:45:23,000 --> 00:45:26,600
But you know at at the very least, I want the renderer to have some

878
00:45:26,600 --> 00:45:30,000
notion of who is doing that, right?

879
00:45:30,200 --> 00:45:33,300
And so since that's happening in here at the moment, what I'd like to

880
00:45:33,300 --> 00:45:37,300
do is change this up so that m 2 pixels is happening with the zika.

881
00:45:37,400 --> 00:45:38,100
In it as well.

882
00:45:38,500 --> 00:45:43,000
So it essentially we're doing this and we're taking that offset value

883
00:45:43,000 --> 00:45:46,100
and we're just multiplying that by m 2 pixels like so.

884
00:45:46,600 --> 00:45:50,500
And then we just when we do our alignment, we do the alignment like

885
00:45:50,500 --> 00:45:50,900
so.

886
00:45:51,400 --> 00:45:52,200
Does that make sense?

887
00:45:53,400 --> 00:45:58,200
So that seems reasonable to me to do that.

888
00:45:58,500 --> 00:45:59,400
So that will just

889
00:46:01,100 --> 00:46:04,400
Sort of have a coherent m 2 pixels, which means that Z is going to be

890
00:46:04,400 --> 00:46:07,400
a lot bigger now than it was, right?

891
00:46:08,000 --> 00:46:11,500
So when we come in here, so stuff like this, that's working with the Z

892
00:46:11,500 --> 00:46:12,200
values.

893
00:46:12,600 --> 00:46:16,700
And that actually reminds me, the entity base is p, who was

894
00:46:17,300 --> 00:46:19,100
transforming that from meters to pixels.

895
00:46:19,100 --> 00:46:21,700
I guess that was just always being done in here.

896
00:46:21,700 --> 00:46:24,000
Essentially, it's a little bit weird, right?

897
00:46:26,000 --> 00:46:27,400
It's kind of strange.

898
00:46:27,600 --> 00:46:30,700
So the other thing that's true too is like M to pixels is getting

899
00:46:30,700 --> 00:46:31,600
multiplied.

900
00:46:35,500 --> 00:46:36,200
For that half.

901
00:46:36,200 --> 00:46:40,200
Tim we could just not do m 2 pixels there as well.

902
00:46:40,500 --> 00:46:40,900
Right?

903
00:46:41,000 --> 00:46:41,800
Could do that.

904
00:46:42,400 --> 00:46:47,700
And just do that 1 m 2 pixels conversion right there, if that makes

905
00:46:47,700 --> 00:46:48,100
sense.

906
00:46:48,700 --> 00:46:58,600
So that seems that seems kind of reasonable to me something like that.

907
00:46:59,200 --> 00:46:59,500
Yeah.

908
00:47:02,200 --> 00:47:06,900
So that seems that seems pretty saying for the most part.

909
00:47:07,200 --> 00:47:09,600
So now the Z stuff is going to go nuts.

910
00:47:09,700 --> 00:47:15,500
In theory, I would think you can kind of see how crazy.

911
00:47:18,300 --> 00:47:22,500
That guy's is going at the moment but all of these guys, the rest of

912
00:47:22,500 --> 00:47:26,700
the stuff has z80 anyway so it's not really a problem so let's keep

913
00:47:26,700 --> 00:47:27,500
going with that.

914
00:47:29,700 --> 00:47:34,000
So when this gets pushed on now are m 2, pixels is always happening in

915
00:47:34,000 --> 00:47:35,300
the same same place.

916
00:47:35,300 --> 00:47:36,500
So that's all good.

917
00:47:37,200 --> 00:47:39,900
This all looks totally reasonable to me.

918
00:47:41,200 --> 00:47:44,600
Nothing odd happening here so that's all good.

919
00:47:44,700 --> 00:47:47,200
So let's just go over to that get render enter.

920
00:47:47,300 --> 00:47:49,700
D basis and think through what we want to do here now.

921
00:47:50,600 --> 00:47:52,600
So let's see.

922
00:47:52,800 --> 00:47:57,900
We have the entity base P which is something that's still in M, right?

923
00:48:01,400 --> 00:48:03,100
And then I'm going to isolate what?

924
00:48:03,100 --> 00:48:05,900
I'm going to try to do here is start to isolate these terms a little

925
00:48:05,900 --> 00:48:07,400
bit are entities.

926
00:48:07,400 --> 00:48:12,300
Z is taking the base p and bringing it m 2 pixels.

927
00:48:12,500 --> 00:48:16,300
So here's the problem is our Z fudge, right?

928
00:48:16,300 --> 00:48:22,400
Is is getting re x m 2 pixels which really doesn't need to because

929
00:48:22,400 --> 00:48:24,900
it's already in m, 2 pixels.

930
00:48:25,100 --> 00:48:28,000
If only this guy was a m, 2 pixels basically.

931
00:48:28,300 --> 00:48:31,000
So yeah, it's a little bit strange.

932
00:48:31,200 --> 00:48:34,100
So entity based P, right?

933
00:48:35,000 --> 00:48:41,200
80 base fee gets used here and gets the m, 2 pixels converted and it's

934
00:48:41,200 --> 00:48:43,500
here and gets m 2 pixel converted.

935
00:48:43,600 --> 00:48:47,400
So what I really want to do is just convert that it with m 2 pixels

936
00:48:47,800 --> 00:48:49,500
right off the bat, right?

937
00:48:49,500 --> 00:48:52,600
So I'll take that out of the equation there entirely.

938
00:48:52,800 --> 00:48:59,100
Okay, so that m 2 pixels is gone and that way M to pixels can just be

939
00:48:59,600 --> 00:49:01,000
we can actually get rid of these either that

940
00:49:01,100 --> 00:49:02,700
That that happens this way as well.

941
00:49:04,300 --> 00:49:08,300
Okay, so let's take a closer look at some of this stuff now that it's

942
00:49:08,300 --> 00:49:09,300
a little more condensed.

943
00:49:10,000 --> 00:49:12,500
So the base P gets the basis.

944
00:49:12,500 --> 00:49:15,600
P gets converted into pixel space which it is here.

945
00:49:16,300 --> 00:49:21,000
The Z fudge uses that Z and the offset Z which are both in pixel

946
00:49:21,000 --> 00:49:23,400
space, which is fine, which means this value should probably this,

947
00:49:23,400 --> 00:49:27,200
this coefficient should go down here because now, the Z is much larger

948
00:49:27,200 --> 00:49:27,900
than you used to be.

949
00:49:28,900 --> 00:49:33,000
The ground point is just going to be whatever the center of screen is

950
00:49:34,300 --> 00:49:36,000
plus that X Y offset.

951
00:49:36,000 --> 00:49:37,300
But now we're using the Z fudge.

952
00:49:37,300 --> 00:49:39,700
Like we're saying before the Z fudge is sort of thing that multiplies

953
00:49:39,700 --> 00:49:43,000
those together to sort of give us a little bit of a scaling effect.

954
00:49:43,500 --> 00:49:48,200
And then the actual Center gets is that is that basis point plus

955
00:49:48,200 --> 00:49:51,800
whatever the offset is plus the Z coordinate.

956
00:49:52,700 --> 00:49:53,800
Translated to, why?

957
00:49:57,200 --> 00:50:05,400
So let's think here, first of all, why isn't the Z coordinate of the

958
00:50:05,400 --> 00:50:08,100
offset of the entity being used?

959
00:50:08,100 --> 00:50:12,500
There was it never used there because it was being used in the Z fudge

960
00:50:12,500 --> 00:50:17,900
but not in the offset unless I accidentally deleted or something,

961
00:50:18,500 --> 00:50:19,100
right?

962
00:50:19,200 --> 00:50:21,800
But it feels like, I mean correct me if I'm wrong.

963
00:50:24,700 --> 00:50:28,400
But doesn't it feel like this should look like that, right?

964
00:50:28,400 --> 00:50:29,400
Shouldn't the offset?

965
00:50:29,400 --> 00:50:30,100
Shouldn't the Z?

966
00:50:30,100 --> 00:50:30,800
Offset.

967
00:50:31,900 --> 00:50:33,800
Basically always be handled.

968
00:50:33,800 --> 00:50:41,400
The same like, you know, total Z, right should be a thing, right?

969
00:50:42,200 --> 00:50:44,000
I feel like that's just kind of a given.

970
00:50:48,800 --> 00:50:55,600
Make sense and so it feels like we should have something relatively

971
00:50:55,600 --> 00:50:56,300
sane there.

972
00:50:56,500 --> 00:50:57,600
Oops, there we go.

973
00:50:59,100 --> 00:50:59,700
Let's listen.

974
00:51:00,000 --> 00:51:00,400
That does.

975
00:51:00,400 --> 00:51:01,500
I'm going to see what that does.

976
00:51:09,600 --> 00:51:13,600
So our guy goes up and down properly, our little dude is going nuts

977
00:51:13,600 --> 00:51:23,600
down, there are, and so it looks like the entity basis Z is fine, but

978
00:51:23,700 --> 00:51:27,900
but the Z offset is doing wonky things.

979
00:51:28,100 --> 00:51:31,600
I'm not exactly sure why it's doing this wonky things.

980
00:51:31,900 --> 00:51:36,800
So, yeah, which two should take a look at what's going on with that

981
00:51:36,800 --> 00:51:38,200
with our little head dude.

982
00:51:39,100 --> 00:51:39,300
But

983
00:51:39,500 --> 00:51:40,600
Makes more sense to me.

984
00:51:40,600 --> 00:51:43,200
So we've got our entity base P.

985
00:51:43,700 --> 00:51:45,500
It does this, m, 2 pixels stuff.

986
00:51:47,600 --> 00:51:50,600
We only ever use these things in totals.

987
00:51:50,600 --> 00:51:51,600
Anyway, right?

988
00:51:51,700 --> 00:51:55,600
Like, for example, any ground Point could just have this being here.

989
00:51:55,900 --> 00:51:58,500
So we are always using

990
00:52:04,800 --> 00:52:08,200
Well, that's kind of interesting so I guess we're not so easy.

991
00:52:08,300 --> 00:52:13,800
We were Z fudging the XY of the base point of the entity so that thing

992
00:52:13,800 --> 00:52:18,600
is scaled up and down where they were but the actual stuff themselves

993
00:52:18,600 --> 00:52:20,100
didn't ever do that scaling.

994
00:52:21,200 --> 00:52:24,500
So that makes some sense depending on how we want to think of it,

995
00:52:24,500 --> 00:52:25,100
right?

996
00:52:25,600 --> 00:52:29,500
So the way that we were, the way that that's being conceptualized,

997
00:52:30,600 --> 00:52:36,400
Is that we've got sort of the concept of Z scaling on the screen so

998
00:52:36,400 --> 00:52:40,200
that, you know, if you're a lower down, if this was like further away,

999
00:52:40,200 --> 00:52:43,800
like a further level and this one was closer, right?

1000
00:52:45,000 --> 00:52:47,900
The same point would be scaled upward.

1001
00:52:47,900 --> 00:52:51,000
So like you know, if this were on screen, If This Were the screen

1002
00:52:51,000 --> 00:52:52,300
size, right?

1003
00:52:54,500 --> 00:52:58,400
Then this same point that's further away would actually be closer to

1004
00:52:58,400 --> 00:53:01,900
the center of the screen than the than on this closer one but when the

1005
00:53:01,900 --> 00:53:04,400
guy got drawn, he would still be drawn.

1006
00:53:04,400 --> 00:53:06,200
But the same relative offsets.

1007
00:53:06,400 --> 00:53:15,400
So he he doesn't actually get displaced less far when he scales that

1008
00:53:16,600 --> 00:53:20,700
Doesn't seem, I don't know.

1009
00:53:20,700 --> 00:53:23,800
So basically what that means is he doesn't come out word like that,

1010
00:53:23,800 --> 00:53:24,400
right?

1011
00:53:24,400 --> 00:53:28,200
He doesn't lean, he would never lean out in perspective.

1012
00:53:29,700 --> 00:53:33,600
That seems kind of write to me because we're not going to skew our

1013
00:53:33,600 --> 00:53:34,500
trees and stuff.

1014
00:53:34,500 --> 00:53:36,500
Like our trees will always stand upright.

1015
00:53:36,600 --> 00:53:39,600
They won't start to lean over, right?

1016
00:53:40,400 --> 00:53:42,400
When they're kind of towards the edge of the screen.

1017
00:53:42,600 --> 00:53:46,400
So I guess that, I guess that actually wants to stay basically the

1018
00:53:46,400 --> 00:53:51,100
same base of the same as it was II couldn't buy that.

1019
00:53:53,000 --> 00:53:54,200
That seems totally fair.

1020
00:53:54,800 --> 00:53:57,500
So, yeah, so really all we've got here.

1021
00:53:58,200 --> 00:53:59,300
Is that

1022
00:53:59,500 --> 00:53:59,900
Z5.

1023
00:54:00,000 --> 00:54:02,100
Value that's doing the scaling.

1024
00:54:02,300 --> 00:54:07,900
I think that suggests to me that you only want to use the entity base

1025
00:54:07,900 --> 00:54:15,000
p-value to do that scaling and you don't want to use the total Z right

1026
00:54:15,000 --> 00:54:15,700
for it.

1027
00:54:16,000 --> 00:54:20,300
You want to use the total Z only down here where we're actually doing

1028
00:54:20,600 --> 00:54:24,300
the offset by y to give it the appearance of height, right?

1029
00:54:26,400 --> 00:54:33,200
So that's like a little more correct if that makes sense and then we

1030
00:54:33,200 --> 00:54:38,900
still have to set that value down a bit but that seems about right to

1031
00:54:38,900 --> 00:54:39,300
me.

1032
00:54:40,700 --> 00:54:45,000
Yeah, and of course now our little dude has stopped freaking out which

1033
00:54:45,000 --> 00:54:45,700
is nice.

1034
00:54:50,300 --> 00:54:51,100
Yeah.

1035
00:54:52,100 --> 00:54:52,900
Yeah.

1036
00:54:53,900 --> 00:54:55,000
So that's all good.

1037
00:54:57,500 --> 00:54:58,700
I like the way this is going.

1038
00:54:59,000 --> 00:55:00,200
I like where this is going.

1039
00:55:01,400 --> 00:55:02,400
So that's all that.

1040
00:55:02,400 --> 00:55:03,800
All seems pretty sane to me.

1041
00:55:07,200 --> 00:55:10,800
I'd like to maybe just kind of document this a little bit here.

1042
00:55:11,400 --> 00:55:15,900
What I, what I do need now is something that actually comes the

1043
00:55:15,900 --> 00:55:19,900
position of the thing actually comes out in Z more.

1044
00:55:19,900 --> 00:55:24,900
So so that we actually see the action of that Z fudge happening.

1045
00:55:25,200 --> 00:55:31,000
It feels like when the guy jumps, the that should be seeing some Z

1046
00:55:31,000 --> 00:55:33,500
fudge, but of course, he's always at the center of the screen.

1047
00:55:35,500 --> 00:55:39,300
So, you can kind of see it happen here when he does his jump there.

1048
00:55:43,600 --> 00:55:44,200
Mmm-hmm.

1049
00:55:49,700 --> 00:55:53,900
What we really probably want at this point, is maybe to make to do

1050
00:55:53,900 --> 00:55:57,300
some shrinking of the just to move the camera in and out or something

1051
00:55:57,300 --> 00:56:03,400
like that so that we can see what's going on as far as that's

1052
00:56:03,400 --> 00:56:04,100
concerned.

1053
00:56:06,900 --> 00:56:08,700
Yeah, and you can kind of see as you move.

1054
00:56:08,700 --> 00:56:11,700
The guy, you can see that that change is kind of how he looks jumping.

1055
00:56:12,900 --> 00:56:14,100
Hmm.

1056
00:56:15,900 --> 00:56:17,000
Hmm.

1057
00:56:24,600 --> 00:56:28,300
But ruddiness of it always so busy and the Q&A bills now.

1058
00:56:28,300 --> 00:56:29,700
Well, alright, that's fine.

1059
00:56:29,700 --> 00:56:31,600
That's a totally reasonable stopping point.

1060
00:56:32,400 --> 00:56:36,000
I don't see any reason we need to push past that, so that's totally

1061
00:56:36,000 --> 00:56:36,400
fine.

1062
00:56:37,900 --> 00:56:39,700
We can totally go to the Q&A.

1063
00:56:41,100 --> 00:56:42,500
Let's go ahead and do that.

1064
00:56:45,600 --> 00:56:49,900
So I'd say we've made decent progress, cleaning up that stuff.

1065
00:56:49,900 --> 00:56:51,700
We've got a little bit more.

1066
00:56:51,700 --> 00:56:52,800
I think we want to do.

1067
00:56:52,800 --> 00:56:56,600
I think we probably should do tomorrow.

1068
00:56:56,600 --> 00:56:59,900
I'm guessing is we should probably put in some cameras.

1069
00:57:00,000 --> 00:57:06,100
Off so that we can kind of so we can get a better idea of exactly how

1070
00:57:06,100 --> 00:57:09,400
we want that Z to feel, when it kind of moves up and down because

1071
00:57:09,900 --> 00:57:12,300
now's that we can even hook up since we have it.

1072
00:57:12,300 --> 00:57:13,400
Our texture map were in there.

1073
00:57:13,500 --> 00:57:16,600
We can actually scale up the bitmaps like from the ground and stuff to

1074
00:57:16,600 --> 00:57:19,200
sort of see what happens when we zoom in and out and stuff like that.

1075
00:57:19,500 --> 00:57:21,200
So, that's probably what we should do tomorrow.

1076
00:57:22,100 --> 00:57:23,000
So let's see.

1077
00:57:25,200 --> 00:57:28,200
But for now, either way we should go to the Q&A.

1078
00:57:28,700 --> 00:57:30,900
So let's cut this out here.

1079
00:57:38,800 --> 00:57:42,500
Why are using a line X and a line Y instead of a V2 in the bitmap.

1080
00:57:44,000 --> 00:57:47,400
So the reason is hmm.

1081
00:57:49,500 --> 00:57:53,000
The reason that I was using it in into there is because it is an

1082
00:57:53,000 --> 00:57:55,600
actual integer and pixel coordinates that we were doing.

1083
00:57:56,000 --> 00:57:59,500
But to be honest, it doesn't super matter.

1084
00:57:59,500 --> 00:58:04,000
Like, I'd be fine with it, with it being a V2.

1085
00:58:04,300 --> 00:58:08,200
There's and, you know, I mean, it's conceivable that someone might

1086
00:58:08,200 --> 00:58:11,600
want to specify fractional coordinates, right?

1087
00:58:12,000 --> 00:58:15,500
So we could totally, we could totally do it that way.

1088
00:58:17,600 --> 00:58:18,500
That'd be fine with me.

1089
00:58:18,700 --> 00:58:19,100
We can

1090
00:58:19,200 --> 00:58:19,700
I can do that.

1091
00:58:19,700 --> 00:58:21,400
If it, if you like,

1092
00:58:23,500 --> 00:58:26,100
So, just be this right at the line.

1093
00:58:29,400 --> 00:58:31,800
And then align equals.

1094
00:58:34,100 --> 00:58:35,700
What was that set-top?

1095
00:58:37,100 --> 00:58:39,500
down the line that

1096
00:58:41,800 --> 00:58:42,100
yeah.

1097
00:58:46,500 --> 00:58:51,500
So that's just top-down a line.

1098
00:58:53,100 --> 00:58:53,900
Result.

1099
00:59:05,500 --> 00:59:09,100
Down the line Y, right?

1100
00:59:10,000 --> 00:59:11,000
I think that's right.

1101
00:59:11,000 --> 00:59:11,400
Oops.

1102
00:59:16,900 --> 00:59:22,800
And in here, obviously, we just do we just do.

1103
00:59:24,400 --> 00:59:27,300
This and yeah I mean that's that's totally fine.

1104
00:59:27,300 --> 00:59:30,700
I mean I guess that's probably I think I like that better just because

1105
00:59:31,600 --> 00:59:36,300
technically someone might want to specify a fractional a fractional

1106
00:59:36,300 --> 00:59:36,800
alignment.

1107
00:59:36,800 --> 00:59:40,800
I mean there's no I don't know that we ever would but there's no

1108
00:59:40,800 --> 00:59:43,700
reason why you couldn't specify a fraction alignment.

1109
00:59:45,200 --> 00:59:49,700
Because our renderer like, you know, the we're handling sub-pixel in

1110
00:59:49,700 --> 00:59:50,200
it, right?

1111
00:59:50,800 --> 00:59:54,000
So there's really no reason you can't do that.

1112
00:59:54,600 --> 00:59:55,000
So,

1113
01:00:03,200 --> 01:00:03,800
So, there you go.

1114
01:00:06,700 --> 01:00:07,500
So that's all good.

1115
01:00:08,600 --> 01:00:11,900
Shouldn't the shadow moves, somewhat up when he jumps because of the

1116
01:00:11,900 --> 01:00:16,400
angled view Port, know the shadow should stay on the ground.

1117
01:00:16,400 --> 01:00:20,300
I mean, the shadow should be in the same Shadows don't move when when,

1118
01:00:20,400 --> 01:00:27,400
you know, when, when, when people move, unless the light source is

1119
01:00:28,000 --> 01:00:29,800
coming from an angle, right?

1120
01:00:29,800 --> 01:00:34,200
So, you know, if this is top down, when the guy jumps, it should be

1121
01:00:34,200 --> 01:00:35,700
still below him, right?

1122
01:00:35,900 --> 01:00:38,100
If the shadow were angled in

1123
01:00:38,400 --> 01:00:40,500
Flying the light source was coming from somewhere else then when he

1124
01:00:40,500 --> 01:00:42,600
jumped it should move, right?

1125
01:00:43,400 --> 01:00:46,200
But the angle of the view Port really has nothing to do with it, if

1126
01:00:46,200 --> 01:00:48,200
the angle of the light source that would control that

1127
01:00:52,500 --> 01:00:57,300
Could you make the circle reflect a bitmap like a tree if you wanted?

1128
01:00:57,400 --> 01:01:02,500
It is reflecting a bitmap actually that's it's reflecting this, this

1129
01:01:02,500 --> 01:01:05,100
bitmap, these are bitmaps.

1130
01:01:05,200 --> 01:01:08,700
That's like, the whole point of those there bitmaps into which we're

1131
01:01:08,700 --> 01:01:11,700
going to draw out the lighting information so that we can sample from

1132
01:01:11,700 --> 01:01:16,500
them if you wanted to just prove that to yourself.

1133
01:01:16,600 --> 01:01:20,100
I mean, I don't know that this is really

1134
01:01:22,200 --> 01:01:22,900
Worth doing.

1135
01:01:22,900 --> 01:01:26,500
But you know, here's an environment map, right?

1136
01:01:27,400 --> 01:01:35,200
If we wanted to do, so we could just go ahead and and like, take the

1137
01:01:35,200 --> 01:01:37,400
drawbitmap call, right?

1138
01:01:37,900 --> 01:01:41,900
And and just say, like, okay, after we're done making this stuff, I'm

1139
01:01:41,900 --> 01:01:49,500
just going to pull on Splat a game state tree, you know.

1140
01:01:50,100 --> 01:01:51,600
Oops in

1141
01:01:52,100 --> 01:01:54,000
One of these environment Maps, right?

1142
01:01:54,100 --> 01:01:58,800
And Maps 00 or something.

1143
01:01:59,200 --> 01:02:00,900
Let's say, right?

1144
01:02:06,600 --> 01:02:11,100
So if I do that and I just say, stick it at, I don't know.

1145
01:02:12,700 --> 01:02:15,100
100 100 I don't even know where it should go.

1146
01:02:15,800 --> 01:02:18,900
And Alpha 1, we can just call the drawbitmap, call that would like

1147
01:02:18,900 --> 01:02:20,900
draw the tree in there, right?

1148
01:02:23,000 --> 01:02:23,600
In theory.

1149
01:02:26,000 --> 01:02:27,600
And and now the tree is in there.

1150
01:02:27,600 --> 01:02:31,100
And if the sphere got to the point where the tree was that you could

1151
01:02:31,100 --> 01:02:33,100
just see it there, I'll move it over a little bit.

1152
01:02:33,100 --> 01:02:36,700
It's not quite in view yet, right?

1153
01:02:39,000 --> 01:02:43,000
I don't know which I don't know where that we actually are on the

1154
01:02:43,000 --> 01:02:43,600
thing here.

1155
01:02:43,600 --> 01:02:46,700
So I'm not sure where to move the tree but you can you see it in

1156
01:02:46,700 --> 01:02:47,000
there?

1157
01:02:47,000 --> 01:02:47,800
You see the tree?

1158
01:02:49,100 --> 01:02:52,400
Right, passing by, it's going to come through again.

1159
01:02:53,500 --> 01:02:54,300
There's the tree.

1160
01:02:55,100 --> 01:02:59,800
So you know I mean it's just it's just reflecting the bitmap, it's not

1161
01:03:00,700 --> 01:03:03,300
It's not doing it the checkerboard in it, kind of specific way.

1162
01:03:06,300 --> 01:03:10,000
Can you let the orb sample from the ground or is that some time away?

1163
01:03:10,800 --> 01:03:15,500
It's not some time away, we could it would probably be you know in a

1164
01:03:15,500 --> 01:03:19,500
week or two when we formalize exactly when the ground layer happens so

1165
01:03:19,500 --> 01:03:21,700
that we then capture it out to the environment map.

1166
01:03:24,000 --> 01:03:26,800
But so yeah I mean if you wanted to do that now you just you could

1167
01:03:26,800 --> 01:03:30,800
draw some ground in there, you know.

1168
01:03:30,800 --> 01:03:36,000
Obviously you could you could take those ground chunks right now if

1169
01:03:36,100 --> 01:03:37,800
Just want to see what it looks like.

1170
01:03:38,100 --> 01:03:42,400
You could take those ground chunks right now and and draw those in

1171
01:03:42,400 --> 01:03:42,800
there.

1172
01:03:43,000 --> 01:03:46,100
So, like I could go grab, you know, ground buffers.

1173
01:03:47,600 --> 01:03:54,200
and ground buffers c0, let's say,

1174
01:03:57,400 --> 01:04:01,800
Buffer and just take the dot bitmap off of that.

1175
01:04:10,800 --> 01:04:11,900
Or maybe not.

1176
01:04:12,100 --> 01:04:14,300
I wonder if our graph because it's ground buffer zero.

1177
01:04:14,300 --> 01:04:15,500
Maybe isn't having in it.

1178
01:04:15,500 --> 01:04:16,000
I don't know.

1179
01:04:17,800 --> 01:04:19,900
Know why we're not getting our ground buffer.

1180
01:04:22,600 --> 01:04:24,000
There should be a ground buffer.

1181
01:04:25,600 --> 01:04:26,500
What am I missing here?

1182
01:04:28,300 --> 01:04:28,600
Oops.

1183
01:04:36,900 --> 01:04:38,400
How many ground buffers do we have?

1184
01:04:43,200 --> 01:04:46,300
Round buffer, count and state ground.

1185
01:04:46,300 --> 01:04:47,300
Buffer count.

1186
01:04:48,900 --> 01:04:50,900
- one do the last one.

1187
01:04:51,500 --> 01:04:51,900
There it is.

1188
01:04:53,400 --> 01:04:56,200
So that's what it would look like if it was reflecting from the

1189
01:04:56,200 --> 01:04:57,700
ground, right?

1190
01:04:59,100 --> 01:05:02,800
But again, reflecting from the ground is not quite the right thing,

1191
01:05:02,800 --> 01:05:03,300
yet.

1192
01:05:03,600 --> 01:05:10,400
The right term because at the moment we also we postponed finishing up

1193
01:05:10,400 --> 01:05:16,600
doing how all of our lighting stuff because we, you know, we wanted to

1194
01:05:16,600 --> 01:05:18,500
fix our coordinate thing coordinate system stuff.

1195
01:05:19,600 --> 01:05:23,400
So we're not quite done with this thing yet, so I would caution

1196
01:05:23,500 --> 01:05:28,000
against playing around with it a little too much because, you know,

1197
01:05:29,200 --> 01:05:31,600
it's not quite done yet, right?

1198
01:05:31,600 --> 01:05:38,000
Is all but yeah, that's that's what that would look like, right.

1199
01:05:39,700 --> 01:05:42,900
Let me see if I can get this a little more centered.

1200
01:05:47,200 --> 01:05:47,600
There you go.

1201
01:05:48,400 --> 01:05:50,400
So that's roughly what it would look like, right?

1202
01:05:50,400 --> 01:05:53,000
If it's reflecting from the ground and again, this is supposed to be

1203
01:05:53,100 --> 01:05:54,300
an additive thing.

1204
01:05:54,800 --> 01:05:58,800
So you're not really, this is not really supposed to, we're not even

1205
01:05:58,800 --> 01:05:59,600
designing this to

1206
01:06:00,000 --> 01:06:00,800
Reflective spheres.

1207
01:06:00,800 --> 01:06:02,000
This is supposed to be for lighting.

1208
01:06:02,000 --> 01:06:04,100
So what normally is you'd have the bitmap here?

1209
01:06:04,100 --> 01:06:07,900
And you'd be adding in this lighting as ground bounce, right?

1210
01:06:09,700 --> 01:06:12,900
So if we were trying to do something, whose only purpose was to

1211
01:06:12,900 --> 01:06:15,500
reflect the ground, we'd probably do it a little bit differently,

1212
01:06:15,500 --> 01:06:16,100
right?

1213
01:06:16,800 --> 01:06:17,100
Least?

1214
01:06:17,100 --> 01:06:17,900
That'd be my guess.

1215
01:06:18,900 --> 01:06:21,000
Although for the most, I guess you could mostly.

1216
01:06:21,000 --> 01:06:22,500
It's mostly doing that already.

1217
01:06:22,500 --> 01:06:24,900
But there's just a few things you might do a little differently.

1218
01:06:30,500 --> 01:06:33,100
How much zooming will the game support?

1219
01:06:34,500 --> 01:06:36,200
I'm not sure what you mean by that.

1220
01:06:37,100 --> 01:06:39,900
Obviously, you can the renderer allows you to zoom as far in as you

1221
01:06:39,900 --> 01:06:40,200
want.

1222
01:06:40,200 --> 01:06:45,000
But eventually the art is going to look stupid if you zoom in till the

1223
01:06:45,000 --> 01:06:46,500
pixel, if the pixels are too big, right?

1224
01:06:46,500 --> 01:06:49,000
So we don't want to zoom in too far.

1225
01:06:56,300 --> 01:06:58,800
I keep hearing you say entity but I take it.

1226
01:06:58,800 --> 01:07:01,700
You don't mean entity in the entity component system, sense.

1227
01:07:01,700 --> 01:07:02,900
Is that correct?

1228
01:07:03,000 --> 01:07:07,000
I think it is safe to say that I will never say anything on the stream

1229
01:07:07,000 --> 01:07:11,100
that I ever mean in The Entity component system sentence.

1230
01:07:12,900 --> 01:07:14,200
So, you can take that as a given.

1231
01:07:19,300 --> 01:07:20,800
You were going to add a comment to your Z.

1232
01:07:20,800 --> 01:07:24,900
Fudge code to say yxy was used, only not Z to avoid skewing trees

1233
01:07:24,900 --> 01:07:25,900
character Etc.

1234
01:07:26,400 --> 01:07:30,100
Yeah, I'm not sure I'm still not sure what we really want to do there

1235
01:07:30,500 --> 01:07:34,800
though, I'm not sure that I want to add a comment because I think we

1236
01:07:34,800 --> 01:07:36,700
need to do next stream, first.

1237
01:07:38,700 --> 01:07:42,600
I think we just really wanted to do here, which is like figure out

1238
01:07:42,600 --> 01:07:47,900
exactly how Z based X, Y, displacement will.

1239
01:07:48,700 --> 01:07:49,100
Work.

1240
01:07:50,700 --> 01:07:53,200
all right, because I don't really know because we've got some

1241
01:07:54,500 --> 01:07:56,700
some to dienes there to worry about.

1242
01:08:01,000 --> 01:08:04,300
I think I missed the day, but the bitmap is being texturized, using a

1243
01:08:04,300 --> 01:08:06,200
normal function into the sphere.

1244
01:08:06,200 --> 01:08:07,800
Yes, that is correct.

1245
01:08:11,000 --> 01:08:12,900
When are we going to scale the hero down?

1246
01:08:14,200 --> 01:08:14,700
Probably.

1247
01:08:15,200 --> 01:08:18,100
Right before we do animation, I would say.

1248
01:08:25,300 --> 01:08:26,399
Is that it for questions?

1249
01:08:32,899 --> 01:08:35,700
I'll wait a little bit just to make sure there are no further

1250
01:08:35,700 --> 01:08:38,800
questions before we finish up.

1251
01:08:51,500 --> 01:08:55,500
I feel like there's a bug with our edges as well on

1252
01:08:59,100 --> 01:08:59,800
We'll have to take a look at.

1253
01:09:00,000 --> 01:09:01,100
We go back to the normal stuff.

1254
01:09:01,300 --> 01:09:05,800
There's the edges are not anti aliased properly, which they should be.

1255
01:09:05,800 --> 01:09:09,200
So we've got also some Alpha stuff to look at there.

1256
01:09:16,500 --> 01:09:22,300
Would you implement a lamp in a dark room effect with Shadow mapping?

1257
01:09:26,700 --> 01:09:30,300
So are you asking about if we would Implement a lamp in a dark room in

1258
01:09:30,300 --> 01:09:32,500
handmade hero with Shadow mapping?

1259
01:09:32,800 --> 01:09:34,600
Because if so then the answer is no.

1260
01:09:35,300 --> 01:09:39,899
Because since we don't have actual depth information Shadow mapping

1261
01:09:39,899 --> 01:09:43,399
doesn't actually help us, right?

1262
01:09:46,200 --> 01:09:52,399
If you're asking, if in a 3D geometry game, you would Implement a lamp

1263
01:09:52,399 --> 01:09:54,000
in a dark room, affect your Shadow mapping.

1264
01:09:54,000 --> 01:09:57,200
The answer is yes, that is a way you could Implement a lamp in a dark

1265
01:09:57,200 --> 01:09:57,600
room.

1266
01:10:04,100 --> 01:10:05,400
Shadow mapping.

1267
01:10:06,100 --> 01:10:09,100
I mean if for people who don't know what shadow mapping is, it's very

1268
01:10:09,100 --> 01:10:09,600
simple.

1269
01:10:10,000 --> 01:10:14,700
It's just the idea that you essentially render the scene from the

1270
01:10:14,700 --> 01:10:18,700
perspective of the light source that you're trying to simulate.

1271
01:10:19,200 --> 01:10:24,200
And you remember what essentially, what surfaces you saw.

1272
01:10:24,700 --> 01:10:27,800
So that when you render the surface from the cameras point of view,

1273
01:10:27,900 --> 01:10:30,100
you can look to see did the light source.

1274
01:10:30,100 --> 01:10:32,700
See this thing that I'm about to render if it

1275
01:10:32,900 --> 01:10:35,600
If the light source didn't see it then I know it's not lit by that

1276
01:10:35,600 --> 01:10:37,200
light source, right?

1277
01:10:37,400 --> 01:10:38,400
Hence, it's in Shadow.

1278
01:10:39,900 --> 01:10:41,300
It's very, very simple concept.

1279
01:10:43,400 --> 01:10:46,100
Will there be emitters of some kind like Sparks from a fire?

1280
01:10:46,100 --> 01:10:50,000
Yes, that is why we're doing this lighting stuff is because I want to

1281
01:10:50,000 --> 01:10:51,900
have emitters.

1282
01:10:54,600 --> 01:10:57,000
So that's why we're playing around with, that's, that's the whole

1283
01:10:57,000 --> 01:10:58,700
point of doing the normal mapping.

1284
01:11:01,000 --> 01:11:02,100
So that we can do that.

1285
01:11:05,400 --> 01:11:09,200
How would you implement a lamp in a dark room effect in 2D game?

1286
01:11:09,200 --> 01:11:12,900
Well, we're going to have lamps in dark rooms so I would say stay

1287
01:11:12,900 --> 01:11:14,000
tuned and find out.

1288
01:11:14,000 --> 01:11:17,500
Really, it's this this guy right here is the dude that we're going to

1289
01:11:17,500 --> 01:11:21,000
this green texter figuring how to sample from that.

1290
01:11:21,000 --> 01:11:24,000
Green texture is going to be how we're going to do lamps in dark rooms

1291
01:11:25,800 --> 01:11:26,800
and like anything else.

1292
01:11:26,800 --> 01:11:31,600
It's kind of a hack because in 2D you can't really compute things like

1293
01:11:31,600 --> 01:11:32,000
Shadows.

1294
01:11:32,000 --> 01:11:32,700
Exactly.

1295
01:11:32,700 --> 01:11:35,000
Because the art is flat right there.

1296
01:11:35,100 --> 01:11:36,400
Art doesn't have volume.

1297
01:11:36,400 --> 01:11:40,700
So what we're going to be trying to do with that middle, that green

1298
01:11:40,700 --> 01:11:46,500
texture map is basically figure out a way to do some approximation of

1299
01:11:46,500 --> 01:11:53,300
light near field light so that we can have stuff like like lamps in a

1300
01:11:53,300 --> 01:11:53,700
dark room.

1301
01:11:53,700 --> 01:11:56,200
I don't know that we're going to have lamps per se but we don't like

1302
01:11:56,200 --> 01:11:59,900
torches potentially or fireballs and things like that.

1303
01:12:06,800 --> 01:12:10,100
Is it common in game development to use normal function for

1304
01:12:10,100 --> 01:12:10,900
texturising?

1305
01:12:10,900 --> 01:12:11,900
Is it performant?

1306
01:12:11,900 --> 01:12:14,600
Or is it much more common to break in texturising?

1307
01:12:16,300 --> 01:12:17,500
Trial Services, I'm not sure.

1308
01:12:17,500 --> 01:12:20,900
I understand the question, but basically, like every game in

1309
01:12:20,900 --> 01:12:24,600
existence, that's 3D uses normal mapping nowadays.

1310
01:12:26,500 --> 01:12:30,500
Like that's just a given normal maps are used for lighting in like

1311
01:12:30,500 --> 01:12:31,100
every game.

1312
01:12:33,000 --> 01:12:35,400
2D games often times don't

1313
01:12:36,300 --> 01:12:40,600
But that's mostly just because I think 2D games tend not to be

1314
01:12:40,600 --> 01:12:47,000
programmed by hardcore graphics people, so they're not trying to do

1315
01:12:47,000 --> 01:12:48,100
weird stuff like that.

1316
01:12:48,600 --> 01:12:52,600
But I feel like 2D games that are programmed by hard work, hard, core

1317
01:12:52,600 --> 01:12:56,300
Graphics, these sorts of people do 10 would do stuff like, have normal

1318
01:12:56,300 --> 01:12:57,500
app Sprites, right?

1319
01:12:59,100 --> 01:13:02,100
Like it that just be something you do, right?

1320
01:13:02,100 --> 01:13:05,100
And so, I think that mostly the reason you don't see more of that

1321
01:13:05,100 --> 01:13:06,000
stuff is probably

1322
01:13:06,100 --> 01:13:06,500
Oui.

1323
01:13:08,400 --> 01:13:10,000
That 2D games tend to be more.

1324
01:13:12,000 --> 01:13:15,300
Don't tend to usually have like people who like to spend a lot of

1325
01:13:15,300 --> 01:13:17,900
times on Graphics, don't, those don't tend to be the people who

1326
01:13:17,900 --> 01:13:21,700
program them, but when you do get that happening, I think it would be

1327
01:13:21,700 --> 01:13:24,400
a very straightforward thing, certainly.

1328
01:13:24,700 --> 01:13:29,600
So we're doing this in software right now unoptimized.

1329
01:13:29,700 --> 01:13:33,300
So this is an optimized software renderer that's rendering this, this

1330
01:13:33,300 --> 01:13:34,700
reflective sphere.

1331
01:13:36,900 --> 01:13:39,900
When we optimized it, I think it will be quite fast, but it's already

1332
01:13:39,900 --> 01:13:40,700
running at a frame rate.

1333
01:13:40,700 --> 01:13:42,300
You could play, right?

1334
01:13:43,200 --> 01:13:49,500
And so if we were to use the hardware, if we use the GPU, there's no

1335
01:13:49,500 --> 01:13:50,000
question.

1336
01:13:50,000 --> 01:13:51,200
This is performing enough, right?

1337
01:13:51,200 --> 01:13:55,300
I mean, the GPU would laugh at this Scene, It would have no trouble

1338
01:13:55,300 --> 01:13:56,500
rendering this, right?

1339
01:13:57,100 --> 01:14:01,700
If we could do it on the CPU at frame rate on optimize the graphics

1340
01:14:01,700 --> 01:14:02,800
card is not gonna have any trouble.

1341
01:14:02,800 --> 01:14:04,600
So there's certainly no performance concern there.

1342
01:14:07,500 --> 01:14:09,200
Insofar as well.

1343
01:14:09,200 --> 01:14:10,100
The entities have projected.

1344
01:14:10,100 --> 01:14:14,200
Shadows are just blobs, Shadows like the head has currently everything

1345
01:14:14,200 --> 01:14:18,500
will be Blobby Shadows because I do not like projected Shadows

1346
01:14:18,500 --> 01:14:22,600
largely, because they're not right, like the world.

1347
01:14:22,600 --> 01:14:25,200
Never really has projected Shadows, unless you're in strong sunlight.

1348
01:14:25,200 --> 01:14:30,800
Usually Shadows are very soft and very have a lot of complexity to

1349
01:14:30,800 --> 01:14:30,900
them.

1350
01:14:30,900 --> 01:14:35,400
So we will probably stay since we have to pick some approximation,

1351
01:14:35,400 --> 01:14:37,100
lighting wise.

1352
01:14:37,100 --> 01:14:37,400
We will

1353
01:14:37,600 --> 01:14:40,100
Probably always do soft Shadows everywhere.

1354
01:14:40,300 --> 01:14:44,500
Now we might do, we could do some things where we skew the direction,

1355
01:14:44,500 --> 01:14:48,400
the shadow grows in based on the lighting but we're never going to

1356
01:14:48,400 --> 01:14:51,500
have like hard Shadows falling because I really don't think they look

1357
01:14:51,500 --> 01:14:53,800
good in their almost never right.

1358
01:14:53,800 --> 01:14:54,100
Either.

1359
01:14:54,100 --> 01:14:57,700
Because most of the time that's not what the light would actually do.

1360
01:14:58,400 --> 01:14:59,900
Unless you're literally in

1361
01:15:00,400 --> 01:15:04,100
a room with like one very bright light and no reflective surfaces

1362
01:15:04,100 --> 01:15:06,300
behind you is to pick up that light, you know,

1363
01:15:09,200 --> 01:15:12,100
So there are seven but optimized don't you have o to on?

1364
01:15:12,800 --> 01:15:17,100
Yeah, I mean so it's kind of interesting I this is happening many

1365
01:15:17,100 --> 01:15:18,400
times on the stream so far.

1366
01:15:19,700 --> 01:15:24,700
Turning on O2 does not mean you have optimized your code that just

1367
01:15:24,700 --> 01:15:27,400
means the compiler will no longer be doing stupid.

1368
01:15:27,400 --> 01:15:30,400
Things like writing variables to and from the stack on every

1369
01:15:30,400 --> 01:15:33,300
operation, when they could have just stayed in registers, that's all

1370
01:15:33,400 --> 01:15:37,100
oh to does 02, does not optimize your code.

1371
01:15:37,100 --> 01:15:40,900
Your code is still lousy, just if you turn on O2, it's still

1372
01:15:41,000 --> 01:15:42,000
unoptimized code.

1373
01:15:42,000 --> 01:15:45,100
It's just code where the compiler isn't doing stupid things.

1374
01:15:45,200 --> 01:15:47,100
That's what O2 is, right?

1375
01:15:48,000 --> 01:15:51,200
So when I say the code is unoptimized, what I mean is we have not

1376
01:15:51,300 --> 01:15:55,600
actually done any work to actually make sure the code runs, he's is

1377
01:15:56,000 --> 01:16:03,800
written to perform quickly and so yeah we don't have debug on so we're

1378
01:16:03,800 --> 01:16:07,000
not like writing stuff back and forth to cycle time but that in no way

1379
01:16:07,000 --> 01:16:08,300
makes this optimized code.

1380
01:16:08,500 --> 01:16:13,000
This code is extremely slow right now and just not having a compiler.

1381
01:16:13,000 --> 01:16:16,300
Add more slowness to it does not make it optimized code.

1382
01:16:21,100 --> 01:16:23,800
Will the shadow be reflected in the normal map?

1383
01:16:26,200 --> 01:16:30,600
Well, anything that we put into our light field will be reflected in

1384
01:16:30,600 --> 01:16:33,500
the normal map, so if you put Shadows into it, then it would be if you

1385
01:16:33,500 --> 01:16:34,000
don't, then it.

1386
01:16:34,000 --> 01:16:35,200
Wouldn't that make sense?

1387
01:16:38,800 --> 01:16:41,200
Will the particle effects system interact with the normal map

1388
01:16:41,300 --> 01:16:43,000
certainly in for emitters.

1389
01:16:44,600 --> 01:16:47,400
I don't know about for other things whether we'd want to or not,

1390
01:16:48,700 --> 01:16:51,400
But yeah for anything that was like a particle emitter like fire or

1391
01:16:51,400 --> 01:16:52,400
stuff than that.

1392
01:16:52,400 --> 01:16:55,300
Obviously that's the whole point of doing this system was for the

1393
01:16:55,300 --> 01:17:00,100
lighting so we'd want that to to do to do it right.

1394
01:17:15,000 --> 01:17:16,000
Anything else?

1395
01:17:28,100 --> 01:17:29,200
Looks like that's about it.

1396
01:17:31,000 --> 01:17:31,600
All right.

1397
01:17:33,600 --> 01:17:39,600
Let me go ahead and close things down for the day, then save.

1398
01:17:41,300 --> 01:17:42,900
Mischief has been saved.

1399
01:17:44,600 --> 01:17:45,400
All right.

1400
01:17:46,900 --> 01:17:50,600
Well, it is time once again to wrap up handmade here for the day.

1401
01:17:50,600 --> 01:17:51,800
Thank you, everyone for joining me.

1402
01:17:51,800 --> 01:17:56,000
It's been a pleasure coding with you, as always, we are.

1403
01:17:56,100 --> 01:17:58,700
Yeah, I think we're making good progress towards solidifying.

1404
01:17:58,700 --> 01:17:59,400
Our renderer,

1405
01:18:00,000 --> 01:18:01,400
We've got a little bit more work.

1406
01:18:01,400 --> 01:18:04,400
I want to do with the Z stuff so I think tomorrow might be the day

1407
01:18:04,400 --> 01:18:09,600
where we start drawing some things that some a couple floors that kind

1408
01:18:09,600 --> 01:18:12,500
of where you can see down to you know from one floor to another floor

1409
01:18:12,500 --> 01:18:15,500
or something like that so we can kind of get a feel for how that's

1410
01:18:15,500 --> 01:18:15,900
going to work.

1411
01:18:16,000 --> 01:18:18,500
I think that's what we're going to need to do to start solidifying,

1412
01:18:18,500 --> 01:18:21,400
our Z stuff, but we're getting really close here.

1413
01:18:21,700 --> 01:18:23,000
I'm feeling pretty good about this.

1414
01:18:23,200 --> 01:18:25,500
So, yeah, it's exciting should be a fun.

1415
01:18:25,500 --> 01:18:28,400
Couple of weeks of just doing fun render stuff here and kind of

1416
01:18:28,400 --> 01:18:29,800
getting our gaming too.

1417
01:18:30,000 --> 01:18:33,000
Place where we're comfortable with how it looks and how it runs.

1418
01:18:33,000 --> 01:18:33,600
So, that's cool.

1419
01:18:34,900 --> 01:18:38,600
So I hope you will join me tomorrow for the next step in that again,

1420
01:18:38,600 --> 01:18:42,000
five PM, same placed which hope to see you there.

1421
01:18:42,300 --> 01:18:45,000
In the meantime, if you do want to play around with the source code,

1422
01:18:45,000 --> 01:18:48,200
you can always pre-order the game on handmade here at up org and it

1423
01:18:48,200 --> 01:18:48,900
comes with a source code.

1424
01:18:48,900 --> 01:18:49,700
I updated every night.

1425
01:18:49,700 --> 01:18:52,600
So if you want to play around stuff you saw on today's stream, that's

1426
01:18:52,600 --> 01:18:53,600
an easy way to do it.

1427
01:18:54,000 --> 01:18:56,400
We also have a patreon page if you want to support the video series,

1428
01:18:56,400 --> 01:18:57,400
you subscribe to that.

1429
01:18:57,400 --> 01:18:58,600
So he's very appreciated.

1430
01:18:59,100 --> 01:18:59,700
We have a

1431
01:19:00,000 --> 01:19:02,900
I'm site where you can catch up on old videos, there's an annotated

1432
01:19:03,000 --> 01:19:04,900
Video Guide to the previous episodes.

1433
01:19:05,300 --> 01:19:06,600
There's also ports to Mac and Linux.

1434
01:19:06,600 --> 01:19:09,500
If you try to follow along on a platform it's not Windows and you

1435
01:19:09,500 --> 01:19:10,300
don't want to have to do that.

1436
01:19:10,300 --> 01:19:11,000
Porting work yourself.

1437
01:19:11,000 --> 01:19:14,900
There's stuff on there that shows you how to do that and there's also

1438
01:19:14,900 --> 01:19:17,100
a place to ask questions so if you have questions that you don't get a

1439
01:19:17,100 --> 01:19:19,900
chance to ask them on the Q&A or you don't watch this live and you

1440
01:19:19,900 --> 01:19:21,500
want to ask questions, that's great place to do it.

1441
01:19:22,000 --> 01:19:23,900
There's also a tweetbot the tweets, the schedule.

1442
01:19:24,100 --> 01:19:26,400
So if you're trying to catch the stream live, just go ahead and check

1443
01:19:26,400 --> 01:19:27,800
out that tweetbot.

1444
01:19:28,000 --> 01:19:29,500
It tweets a schedule every week.

1445
01:19:29,900 --> 01:19:33,300
Weekend and also in the mornings and at nights it'll tweet when the

1446
01:19:33,300 --> 01:19:34,800
stream is going to be for that day.

1447
01:19:35,000 --> 01:19:36,900
So it's a great thing to check out if you're trying to catch it live

1448
01:19:37,800 --> 01:19:38,200
once again.

1449
01:19:38,200 --> 01:19:40,700
Thanks everyone for joining me and I hope to see you guys tomorrow.

1450
01:19:41,300 --> 01:19:42,900
Have a good day until then.

1451
01:19:42,900 --> 01:19:43,700
Take it easy, everyone.

