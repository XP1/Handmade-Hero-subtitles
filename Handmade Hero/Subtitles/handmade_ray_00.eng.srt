1
00:00:00,500 --> 00:00:03,400
I have cycled the recording you couldn't see it because it's on the

2
00:00:03,400 --> 00:00:04,400
other machine now.

3
00:00:05,600 --> 00:00:09,200
But hello everyone and welcome to handmade here of the show where we

4
00:00:09,200 --> 00:00:11,600
code a complete game live on stream.

5
00:00:11,600 --> 00:00:13,200
This is our first Dream.

6
00:00:13,300 --> 00:00:20,500
Officially back, trying to see if we can use the new machine setup to

7
00:00:20,500 --> 00:00:22,200
successfully stream some programming.

8
00:00:22,200 --> 00:00:26,600
Now, for those of you who have been following us, you may wonder why

9
00:00:26,600 --> 00:00:27,800
there is such a long break.

10
00:00:28,000 --> 00:00:30,000
The reason they were such a long break is because

11
00:00:30,500 --> 00:00:35,000
We stopped programming on handmade Hero on the last episode because I

12
00:00:35,000 --> 00:00:40,400
crashed the computer that was streaming because the AMD drivers did

13
00:00:40,400 --> 00:00:42,300
not like some of the Shader code, we sent them.

14
00:00:43,300 --> 00:00:47,600
Now at that point I decided that what we would probably have to do is

15
00:00:47,600 --> 00:00:50,200
build a to machine streaming setup, because if we wanted to do some

16
00:00:50,200 --> 00:00:54,600
Advanced Shader work, we were likely to keep crashing things because

17
00:00:54,600 --> 00:00:57,900
video drivers crash, I should shouldn't say crash computer.

18
00:00:57,900 --> 00:01:00,500
We didn't crash bureaucrats the video driver, but crashing, the videos

19
00:01:00,500 --> 00:01:03,000
driver takes down, OBS, which takes down the stream.

20
00:01:05,300 --> 00:01:09,100
So, what I did is I ordered some computer parts and I built two new

21
00:01:09,100 --> 00:01:13,000
computers, which would have been ready about two weeks after that last

22
00:01:13,000 --> 00:01:13,600
stream.

23
00:01:14,000 --> 00:01:16,200
However, one of them just did not work properly.

24
00:01:16,200 --> 00:01:18,400
It was super flaky, it would blue screen all the time.

25
00:01:18,700 --> 00:01:23,600
I tried testing it with mem test and had all kinds of weird Ram errors

26
00:01:23,600 --> 00:01:24,100
on it.

27
00:01:25,000 --> 00:01:27,400
I tried replacing just about everything and swapping all sorts of

28
00:01:27,400 --> 00:01:28,600
things much just in the system.

29
00:01:28,900 --> 00:01:32,200
After several weeks of debugging, I finally figured out that oddly

30
00:01:32,200 --> 00:01:32,600
enough.

31
00:01:32,600 --> 00:01:34,200
It was a bad CPU.

32
00:01:34,500 --> 00:01:34,900
It was a

33
00:01:35,100 --> 00:01:41,100
Core i7 7 700k probably, that's my fault for not having read up about

34
00:01:41,100 --> 00:01:41,400
this.

35
00:01:41,400 --> 00:01:43,900
I 7700 case, apparently, they're not very good.

36
00:01:45,000 --> 00:01:46,200
So that was kind of dumb.

37
00:01:46,200 --> 00:01:47,300
I don't know why I ordered one.

38
00:01:47,300 --> 00:01:50,300
I think I was just in a rush and I didn't do my homework.

39
00:01:51,700 --> 00:01:55,000
So I ended up having to are met through Intel, which took a while

40
00:01:55,400 --> 00:01:55,800
eventually.

41
00:01:55,800 --> 00:01:59,100
I got the chip back and was able to finish the machine builds, like,

42
00:01:59,100 --> 00:02:02,900
two months later or something like this, so it took a long time, then

43
00:02:02,900 --> 00:02:04,600
we got the machine set up.

44
00:02:05,000 --> 00:02:08,100
And we tested streaming last weekend, and now, it seems like things

45
00:02:08,100 --> 00:02:08,800
are working well enough.

46
00:02:08,800 --> 00:02:12,400
I think we can start programming again here on the new machines.

47
00:02:12,700 --> 00:02:15,900
Part of the new machine built also meant replacing the Aging

48
00:02:16,100 --> 00:02:17,100
ten-year-old machine.

49
00:02:17,100 --> 00:02:19,000
Well, I guess, is only 7 or 8 years old.

50
00:02:19,000 --> 00:02:22,800
This point with a modern machine, which is pretty great because it's

51
00:02:22,800 --> 00:02:25,200
like way faster than our old machine like way.

52
00:02:25,200 --> 00:02:29,500
Way faster and made, here are probably runs at a Breakneck Pace

53
00:02:29,500 --> 00:02:31,300
nowadays compared to what it used to run at.

54
00:02:32,500 --> 00:02:34,700
But anyway, the core i7

55
00:02:35,000 --> 00:02:38,600
Good K is now working fine and we can program on it.

56
00:02:38,600 --> 00:02:39,900
We also have a modern GPU.

57
00:02:39,900 --> 00:02:43,200
It's a 1080 in here, so we can play around with stuff.

58
00:02:43,200 --> 00:02:47,000
All we want and have full horsepower opengl 4.5.

59
00:02:47,000 --> 00:02:51,100
If we wanted anything else we want to play with is on the table.

60
00:02:52,100 --> 00:02:55,400
However, I don't want to start with that today because I don't know if

61
00:02:55,400 --> 00:02:58,200
this setup is really going to work for recording and uploading videos

62
00:02:58,200 --> 00:02:59,500
to like actually do 1 1.

63
00:02:59,500 --> 00:02:59,800
So this

64
00:03:00,000 --> 00:03:04,400
First episode here, I just want to do some basic programming.

65
00:03:05,600 --> 00:03:07,600
On something, not handmade he related.

66
00:03:07,600 --> 00:03:10,600
So, if we lose the stream, it's no big deal.

67
00:03:11,200 --> 00:03:14,200
And nobody has to cry themselves to sleep about it.

68
00:03:14,900 --> 00:03:20,700
Now, all I have to do to get our set up working, here is substitute

69
00:03:20,700 --> 00:03:21,100
that W.

70
00:03:21,100 --> 00:03:21,400
Dr.

71
00:03:21,400 --> 00:03:22,200
I believe.

72
00:03:22,200 --> 00:03:26,000
And then, we already set up everything on the previous stream, to be

73
00:03:26,000 --> 00:03:28,700
exactly like it was on the old machine.

74
00:03:28,700 --> 00:03:31,900
So you shouldn't have to learn anything new about what I'm doing.

75
00:03:32,100 --> 00:03:32,900
It's the W.

76
00:03:32,900 --> 00:03:33,200
Dr.

77
00:03:33,200 --> 00:03:35,300
Very similar to the old W Drive.

78
00:03:36,500 --> 00:03:42,200
It has all of our same commands built into it that we used to have and

79
00:03:42,200 --> 00:03:46,500
all the same programs installed like for coder and Milton and so on.

80
00:03:47,000 --> 00:03:49,500
So it's really basically identical.

81
00:03:53,000 --> 00:03:56,400
You shouldn't notice anything that I had to do, all this reset up, but

82
00:03:56,400 --> 00:04:01,000
you who are following along at home with a series, should not have to

83
00:04:01,000 --> 00:04:03,200
worry at all about what happened?

84
00:04:03,200 --> 00:04:07,100
You should be able to plow straight through exactly where we left off

85
00:04:07,200 --> 00:04:08,000
from now on.

86
00:04:09,500 --> 00:04:14,300
So we don't really have much in the way of goals for today.

87
00:04:14,300 --> 00:04:19,800
Again, I'm just going to do some light programming and I'm going to

88
00:04:20,800 --> 00:04:21,700
just verify

89
00:04:22,000 --> 00:04:25,100
That everything went okay, that everyone could read everything, that

90
00:04:25,100 --> 00:04:28,700
there was nothing particularly busted going on.

91
00:04:30,500 --> 00:04:32,800
So all I'm going to do for starters is I'm going to go into the

92
00:04:32,800 --> 00:04:38,400
handmade directory and inside there, I'm just going to make people

93
00:04:38,400 --> 00:04:40,900
were asking me to play around with a ray Tracer, a little bit.

94
00:04:41,300 --> 00:04:45,900
So I'm going to go ahead and make a ray directory here and I'm just

95
00:04:45,900 --> 00:04:49,300
going to go ahead and copy out of the code directory.

96
00:04:49,300 --> 00:04:50,700
We have a build up at.

97
00:04:50,700 --> 00:04:51,600
I'm going to copy that.

98
00:04:51,800 --> 00:04:55,200
Tin to the ray tracing directory.

99
00:04:55,200 --> 00:04:57,800
I guess, I don't need to specify the name there, I can just do that,

100
00:04:58,800 --> 00:05:04,800
and if I open up that code directory there, oops, Ray directory,

101
00:05:04,800 --> 00:05:09,200
there, and look at the build-up at, I should be able to get rid of a

102
00:05:09,200 --> 00:05:14,900
lot of this code, but I can keep it in place for just doing the bill

103
00:05:14,900 --> 00:05:18,200
the same way it normally gets built, right?

104
00:05:19,200 --> 00:05:21,600
So what I'm going to do is I'm going to get rid of

105
00:05:21,800 --> 00:05:23,200
Some of this stuff, you know, what's interesting.

106
00:05:23,200 --> 00:05:25,300
We could take out this handmade streaming stuff, even the regular

107
00:05:25,300 --> 00:05:28,700
build now because since we're streaming by capturing the HDMI output,

108
00:05:28,700 --> 00:05:30,400
we don't need to worry about that anymore.

109
00:05:30,400 --> 00:05:32,600
I don't think but that's a separate issue.

110
00:05:34,200 --> 00:05:38,800
So anyway, we're going to do a build into the same build directory.

111
00:05:39,200 --> 00:05:42,100
We're not going to do any of the fancier stuff that we do here.

112
00:05:42,100 --> 00:05:48,500
We're just going to do one really simple, build right here where we

113
00:05:48,800 --> 00:05:54,200
let's see here, do the main build.

114
00:05:54,300 --> 00:05:59,900
Like that is all we're going to do and if we look here, we've got

115
00:06:00,900 --> 00:06:04,300
Sort of the build of the handmade win32.

116
00:06:04,300 --> 00:06:06,200
You know this sort of nonsense here.

117
00:06:06,700 --> 00:06:10,600
What I want to do is switch this to building Ray and we'll just call

118
00:06:10,600 --> 00:06:11,900
this Ray dot CPP.

119
00:06:13,700 --> 00:06:16,600
And we don't need to Output a map file specially or anything like

120
00:06:16,600 --> 00:06:17,100
that.

121
00:06:17,400 --> 00:06:20,500
We should just be able to do a simple line like this and that should

122
00:06:20,500 --> 00:06:20,800
build.

123
00:06:20,800 --> 00:06:24,800
I think a ray tracing program for us without a lot of fuss.

124
00:06:24,800 --> 00:06:30,000
So I'm going to make one cure and I'm just going to include standard

125
00:06:30,000 --> 00:06:31,000
IO, dot h.

126
00:06:31,000 --> 00:06:35,900
And I'm just going to type in a boilerplate c program, nothing fancy

127
00:06:36,500 --> 00:06:42,000
just a, you know, exactly what you would see in any kind of a

128
00:06:44,100 --> 00:06:48,800
I see, put see, basic C, programming book that's like my first C

129
00:06:48,800 --> 00:06:49,800
program, right?

130
00:06:50,300 --> 00:06:54,800
And so we'll just go ahead and do a printf Hello World kind of a

131
00:06:54,800 --> 00:06:57,800
thing, and that should make us a program.

132
00:06:57,800 --> 00:07:02,200
Now, when I build this, hopefully if the build works properly, things

133
00:07:02,200 --> 00:07:03,100
should be OK.

134
00:07:04,000 --> 00:07:05,600
Wait, am I not in the right directory?

135
00:07:05,600 --> 00:07:08,900
Hero and I have to make a project file in for a coder probably as

136
00:07:08,900 --> 00:07:10,700
well, so that it knows.

137
00:07:12,800 --> 00:07:13,600
What we're doing here.

138
00:07:14,600 --> 00:07:17,100
If you remember correctly, I sort of have this concept of a project

139
00:07:17,100 --> 00:07:18,700
file that sets the build directory.

140
00:07:19,500 --> 00:07:23,700
I kind of made that as part of my config so I want one of these as

141
00:07:23,700 --> 00:07:29,300
well for my re-program just so I can have that work properly.

142
00:07:29,800 --> 00:07:35,600
So if I go into that re-project, I just need to make sure that it's

143
00:07:35,600 --> 00:07:38,100
instead of looking in that directory, it's looking in this directory.

144
00:07:38,100 --> 00:07:40,800
Both the top line is for the build, the bottom line is to like load

145
00:07:40,800 --> 00:07:42,000
the source code, right?

146
00:07:42,500 --> 00:07:46,700
So now in theory, maybe if I did that right and I load that

147
00:07:46,700 --> 00:07:49,500
re-project, if I do a build it should build, there we go.

148
00:07:50,700 --> 00:07:53,500
And presumably if I look back in that build directory.

149
00:07:53,500 --> 00:07:55,700
Now I've got the radon exe, there it is.

150
00:07:56,900 --> 00:08:00,700
So if I run it I should get my hello world and I do, right?

151
00:08:01,600 --> 00:08:03,800
So that's all well and good.

152
00:08:04,100 --> 00:08:07,700
And so now the question is people wanted to we wanted to make a ray

153
00:08:07,700 --> 00:08:08,300
tracer.

154
00:08:12,800 --> 00:08:14,300
which is something again that

155
00:08:16,100 --> 00:08:17,800
Is a simple program.

156
00:08:18,200 --> 00:08:19,500
Well, some of them are very complicated.

157
00:08:19,500 --> 00:08:21,900
Actually, in commercial programs, like something like Maxwell, for

158
00:08:21,900 --> 00:08:22,400
example.

159
00:08:25,500 --> 00:08:29,200
But a ray Tracer is a program which fundamentally renders images of

160
00:08:29,200 --> 00:08:32,200
something, whatever you have as a data description language.

161
00:08:32,200 --> 00:08:35,700
You know, maybe they load scenes from Maya or maybe they,

162
00:08:37,299 --> 00:08:39,900
Are a bunch of spheres sitting on the checkerboard which is much more

163
00:08:39,900 --> 00:08:40,299
common.

164
00:08:41,500 --> 00:08:45,300
But a ray Tracer is essentially a program that renders scenes by

165
00:08:45,500 --> 00:08:51,400
taking a camera location in the world that they've created and sending

166
00:08:51,400 --> 00:08:55,100
individual lines out into the world to see what they hit and based on

167
00:08:55,100 --> 00:08:57,800
what they hit, they produce an image.

168
00:08:57,800 --> 00:08:59,800
So we will do a really, really basic

169
00:09:00,000 --> 00:09:08,500
One of these to start with, you will have very little in the way.

170
00:09:11,400 --> 00:09:14,800
Of solid math in it because I'm just going to do the most basic thing

171
00:09:15,400 --> 00:09:17,100
and then periodically from time to time.

172
00:09:17,100 --> 00:09:22,300
If we want to we can go back into it and make like parts of it like

173
00:09:22,300 --> 00:09:25,100
the lens simulation or something be realistic.

174
00:09:25,100 --> 00:09:28,900
Instead of just a dumb you know pass through kind of thing.

175
00:09:28,900 --> 00:09:32,400
Like what we're going to do now, we're we're essentially doing almost

176
00:09:32,400 --> 00:09:33,900
nothing physical at, all right?

177
00:09:33,900 --> 00:09:39,200
We're just doing the most basic most trivial things that you can do.

178
00:09:40,000 --> 00:09:41,000
So, here's

179
00:09:41,200 --> 00:09:42,400
I would like to start with.

180
00:09:44,000 --> 00:09:48,900
I would like to start with the way of saving an image and we can

181
00:09:49,600 --> 00:09:52,400
leverage the fact that we've already done this on handmade hero.

182
00:09:53,100 --> 00:09:58,400
We already have ways of loading a bitmap, if you remember correctly.

183
00:09:58,400 --> 00:09:59,900
We wrote this into.

184
00:09:59,900 --> 00:10:04,100
I think it's in our simple preprocessor now where we've got a like a

185
00:10:04,100 --> 00:10:06,600
BMP loader in here somewhere.

186
00:10:06,700 --> 00:10:07,600
Oh not simple preprocessor.

187
00:10:07,600 --> 00:10:08,000
Sorry.

188
00:10:08,200 --> 00:10:09,800
It's our simple asset.

189
00:10:13,200 --> 00:10:16,900
There is test asset Builder if you remember correctly.

190
00:10:16,900 --> 00:10:21,100
So we've got this this thing in our asset pricing code that we wrote

191
00:10:21,100 --> 00:10:23,500
and you can go back and reference it which is basically just like

192
00:10:23,500 --> 00:10:24,600
loads in a bitmap.

193
00:10:25,000 --> 00:10:28,100
And what we want our raytracer to do is the opposite of that, right?

194
00:10:28,100 --> 00:10:31,700
We want our raytracer to Output a bitmap and fundamentally speaking.

195
00:10:31,700 --> 00:10:35,700
If we already know how to read a bitmap in, we should know how to

196
00:10:35,700 --> 00:10:37,600
write a bitmap out, right?

197
00:10:37,600 --> 00:10:39,400
It should just be the inverse process.

198
00:10:39,600 --> 00:10:41,600
So if I want to write a bitmap

199
00:10:41,800 --> 00:10:46,800
Should be able to take essentially the same process that I was doing

200
00:10:46,800 --> 00:10:47,600
here, right?

201
00:10:47,600 --> 00:10:50,700
Where we sort of, I could modernize these two that we sort of Switched

202
00:10:50,700 --> 00:10:53,400
how we decided to write our Types on handmade hero.

203
00:10:53,400 --> 00:10:56,700
I can modernize these real quick here.

204
00:11:00,000 --> 00:11:01,700
I like the short names a lot.

205
00:11:02,000 --> 00:11:04,900
I switch to them recently and just really enjoy their conciseness.

206
00:11:06,600 --> 00:11:09,700
So we can go ahead and do this exact same thing where we sort of have

207
00:11:09,700 --> 00:11:15,400
this notion of hey here is what a bitmap looks like on disk and rather

208
00:11:15,400 --> 00:11:19,400
than using sort of the load bitmap procedure, which loads went in, we

209
00:11:19,400 --> 00:11:22,600
can do the opposite which is just something that writes one out,

210
00:11:22,700 --> 00:11:23,300
right?

211
00:11:24,400 --> 00:11:29,200
And so that's the first thing that we want to do is be able to write

212
00:11:29,200 --> 00:11:34,100
some code that just creates a bitmap and saves it to the drive because

213
00:11:34,100 --> 00:11:36,700
that will allow us to Output our image to something.

214
00:11:36,700 --> 00:11:41,000
We can see, we don't need this to use any Windows specific functions.

215
00:11:41,100 --> 00:11:45,000
Because if we just write a file to a drive, then any any operating

216
00:11:45,000 --> 00:11:48,500
system at all Linux, Mac, Windows, whatever.

217
00:11:49,000 --> 00:11:52,300
If there's a program at the can read a BMP file, which they all can,

218
00:11:53,000 --> 00:11:53,600
then this rate

219
00:11:53,800 --> 00:11:58,200
Her will just work and that is far preferable to opening a window or

220
00:11:58,200 --> 00:11:59,100
something like that.

221
00:11:59,100 --> 00:11:59,800
Where we would then

222
00:12:00,000 --> 00:12:03,000
Hand on the operating system where some libraries that are dependent

223
00:12:03,000 --> 00:12:04,600
on operating systems or whatever to run.

224
00:12:07,200 --> 00:12:14,000
So lucky for us, we can leverage that sort of niceness there.

225
00:12:14,000 --> 00:12:16,700
So let's go ahead and try to get that working.

226
00:12:17,600 --> 00:12:21,400
The first thing we're going to need is to figure out how big of a

227
00:12:21,800 --> 00:12:22,900
image we want to render.

228
00:12:23,100 --> 00:12:29,300
So let's just say that we have a sort of output width and we're going

229
00:12:29,300 --> 00:12:32,800
to set that to 1920 and an output height, and we're going to set that

230
00:12:32,800 --> 00:12:33,300
to 1080.

231
00:12:33,300 --> 00:12:36,100
So we're just going to make a, you know what, since I'm streaming at

232
00:12:36,100 --> 00:12:36,900
1920 1080 and

233
00:12:37,100 --> 00:12:39,400
Probably don't want this to go full screen at the moment.

234
00:12:39,600 --> 00:12:41,500
Let's actually do something a little smaller.

235
00:12:41,500 --> 00:12:46,700
Let's do 1280 by 720 so it's so it will fit in a nice window we can

236
00:12:46,800 --> 00:12:48,700
see on the screen without without much fuss.

237
00:12:49,000 --> 00:12:49,400
Okay?

238
00:12:50,200 --> 00:12:54,400
So let's say we have an output with and output height and we're going

239
00:12:54,400 --> 00:13:00,300
to Output, let's say just rgba pixels and so we're just going to do

240
00:13:00,300 --> 00:13:05,400
standard 4 bits per pixel, how you know, where we going to put this

241
00:13:05,400 --> 00:13:05,900
data, right?

242
00:13:05,900 --> 00:13:06,900
Like, how are we going to get?

243
00:13:07,000 --> 00:13:08,300
Put this data in something.

244
00:13:08,700 --> 00:13:13,200
Well, I would say, let's go ahead and moloch chunk of memory that we

245
00:13:13,200 --> 00:13:19,800
can use for storing this and will make each pixel just be again and

246
00:13:20,000 --> 00:13:21,900
sort of an RGB value, right?

247
00:13:22,400 --> 00:13:26,200
So I'm just going to have a pointer here to the output pixels.

248
00:13:26,500 --> 00:13:31,000
And I'm just going to mallik again, very simply here a chunk of

249
00:13:31,000 --> 00:13:31,400
memory.

250
00:13:31,400 --> 00:13:34,000
Now, you know that we don't, you may be unfamiliar with me a lot

251
00:13:34,000 --> 00:13:36,900
because we wrote Our Own memory allocation on handmade here.

252
00:13:37,900 --> 00:13:40,600
Be kind of because again we were writing a full game with like a

253
00:13:40,600 --> 00:13:42,200
complete platform and all this stuff.

254
00:13:42,300 --> 00:13:44,900
I'm just writing a simple Ray Tracer here, we're just using the C

255
00:13:44,900 --> 00:13:49,900
runtime Library so the C runtime Library which I really don't use on

256
00:13:49,900 --> 00:13:50,400
handmade here.

257
00:13:50,400 --> 00:13:53,900
Hardly at all is provides a memory allocator as well.

258
00:13:53,900 --> 00:13:57,100
It's called malloc it's just think if it is the same as like virtual

259
00:13:57,100 --> 00:13:59,500
Alec it's very different because it's actually much higher level and

260
00:13:59,500 --> 00:14:03,300
sits on top of virtual I like basically but for our intents and

261
00:14:03,300 --> 00:14:06,400
purposes it's the way we can get memory in a platform.

262
00:14:07,000 --> 00:14:09,800
Like way from the C runtime Library that's built into every C

263
00:14:09,800 --> 00:14:10,600
compiler.

264
00:14:11,300 --> 00:14:15,000
That comes every second power so that we know that it will somehow

265
00:14:15,000 --> 00:14:17,800
call something in the Opera system on Windows, it will be virtually

266
00:14:17,800 --> 00:14:20,900
lock eventually to get memory for our backing store.

267
00:14:21,300 --> 00:14:23,800
Now, it's worth remembering that just because we never really talked

268
00:14:23,800 --> 00:14:24,600
to us in here.

269
00:14:25,100 --> 00:14:27,500
When you use something like a sea, runtime libraries Malik.

270
00:14:28,100 --> 00:14:33,400
It's actually weirdly optimized thing that keeps free lists and does a

271
00:14:33,400 --> 00:14:34,600
bunch of work behind your back.

272
00:14:34,800 --> 00:14:36,900
So when you call Mal que have no idea what's going on it,

273
00:14:37,000 --> 00:14:39,800
Could be reused cycling, a piece of memory that Gottfried before.

274
00:14:39,900 --> 00:14:42,400
It could be talking down to Virtual lock to get new memory to give

275
00:14:42,400 --> 00:14:44,800
you, you have no idea what it's doing.

276
00:14:44,800 --> 00:14:48,000
You just know that it's going to give you some memory, you can use the

277
00:14:48,000 --> 00:14:49,000
size that you wanted.

278
00:14:50,200 --> 00:14:54,000
Okay, so I'm going to go ahead and take the size of you 32, which, of

279
00:14:54,000 --> 00:14:54,800
course is for.

280
00:14:55,000 --> 00:14:59,600
I'm going to take the output with and the output height here and I'm

281
00:14:59,600 --> 00:14:59,900
just going

282
00:15:00,300 --> 00:15:01,900
Allocate that chunk of memory.

283
00:15:02,000 --> 00:15:05,900
So now I know I have output pixels that I can use.

284
00:15:06,400 --> 00:15:09,200
I'm then going to go ahead and just write something to the output

285
00:15:09,200 --> 00:15:12,500
pixels so that I can verify that I'm writing things correctly.

286
00:15:15,600 --> 00:15:16,800
When I say about this bitmap.

287
00:15:16,800 --> 00:15:21,400
So what I'm going to do here is say I've got an out pointer that out

288
00:15:21,400 --> 00:15:24,600
pointer is going to equal the output pixels.

289
00:15:24,700 --> 00:15:29,100
I'm done going to step through each pixel and I'm going to use an X Y

290
00:15:29,600 --> 00:15:31,700
so that I can change it to a checkerboard or something in the future

291
00:15:31,700 --> 00:15:32,400
if I want to.

292
00:15:32,900 --> 00:15:37,500
So, I'm going to say that I have a y coordinate, the y coordinate as

293
00:15:37,500 --> 00:15:40,300
less than the output height and then I'm going to increment it.

294
00:15:40,300 --> 00:15:43,600
I'm going to say that I have an x coordinate and the x coordinate is

295
00:15:43,600 --> 00:15:45,200
going to be less than the output with.

296
00:15:45,500 --> 00:15:48,900
I mean increment that and then I'm just going to go through and,

297
00:15:48,900 --> 00:15:50,900
because I've decided to order this.

298
00:15:50,900 --> 00:15:53,100
Now, remembered, we Malkin piece of memory.

299
00:15:53,200 --> 00:15:58,800
We have a lot of options about how we wish to treat that memory.

300
00:15:58,800 --> 00:16:03,300
I got us enough memory to store 1280, x, 10, 720 X for, which is a

301
00:16:03,300 --> 00:16:08,000
whole screens worth of rgba pixels at eight bytes per Channel.

302
00:16:08,000 --> 00:16:12,600
But we haven't specified what we mean by this chunk of memory.

303
00:16:12,900 --> 00:16:14,900
I'm choosing to represent it as

304
00:16:15,300 --> 00:16:20,700
Eating where each successive 32-bit value in that chunk of memory is a

305
00:16:20,700 --> 00:16:22,700
separate pixel along X.

306
00:16:22,900 --> 00:16:26,100
And when we get through 1280 of those pixels, we're going to go to the

307
00:16:26,100 --> 00:16:26,800
next line.

308
00:16:27,300 --> 00:16:30,000
We haven't decided yet whether we're bottom up or top down.

309
00:16:31,200 --> 00:16:35,000
We can decide that a little bit later, but right now it doesn't matter

310
00:16:35,000 --> 00:16:38,500
because all the only difference will be whether our image is flipped

311
00:16:38,500 --> 00:16:40,100
vertically or not, right?

312
00:16:40,300 --> 00:16:41,600
So we'll have to decide again.

313
00:16:41,700 --> 00:16:44,100
When you out can chunk of memory and say I'm storing some pixels in

314
00:16:44,100 --> 00:16:45,200
it, you have to decide.

315
00:16:45,400 --> 00:16:49,500
I'd what you mean in terms of its layout because it's just a block of

316
00:16:49,500 --> 00:16:51,000
memory in a computer.

317
00:16:51,000 --> 00:16:52,900
It has no inherent ordering.

318
00:16:53,000 --> 00:16:57,900
So you have to decide how you're choosing to assign each pixel value.

319
00:16:58,000 --> 00:16:59,300
We're on the screen.

320
00:16:59,300 --> 00:17:02,000
You mean that to be because later on when you go to output something

321
00:17:02,000 --> 00:17:06,700
like a file, like the bitmap file or to a window, you have to know how

322
00:17:06,700 --> 00:17:11,200
those pixels are posted map in order to copy them into that location

323
00:17:11,200 --> 00:17:12,099
correctly, right?

324
00:17:12,300 --> 00:17:14,400
But that's something we'll address a little bit later.

325
00:17:15,300 --> 00:17:18,200
So as we write each out pixel, I'm just going to write

326
00:17:19,500 --> 00:17:20,599
It's very simply here.

327
00:17:20,599 --> 00:17:23,700
We're going to ignore the alpha Channel entirely because we don't care

328
00:17:23,700 --> 00:17:24,400
about it.

329
00:17:25,300 --> 00:17:28,099
I could set it to FF just to indicate that it should be full but it

330
00:17:28,099 --> 00:17:30,000
doesn't matter because we're going to most ignore it.

331
00:17:30,600 --> 00:17:32,700
And what I'd like to do is I'd like to write

332
00:17:33,900 --> 00:17:35,800
Just a straightforward red value here.

333
00:17:36,800 --> 00:17:39,000
So I'm going to say that red goes in the bottom.

334
00:17:39,000 --> 00:17:41,300
Green goes in the middle blue goes in the top.

335
00:17:41,600 --> 00:17:43,800
The reason I'm going to do that is just because I think that's how

336
00:17:43,800 --> 00:17:49,400
bitmaps nor bitmaps normally use Windows or byte ordering where the

337
00:17:49,400 --> 00:17:50,300
blue comes.

338
00:17:51,800 --> 00:17:55,500
I'm sorry if I use Windows ordering the blue would come first, it's

339
00:17:55,500 --> 00:17:58,500
the kind of opposite of the normal, so it would be blue in the bottom.

340
00:17:58,700 --> 00:17:59,800
Green in the middle red on the

341
00:18:00,000 --> 00:18:04,100
Top, which is kind of the opposite of how like big-endian machines

342
00:18:04,100 --> 00:18:04,500
used to do it.

343
00:18:04,500 --> 00:18:06,400
They used to do read first, then green, then blue.

344
00:18:08,700 --> 00:18:12,700
Neither here nor there, just point being, we're going to use be gra

345
00:18:13,900 --> 00:18:17,700
coming from the bottom, which is in memory order rather than rgba.

346
00:18:19,100 --> 00:18:19,700
That's all.

347
00:18:21,400 --> 00:18:24,700
So once we get rid of this, once we sort of execute this line of code,

348
00:18:24,700 --> 00:18:26,900
we should have a giant thing full of red pixels.

349
00:18:26,900 --> 00:18:27,200
I'm sorry.

350
00:18:27,200 --> 00:18:32,400
Full of blue pixels and we can now output that to a bitmap.

351
00:18:32,800 --> 00:18:34,400
So how do we uh put that to a bitmap?

352
00:18:34,400 --> 00:18:41,700
Well we know that we have this stuff here that reads a file right and

353
00:18:41,700 --> 00:18:43,800
you can see that it reads in the entire file.

354
00:18:44,000 --> 00:18:47,400
It starts at the very beginning of the file and it looks at this

355
00:18:47,400 --> 00:18:51,100
bitmap header and then it also says that here's how it got the pixels.

356
00:18:51,300 --> 00:18:51,900
Right.

357
00:18:51,900 --> 00:18:55,400
It takes a look at wherever the start of the file was and then uses

358
00:18:55,400 --> 00:18:59,100
the bitmap offset parameter, which is again, a field in the file right

359
00:18:59,100 --> 00:19:02,200
here, to tell it where the bitmap is.

360
00:19:02,400 --> 00:19:03,900
So that's pretty straightforward.

361
00:19:03,900 --> 00:19:07,100
And we can just do that exact process in Reverse, right?

362
00:19:07,200 --> 00:19:09,000
I'm going to create a bitmap header here.

363
00:19:09,000 --> 00:19:10,800
I'm going to write it as the first thing in the file.

364
00:19:12,800 --> 00:19:15,800
I'm going to clear it, I'm going to set the parameters that are

365
00:19:15,800 --> 00:19:16,900
relevant, right?

366
00:19:16,900 --> 00:19:19,200
Like red mask, green, mask, blue mask, those sorts of things.

367
00:19:19,300 --> 00:19:20,700
I'm going to set all this stuff.

368
00:19:20,800 --> 00:19:24,200
Exactly the way that we read it in and cross my fingers, that there's

369
00:19:24,200 --> 00:19:27,900
nothing else that most programs that read in bitmaps are really going

370
00:19:27,900 --> 00:19:29,000
to need.

371
00:19:29,500 --> 00:19:31,100
So let's go ahead and do that now.

372
00:19:31,100 --> 00:19:33,600
And we'll see what we can manage here.

373
00:19:34,100 --> 00:19:35,100
So we've got

374
00:19:36,900 --> 00:19:38,000
File type.

375
00:19:38,300 --> 00:19:42,400
In fact, let me just copy all this stuff down here and initialize it.

376
00:19:44,300 --> 00:19:45,000
There we go.

377
00:19:47,500 --> 00:19:49,000
So, header file type.

378
00:19:49,000 --> 00:19:52,100
I believe this in here is just a secret code.

379
00:19:56,000 --> 00:19:58,500
Which we can go look up, what it's supposed to be and that's no big

380
00:19:58,500 --> 00:19:58,900
deal.

381
00:19:59,400 --> 00:20:01,900
I assume file size will check

382
00:20:05,900 --> 00:20:08,200
Is probably just the size of the entire file.

383
00:20:08,700 --> 00:20:10,000
I don't actually know that that's true.

384
00:20:10,000 --> 00:20:14,800
Some some file formats treat the file size as the size separate from

385
00:20:14,800 --> 00:20:15,200
the header.

386
00:20:15,300 --> 00:20:16,300
So you skip the header.

387
00:20:16,300 --> 00:20:19,000
When you talk about the size, I don't think that's the case here.

388
00:20:19,000 --> 00:20:21,800
But we should verify reserved, one, and two.

389
00:20:21,800 --> 00:20:24,600
We can just leave 0 because hey, if they're reserved, we probably not

390
00:20:24,600 --> 00:20:27,900
responsible for setting them to anything, other than zero, the bitmap

391
00:20:27,900 --> 00:20:30,700
offset is going to be we're going to put the pixels after the header.

392
00:20:31,100 --> 00:20:34,300
So probably this will just be whatever, however, big the header is.

393
00:20:34,800 --> 00:20:38,800
That's how far forward we need to go to get to the pixels size.

394
00:20:38,800 --> 00:20:40,300
I am not sure what that means.

395
00:20:40,300 --> 00:20:42,000
That's probably just the pixel size.

396
00:20:42,400 --> 00:20:42,700
Oops.

397
00:20:46,100 --> 00:20:47,300
So I don't really know again.

398
00:20:47,300 --> 00:20:48,100
What that is?

399
00:20:52,400 --> 00:20:54,300
We do know what the width and height are.

400
00:20:56,600 --> 00:20:57,100
Why?

401
00:21:00,600 --> 00:21:05,600
That's going to be our output with and our output height planes in

402
00:21:05,600 --> 00:21:06,400
this case.

403
00:21:10,400 --> 00:21:14,500
I assume get set to 1 and I assume bits per pixel, get set to 32.

404
00:21:16,600 --> 00:21:18,200
I don't know that this is true.

405
00:21:21,800 --> 00:21:25,000
We'll see you in a second but we do know what compression is set to

406
00:21:25,000 --> 00:21:27,200
because we're asserting it, right?

407
00:21:32,200 --> 00:21:35,700
Okay, so size and size of bitmap are different, apparently.

408
00:21:36,400 --> 00:21:38,800
So again, we don't really know what those are supposed to be set to.

409
00:21:48,900 --> 00:21:50,600
Horace resolution invert, resolution.

410
00:21:50,600 --> 00:21:55,600
I think just get set to 0 when you're not talking about a

411
00:21:57,500 --> 00:21:58,900
We're not sure about something for print.

412
00:21:58,900 --> 00:22:02,700
I think those were meant for print so I think these can be left at 0

413
00:22:03,900 --> 00:22:06,800
or rather just not set it all because we know they'll be set to Zero

414
00:22:06,800 --> 00:22:09,100
by this line right here, right?

415
00:22:11,800 --> 00:22:13,500
And colors used in colors important.

416
00:22:13,500 --> 00:22:20,100
I think can also be set that way because I don't think those are used

417
00:22:20,100 --> 00:22:22,200
for anything other than palletized things.

418
00:22:22,600 --> 00:22:26,900
However, our red mask on our green mask and our blue mask, these do

419
00:22:26,900 --> 00:22:27,100
need to

420
00:22:27,300 --> 00:22:28,200
Up to something.

421
00:22:31,900 --> 00:22:35,600
Because this is what tells the loading program, where the red green

422
00:22:35,600 --> 00:22:36,300
and blue are.

423
00:22:37,000 --> 00:22:41,300
So again, I said I was going to use Windows format here so that's

424
00:22:41,300 --> 00:22:43,500
where the red channel is going to be mask too.

425
00:22:45,600 --> 00:22:47,300
That's where the green channel will be.

426
00:22:49,100 --> 00:22:50,900
And that's where the blue channel would be.

427
00:22:51,300 --> 00:22:56,700
And if I line these up a little bit, you can courtesy red with the

428
00:22:56,700 --> 00:22:59,800
exception of the alpha channel here that doesn't get used Reds in the

429
00:22:59,800 --> 00:23:02,800
high Greens in the middle Blues in the low, right?

430
00:23:03,900 --> 00:23:06,900
So again, we don't really know what these other ones are here.

431
00:23:07,000 --> 00:23:11,400
I'm going to not set them to anything yet until we go look at some

432
00:23:11,400 --> 00:23:13,100
information that tells us what it is.

433
00:23:13,200 --> 00:23:14,800
So we will definitely do that.

434
00:23:15,200 --> 00:23:17,300
But I want to finish the rest of this code here.

435
00:23:17,600 --> 00:23:18,600
So now what we need to

436
00:23:18,800 --> 00:23:20,500
Is we need to write to a file.

437
00:23:23,100 --> 00:23:24,600
We need to write to some file.

438
00:23:25,800 --> 00:23:28,800
That we can use to see what the results are.

439
00:23:29,000 --> 00:23:31,800
So again, we haven't really done much with this in handmade here

440
00:23:31,800 --> 00:23:34,500
because we write all of our code going through our own custom OS

441
00:23:34,500 --> 00:23:34,900
layer.

442
00:23:35,600 --> 00:23:36,800
So you may be a little bit unfamiliar.

443
00:23:36,800 --> 00:23:37,700
I think we did it once.

444
00:23:37,700 --> 00:23:39,900
Maybe for the preprocessor, I don't really remember.

445
00:23:41,400 --> 00:23:45,000
But we're going to use against because we're on the C standard

446
00:23:45,000 --> 00:23:45,600
Library.

447
00:23:46,100 --> 00:23:48,100
Well, I guess I don't need standard live but I will need that from

448
00:23:48,100 --> 00:23:48,300
Alex.

449
00:23:48,300 --> 00:23:49,500
I'm gonna put that in there as well.

450
00:23:49,700 --> 00:23:50,200
Standard Libby.

451
00:23:50,200 --> 00:23:51,900
I think is what you require for Malik.

452
00:23:52,000 --> 00:23:54,300
You may need memory .h from Alec, I'm not sure.

453
00:23:54,800 --> 00:23:55,300
We'll see.

454
00:23:55,300 --> 00:23:56,700
I don't use the C runtime Library much.

455
00:23:56,700 --> 00:23:59,800
So it's I don't typically remember what this stuff is but

456
00:24:00,000 --> 00:24:01,600
Way the C runtime library.

457
00:24:01,600 --> 00:24:06,600
Has a built-in concept of file IO so we can go ahead and do that.

458
00:24:07,900 --> 00:24:11,100
If we do want to do file IO, you know, I should I should also switch

459
00:24:11,600 --> 00:24:15,600
switch over here because I don't want my head to be in the way we go.

460
00:24:17,300 --> 00:24:20,900
If we're doing file I/O, it has this concept of a file handle.

461
00:24:21,300 --> 00:24:25,400
And if similar to sort of the way we they work in hammy Hero on the

462
00:24:25,400 --> 00:24:27,500
win32 side, on the low level side.

463
00:24:28,700 --> 00:24:32,400
So we have a file that we're going to write and basically what you do

464
00:24:32,400 --> 00:24:35,900
is you call this function called f open which takes the file name that

465
00:24:35,900 --> 00:24:36,900
you want to open.

466
00:24:38,000 --> 00:24:41,900
Which in our case I'll just say like for the moment test Dot bitmap

467
00:24:42,500 --> 00:24:48,900
and then it takes a string of all things that tells you what

468
00:24:48,900 --> 00:24:51,400
permissions you wanted to use and how you want to open.

469
00:24:51,400 --> 00:24:57,300
The file W, is the code for writable file which erases the existing

470
00:24:57,300 --> 00:25:01,200
file that's at that location and replaces it with a new file that's

471
00:25:01,200 --> 00:25:02,200
length zero.

472
00:25:02,400 --> 00:25:05,300
And you can start writing from the beginning of the file, which is

473
00:25:05,300 --> 00:25:06,300
what we want.

474
00:25:06,300 --> 00:25:07,600
There's a bunch of other things you can do.

475
00:25:07,800 --> 00:25:12,600
You like W plus an A&R for readable you know, blah blah blah so you

476
00:25:12,600 --> 00:25:16,200
can it but again I don't care about the runtime Library so I'm not

477
00:25:16,200 --> 00:25:19,000
going to spend time teaching how to use this stuff point, being this

478
00:25:19,000 --> 00:25:21,000
basically emulates, the create file stuff.

479
00:25:21,000 --> 00:25:27,500
We did on win32 in a sort of Less Direct more funky and unpredictable

480
00:25:27,500 --> 00:25:31,300
way that goes to someone else's C runtime code it also introduces

481
00:25:31,300 --> 00:25:36,300
buffering so when you use these calls, you go through an output buffer

482
00:25:37,000 --> 00:25:37,500
that is

483
00:25:37,700 --> 00:25:40,700
Sort of meant to increase performance and usually doesn't.

484
00:25:41,400 --> 00:25:43,300
But, anyway, we open a file.

485
00:25:43,300 --> 00:25:45,100
We also have to close the file when we're done with it.

486
00:25:45,100 --> 00:25:47,400
F close is the corresponding call to F open.

487
00:25:47,400 --> 00:25:50,000
So this opens the file, this closes the file again, this is nothing.

488
00:25:50,000 --> 00:25:53,500
You wouldn't find out in the first five minutes of reading a see book

489
00:25:53,500 --> 00:25:54,600
and I got it don't care about.

490
00:25:54,600 --> 00:25:57,600
It's not interesting, it's just an equivalent to the same things we

491
00:25:57,600 --> 00:26:00,400
were doing on win32 in the regular handmade hero to do these sorts of

492
00:26:00,400 --> 00:26:00,800
things.

493
00:26:01,100 --> 00:26:03,900
It just introduces a layer of unnecessary abstraction and Croft in

494
00:26:03,900 --> 00:26:05,400
between us and the operating system.

495
00:26:07,800 --> 00:26:12,100
So anyway open and close of the bitmap and then all we have to do to

496
00:26:12,100 --> 00:26:15,700
write to the bitmap is basically say, okay we're going to use an F

497
00:26:15,700 --> 00:26:16,300
right?

498
00:26:16,300 --> 00:26:16,700
Oh.

499
00:26:17,400 --> 00:26:18,900
And because we're going to use an F, right?

500
00:26:18,900 --> 00:26:20,700
One thing I have to point out here.

501
00:26:22,600 --> 00:26:24,700
One of the aspects of that unnecessary craft.

502
00:26:24,700 --> 00:26:27,400
I almost attempted to leave it in just so you can see it because it

503
00:26:27,400 --> 00:26:29,600
happens all the time when you use the unnecessary crafts.

504
00:26:31,600 --> 00:26:35,500
Is by default the C runtime library for some unknown reason.

505
00:26:35,900 --> 00:26:40,700
Introduces crlf translation which is basically End of Line.

506
00:26:41,100 --> 00:26:44,700
You know how we put like this in backslash n to talk about End of Line

507
00:26:45,200 --> 00:26:49,400
and it generates a 13 or whatever you know ASCII codes are meant to

508
00:26:49,400 --> 00:26:52,900
have returns but they're different on Linux and Windows and Mac.

509
00:26:53,000 --> 00:26:55,000
Each one has its own End of Line.

510
00:26:55,400 --> 00:26:59,200
Some use backslash R box session which is like ten thirteen or

511
00:26:59,200 --> 00:26:59,700
whatever.

512
00:26:59,700 --> 00:26:59,900
I don't

513
00:27:00,000 --> 00:27:01,300
Number of the exact ASCII codes.

514
00:27:01,600 --> 00:27:02,500
Others is just faxed.

515
00:27:02,500 --> 00:27:06,000
Us are others is backslash and so it's like 10:30 nor just 13 or just

516
00:27:06,000 --> 00:27:12,000
10 by default the C runtime Library converts between those for

517
00:27:12,000 --> 00:27:13,700
everything you output.

518
00:27:13,700 --> 00:27:16,700
Now, this is really annoying because if you're trying to Output binary

519
00:27:16,700 --> 00:27:21,700
data, it will corrupt the binary data by replacing tens and 13s with

520
00:27:21,700 --> 00:27:22,800
like different, you know.

521
00:27:24,800 --> 00:27:26,300
So you need to tell it not to do that.

522
00:27:26,300 --> 00:27:29,900
And the way that you do that is by putting a binary of be in

523
00:27:30,000 --> 00:27:31,800
Here flag.

524
00:27:31,800 --> 00:27:35,000
So F open knows oh by the way, I shouldn't touch this data when I'm

525
00:27:35,000 --> 00:27:35,900
writing it out.

526
00:27:36,500 --> 00:27:40,300
It's nuts that that's not the default, but the C runtime library was

527
00:27:40,300 --> 00:27:45,900
designed around text input and output so they prioritize ASCII sorts

528
00:27:45,900 --> 00:27:46,700
of operations.

529
00:27:47,200 --> 00:27:47,600
Anyway.

530
00:27:49,600 --> 00:27:56,400
So F R8 is a weird child, it takes multiple things here it takes.

531
00:27:56,400 --> 00:27:58,900
First of all, the buffer that we want to write which in this case is

532
00:27:58,900 --> 00:27:59,700
just a header.

533
00:28:00,400 --> 00:28:04,900
It takes to well I'll show you the documentation for it because it's

534
00:28:04,900 --> 00:28:05,800
really wonky.

535
00:28:06,300 --> 00:28:11,700
It takes two things, a chunk size and a number of chunks basically so

536
00:28:11,700 --> 00:28:16,200
you can see here it's like a size and account and then what it does is

537
00:28:16,200 --> 00:28:17,000
it returns.

538
00:28:17,000 --> 00:28:18,600
How many of those it wrote?

539
00:28:19,100 --> 00:28:22,800
So basically what you do here is if you want to write like 20, records

540
00:28:22,800 --> 00:28:25,300
that are all the same size and you want to know how many successfully

541
00:28:25,300 --> 00:28:28,400
wrote to the file, you can see why you might use that.

542
00:28:28,400 --> 00:28:29,400
We don't care about that.

543
00:28:29,400 --> 00:28:32,400
We just want to do one right of the entire header.

544
00:28:32,700 --> 00:28:34,800
So we're just saying one and the size of the header.

545
00:28:34,800 --> 00:28:36,900
If we cared, we'd check the return code here.

546
00:28:36,900 --> 00:28:42,100
I don't care at all about that, so we're not going to, but after we

547
00:28:42,100 --> 00:28:44,400
write the header, we then need to write the pixel data.

548
00:28:44,600 --> 00:28:48,200
We know that that's got a total size here, which I could compute if I

549
00:28:48,200 --> 00:28:48,600
wanted to.

550
00:28:48,700 --> 00:28:54,400
To Once because we have to use it for allocation here, right?

551
00:28:56,600 --> 00:28:58,100
And then I can use it again to write.

552
00:28:58,100 --> 00:28:59,800
So I know that I write the correct size.

553
00:29:00,300 --> 00:29:02,600
So what I'll do is I'll write the output pixels here.

554
00:29:04,000 --> 00:29:07,300
Using output pixel size to the out file and then I have written a

555
00:29:07,300 --> 00:29:11,100
complete bitmap file, the header, and the pixels, and we're done,

556
00:29:11,500 --> 00:29:12,000
right?

557
00:29:13,000 --> 00:29:16,600
So what I can do, if I want to be a little bit more explicit here

558
00:29:16,600 --> 00:29:20,700
about it, is I can make an error if we don't open the file, so I could

559
00:29:20,700 --> 00:29:22,300
use an fprintf to the Airstream.

560
00:29:22,300 --> 00:29:28,000
For example, and say, error unable to write output file.

561
00:29:31,400 --> 00:29:34,900
And then put output file name here which I can store.

562
00:29:36,400 --> 00:29:37,000
Like so.

563
00:29:41,800 --> 00:29:47,100
Okay, so pretty straightforward, not particularly complicated, let's

564
00:29:47,100 --> 00:29:48,200
go ahead and get this compiling.

565
00:29:48,300 --> 00:29:51,600
So the first thing we need is, we need the types that we use, because

566
00:29:51,600 --> 00:29:54,700
we have a few different types, or that we're using, and we need to

567
00:29:54,700 --> 00:29:56,800
define those types, right?

568
00:29:57,500 --> 00:29:59,800
So, in here, we can just say, all right, we have

569
00:30:00,100 --> 00:30:05,500
But you know, a Karen signed short unsigned.

570
00:30:07,000 --> 00:30:08,300
Hinton signed.

571
00:30:09,900 --> 00:30:10,600
Like soap.

572
00:30:14,000 --> 00:30:16,200
And then we have the same thing for our sign types.

573
00:30:17,800 --> 00:30:18,300
Right.

574
00:30:20,200 --> 00:30:26,000
Pretty straightforward, while I am at it, I will make a float 32 as

575
00:30:26,000 --> 00:30:29,300
well and let's take a look here.

576
00:30:30,300 --> 00:30:33,800
This function is may be unsafe Securities, are you okay?

577
00:30:34,200 --> 00:30:36,300
Yeah, thank you.

578
00:30:36,300 --> 00:30:37,600
Visual Studio.

579
00:30:38,100 --> 00:30:41,800
The last thing I think we want is Microsoft warning us about what may

580
00:30:41,800 --> 00:30:43,200
or may not be secure.

581
00:30:43,900 --> 00:30:46,700
I think they're probably the last people who should be making any

582
00:30:46,700 --> 00:30:49,900
sorts of declarations about that, but

583
00:30:50,400 --> 00:30:55,400
Save those sort of comments for another day anyway by defining CRT

584
00:30:55,400 --> 00:30:55,800
secure.

585
00:30:55,800 --> 00:30:59,500
No, warnings on the build line, we get rid of that warning and now we

586
00:30:59,500 --> 00:31:02,300
have a program that we can run.

587
00:31:02,300 --> 00:31:05,500
Now, I am going to go ahead and run this under the debugger so we can

588
00:31:05,500 --> 00:31:06,200
step through it.

589
00:31:06,200 --> 00:31:09,800
It should not work yet because we have not filled in all of those

590
00:31:09,800 --> 00:31:11,300
bitmap header Fields.

591
00:31:11,300 --> 00:31:16,100
So, we've got some work to do but that's okay.

592
00:31:17,200 --> 00:31:17,900
So here we go.

593
00:31:17,900 --> 00:31:19,200
Loading up our

594
00:31:22,400 --> 00:31:23,600
Our program in the debugger.

595
00:31:24,100 --> 00:31:25,900
I'm going to go ahead and set the properties.

596
00:31:26,400 --> 00:31:30,100
It doesn't need any arguments yet but the working directory, I'm going

597
00:31:30,100 --> 00:31:31,400
to go ahead and

598
00:31:33,800 --> 00:31:40,600
Set maybe to handmade Ray data and I'll just make a data directory

599
00:31:40,600 --> 00:31:41,300
here.

600
00:31:44,700 --> 00:31:47,400
For it to run in where we can place data files when we need them.

601
00:31:48,300 --> 00:31:51,100
So let's go ahead and step through it just so you can see what we

602
00:31:51,100 --> 00:31:52,200
basically wrote.

603
00:31:52,400 --> 00:31:53,400
So we still have our printf.

604
00:31:53,400 --> 00:31:54,600
Hello world in there eventually.

605
00:31:54,600 --> 00:31:57,500
We'll change that to something fancier right?

606
00:31:57,500 --> 00:32:01,000
That'll say you know we're running some programs and it's good and

607
00:32:01,000 --> 00:32:01,500
whatever.

608
00:32:02,500 --> 00:32:08,200
So here we go stepping through to oh my God there's so much stuff

609
00:32:08,200 --> 00:32:09,000
happening here.

610
00:32:09,800 --> 00:32:10,200
Okay.

611
00:32:11,200 --> 00:32:11,600
There we go.

612
00:32:12,500 --> 00:32:14,700
So we're going to create our bitmap header file.

613
00:32:14,800 --> 00:32:15,700
Here it is.

614
00:32:17,300 --> 00:32:18,600
I think we have 0 turret or not.

615
00:32:18,600 --> 00:32:21,600
I got to turn to bugging, turn off 02.

616
00:32:21,700 --> 00:32:23,700
We don't need optimization at the moment.

617
00:32:25,100 --> 00:32:29,600
We're able to Output our file properly and write it and exit, which is

618
00:32:29,600 --> 00:32:30,500
what we wanted.

619
00:32:30,800 --> 00:32:34,900
And so now if we look, we should see that in that data directory we

620
00:32:34,900 --> 00:32:36,600
should have a test bitmap file.

621
00:32:37,000 --> 00:32:41,300
Which we do now probably we can't read it because again, it doesn't

622
00:32:41,300 --> 00:32:41,800
have.

623
00:32:41,800 --> 00:32:42,300
You can see.

624
00:32:42,300 --> 00:32:45,800
It doesn't really know how to read this file.

625
00:32:45,800 --> 00:32:49,700
Probably, I'm guessing yet because we haven't filled out like the

626
00:32:49,700 --> 00:32:50,400
magic value.

627
00:32:50,400 --> 00:32:53,000
And we haven't filled out some of the fields, but we've basically got

628
00:32:53,000 --> 00:32:54,600
the program at putting an image.

629
00:32:54,800 --> 00:32:57,100
We just need to finish filling out those fields and we should be good

630
00:32:57,100 --> 00:32:57,600
to go.

631
00:32:57,900 --> 00:32:59,800
So let's go ahead and figure out how to make that.

632
00:33:00,000 --> 00:33:00,400
Happen.

633
00:33:03,400 --> 00:33:06,000
Here is our header struct.

634
00:33:06,100 --> 00:33:09,200
Let's go ahead and uncomment these lines and write out all the fields

635
00:33:09,200 --> 00:33:10,300
that we didn't write.

636
00:33:10,600 --> 00:33:11,800
We will provide

637
00:33:13,200 --> 00:33:15,500
the information necessary to write them properly.

638
00:33:18,700 --> 00:33:19,100
Okay.

639
00:33:20,500 --> 00:33:21,100
All right.

640
00:33:26,000 --> 00:33:26,600
Here we go.

641
00:33:28,300 --> 00:33:31,900
So, first things first, let me look up the documentation for the

642
00:33:31,900 --> 00:33:32,600
bitmap header.

643
00:33:36,600 --> 00:33:39,000
And see if I can't find something that tells us what each of the

644
00:33:39,000 --> 00:33:41,000
fields means so that we can write them properly.

645
00:33:42,500 --> 00:33:44,600
So let's see here.

646
00:33:44,600 --> 00:33:48,000
Okay, so here's the header field.

647
00:33:48,000 --> 00:33:53,200
You said, if I a bitmap file, it's supposed to be 0420, it supposed to

648
00:33:53,200 --> 00:33:56,000
be 42, 44, D and hex.

649
00:33:57,600 --> 00:33:59,900
So we can just go ahead and set that, right?

650
00:34:00,700 --> 00:34:02,200
That's no, that's no big deal.

651
00:34:03,000 --> 00:34:03,200
So,

652
00:34:03,400 --> 00:34:03,800
We go.

653
00:34:06,200 --> 00:34:09,300
I assume it wants 42, 4D, and memory order.

654
00:34:09,699 --> 00:34:12,500
So that's actually going to be 44 to write because remember, run a

655
00:34:12,500 --> 00:34:13,300
little endian machine.

656
00:34:13,300 --> 00:34:15,800
So the first thing about my order goes here, second thing in memory

657
00:34:15,800 --> 00:34:19,600
order goes there, we then have a file size which is the size of the,

658
00:34:19,800 --> 00:34:21,000
the whole file in bytes.

659
00:34:21,199 --> 00:34:24,600
We actually do know what that will be, because we know that it's the

660
00:34:24,600 --> 00:34:28,500
size of this header, plus the output pixel size, right?

661
00:34:28,500 --> 00:34:29,600
So, we can fill that in.

662
00:34:30,600 --> 00:34:33,800
We then have a sighs.

663
00:34:33,800 --> 00:34:34,300
Okay, we

664
00:34:37,400 --> 00:34:41,199
So are we to reserved, which we don't set for its the offset starting

665
00:34:41,199 --> 00:34:42,699
out as we got that as well.

666
00:34:42,800 --> 00:34:46,000
So this size field, we need in here somewhere else.

667
00:34:46,000 --> 00:34:48,100
Let's see, where does that go?

668
00:34:52,600 --> 00:34:54,400
What does bitmap info header?

669
00:34:54,400 --> 00:34:55,000
I believe.

670
00:34:55,000 --> 00:34:57,000
Oops, I believe this is what we're looking at here.

671
00:34:57,000 --> 00:34:57,300
Yeah.

672
00:34:57,300 --> 00:34:59,500
So we need the size of the header.

673
00:34:59,500 --> 00:35:01,800
That's what this size field is.

674
00:35:01,800 --> 00:35:07,600
So that explains that, the problem though is, is it the size of this

675
00:35:07,600 --> 00:35:08,000
header?

676
00:35:08,000 --> 00:35:09,400
Meaning - this part?

677
00:35:09,400 --> 00:35:14,200
And if that's true, we actually need to subtract away this part of it.

678
00:35:14,200 --> 00:35:19,400
So, I assume that that is the case, which means that this 16.

679
00:35:19,400 --> 00:35:22,700
So we have 2 B, 4, b 2, b 2 b.

680
00:35:22,700 --> 00:35:27,800
Four bytes that part needs to not be included, right?

681
00:35:28,000 --> 00:35:32,700
So two plus two, plus two is six plus Eight Is Right.

682
00:35:32,700 --> 00:35:36,300
Is what 14?

683
00:35:37,000 --> 00:35:40,500
I think that's what we're looking at here because we got eight bytes

684
00:35:40,500 --> 00:35:41,900
here and six bytes here.

685
00:35:42,500 --> 00:35:44,600
So I assume that that's what that means.

686
00:35:45,600 --> 00:35:49,100
Just guessing here doesn't quite say it says but it says this header

687
00:35:49,600 --> 00:35:50,800
and says 40 bytes.

688
00:35:51,200 --> 00:35:52,500
So for

689
00:35:52,600 --> 00:35:58,800
1 2 3 4 5 6 7 8 9 10 to 2 B is for by.

690
00:35:59,000 --> 00:35:59,400
So yeah.

691
00:35:59,400 --> 00:35:59,800
So it just

692
00:36:00,000 --> 00:36:00,900
This, I guess.

693
00:36:04,100 --> 00:36:07,200
So I think that should be right height in pixels width in pixels.

694
00:36:07,200 --> 00:36:13,300
We've got the number of planes is one bits per pixel, should be 32

695
00:36:14,000 --> 00:36:15,100
compression method.

696
00:36:15,100 --> 00:36:19,300
Should be 3 again which is not compressed size of bitmap.

697
00:36:21,200 --> 00:36:22,000
Sighs rotate.

698
00:36:22,000 --> 00:36:25,000
A dummy 0 can be given for bi RGB bitmaps.

699
00:36:25,100 --> 00:36:26,900
This is a bi RGB bitmap.

700
00:36:27,000 --> 00:36:30,700
So we should be able to put past zero their horizontal resolution of

701
00:36:30,700 --> 00:36:35,300
the image pixels per meter assigned image signed integer, we don't

702
00:36:35,300 --> 00:36:37,400
know what the pixels per meter should be.

703
00:36:40,700 --> 00:36:42,500
I don't know pixels per meter.

704
00:36:42,500 --> 00:36:45,600
Let's just, let's just say that it fits in a meter.

705
00:36:48,100 --> 00:36:50,800
Well, let's just say the pixels per meter is 1000.

706
00:36:50,900 --> 00:36:51,400
I don't know.

707
00:36:52,500 --> 00:36:54,200
I don't know how many pixels for me to there should be

708
00:36:57,200 --> 00:36:58,300
Probably more than that.

709
00:37:01,700 --> 00:37:07,100
I have no idea is this into print image so we don't have that concept

710
00:37:07,100 --> 00:37:08,300
of pixels per meter.

711
00:37:08,300 --> 00:37:11,900
Write the number of colors using the palette or zero.

712
00:37:12,800 --> 00:37:16,600
I think that's zero here, important colors, zero when every color is

713
00:37:16,600 --> 00:37:20,500
important, generally ignored and I think that concludes our bitmap

714
00:37:20,500 --> 00:37:22,600
writing hopefully.

715
00:37:22,700 --> 00:37:24,000
So let me go ahead and run.

716
00:37:26,700 --> 00:37:27,400
Yes, to all.

717
00:37:27,400 --> 00:37:31,100
I'm gonna go ahead and run this here so that it'll write out our

718
00:37:31,100 --> 00:37:31,500
stuff.

719
00:37:31,500 --> 00:37:32,400
Oh, and you know what else I wanted?

720
00:37:32,400 --> 00:37:35,700
I did want to go ahead and turn off 02, so I want to switch from an

721
00:37:35,700 --> 00:37:37,400
optimized build to a debug build.

722
00:37:37,400 --> 00:37:38,700
Here we go.

723
00:37:39,500 --> 00:37:43,400
So okay, if I run this, it should rewrite a new bitmap file and I

724
00:37:43,400 --> 00:37:44,800
don't know if it will or not.

725
00:37:45,800 --> 00:37:48,100
Looks like it's still not quite happy with our format.

726
00:37:48,100 --> 00:37:53,600
Although it did actually load it up this time, so we're a little bit

727
00:37:53,600 --> 00:37:54,300
better off.

728
00:37:54,400 --> 00:37:55,600
I just don't know.

729
00:38:00,200 --> 00:38:02,300
Now actually we're not I guess just double-clicking.

730
00:38:02,300 --> 00:38:05,000
It work this time for some reason, instead of not double-clicking, it

731
00:38:06,300 --> 00:38:12,300
So, we're still not quite right in our, in our filling out of the

732
00:38:12,300 --> 00:38:14,600
header structure, but I'm not quite sure why.

733
00:38:14,600 --> 00:38:15,800
So let's take a look.

734
00:38:16,000 --> 00:38:17,700
We might have gotten something wrong here.

735
00:38:19,400 --> 00:38:20,400
Let's take a look at the header.

736
00:38:21,700 --> 00:38:22,100
Okay.

737
00:38:25,500 --> 00:38:26,800
So, let's take a look at our header.

738
00:38:29,900 --> 00:38:33,200
Now again I don't really know in this file type field.

739
00:38:33,200 --> 00:38:36,300
I don't know if it should be 40 42 or 42 4D.

740
00:38:36,700 --> 00:38:39,700
What I'm going to do here is I'm going to cheat a little bit because I

741
00:38:39,700 --> 00:38:44,600
can is, I'm just going to say, well, alright, I know that there are

742
00:38:44,600 --> 00:38:48,600
other programs that can write a bitmap out to the drive.

743
00:38:48,600 --> 00:38:49,100
Right.

744
00:38:49,300 --> 00:38:51,400
So why don't I just have one of those, right?

745
00:38:51,400 --> 00:38:55,600
Something out to the drive and then I'll look and see which values it

746
00:38:55,600 --> 00:38:58,400
set the thing to, to begin with, right?

747
00:38:58,400 --> 00:38:58,700
So you

748
00:38:58,800 --> 00:38:59,900
Know, if I created something.

749
00:39:00,000 --> 00:39:03,100
Are in paint or whatever, right.

750
00:39:03,300 --> 00:39:09,000
And then I went and save it out to some file that I can read.

751
00:39:11,600 --> 00:39:16,500
Let's go W handmade Ray data.

752
00:39:17,300 --> 00:39:18,900
I'm going to just pick bitmap.

753
00:39:21,400 --> 00:39:27,700
Like so and I'm just going to say, oh yeah, this is like reference

754
00:39:28,000 --> 00:39:28,900
that bitmap.

755
00:39:28,900 --> 00:39:31,800
Now, I wish I could do 32 bits per pixel, but it didn't have an option

756
00:39:31,800 --> 00:39:32,400
for that.

757
00:39:32,500 --> 00:39:35,200
Maybe I should download like gimp or something, so I can do that and

758
00:39:35,200 --> 00:39:35,900
double check.

759
00:39:36,500 --> 00:39:40,800
But now, we basically have the ability to look at a reference file and

760
00:39:40,800 --> 00:39:42,800
see what that looks like.

761
00:39:42,800 --> 00:39:44,700
So I'm going to go ahead and do that.

762
00:39:44,700 --> 00:39:46,700
I'm just going to say, oh, are you know what?

763
00:39:47,100 --> 00:39:48,300
Let's do an in file.

764
00:39:48,300 --> 00:39:50,700
Let's do an F open here of

765
00:39:51,300 --> 00:39:52,300
Effed up bitmap.

766
00:39:52,800 --> 00:39:53,900
That's what I called it right.

767
00:39:54,800 --> 00:39:56,300
Sorry, reference top bitmap

768
00:39:58,800 --> 00:40:03,200
And all I'm going to do here is I'm just going to do ref header, and

769
00:40:03,200 --> 00:40:07,500
then I'm going to do an an F read from that in file.

770
00:40:12,100 --> 00:40:15,400
I'm just going to f----- read in into the reference header.

771
00:40:19,300 --> 00:40:23,000
I'm going to read in what its contents are, right?

772
00:40:23,200 --> 00:40:28,900
So now, when I run to here in theory, I should have a ref header here

773
00:40:29,500 --> 00:40:30,800
that I can look at that.

774
00:40:30,800 --> 00:40:38,300
Shows me what someone else, who writes a proper bitmap Road out,

775
00:40:38,600 --> 00:40:39,100
right?

776
00:40:40,100 --> 00:40:43,300
So here's the header that we wrote.

777
00:40:43,300 --> 00:40:48,300
Here's the header that they wrote 40, 42 looks correct because

778
00:40:48,400 --> 00:40:49,700
It's the same in both of them.

779
00:40:50,000 --> 00:40:51,900
The file size is going to be different in both.

780
00:40:52,000 --> 00:40:55,900
The reserved here is obviously cleared.

781
00:40:59,800 --> 00:41:04,200
Because it doesn't mean anything to either of us, the bitmap offset.

782
00:41:04,600 --> 00:41:08,500
Our header is bigger than theirs, which is a little confusing.

783
00:41:09,800 --> 00:41:13,400
Now, I guess the question I have here is, is the bitmap offset

784
00:41:13,400 --> 00:41:14,900
supposed to be from the beginning.

785
00:41:14,900 --> 00:41:15,700
I assume it's something.

786
00:41:15,700 --> 00:41:16,900
I'll double-check that.

787
00:41:17,600 --> 00:41:21,200
But anyway, size of the header.

788
00:41:21,300 --> 00:41:22,600
Ours is much larger.

789
00:41:22,600 --> 00:41:25,300
So, I wonder if we should get rid of some of this extra fields, we

790
00:41:25,300 --> 00:41:29,400
have width height, planes bits per pixel.

791
00:41:30,400 --> 00:41:34,300
Again, we set our bits per pixel up higher than theirs, which I assume

792
00:41:34,300 --> 00:41:34,500
is.

793
00:41:34,500 --> 00:41:39,400
Okay, compression is 0 on theirs, it's 3 on ours.

794
00:41:40,900 --> 00:41:42,300
I assume it's should be three.

795
00:41:42,400 --> 00:41:44,000
Let me double-check that I read that wrong.

796
00:41:44,000 --> 00:41:47,700
When I was when I was, when we were looking at our loader now we

797
00:41:47,700 --> 00:41:49,400
expect 34 uncompressed.

798
00:41:50,100 --> 00:41:50,600
Right?

799
00:41:53,600 --> 00:41:57,100
So as a bitmap, all these are set to 0 so maybe I should just clear

800
00:41:57,100 --> 00:41:59,800
those out and then they didn't set a red mask.

801
00:42:00,100 --> 00:42:02,000
Mass because they didn't have that part of the header.

802
00:42:03,600 --> 00:42:04,200
So I don't know.

803
00:42:04,200 --> 00:42:06,500
Maybe we should just stop doing that.

804
00:42:06,600 --> 00:42:09,700
Maybe we're confusing the issue by having those there.

805
00:42:10,000 --> 00:42:10,900
I'm not sure.

806
00:42:11,600 --> 00:42:14,400
But we could get rid of those to be more compliant with what they're

807
00:42:14,400 --> 00:42:15,900
saying, right?

808
00:42:18,000 --> 00:42:19,300
Did they set size of bitmap?

809
00:42:19,300 --> 00:42:20,500
I don't remember if they did.

810
00:42:20,700 --> 00:42:23,300
So let me get rid of those which will make us closer to them.

811
00:42:25,400 --> 00:42:28,000
Because we don't need those Maths for any particular reason.

812
00:42:28,900 --> 00:42:30,300
So let me do that one more time.

813
00:42:31,000 --> 00:42:34,000
I'm just trying to get the number of differences down to the smallest

814
00:42:34,000 --> 00:42:34,300
possible.

815
00:42:34,300 --> 00:42:35,600
Number right?

816
00:42:38,600 --> 00:42:42,400
So now we're the same there where the same here, bitmap offset is the

817
00:42:42,400 --> 00:42:46,900
same size as the same width and height are obviously going to be a

818
00:42:46,900 --> 00:42:48,400
little different planes.

819
00:42:48,400 --> 00:42:51,000
Is the same bits per pixel is a difference.

820
00:42:51,000 --> 00:42:55,100
Now, and compression is a difference, but I think that's because they

821
00:42:55,100 --> 00:42:56,400
use our alien coding.

822
00:42:56,500 --> 00:42:57,300
Let's take a look at that.

823
00:42:57,300 --> 00:43:00,000
Bitmap file format, see what that compression actually means.

824
00:43:00,700 --> 00:43:03,800
Whereas the compression pixel storage compression.

825
00:43:12,700 --> 00:43:13,300
Sure, they are.

826
00:43:16,800 --> 00:43:22,400
Oh wait, bi bit fields, we actually want bir GB.

827
00:43:22,400 --> 00:43:25,000
So, why were we setting compression?

828
00:43:26,600 --> 00:43:28,400
Did I did I read that wrong?

829
00:43:30,800 --> 00:43:32,900
Assert, header compression equals 3.

830
00:43:33,000 --> 00:43:34,400
Why did we want to assert that?

831
00:43:34,400 --> 00:43:36,100
It was bi bit fields.

832
00:43:39,300 --> 00:43:42,700
I guess because we were using the extended header when we were loading

833
00:43:42,700 --> 00:43:45,000
which we don't really need to do so.

834
00:43:45,000 --> 00:43:45,400
Yes.

835
00:43:45,400 --> 00:43:46,100
I guess I would say.

836
00:43:46,100 --> 00:43:49,600
Let's set compression equal to 0 VI RGB is what we actually want their

837
00:43:49,800 --> 00:43:52,100
I guess bi bit Fields is maybe if you want to use

838
00:43:54,600 --> 00:43:56,000
rgba, I'm not sure.

839
00:43:56,600 --> 00:43:58,400
So let's see if this gets us any closer.

840
00:44:00,400 --> 00:44:02,000
Got stop the debugger so I can build.

841
00:44:02,900 --> 00:44:03,200
Yeah.

842
00:44:05,800 --> 00:44:08,500
And now we should be really close to the reference header, right?

843
00:44:09,600 --> 00:44:12,500
Bitmap offset of the same size is now the same.

844
00:44:14,300 --> 00:44:17,300
Planes bits per pixel is the only difference here.

845
00:44:17,600 --> 00:44:22,800
We have all zeros here are size of bitmap.

846
00:44:22,800 --> 00:44:24,200
They set the size of bitmaps.

847
00:44:24,200 --> 00:44:26,900
So I'm going to go ahead and set the size a bitmap because we do know

848
00:44:26,900 --> 00:44:27,500
what it is.

849
00:44:29,400 --> 00:44:32,900
And let's just see if that gets Us close enough to be read.

850
00:44:34,300 --> 00:44:34,700
Oops.

851
00:44:46,000 --> 00:44:48,400
So we're better, right?

852
00:44:48,400 --> 00:44:51,500
We are now a it's now, okay?

853
00:44:52,200 --> 00:44:56,200
It's it's loading it, right?

854
00:44:56,600 --> 00:44:59,100
But we are not getting what we expect.

855
00:44:59,700 --> 00:44:59,800
We're

856
00:45:00,000 --> 00:45:02,900
Thing all grey which we should not get right.

857
00:45:03,200 --> 00:45:07,700
We want to get red pixels because that's what we try to Output.

858
00:45:09,900 --> 00:45:13,400
Oh typo, we never Advanced our pixel pointer.

859
00:45:15,100 --> 00:45:17,100
Right, it was just writing the first pixel the whole time.

860
00:45:19,800 --> 00:45:20,200
There we go.

861
00:45:20,700 --> 00:45:24,400
So now we've got our blue image and that's what we expected.

862
00:45:24,600 --> 00:45:27,900
What I want to do here, now is just emphasize the directionality of

863
00:45:27,900 --> 00:45:28,700
the image.

864
00:45:28,700 --> 00:45:31,500
So what I'm going to do here is say, if why

865
00:45:34,400 --> 00:45:35,900
Is less than 32.

866
00:45:36,300 --> 00:45:40,100
We're going to write one color and if Y is greater than that, we're

867
00:45:40,100 --> 00:45:44,400
going to write another color to put a band at the first pixels of the

868
00:45:44,400 --> 00:45:44,900
image.

869
00:45:45,800 --> 00:45:48,400
So what I'm going to do is say when Y is less than 32.

870
00:45:48,600 --> 00:45:51,400
I'm going to write read and then I'm going to write blue everywhere

871
00:45:51,400 --> 00:45:51,900
else.

872
00:45:52,600 --> 00:45:56,700
So now that I've run it, you can see if I look at our image, we've got

873
00:45:56,700 --> 00:45:59,800
the Red Band at the bottom and what I wanted to emphasize here was

874
00:45:59,800 --> 00:46:00,900
just the fact that

875
00:46:03,300 --> 00:46:04,400
again, we have a

876
00:46:07,100 --> 00:46:08,300
I don't know what how you want to call it.

877
00:46:08,300 --> 00:46:13,800
We have a sort of directionality to our image, the we've written B to

878
00:46:14,000 --> 00:46:18,000
the file, but the person who's reading those B has to then assign

879
00:46:18,000 --> 00:46:20,000
those values to somewhere on the screen.

880
00:46:20,000 --> 00:46:23,600
When it goes to play the bitmap, and it has a decision to make, is it

881
00:46:23,600 --> 00:46:26,400
going to start with the bottom row, or is gonna start at the top row?

882
00:46:26,700 --> 00:46:30,100
And you can see bitmap files by default, they start at the bottom row.

883
00:46:30,900 --> 00:46:32,400
Now, we can switch that.

884
00:46:32,900 --> 00:46:36,300
If I remember correctly, we can start at the top row if we want to.

885
00:46:36,800 --> 00:46:38,200
By setting the width.

886
00:46:38,300 --> 00:46:38,600
I'm sorry.

887
00:46:38,600 --> 00:46:41,200
The height to - I think is the convention in a bitmap file.

888
00:46:41,200 --> 00:46:41,800
I just happen to know.

889
00:46:41,800 --> 00:46:42,700
That's the convention.

890
00:46:44,900 --> 00:46:50,100
So if I convert this to a signed value and flip it, sign like this, I

891
00:46:50,100 --> 00:46:52,800
should be able to get it to, to flip that around.

892
00:46:53,000 --> 00:46:55,400
And what you can see is we've written the exact same thing, the disc,

893
00:46:55,400 --> 00:46:59,500
but just by changing one aspect of the header,

894
00:47:00,600 --> 00:47:01,600
We flip it around.

895
00:47:02,300 --> 00:47:05,400
So we have the option of having a bottom up or top down.

896
00:47:05,700 --> 00:47:07,700
I don't care which one we have.

897
00:47:07,800 --> 00:47:10,800
So I'm just going to go with the more conventional bottom up, but keep

898
00:47:10,800 --> 00:47:13,600
in mind that our bitmap is bottom up.

899
00:47:13,600 --> 00:47:18,100
So we're writing the bottom part first, this is important, because

900
00:47:18,100 --> 00:47:20,500
when we go to generate image, we have to be aware of that fact.

901
00:47:21,900 --> 00:47:24,700
Okay, so that's all well and good.

902
00:47:26,400 --> 00:47:29,600
Let's go ahead and just take a moment to get this out of here so that

903
00:47:29,600 --> 00:47:31,600
we don't have to think about it anymore, right?

904
00:47:32,100 --> 00:47:38,200
So, let's go ahead and make a little bundle of Love here for our

905
00:47:38,200 --> 00:47:38,900
image.

906
00:47:38,900 --> 00:47:42,700
Let's just say that we have a, an output image or maybe.

907
00:47:42,700 --> 00:47:45,500
We'll just say, we just have a generic thing called image.

908
00:47:45,800 --> 00:47:48,700
That will have in it a width.

909
00:47:50,800 --> 00:47:54,500
Height and a pointer to the pixels.

910
00:47:54,900 --> 00:47:59,700
So maybe I'll call this an and you know, image 32 or

911
00:48:00,000 --> 00:48:05,500
Like this because it's an rgba image or something like that in case we

912
00:48:05,500 --> 00:48:09,500
want later to have ones, you know, maybe an image, you 32, something

913
00:48:09,500 --> 00:48:10,000
like that.

914
00:48:10,500 --> 00:48:11,200
And that's just to do that.

915
00:48:11,400 --> 00:48:16,100
We may want like a floating-point buffer later and if I wrap that up I

916
00:48:16,100 --> 00:48:18,300
don't want it to look the same as this, right?

917
00:48:18,800 --> 00:48:22,100
So I want image you throw to be like a big town, like output format,

918
00:48:22,100 --> 00:48:23,100
kind of a situation.

919
00:48:25,200 --> 00:48:25,600
Okay.

920
00:48:26,400 --> 00:48:29,400
So what I'm going to do here is I'm going to introduce again a pound

921
00:48:29,400 --> 00:48:29,600
to find.

922
00:48:29,600 --> 00:48:31,700
You see many times on handmade here are just a thing too.

923
00:48:36,700 --> 00:48:40,800
Basically allow me to mark functions and just say, hey, their internal

924
00:48:41,000 --> 00:48:42,900
because I don't, I'm compiling.

925
00:48:42,900 --> 00:48:44,200
Everything is one C file.

926
00:48:44,200 --> 00:48:47,600
I don't want it to Output stuff to a Linker table or anything like

927
00:48:47,600 --> 00:48:48,000
that.

928
00:48:48,000 --> 00:48:52,000
So, I want to just tell the compiler, hey, every function, I right,

929
00:48:52,000 --> 00:48:53,500
just buying it directly in.

930
00:48:53,700 --> 00:48:55,300
Don't make an export record for it.

931
00:48:55,300 --> 00:48:58,400
Don't do any of that stuff because it can just slow the compile down.

932
00:48:58,500 --> 00:49:01,900
So, everything since I was compiled, a single translation unit anyway,

933
00:49:02,100 --> 00:49:04,800
I don't want anything externalized, everything should be

934
00:49:04,900 --> 00:49:08,500
There's any internal I just don't like using static as a keyword

935
00:49:08,500 --> 00:49:10,600
directly because it means too many different things.

936
00:49:11,200 --> 00:49:13,700
So, I like to use internal this Bentley mark, my function.

937
00:49:13,700 --> 00:49:17,600
So I know that I can search for regular static later if I need it.

938
00:49:19,500 --> 00:49:25,100
All right, so I'm just going to have a thing here called, right image.

939
00:49:25,300 --> 00:49:29,900
It's going to take a file name and a pointer to one of these images

940
00:49:29,900 --> 00:49:30,200
here.

941
00:49:30,200 --> 00:49:33,200
In fact, I might just pass it as a whole struct because it's a small

942
00:49:33,200 --> 00:49:34,600
struct so that's fine.

943
00:49:35,700 --> 00:49:39,800
And what I'm going to do is I'm going to grab all of this information

944
00:49:39,800 --> 00:49:41,500
here that we had previously done.

945
00:49:41,800 --> 00:49:45,400
And I'm going to put it up into this this right image function, right?

946
00:49:45,500 --> 00:49:47,900
So I'm literally just pulling this out of here so that it's not

947
00:49:48,300 --> 00:49:49,100
clogging up the code.

948
00:49:49,100 --> 00:49:52,100
I was trying to write down here because it's a pretty well isolated

949
00:49:52,100 --> 00:49:56,300
unit that I can then use to write images any time I want to write out

950
00:49:56,300 --> 00:50:00,600
image, I can just have one, we don't need the code here that loads in

951
00:50:00,600 --> 00:50:04,200
the reference bitmap anymore because we've got it working well enough

952
00:50:04,500 --> 00:50:04,800
that it's not

953
00:50:04,900 --> 00:50:05,300
An issue.

954
00:50:05,300 --> 00:50:07,900
So I'm just going to go ahead and get rid of that particular piece of

955
00:50:07,900 --> 00:50:08,500
code.

956
00:50:08,600 --> 00:50:12,900
But everything else I'm going to keep because we want the rest of it

957
00:50:12,900 --> 00:50:13,300
right?

958
00:50:13,700 --> 00:50:14,300
So there we go.

959
00:50:15,800 --> 00:50:20,300
Okay, so get rid of that.

960
00:50:21,000 --> 00:50:25,100
So this is something that will take an image and it will write out

961
00:50:25,100 --> 00:50:26,900
exactly the information that we needed here.

962
00:50:27,100 --> 00:50:30,300
So I just have to pull the where I was pulling stuff.

963
00:50:32,700 --> 00:50:35,500
So, you know, previously I was pulling information just from stuff

964
00:50:35,500 --> 00:50:36,500
that I had just right in line.

965
00:50:36,500 --> 00:50:38,900
Now, I'm passing in that information, the form of the structure.

966
00:50:39,000 --> 00:50:42,000
So I've got a generate that information for the width and the height.

967
00:50:42,000 --> 00:50:44,500
I can describe it here for the outfit pixel size.

968
00:50:44,500 --> 00:50:46,800
I need something to compute that for me.

969
00:50:46,800 --> 00:50:48,800
So I've got output pixel size, right?

970
00:50:48,800 --> 00:50:50,500
I need to figure out what that is.

971
00:50:51,500 --> 00:50:52,100
So

972
00:50:56,200 --> 00:50:59,300
if I do something like this where I have a function,

973
00:51:00,000 --> 00:51:03,800
Can basically make that arithmetic that generates the pixel size be

974
00:51:03,800 --> 00:51:05,400
something that anyone can ask for.

975
00:51:05,800 --> 00:51:10,000
So I can take an image to 32 and say What's the total pixel size of

976
00:51:10,000 --> 00:51:13,300
this image that I'm looking at and then it can say, okay?

977
00:51:13,900 --> 00:51:18,500
You know, it's this, you know, so I can say image with

978
00:51:20,700 --> 00:51:24,800
types of image height times size of

979
00:51:26,600 --> 00:51:31,900
You 32, is the size of one of these pixels, one of these images.

980
00:51:32,800 --> 00:51:34,900
So if we do something like that, then I think this routine is

981
00:51:34,900 --> 00:51:35,600
basically done.

982
00:51:35,600 --> 00:51:36,500
That's all it really needs.

983
00:51:36,700 --> 00:51:40,700
Similarly, in here, when I go to create this image, I can wrap that up

984
00:51:40,700 --> 00:51:43,700
into something I can use as well to anytime I want to create an image.

985
00:51:44,000 --> 00:51:46,700
I can just do something like this image.

986
00:51:48,100 --> 00:51:51,100
Or maybe I'll call it allocate image, right?

987
00:51:51,700 --> 00:51:54,000
And all that's going to do is say, what do you want, the width and the

988
00:51:54,000 --> 00:51:55,100
height of the image to be?

989
00:51:55,800 --> 00:51:59,600
And it will do this operation right here.

990
00:52:07,500 --> 00:52:07,900
We go.

991
00:52:09,000 --> 00:52:11,500
And so what that's going to do is say all right I need the total pixel

992
00:52:11,500 --> 00:52:14,100
size of the image and that's easy to do, right?

993
00:52:14,100 --> 00:52:15,900
I just asked for it now.

994
00:52:18,300 --> 00:52:19,700
I need to actually make one of these.

995
00:52:21,700 --> 00:52:27,800
Image wet wet image height equals height and then the image pixels.

996
00:52:29,600 --> 00:52:34,700
Is just an allocated version of that, right?

997
00:52:34,800 --> 00:52:36,500
So now I have a way to ask for the size of images.

998
00:52:36,500 --> 00:52:37,500
I can allocate 1.

999
00:52:37,500 --> 00:52:40,300
I can write it to disk, we're in really good shape here.

1000
00:52:40,300 --> 00:52:42,500
Everyone's happy and dancing around.

1001
00:52:42,900 --> 00:52:44,100
So here's my image.

1002
00:52:45,400 --> 00:52:49,500
I'm going to say allocate image, I'm going to say 1280 by 720.

1003
00:52:50,700 --> 00:52:54,300
I'm then going to say okay let's Loop over the width and the height of

1004
00:52:54,300 --> 00:52:58,900
the image like so and set all the values, then I'm going to ask it to

1005
00:52:58,900 --> 00:53:03,300
write an image and I'm going to write the image to test out bitmap

1006
00:53:03,800 --> 00:53:06,800
right and off we go.

1007
00:53:06,800 --> 00:53:09,700
Now the output pixels, I just messed up that should have been image

1008
00:53:09,700 --> 00:53:13,000
dot pixels, but other than that, I think we're okay.

1009
00:53:20,900 --> 00:53:28,300
So let's delete this stuff here and see if it gets properly recreated

1010
00:53:29,100 --> 00:53:32,200
there it goes and there's our test bitmap just great.

1011
00:53:33,300 --> 00:53:35,400
So now we have the basic functionality.

1012
00:53:35,400 --> 00:53:40,500
We need for our raytracer to Output to allocate a basically a place to

1013
00:53:40,500 --> 00:53:41,600
write its data from

1014
00:53:43,500 --> 00:53:51,200
and we also have the ability to, you know, sort of make as many of

1015
00:53:51,200 --> 00:53:53,300
those as we want and write them out anytime we want.

1016
00:53:53,300 --> 00:53:55,000
So we can do anything.

1017
00:53:55,000 --> 00:53:56,000
We need to do there, right?

1018
00:53:56,000 --> 00:53:56,600
So that's done.

1019
00:54:04,100 --> 00:54:05,500
What's the next logical step?

1020
00:54:06,400 --> 00:54:09,500
Well, the next logical step is, we need to have something to raytrace

1021
00:54:09,500 --> 00:54:12,400
and we need to then start writing the ray Tracer, right?

1022
00:54:13,300 --> 00:54:18,000
So the first question is, well, what do we want to Ray Trace right?

1023
00:54:18,000 --> 00:54:21,000
Like, what can we write in a simple piece of code here?

1024
00:54:23,200 --> 00:54:27,900
That would be useful to Ray trace and the reason you often see, Ray

1025
00:54:27,900 --> 00:54:31,200
tracers, demoed with spheres and planes is because those are very easy

1026
00:54:31,200 --> 00:54:32,800
to write procedurally, right?

1027
00:54:32,900 --> 00:54:33,700
I don't need to

1028
00:54:34,000 --> 00:54:39,400
Food, Amaya, file or some kind of data file, to be able to make

1029
00:54:39,400 --> 00:54:40,700
spheres and planes.

1030
00:54:40,700 --> 00:54:42,100
I can just do a simple little function.

1031
00:54:42,100 --> 00:54:44,300
That's like place the sphere here and we know that a sphere only

1032
00:54:44,300 --> 00:54:49,000
needs, you know, position and a radius, and it's done, right?

1033
00:54:50,500 --> 00:54:54,100
So this should be pretty straightforward for us to do if we want to,

1034
00:54:54,100 --> 00:54:56,900
we can just make a thing that retraces a bunch of planes and spheres.

1035
00:54:57,300 --> 00:54:59,400
So what I'm going to do is I'm just going to set us up to have a

1036
00:54:59,400 --> 00:55:03,700
little set of raisins of planes and spheres that we can re

1037
00:55:03,800 --> 00:55:05,400
Race and we'll go from there.

1038
00:55:05,400 --> 00:55:09,800
All right, so I'm just going to create a little stupid scene

1039
00:55:09,800 --> 00:55:10,800
description here.

1040
00:55:11,600 --> 00:55:14,600
What I would like to have the ability have two files open at once if

1041
00:55:14,600 --> 00:55:19,400
possible so what I'd like to do over here is inside handmade Ray.

1042
00:55:19,400 --> 00:55:22,600
I'd like to do a re .h that can just put some of the stuff that we've

1043
00:55:22,600 --> 00:55:23,400
got in here.

1044
00:55:24,100 --> 00:55:28,000
I'm going to go ahead and put that stuff into the header file.

1045
00:55:28,000 --> 00:55:32,400
Like so she probably want to leave these in the C file.

1046
00:55:36,500 --> 00:55:36,800
Right.

1047
00:55:36,800 --> 00:55:40,000
And so that way I can just I like to, I like to separate things

1048
00:55:40,000 --> 00:55:41,300
between each file on the CPP file.

1049
00:55:41,300 --> 00:55:43,500
Even though they're all compiled together, I like that things need

1050
00:55:43,500 --> 00:55:46,400
Falcons easier for me to have two windows side by side where I'm ice,

1051
00:55:46,400 --> 00:55:49,100
trucks on one side and my code on the other so that it's just easy to

1052
00:55:49,100 --> 00:55:50,800
remember where things go right?

1053
00:55:51,000 --> 00:55:52,100
And I can read my structs.

1054
00:55:53,800 --> 00:55:57,600
So, what I need to do here is I need to have some kind of a world that

1055
00:55:57,600 --> 00:55:59,200
I'm going to retrace, right?

1056
00:55:59,500 --> 00:56:03,500
And I just want to have in it like, you know, okay, I've I want to

1057
00:56:03,500 --> 00:56:06,900
have a plane and I want to have a sphere, right?

1058
00:56:06,900 --> 00:56:07,700
That's what I said.

1059
00:56:08,400 --> 00:56:14,700
And so I need to Define these a plane and a sphere are both defined.

1060
00:56:14,700 --> 00:56:20,800
Ironically, basically the same way, but I'm creating two separate

1061
00:56:20,800 --> 00:56:23,300
structure them anyway, because who knows?

1062
00:56:23,500 --> 00:56:24,200
Maybe I want to do.

1063
00:56:29,300 --> 00:56:31,700
I mean, I really don't need structure for these.

1064
00:56:32,900 --> 00:56:37,200
I'm kind of in my head debating, whether I really need to bother with

1065
00:56:37,200 --> 00:56:37,900
that.

1066
00:56:45,500 --> 00:56:46,200
Yeah.

1067
00:56:48,900 --> 00:56:49,500
so,

1068
00:56:51,200 --> 00:56:51,700
I'm going to.

1069
00:56:56,000 --> 00:56:58,500
I'm just going to make these a little differently than I would

1070
00:56:58,500 --> 00:56:59,900
otherwise just to make it a little

1071
00:57:00,000 --> 00:57:00,400
Or so.

1072
00:57:00,400 --> 00:57:04,000
All right, so let's say we've got the plane normal and the plane

1073
00:57:04,000 --> 00:57:04,800
devalue

1074
00:57:06,000 --> 00:57:06,600
Right.

1075
00:57:09,000 --> 00:57:13,600
And here, I've got the sphere position and the radius, right?

1076
00:57:14,300 --> 00:57:17,800
So what you can see from here is they're the same definition.

1077
00:57:17,800 --> 00:57:22,100
They're both, just a V3 and an F32, right?

1078
00:57:22,100 --> 00:57:25,500
A plane is fundamentally a normal and a distance along the normal.

1079
00:57:26,600 --> 00:57:30,400
A sphere is fundamentally a point with a radius, they both happen to

1080
00:57:30,400 --> 00:57:36,900
be 13d value and one scalar value or a single for four long Vector.

1081
00:57:37,100 --> 00:57:38,600
If you want to think of it that way, like both,

1082
00:57:38,800 --> 00:57:39,600
Just a V4.

1083
00:57:39,600 --> 00:57:41,000
So you can see why I'm kind of

1084
00:57:42,600 --> 00:57:44,500
ambivalent about that particular.

1085
00:57:46,800 --> 00:57:47,800
Yeah, that particular thing.

1086
00:57:49,400 --> 00:57:53,200
But anyway, in addition to that, I also probably want a material in

1087
00:57:53,200 --> 00:57:53,700
here.

1088
00:57:54,000 --> 00:57:57,600
Something that would allow me to do, like a color value and will

1089
00:57:57,600 --> 00:57:59,800
probably store some other things in there.

1090
00:57:59,800 --> 00:58:03,500
In addition to the color value as we go for right now, we'll stick

1091
00:58:03,500 --> 00:58:04,900
with just the color value.

1092
00:58:05,300 --> 00:58:08,500
But in the future, we'll probably do some things that are a little bit

1093
00:58:08,500 --> 00:58:09,300
more fancy.

1094
00:58:09,400 --> 00:58:11,200
I'm going to actually call it a V3 for a minute.

1095
00:58:11,200 --> 00:58:14,100
So it's just going to be an RGB color value in.

1096
00:58:14,100 --> 00:58:16,400
That'll be it, and we'll expand that later as we

1097
00:58:16,600 --> 00:58:20,500
To do more things fanciness, with respect to the ray tracing.

1098
00:58:21,700 --> 00:58:25,300
So I guess I will just say in here.

1099
00:58:25,500 --> 00:58:30,200
We'll have an addition to this information will have a you 32, which

1100
00:58:30,200 --> 00:58:34,600
is Matt index that's the material that will be used.

1101
00:58:34,700 --> 00:58:36,000
I'll put that at the end for now.

1102
00:58:37,100 --> 00:58:40,000
And so all I'm doing is just creating a data set that I can read

1103
00:58:40,000 --> 00:58:40,700
through here.

1104
00:58:41,300 --> 00:58:43,700
And I'm not going to think again too hard about these because I'm just

1105
00:58:43,700 --> 00:58:44,600
going to assuming that will.

1106
00:58:44,600 --> 00:58:49,200
I'm assuming we'll just change these later on as we go because we

1107
00:58:49,200 --> 00:58:51,400
probably won't want them stored in this format in the

1108
00:58:51,600 --> 00:58:55,100
Sure, and you'll see why a little later on.

1109
00:58:55,700 --> 00:58:57,800
But I'm just I'm just creating a basic version here.

1110
00:58:58,300 --> 00:58:59,600
I can't even put a note in here.

1111
00:59:07,500 --> 00:59:09,800
We will probably do some more stuff with these later on.

1112
00:59:09,800 --> 00:59:12,300
So I'm just pretending, I don't know anything ahead of time here.

1113
00:59:12,300 --> 00:59:15,600
I'm just creating some basic stuff I can use to read out in my

1114
00:59:15,600 --> 00:59:18,800
raytracer for the base for the start of things, right?

1115
00:59:35,200 --> 00:59:37,600
So what I want to do here is to be able to create a little world

1116
00:59:37,600 --> 00:59:41,000
struct that will create some things like a plane, and a sphere and

1117
00:59:41,000 --> 00:59:43,000
stuff like that, that I can race against.

1118
00:59:43,000 --> 00:59:45,500
And I want to be able to have as many planes as many spheres is I

1119
00:59:45,500 --> 00:59:46,100
want.

1120
00:59:46,100 --> 00:59:48,400
And I want each of those to be able to index into some array of

1121
00:59:48,400 --> 00:59:51,600
materials, where the material specified, just a color at some point.

1122
00:59:51,600 --> 00:59:54,100
But since this is a ray Tracer, you could imagine the future, maybe

1123
00:59:54,100 --> 00:59:55,600
they specify other things, right?

1124
00:59:55,600 --> 00:59:58,900
So they might specify more complicated pieces of information.

1125
01:00:01,800 --> 01:00:03,000
Something such as.

1126
01:00:06,900 --> 01:00:10,300
How translucent material is how what?

1127
01:00:10,300 --> 01:00:13,900
It's reflectance function is like maybe it's diffused versus specular,

1128
01:00:13,900 --> 01:00:16,200
you know, these sorts of things, okay?

1129
01:00:16,900 --> 01:00:20,100
So what I want to do here is I want to have a way of creating one of

1130
01:00:20,100 --> 01:00:20,900
these worlds.

1131
01:00:21,600 --> 01:00:23,300
So I'm just going to create one of those.

1132
01:00:23,800 --> 01:00:28,300
I'm going to basically say that we have, you know, one material,

1133
01:00:33,300 --> 01:00:37,400
I'm going to say we have, you know, plain count.

1134
01:00:38,800 --> 01:00:39,400
Equals.

1135
01:00:39,900 --> 01:00:40,800
I don't know, equals one.

1136
01:00:40,800 --> 01:00:41,500
Let's say

1137
01:00:44,700 --> 01:00:47,600
Sphere count equals zero for now.

1138
01:00:52,900 --> 01:00:57,100
Something like this and here, I will just create a material.

1139
01:00:59,300 --> 01:01:00,100
And a plane.

1140
01:01:04,300 --> 01:01:11,500
Now, I will want my materials color to be an RGB value.

1141
01:01:11,900 --> 01:01:13,800
Let's make it red for now.

1142
01:01:14,900 --> 01:01:16,400
I will want the plane.

1143
01:01:18,000 --> 01:01:23,300
To have him at index of zero which it will by default I guess and you

1144
01:01:23,300 --> 01:01:24,500
know what, I know what you know what?

1145
01:01:24,500 --> 01:01:26,700
No no I'm going to take that back.

1146
01:01:27,300 --> 01:01:31,500
I think I'm going to do a material count of two and I think I'm going

1147
01:01:31,500 --> 01:01:33,300
to I'm going to create two of these.

1148
01:01:34,300 --> 01:01:38,800
All right, and I'm going to I'm going to treat them separately.

1149
01:01:40,200 --> 01:01:43,300
So I'm going to make a material that's black and a material that's

1150
01:01:43,300 --> 01:01:43,800
red.

1151
01:01:44,800 --> 01:01:50,000
And I'm going to go ahead and say that the plane has a matte index of

1152
01:01:50,000 --> 01:01:50,300
1.

1153
01:01:50,700 --> 01:01:51,800
Now, why do I do that?

1154
01:01:51,900 --> 01:01:56,700
Because if I've got a plane I also want to have what happens if you

1155
01:01:56,700 --> 01:01:58,100
don't hit anything, right?

1156
01:01:58,100 --> 01:02:01,100
Because you can trace array and maybe you missed the plane entirely.

1157
01:02:01,600 --> 01:02:02,800
Well, there's only a plane in the scene.

1158
01:02:02,800 --> 01:02:04,000
That means you didn't get anything.

1159
01:02:04,300 --> 01:02:07,300
So I need to have the ray Tracer, do something when it hits nothing.

1160
01:02:08,000 --> 01:02:10,000
And what I'm going to have it do is just use materials.

1161
01:02:10,100 --> 01:02:12,900
Row and return that color.

1162
01:02:14,500 --> 01:02:15,700
All right, that's it.

1163
01:02:18,300 --> 01:02:18,700
Okay.

1164
01:02:20,500 --> 01:02:23,200
So now I've got a world here, you know, I've got to make sure the

1165
01:02:23,400 --> 01:02:26,300
material kind of to my materials, the plane count of one and I got my

1166
01:02:26,300 --> 01:02:26,800
plane.

1167
01:02:27,200 --> 01:02:29,900
I'm a sphere account, and my sphere is right.

1168
01:02:31,200 --> 01:02:32,500
And I could retrace them here.

1169
01:02:32,500 --> 01:02:36,900
However, I still have one thing that I don't know which is I don't

1170
01:02:36,900 --> 01:02:39,800
know where the camera is going to be pointed, right?

1171
01:02:40,000 --> 01:02:43,100
So I need some information about that but we'll take care of that in a

1172
01:02:43,100 --> 01:02:44,200
minute, right?

1173
01:02:45,200 --> 01:02:46,200
So let's go ahead and compile this.

1174
01:02:46,200 --> 01:02:48,500
And what we're going to find is that because we're not including the

1175
01:02:48,500 --> 01:02:49,700
handmade hero math Library.

1176
01:02:49,700 --> 01:02:52,700
We don't have a vector type yet, right?

1177
01:02:53,300 --> 01:02:54,300
You can kind of see here.

1178
01:02:54,300 --> 01:02:58,100
We have this problem where we're like, okay, we don't know any of this

1179
01:02:58,100 --> 01:02:58,600
stuff.

1180
01:02:58,600 --> 01:02:59,800
We don't have any of these.

1181
01:03:00,000 --> 01:03:00,700
You three things.

1182
01:03:00,700 --> 01:03:02,700
We're just we're just confused here, right?

1183
01:03:03,500 --> 01:03:04,400
We don't know what's going on.

1184
01:03:04,800 --> 01:03:08,800
So what I need to do is I need to pull in some of that stuff and we

1185
01:03:08,800 --> 01:03:12,400
can go ahead and do that by, looking at what we've already written in

1186
01:03:12,400 --> 01:03:15,000
handmade hero, right?

1187
01:03:15,000 --> 01:03:17,400
You can see we've got all of our sort of V2 stuff in here.

1188
01:03:19,200 --> 01:03:24,500
Now, if I look through this in the handmade math directory here, I

1189
01:03:24,500 --> 01:03:28,700
guess one question is where yeah, like should be just product proud

1190
01:03:28,700 --> 01:03:32,400
include the handmade hero one, or should I copy it out into a

1191
01:03:32,400 --> 01:03:33,200
standalone?

1192
01:03:33,300 --> 01:03:33,500
I guess.

1193
01:03:33,500 --> 01:03:34,800
I'll copy it out for now.

1194
01:03:36,100 --> 01:03:40,100
So here's our our V2 V3 V4.

1195
01:03:45,800 --> 01:03:49,100
Like so and I'll just sort of put that up here.

1196
01:03:49,600 --> 01:03:54,300
Maybe I'll make a special re math.h so that they don't get clogged up

1197
01:03:54,300 --> 01:03:56,200
in here and I'm going to replace the refill.

1198
01:03:56,500 --> 01:03:59,400
Real three twos with F32 is here like.

1199
01:03:59,400 --> 01:04:01,800
So, but this is just a handmade hero math.

1200
01:04:02,400 --> 01:04:03,100
That's all it is.

1201
01:04:04,000 --> 01:04:06,500
Nothing more fancy than that.

1202
01:04:06,800 --> 01:04:09,800
I will also copy my Max values here.

1203
01:04:12,800 --> 01:04:16,200
So, we have those days, you might want them.

1204
01:04:17,600 --> 01:04:22,500
And the other thing I want to do is I want to grab like all of our

1205
01:04:24,300 --> 01:04:26,800
math functions like dot products cross products, that sort of thing

1206
01:04:27,500 --> 01:04:28,900
into the math Library, as well.

1207
01:04:30,000 --> 01:04:32,600
So let's take a look at which ones of these we need here.

1208
01:04:34,100 --> 01:04:36,500
We certainly don't need the I ones the moment.

1209
01:04:39,400 --> 01:04:41,400
Well actually, you know what, we can keep, I think about it.

1210
01:04:41,400 --> 01:04:42,600
We could keep those hips.

1211
01:04:49,100 --> 01:04:50,600
Well, we have a lot of stuff on here.

1212
01:04:51,600 --> 01:04:54,400
We don't need anything that works with matrices yet, so let's leave

1213
01:04:54,400 --> 01:04:55,400
those out for now.

1214
01:04:56,300 --> 01:05:00,300
Like get Rogue column, translate rose, 3x3 like that sort of stuff in

1215
01:05:00,300 --> 01:05:01,300
this Game Gear with this.

1216
01:05:04,200 --> 01:05:05,700
You can always put them back in if you want.

1217
01:05:07,100 --> 01:05:09,700
Orthographic projections and perspective projections, I'm going to get

1218
01:05:09,700 --> 01:05:10,200
rid of these.

1219
01:05:10,200 --> 01:05:12,600
Well, I basically anything with a matrix, I'm just getting rid of

1220
01:05:15,800 --> 01:05:16,900
We're not going to use this yet.

1221
01:05:19,200 --> 01:05:19,600
There we go.

1222
01:05:20,700 --> 01:05:26,800
So we don't need to transform functions or the multiply functions.

1223
01:05:28,200 --> 01:05:31,300
So then I think we're left mostly

1224
01:05:32,900 --> 01:05:34,600
Okay, we got some rectangle functions.

1225
01:05:34,600 --> 01:05:36,100
We don't need in here.

1226
01:05:40,800 --> 01:05:41,400
Go.

1227
01:05:44,700 --> 01:05:47,600
I don't really need any of these rectangle functions.

1228
01:05:51,000 --> 01:05:52,800
But I hope that's the end of it.

1229
01:05:59,200 --> 01:05:59,600
All right.

1230
01:06:03,000 --> 01:06:07,700
so when we do our pound include after we do this, we want to include

1231
01:06:07,700 --> 01:06:12,300
our math Library here, like so

1232
01:06:13,600 --> 01:06:16,000
Did I not make one of these?

1233
01:06:16,200 --> 01:06:16,700
I saved this.

1234
01:06:16,700 --> 01:06:18,200
Didn't I didn't put it in the wrong place.

1235
01:06:18,300 --> 01:06:19,600
Probably put it in the wrong place, huh?

1236
01:06:24,600 --> 01:06:25,300
Where did it go?

1237
01:06:29,400 --> 01:06:30,600
We don't know where it went.

1238
01:06:33,600 --> 01:06:35,400
You went to handmade code, all right.

1239
01:06:40,500 --> 01:06:45,300
Yeah, so now we have to do is just again, replace the old type since

1240
01:06:45,300 --> 01:06:47,400
we're only using new types in this project.

1241
01:06:47,600 --> 01:06:49,400
Oops, I messed that up.

1242
01:06:50,100 --> 01:06:55,800
Let's replace, you went 32 with you 32 and I guess these are the only

1243
01:06:55,800 --> 01:06:56,900
places these are used.

1244
01:06:59,600 --> 01:07:02,300
Yeah, and let's replace real 32 with f 32.

1245
01:07:07,600 --> 01:07:08,400
All right.

1246
01:07:15,000 --> 01:07:22,400
So we don't have our pie here, so let's see if we can grab pie 32.

1247
01:07:25,800 --> 01:07:27,400
I don't know where that's at.

1248
01:07:29,400 --> 01:07:31,900
it is so we'll have our pie in our Tau

1249
01:07:34,900 --> 01:07:37,900
And then we have lips.

1250
01:07:39,200 --> 01:07:42,700
We have to do our sine and cosine at the moment.

1251
01:07:42,700 --> 01:07:49,000
We don't really need sine and cosine for anything.

1252
01:07:49,000 --> 01:07:52,000
So I'm going to probably get rid of those as well.

1253
01:07:54,100 --> 01:07:56,100
F 64 is, we don't need at the moment.

1254
01:07:56,100 --> 01:07:57,700
So I'm gonna get rid of those as well.

1255
01:07:59,200 --> 01:08:00,200
And then we're good.

1256
01:08:00,200 --> 01:08:01,600
So square root.

1257
01:08:02,300 --> 01:08:06,500
I'm just going to make a little dummy function here for we may want

1258
01:08:06,500 --> 01:08:07,200
that.

1259
01:08:17,300 --> 01:08:18,899
And we may need to sin square.

1260
01:08:18,899 --> 01:08:24,100
Root can be kind of slow if you don't use the mm intrinsics I'm

1261
01:08:24,100 --> 01:08:27,200
probably gonna want to replace this with an intrinsic.

1262
01:08:31,000 --> 01:08:35,300
Will include the sea runtimes math library but we probably can't

1263
01:08:35,300 --> 01:08:39,399
afford to actually use it so we'll have to deal with that when we get

1264
01:08:39,399 --> 01:08:40,700
to the performance side of things.

1265
01:08:51,300 --> 01:08:56,300
So round real third 322 in 32, same deal here.

1266
01:09:00,000 --> 01:09:01,300
Make a little stub for it.

1267
01:09:19,800 --> 01:09:25,600
So since we want to round this thing, real 322 un 32, you know, it's

1268
01:09:25,600 --> 01:09:27,399
going to truncate by default.

1269
01:09:27,700 --> 01:09:30,500
So we kind of need to do like a biasing operation here.

1270
01:09:37,300 --> 01:09:39,899
But both of these are going to want to be done through SSI eventually

1271
01:09:39,899 --> 01:09:42,000
so we'll deal with that when we come to it.

1272
01:09:44,000 --> 01:09:47,700
So finally we just need our be thirty twos which are just

1273
01:09:55,500 --> 01:09:57,100
And I think we are good.

1274
01:09:58,200 --> 01:09:59,100
All right, so there we go.

1275
01:10:00,100 --> 01:10:02,600
So again, we haven't done anything here except for set up a world that

1276
01:10:02,600 --> 01:10:03,800
we can actually Ray Trace.

1277
01:10:05,200 --> 01:10:07,500
In order to do that, we're going to have to place our plane somewhere,

1278
01:10:08,400 --> 01:10:08,900
right?

1279
01:10:10,000 --> 01:10:11,700
That's kind of a prerequisite.

1280
01:10:12,200 --> 01:10:18,700
So in order to place our plane somewhere on, let's go ahead and go to

1281
01:10:18,700 --> 01:10:20,700
the world's here, right?

1282
01:10:20,700 --> 01:10:21,400
At H.

1283
01:10:21,900 --> 01:10:25,800
In order to place our plane somewhere, we'd actually have a way of

1284
01:10:25,800 --> 01:10:26,800
specifying the plane.

1285
01:10:27,300 --> 01:10:31,000
And so, we need to set the n and the D value of our plane, which we'll

1286
01:10:31,000 --> 01:10:31,900
get to in a second.

1287
01:10:36,500 --> 01:10:40,200
But now it's come, it comes the time.

1288
01:10:40,400 --> 01:10:45,000
This point when we are going to have to use some Milton to explain

1289
01:10:45,000 --> 01:10:45,900
things, I believe.

1290
01:10:46,100 --> 01:10:48,600
So let's get that going right now.

1291
01:10:50,600 --> 01:10:55,100
Okay, so let's talk about this real quick.

1292
01:10:57,500 --> 01:10:57,900
Mmm.

1293
01:11:02,600 --> 01:11:03,500
so, a plane

1294
01:11:07,600 --> 01:11:11,700
We want to raytrace something and right now we're going to retrace the

1295
01:11:11,700 --> 01:11:14,900
plane in order to retrace the plane.

1296
01:11:14,900 --> 01:11:18,300
We need to know a couple piece of information about this plane, for

1297
01:11:18,300 --> 01:11:21,500
example, where it is, we know we're going to have a camera set up

1298
01:11:21,500 --> 01:11:24,100
somehow and the cameras gonna be looking at the plane.

1299
01:11:24,400 --> 01:11:27,300
And so what we need to do is we need to shoot raised out from that

1300
01:11:27,300 --> 01:11:30,300
camera and figure out where they hid now.

1301
01:11:31,400 --> 01:11:34,700
The easiest way to specify a plane is just using what's called a plane

1302
01:11:34,700 --> 01:11:38,600
equation, it's called a plane equation because it defines a plane

1303
01:11:38,600 --> 01:11:43,600
space that extends infinitely in all of its directions that are in the

1304
01:11:43,600 --> 01:11:43,900
plane.

1305
01:11:43,900 --> 01:11:46,000
So, it's got in 3D a plane.

1306
01:11:46,000 --> 01:11:47,900
Would be two-dimensional, right?

1307
01:11:48,100 --> 01:11:49,500
It doesn't include one of the dimensions.

1308
01:11:49,500 --> 01:11:53,200
It extends infinitely in those two dimensions, and not at all in that

1309
01:11:53,200 --> 01:11:54,000
third dimension.

1310
01:11:54,300 --> 01:11:55,500
It's perfectly flat.

1311
01:11:57,000 --> 01:11:59,800
So the way we typically Define that is by using again, the inner

1312
01:12:00,000 --> 01:12:02,100
Product, which we've talked about many times that handmade here.

1313
01:12:02,100 --> 01:12:03,300
I'm not gonna explain it again here.

1314
01:12:03,300 --> 01:12:06,700
You want to go read, watch the handmade here on inter product, use our

1315
01:12:06,700 --> 01:12:10,000
handy search feature on The annotation page to find it if you don't

1316
01:12:10,000 --> 01:12:10,500
know what it is.

1317
01:12:12,500 --> 01:12:15,600
But we're going to use a simple plane equation that says that this

1318
01:12:15,600 --> 01:12:18,800
Vector here which is the normal to the plane, the normal to the plane

1319
01:12:19,700 --> 01:12:23,500
dot product with a point, right?

1320
01:12:23,600 --> 01:12:29,300
Any point on the plane, plus the D value for the plane equals 0.

1321
01:12:29,300 --> 01:12:32,300
This is the equation we're going to use to define the plant, right?

1322
01:12:32,700 --> 01:12:34,200
This is the normal to the plane.

1323
01:12:35,900 --> 01:12:40,000
The D value for the plane is the offset from the origin going

1324
01:12:40,000 --> 01:12:41,500
backwards along the normal.

1325
01:12:41,900 --> 01:12:45,000
So let's say that we have the origin was here.

1326
01:12:45,000 --> 01:12:50,500
So here's the origin you know which is 000 in World space, right?

1327
01:12:50,800 --> 01:12:55,300
And here is the normal to our plane, that's the normal to the plane.

1328
01:12:55,800 --> 01:13:00,000
Well, if we didn't have this D value, all of our planes would pass

1329
01:13:00,000 --> 01:13:01,600
through the origin, right?

1330
01:13:01,600 --> 01:13:03,100
They would just pass through the origin.

1331
01:13:03,900 --> 01:13:05,400
Why would they pass through the origin?

1332
01:13:05,600 --> 01:13:09,000
Because the definition of the plane would just be that the dot product

1333
01:13:09,000 --> 01:13:11,200
with a point has to equal 0?

1334
01:13:11,300 --> 01:13:15,700
Well, a DOT product with a point in three dimensions is just going to

1335
01:13:15,700 --> 01:13:18,400
tell us how far along this normal.

1336
01:13:18,400 --> 01:13:19,100
You are.

1337
01:13:19,800 --> 01:13:23,400
And if it has to equal 0, it means you always must be.

1338
01:13:24,900 --> 01:13:29,600
Excuse me, mapping to the origin, right?

1339
01:13:29,600 --> 01:13:32,700
Because the dot product along this thing has to be zero, you must

1340
01:13:32,700 --> 01:13:34,100
always be mapping to the origin.

1341
01:13:34,100 --> 01:13:35,300
Along that line.

1342
01:13:35,400 --> 01:13:39,500
Now, you could be anywhere along the plane, right?

1343
01:13:39,600 --> 01:13:43,800
That is tangent to this line, but you can't ever go anywhere on this

1344
01:13:43,800 --> 01:13:47,900
line, which means that this plane here that I've defined can never

1345
01:13:47,900 --> 01:13:50,000
slide relative to the origin.

1346
01:13:50,200 --> 01:13:54,200
I couldn't have the same plane but just backed up a bit, right?

1347
01:13:54,400 --> 01:13:55,300
Couldn't have it out here.

1348
01:13:55,600 --> 01:13:57,100
That's what this D value does.

1349
01:13:57,300 --> 01:14:00,700
The devalue corrects for the fact that we may want the dot product to

1350
01:14:00,700 --> 01:14:03,200
be actually some value along this line.

1351
01:14:03,800 --> 01:14:06,400
And in this case like I said it goes backwards along the normal.

1352
01:14:06,600 --> 01:14:10,900
Why does it go backwards because it's plus d equals 0.

1353
01:14:11,000 --> 01:14:15,400
If we instead phrased, it m transpose P equals D.

1354
01:14:15,800 --> 01:14:19,700
Now it would be how far along the normal we go, but because we've

1355
01:14:19,700 --> 01:14:23,100
transferred it to the other side in in

1356
01:14:24,700 --> 01:14:26,400
The effort to write it as a single.

1357
01:14:26,400 --> 01:14:29,200
One-sided equation equation with equaling zero on the other side.

1358
01:14:29,700 --> 01:14:31,100
It's backwards along the normal.

1359
01:14:31,200 --> 01:14:32,300
Right now.

1360
01:14:32,300 --> 01:14:37,100
What happens if you write this out, you get n x PX +.

1361
01:14:37,100 --> 01:14:39,500
N YP y + n.

1362
01:14:39,500 --> 01:14:42,500
Zp z + D equals 0.

1363
01:14:42,600 --> 01:14:44,400
This is the dot product part.

1364
01:14:44,400 --> 01:14:49,100
This is the depart what you can see here is you get the traditional ax

1365
01:14:49,400 --> 01:14:49,900
plus b.

1366
01:14:49,900 --> 01:14:53,900
Y plus CZ plus d equals 0 the a fine.

1367
01:14:54,300 --> 01:14:57,500
Asian in three dimensions that you probably have should have seen

1368
01:14:57,500 --> 01:14:58,000
before.

1369
01:14:58,400 --> 01:14:59,800
This is just a very straightforward way.

1370
01:15:00,000 --> 01:15:02,000
Finding things so that's our plane.

1371
01:15:03,600 --> 01:15:05,500
I'm just going to define a very simple plain.

1372
01:15:05,700 --> 01:15:08,900
I'm going to define a plane that just points up in the Z.

1373
01:15:08,900 --> 01:15:13,900
Let's will make ZB up and I'm going to have the D value be just 0.

1374
01:15:14,000 --> 01:15:16,400
So this is the plane that passes through the origin.

1375
01:15:17,300 --> 01:15:19,300
It points directly up.

1376
01:15:19,400 --> 01:15:22,200
So it's the XY plane passing through the origin.

1377
01:15:22,200 --> 01:15:23,800
The simplest possible plane.

1378
01:15:24,300 --> 01:15:26,600
We could hope that a fine and there it is.

1379
01:15:26,900 --> 01:15:33,300
Okay, so now we need to go ahead and do some actual

1380
01:15:33,400 --> 01:15:35,000
Will Ray tracing here.

1381
01:15:35,800 --> 01:15:38,900
So what we need to do is we need to start figuring out how we're going

1382
01:15:38,900 --> 01:15:39,800
to build this image.

1383
01:15:40,200 --> 01:15:44,000
Well, here's the thing that builds a generic image, right?

1384
01:15:44,000 --> 01:15:45,000
But I've already written

1385
01:15:50,900 --> 01:15:53,900
And what it does, is it steps through each pixel and it just sets it

1386
01:15:53,900 --> 01:15:55,800
to an arbitrary value, right?

1387
01:15:56,600 --> 01:15:59,700
Well, what I want to do here is I want to start retracing to find out

1388
01:15:59,700 --> 01:16:01,600
what I actually should see from here.

1389
01:16:02,400 --> 01:16:05,200
In order to do that, I'm going to need a camera position obviously,

1390
01:16:05,300 --> 01:16:05,600
right?

1391
01:16:05,600 --> 01:16:08,600
I got to need a place that we're looking from, and I'm also going to

1392
01:16:08,600 --> 01:16:09,800
need a camera Direction.

1393
01:16:13,200 --> 01:16:15,300
I'm going to need kind of a camera position, and I'm going to need a

1394
01:16:15,300 --> 01:16:18,600
camera like direction that note we should call that camera are, maybe

1395
01:16:18,600 --> 01:16:19,500
for camera ray.

1396
01:16:19,500 --> 01:16:23,500
I don't know what we want to call it, but point B, we need some way of

1397
01:16:23,500 --> 01:16:25,800
figure out like what we're pointing down.

1398
01:16:26,300 --> 01:16:29,900
Okay, actually, do you know what I want to call it, but we haven't

1399
01:16:29,900 --> 01:16:30,900
gotten there quite yet.

1400
01:16:31,900 --> 01:16:33,200
So for camera position.

1401
01:16:33,700 --> 01:16:37,200
Well, I know, I want to look down at this plane, right?

1402
01:16:37,800 --> 01:16:41,800
So I probably want to be, you know, I can put the camera anywhere

1403
01:16:41,800 --> 01:16:42,800
since the plane extends infinitely.

1404
01:16:43,000 --> 01:16:46,400
You next and why doesn't really matter where I put the camera relative

1405
01:16:46,400 --> 01:16:47,000
to X and Y axis.

1406
01:16:47,300 --> 01:16:51,600
But for Z, since the plane is in the z-axis, I need to be a bit above

1407
01:16:51,600 --> 01:16:52,000
it.

1408
01:16:52,100 --> 01:16:58,900
So I'm going to set my camera P to be like, 10 units above.

1409
01:17:00,000 --> 01:17:02,300
And we haven't specified what these units are yet.

1410
01:17:02,600 --> 01:17:03,600
So we don't really care.

1411
01:17:03,600 --> 01:17:07,700
But 10 units above the thing, let's say they might be M because that's

1412
01:17:07,700 --> 01:17:08,700
probably what we'll end up.

1413
01:17:08,700 --> 01:17:12,100
Sending them to when we start to get more physical, will probably pick

1414
01:17:12,100 --> 01:17:12,800
meters, but

1415
01:17:12,900 --> 01:17:18,200
You know you're laughing now and then we want to be pointing slightly

1416
01:17:18,200 --> 01:17:22,000
downwards so we can look to slightly down at the plane, right?

1417
01:17:23,400 --> 01:17:26,600
So if we're looking just slightly down at the plane and you know what

1418
01:17:26,600 --> 01:17:29,300
I could do maybe I'll move the camera backwards along.

1419
01:17:31,700 --> 01:17:37,000
Like the y axis for example to so maybe I'll be ten back and you know

1420
01:17:37,000 --> 01:17:38,500
and one up or something instead.

1421
01:17:39,300 --> 01:17:42,700
So if I was going to do that and I want to look at

1422
01:17:45,700 --> 01:17:48,400
and I want to look at say the origin because maybe I'll put a sphere

1423
01:17:48,400 --> 01:17:49,200
there in a second.

1424
01:17:49,600 --> 01:17:51,100
How are we going to do that, right?

1425
01:17:52,000 --> 01:17:55,700
Well what I want to be able to do is I want to be able to create

1426
01:17:55,700 --> 01:17:59,800
essentially a little screen where the camera is like.

1427
01:18:00,000 --> 01:18:03,300
This is the camera, and here's the plane that I'm looking down on,

1428
01:18:03,600 --> 01:18:04,200
right?

1429
01:18:04,400 --> 01:18:06,700
I'm going to want to create like a sphere here or something.

1430
01:18:06,700 --> 01:18:09,700
And I want to play nanosphere Sitting on the plane like a traditional

1431
01:18:09,700 --> 01:18:11,000
Ray traced image, right?

1432
01:18:11,700 --> 01:18:15,000
So, in order to do that, I want to create some kind of an axis system,

1433
01:18:15,000 --> 01:18:18,800
because I'm kind of a coordinate system here where it lines up with

1434
01:18:18,800 --> 01:18:21,200
that sort of idea, of looking down.

1435
01:18:21,400 --> 01:18:24,000
So I want to create basically a synthetic coordinate system for my

1436
01:18:24,000 --> 01:18:24,600
camera.

1437
01:18:24,700 --> 01:18:28,800
So I can construct raise that will shoot out from it, right?

1438
01:18:28,800 --> 01:18:29,800
In a way that makes sense.

1439
01:18:30,000 --> 01:18:30,100
Yes.

1440
01:18:32,000 --> 01:18:33,800
So in order to do that, I'm just gonna do something very

1441
01:18:33,800 --> 01:18:34,600
straightforward.

1442
01:18:34,600 --> 01:18:38,200
I'm going to say, well I know what the Z axis of my camera should be

1443
01:18:39,000 --> 01:18:40,600
which is the thing that I'm going to look down.

1444
01:18:40,900 --> 01:18:44,800
It should point back you know it's a it should I want to look down the

1445
01:18:44,800 --> 01:18:47,800
negative Z axis just like our convention in opengl, right?

1446
01:18:47,900 --> 01:18:51,600
Just to keep it simple, I want to look down the negative Z axis, so my

1447
01:18:51,600 --> 01:18:55,700
Z axis should basically just be pointing up from the origin to the

1448
01:18:55,700 --> 01:18:56,300
camera.

1449
01:18:56,600 --> 01:19:00,500
So it's just the cameras position is just that Z axis, right?

1450
01:19:00,500 --> 01:19:01,300
From the origin of the

1451
01:19:02,000 --> 01:19:05,000
Because that's the camera position - the origin, right?

1452
01:19:05,000 --> 01:19:08,700
Well - the origins, nothing and I want it to be unit Vector.

1453
01:19:08,700 --> 01:19:11,000
So I just need to normalize it, right?

1454
01:19:11,000 --> 01:19:15,500
And I assume we have some stuff here like normalizer 0, I can just

1455
01:19:15,500 --> 01:19:17,500
call that to normalize that.

1456
01:19:18,800 --> 01:19:19,300
Sure, it is.

1457
01:19:21,400 --> 01:19:25,300
But then I need the other actions as well, right?

1458
01:19:25,300 --> 01:19:26,600
And that's going to be my z-axis.

1459
01:19:26,900 --> 01:19:30,700
I need to know what my X and my y axes are

1460
01:19:33,300 --> 01:19:34,500
So what are those axes?

1461
01:19:34,500 --> 01:19:37,200
Well, we already covered this at when we did our cross products and

1462
01:19:37,200 --> 01:19:38,400
stuff like that right?

1463
01:19:38,600 --> 01:19:38,900
Oops.

1464
01:19:38,900 --> 01:19:41,000
I considered a question mark there.

1465
01:19:41,300 --> 01:19:42,700
Just not up and you know what?

1466
01:19:42,700 --> 01:19:44,000
This is handmade math.

1467
01:19:44,000 --> 01:19:45,600
I don't want to edit handmade math.

1468
01:19:46,400 --> 01:19:47,200
That's my bad.

1469
01:19:47,400 --> 01:19:50,200
I want to hand edit Ray math if I'm going to do anything here.

1470
01:19:53,000 --> 01:19:56,400
So anyway, I want to be able to do stuff like the cross product and I

1471
01:19:56,400 --> 01:20:00,300
want to be able to create, you know, an orthogonal coordinate system

1472
01:20:00,300 --> 01:20:02,500
for example from that.

1473
01:20:05,000 --> 01:20:06,800
From that starting coordinate system.

1474
01:20:07,500 --> 01:20:09,900
So, what I can do here again, is used the cross product to help me

1475
01:20:09,900 --> 01:20:10,500
out.

1476
01:20:10,600 --> 01:20:15,900
So I know that I've got a z-axis, right, and I know that, I know what

1477
01:20:15,900 --> 01:20:18,500
direction I want sort of up to be pointing the right.

1478
01:20:18,500 --> 01:20:20,600
I know that this is my camera z-axis.

1479
01:20:20,800 --> 01:20:24,300
And I know that this is the universal z-axis here, right?

1480
01:20:24,800 --> 01:20:29,300
And if I cross those two, so if I crossed my Universal Z, axis with my

1481
01:20:29,300 --> 01:20:30,700
camera Z axis, remember, right?

1482
01:20:30,700 --> 01:20:34,600
Hand rule cross Z axis with my camera Z axis, I'll get an X

1483
01:20:34,700 --> 01:20:36,600
Is pointing out, right?

1484
01:20:37,000 --> 01:20:38,800
So if I do a cross product,

1485
01:20:41,200 --> 01:20:47,200
Of the universal Z axis, with my camera Z axis, I'll get that camera

1486
01:20:47,200 --> 01:20:47,600
X.

1487
01:20:48,400 --> 01:20:50,200
And I'm going to need to normalize that, right?

1488
01:20:50,200 --> 01:20:53,500
Because it's going to be pointing, it's going to be an X axis that's

1489
01:20:53,500 --> 01:20:54,700
that's not unit length.

1490
01:20:55,200 --> 01:20:58,800
And then if I want my y-axis, I'm going to need to cross those two

1491
01:20:58,900 --> 01:20:59,800
together again.

1492
01:21:00,000 --> 01:21:00,500
Right.

1493
01:21:00,500 --> 01:21:03,600
So I'm going to have to take my Z axis in my x-axis.

1494
01:21:03,800 --> 01:21:08,000
I mean need to cross Z with X to get y, right?

1495
01:21:14,100 --> 01:21:16,700
And I believe that should give me what I want.

1496
01:21:17,300 --> 01:21:20,100
I'm going to double-check this though because this is a very you know

1497
01:21:20,200 --> 01:21:23,300
easy thing to get wrong when you're just sort of thinking it through

1498
01:21:28,300 --> 01:21:30,500
Oops, I meant Type X there.

1499
01:21:30,500 --> 01:21:31,300
Thank you, compiler.

1500
01:21:31,300 --> 01:21:32,300
That was a good catch.

1501
01:21:35,300 --> 01:21:39,700
I'm going to go ahead and step here and I'm going to look at these

1502
01:21:39,700 --> 01:21:41,900
briefly, but I'm not going to learn much from looking at them.

1503
01:21:42,300 --> 01:21:45,100
So I'm going to make a controlled test case in a second where you can

1504
01:21:45,100 --> 01:21:46,300
see what's going on.

1505
01:21:46,300 --> 01:21:48,600
But I just want you to sort of get the feel for what I'm doing here.

1506
01:21:50,200 --> 01:21:53,100
So you can see what I've created is an axis system.

1507
01:21:53,100 --> 01:21:56,900
You can see that my camera x-axis is negative 1, and you can see that

1508
01:21:56,900 --> 01:22:00,400
my Y and my Z axis are set to, some sort of values that are difficult

1509
01:22:00,400 --> 01:22:00,900
to inspector.

1510
01:22:00,900 --> 01:22:02,700
But they're basically like one

1511
01:22:03,600 --> 01:22:06,100
You know, 111, you can see that.

1512
01:22:06,100 --> 01:22:08,700
That is orthogonal, which is great.

1513
01:22:08,700 --> 01:22:12,100
So we know that we're basically doing the right thing, but I'm not

1514
01:22:12,100 --> 01:22:14,000
sure if my x axis, the point in the right direction.

1515
01:22:14,200 --> 01:22:17,900
I need to think about that for a second, if I camera P, if my camera

1516
01:22:17,900 --> 01:22:23,600
placement is back at 10, then my Z is pointing positive.

1517
01:22:25,900 --> 01:22:33,900
Kind of a y+ 10 which means that my x axis if my Y is pointing

1518
01:22:33,900 --> 01:22:39,300
positive 10 and I'm sorry, my Z is playing positive 10 and I want my

1519
01:22:39,300 --> 01:22:42,800
y-axis to be pointing sort of upwards, right.

1520
01:22:42,800 --> 01:22:47,100
It should have a positive Z value, which it does, which means that my

1521
01:22:47,100 --> 01:22:49,600
x-axis cross my

1522
01:22:50,900 --> 01:22:51,900
My wife is it?

1523
01:22:52,200 --> 01:22:54,400
That just seems wrong.

1524
01:22:54,400 --> 01:22:59,000
Just and I'm wondering if I got the sign wrong there, ought to think

1525
01:22:59,000 --> 01:22:59,700
about that.

1526
01:23:02,500 --> 01:23:03,600
And I want to test something.

1527
01:23:04,300 --> 01:23:05,300
So here's an easy test.

1528
01:23:05,300 --> 01:23:06,000
I can perform

1529
01:23:07,500 --> 01:23:11,500
If I set the camera Z axis to the actual Z axis, right?

1530
01:23:12,100 --> 01:23:15,800
I should get back the unit coordinate system if I did it, right.

1531
01:23:16,300 --> 01:23:18,000
And let's see if I did here.

1532
01:23:18,500 --> 01:23:18,800
Oh.

1533
01:23:18,800 --> 01:23:20,000
Well actually you know what?

1534
01:23:20,700 --> 01:23:24,600
I can't quite do that because I'm using the Z axis as the generation

1535
01:23:24,700 --> 01:23:27,700
that as the cross product for Generation there.

1536
01:23:27,700 --> 01:23:30,100
So that's a little bit iffy.

1537
01:23:33,100 --> 01:23:36,300
I would need to use a different axis for it.

1538
01:23:36,400 --> 01:23:43,100
So let's say instead that the camera z-axis is going to point directly

1539
01:23:43,100 --> 01:23:44,000
down, why?

1540
01:23:44,500 --> 01:23:44,800
Right?

1541
01:23:44,800 --> 01:23:47,600
So, I'm just looking straight in the plane.

1542
01:23:49,400 --> 01:23:50,000
Right?

1543
01:23:50,500 --> 01:23:51,700
And let's take a look at this.

1544
01:23:52,400 --> 01:23:55,700
So if the Z axis is pointing directly down, why

1545
01:24:02,200 --> 01:24:03,000
Jimmy windows.

1546
01:24:04,400 --> 01:24:07,300
So, here's my plane, here's the origin.

1547
01:24:08,100 --> 01:24:10,900
So the Z axis is pointing this way for the camera, which means we're

1548
01:24:10,900 --> 01:24:11,700
looking this way.

1549
01:24:13,200 --> 01:24:18,500
I know that I want my y-axis to be positive Z, right?

1550
01:24:18,500 --> 01:24:19,500
It should be pointing up.

1551
01:24:22,000 --> 01:24:25,100
So the question is, what direction is my x axis pointing?

1552
01:24:25,300 --> 01:24:30,900
If this is y, and this is z right X, cross y should be Z.

1553
01:24:31,200 --> 01:24:34,700
So my x axis should be pointing this direction, right?

1554
01:24:34,700 --> 01:24:39,400
It should be 100 because X cross y should be easy.

1555
01:24:41,700 --> 01:24:42,400
And you can see that.

1556
01:24:42,400 --> 01:24:43,300
It's negative one here.

1557
01:24:43,300 --> 01:24:45,000
So I think that's right.

1558
01:24:45,000 --> 01:24:49,600
That's telling me that I believe my assumption before that, I was

1559
01:24:49,800 --> 01:24:50,000
that.

1560
01:24:50,000 --> 01:24:53,200
I had an error in the ordering here is correct?

1561
01:24:53,200 --> 01:24:55,300
Because I don't believe that should be the case.

1562
01:24:55,700 --> 01:24:56,700
So let's take a look one more.

1563
01:24:56,700 --> 01:24:59,500
Look at how I constructed this and see what I did wrong.

1564
01:25:01,400 --> 01:25:08,100
Okay, so, I know I had a z-axis and I was crossing it with the regular

1565
01:25:08,100 --> 01:25:10,200
Z axis to get my x axis.

1566
01:25:10,600 --> 01:25:18,600
So, if I'm crossing with this, I would expect to cross from y to Z to

1567
01:25:18,600 --> 01:25:20,400
get an X pointing in this direction.

1568
01:25:20,900 --> 01:25:22,100
So, did I do that?

1569
01:25:23,000 --> 01:25:27,200
From y to Z to get my ex

1570
01:25:28,000 --> 01:25:28,600
Right?

1571
01:25:28,600 --> 01:25:34,100
So I feel like that should be giving me the correct answer there.

1572
01:25:35,800 --> 01:25:41,200
From why towards easy to get my ex that seems like it should have been

1573
01:25:41,200 --> 01:25:43,800
correct, right.

1574
01:26:09,900 --> 01:26:11,000
At least to me.

1575
01:26:13,000 --> 01:26:14,700
Right-hand rule would suggest.

1576
01:26:18,300 --> 01:26:20,500
So here's where I'm why I'm confused.

1577
01:26:20,900 --> 01:26:22,800
So here is

1578
01:26:26,400 --> 01:26:27,600
One axis that I have.

1579
01:26:32,600 --> 01:26:33,700
Right, it's 001.

1580
01:26:34,700 --> 01:26:36,200
Here's another axis that I have.

1581
01:26:41,500 --> 01:26:45,400
Ah, you know what know, I drew the diagram wrong.

1582
01:26:46,500 --> 01:26:49,100
This is positive y.

1583
01:26:49,100 --> 01:26:51,000
So that is not the direction.

1584
01:26:51,000 --> 01:26:51,800
This would go.

1585
01:26:51,800 --> 01:26:56,000
It would actually be going this way in this plane, the way I've drawn

1586
01:26:56,000 --> 01:26:56,100
it.

1587
01:26:56,100 --> 01:26:59,600
So I drew a left-handed.

1588
01:27:00,000 --> 01:27:00,400
I am.

1589
01:27:00,800 --> 01:27:04,000
So you actually don't want what I said, right?

1590
01:27:04,000 --> 01:27:07,600
I drew the diagram left-handed by accident, which was dumb of me.

1591
01:27:08,000 --> 01:27:14,000
I drew the plane saying that this was Y and this was X.

1592
01:27:14,000 --> 01:27:19,000
But then when I said along positive, why I drew it this way, which

1593
01:27:19,000 --> 01:27:22,200
flipped the handedness of my coordinate system and led me to make the

1594
01:27:22,200 --> 01:27:25,000
wrong decision, based on the right hand rule, right?

1595
01:27:25,400 --> 01:27:28,300
This is actually other coordinate system looks and you can now see

1596
01:27:28,300 --> 01:27:29,800
that if I wanted to produce my x-axis

1597
01:27:30,000 --> 01:27:34,400
Yes, I would cross from y to Z to get it which is the correct

1598
01:27:34,400 --> 01:27:35,000
Crossing.

1599
01:27:42,200 --> 01:27:42,500
Right?

1600
01:27:42,500 --> 01:27:46,800
So, it should, in fact, cross the opposite direction it should cross

1601
01:27:46,900 --> 01:27:50,000
from this end, this is actually the camera Z axis, right?

1602
01:27:50,100 --> 01:27:53,200
It should cross from the camera Z axis towards that.

1603
01:27:53,200 --> 01:27:55,900
Universal up Axis, that would produce my ex.

1604
01:27:56,000 --> 01:28:02,000
Once I have the X, then I know that if I want to produce the Y from

1605
01:28:02,000 --> 01:28:08,900
it, then in order to produce the y-axis, from just having the x and z,

1606
01:28:08,900 --> 01:28:11,100
I would cross from thes e to the x.

1607
01:28:13,300 --> 01:28:13,900
So, there we go.

1608
01:28:14,600 --> 01:28:18,300
So in theory now, I think that should be correct.

1609
01:28:22,600 --> 01:28:23,200
There we go.

1610
01:28:25,900 --> 01:28:29,700
And again, you can see that would have cause it's a lot of headache in

1611
01:28:29,900 --> 01:28:33,600
if we let it stand so you can see why I wanted to create that, just

1612
01:28:33,600 --> 01:28:37,100
inspect and double check because it's easy to make a typo.

1613
01:28:37,100 --> 01:28:39,900
When you do something like that or like I like in my case it was a

1614
01:28:39,900 --> 01:28:42,400
diagram typos and don't you call is diagram.

1615
01:28:42,400 --> 01:28:42,600
Oh,

1616
01:28:45,200 --> 01:28:47,700
And I don't want that creeping into the code.

1617
01:28:49,600 --> 01:28:53,100
Okay, so now we have a coordinate system to work with.

1618
01:28:53,100 --> 01:28:55,700
So now we're going to do the simplest possible thing to get our rate

1619
01:28:55,700 --> 01:28:57,600
face or started normally.

1620
01:28:57,600 --> 01:28:59,000
At this part in the, the ray Tracer.

1621
01:28:59,000 --> 01:29:02,700
If you're doing a full raytracer, what you need to do is create a lens

1622
01:29:02,700 --> 01:29:07,200
aperture, some idea of how you're stimulating like a camera, right?

1623
01:29:08,400 --> 01:29:10,600
Because fundamentally, what erasers doing is stimulating how light

1624
01:29:10,600 --> 01:29:14,700
propagates through lenses in a camera onto a backplane, which like, so

1625
01:29:14,700 --> 01:29:17,100
we're not going to talk about yet because that's a tremendous amount

1626
01:29:17,100 --> 01:29:19,200
of complexity to bring into the program at this stage.

1627
01:29:19,600 --> 01:29:21,000
We just want to get something basic working.

1628
01:29:21,000 --> 01:29:23,400
So what we're going to do, instead, it just figure out some way to

1629
01:29:23,400 --> 01:29:24,700
shoot raised at the screen at.

1630
01:29:24,700 --> 01:29:26,000
All, right.

1631
01:29:26,000 --> 01:29:26,700
That's all we're going to do.

1632
01:29:28,000 --> 01:29:31,200
So what I'm going to do is I'm going to pretend we have a very simple

1633
01:29:31,200 --> 01:29:37,000
construct which is that we know we now have a y-axis for the camera,

1634
01:29:37,800 --> 01:29:40,300
and an X axis for the camera and the Z axis for the camera.

1635
01:29:40,600 --> 01:29:42,700
I'm saying we're looking down this direction.

1636
01:29:42,900 --> 01:29:48,000
So I'm going to do is I'm going to say at -1 units out right along the

1637
01:29:48,000 --> 01:29:48,200
Z.

1638
01:29:48,200 --> 01:29:50,600
Axis of the camera from the cameras position.

1639
01:29:51,400 --> 01:29:52,800
This is all camera stuff.

1640
01:29:54,000 --> 01:29:55,900
I'm going to say, we've got a little

1641
01:29:59,300 --> 01:29:59,800
Imagine.

1642
01:30:00,000 --> 01:30:01,300
D square.

1643
01:30:01,300 --> 01:30:02,800
Well it's actually going to be rectangle.

1644
01:30:04,600 --> 01:30:07,000
You don't will even start with a square so you can see.

1645
01:30:07,200 --> 01:30:11,500
And then we'll move to rectangle that just goes like from negative 1

1646
01:30:11,600 --> 01:30:19,400
to 1 and a negative 1 to 1 like so that we're going to treat as our

1647
01:30:19,400 --> 01:30:22,300
image that we're going to shoot raised through.

1648
01:30:23,300 --> 01:30:23,900
Right.

1649
01:30:24,100 --> 01:30:28,000
And I'm just going to step through the various positions on this plane

1650
01:30:28,300 --> 01:30:30,100
for as many pixels as we have.

1651
01:30:30,100 --> 01:30:34,600
I'm going to go across the plane and I'm going to shoot the Rays out

1652
01:30:34,600 --> 01:30:36,200
so that I can see what they hit.

1653
01:30:37,400 --> 01:30:37,800
Right.

1654
01:30:38,900 --> 01:30:41,400
Because fundamentally that's what I need to get the ray Tracer

1655
01:30:41,400 --> 01:30:42,000
started.

1656
01:30:42,800 --> 01:30:45,800
So what I want to do is I want to say, all right as I go through here,

1657
01:30:45,800 --> 01:30:47,600
I want to convert these values.

1658
01:30:48,000 --> 01:30:52,700
These why from image from, you know, x from 0 to image with wife from

1659
01:30:52,700 --> 01:30:55,900
certain image height, I want to convert these into

1660
01:30:57,100 --> 01:31:00,600
A ratio along that plane that I can use.

1661
01:31:00,900 --> 01:31:05,300
So, I'm going to call this, like, plane y, or I should say, like, you

1662
01:31:05,300 --> 01:31:07,200
know, that that image plate.

1663
01:31:08,000 --> 01:31:09,400
So I'm going to call this like,

1664
01:31:11,500 --> 01:31:15,300
Maybe like, let's just call it y ratio.

1665
01:31:16,000 --> 01:31:16,300
Now.

1666
01:31:16,300 --> 01:31:17,100
That's bad, too.

1667
01:31:17,400 --> 01:31:19,300
I don't know film film.

1668
01:31:19,300 --> 01:31:19,800
Why?

1669
01:31:21,900 --> 01:31:22,800
Film X.

1670
01:31:23,500 --> 01:31:26,900
And what I want to do here is say, well, okay, I know that I have a

1671
01:31:26,900 --> 01:31:32,300
y-coordinate and an image height and I know that that if I divide the

1672
01:31:32,300 --> 01:31:35,900
Y by the image height, I'll get a number from 0 to 1, right?

1673
01:31:36,500 --> 01:31:39,500
And that number from 0 to 1, tell me how far across this film plate.

1674
01:31:39,500 --> 01:31:40,000
I am.

1675
01:31:40,400 --> 01:31:42,500
But I said I want to go from negative 1 to 1.

1676
01:31:43,500 --> 01:31:45,800
So what I need to do is subtract 1 from it.

1677
01:31:45,800 --> 01:31:49,700
Let's start at negative 1 and I need it to go twice as far because

1678
01:31:49,700 --> 01:31:51,500
going from 0 to 1, I get to go basically.

1679
01:31:51,700 --> 01:31:52,800
You're too, right?

1680
01:31:52,800 --> 01:31:54,400
So it starts out negative 1 goes to 1.

1681
01:31:55,400 --> 01:31:55,800
Right.

1682
01:31:59,400 --> 01:32:00,100
So, there we go.

1683
01:32:04,400 --> 01:32:07,800
And now I have a film X film Y, which are the ratios of where I would

1684
01:32:07,800 --> 01:32:10,800
be on this little thing here, right?

1685
01:32:12,700 --> 01:32:17,000
So then, all I need to do to create a point through which I will shoot

1686
01:32:17,000 --> 01:32:20,500
this Ray, like a point on the image plane that I'll shoot the ray

1687
01:32:20,500 --> 01:32:25,200
through all, I really have to do is go, okay, start wherever the

1688
01:32:25,200 --> 01:32:27,200
center of this thing is, right.

1689
01:32:27,200 --> 01:32:28,400
So I've got, you know,

1690
01:32:30,600 --> 01:32:31,500
Film Center.

1691
01:32:33,800 --> 01:32:36,100
And I know what that is, is just the camera position.

1692
01:32:37,200 --> 01:32:38,600
Plus, however, far along.

1693
01:32:38,600 --> 01:32:41,800
I want it to be along the camera Z, but I'm going backwards.

1694
01:32:41,800 --> 01:32:43,800
Remember, so I'm going backwards.

1695
01:32:43,900 --> 01:32:49,100
However, far, I want to go there will say one unit for now, and I'll

1696
01:32:49,100 --> 01:32:52,000
just call this my film dissed.

1697
01:32:56,100 --> 01:32:59,300
And remember these are this is just a Cheesy way to get the raise to

1698
01:32:59,300 --> 01:32:59,800
start with.

1699
01:33:00,900 --> 01:33:04,500
Eventually, we would want to put in a whole camera aperture here where

1700
01:33:04,500 --> 01:33:07,200
the film is actually on the other side, right?

1701
01:33:07,200 --> 01:33:08,600
So the film would actually be back here.

1702
01:33:08,700 --> 01:33:12,900
The Rays would actually pass through a lens on this side, through the

1703
01:33:12,900 --> 01:33:17,900
focal point of the lens back onto the image plate but we're not doing

1704
01:33:17,900 --> 01:33:21,500
any of that yet because we just want basic raised and to debug basic

1705
01:33:21,500 --> 01:33:22,300
Ray casting.

1706
01:33:22,400 --> 01:33:25,700
So we're taking all of that out because you don't want to run before

1707
01:33:25,700 --> 01:33:26,300
you can crawl.

1708
01:33:26,300 --> 01:33:27,100
You know, you gotta crawl.

1709
01:33:27,100 --> 01:33:30,500
First, debug your crawling before you try to implement your running.

1710
01:33:32,600 --> 01:33:36,700
All right, so with a film exfil, my ratio now, I know that if I take

1711
01:33:36,700 --> 01:33:38,400
this Film Center, right?

1712
01:33:39,200 --> 01:33:43,300
And I can basically a film P here by taking the film Center Point and

1713
01:33:43,400 --> 01:33:45,100
adding the film X and film.

1714
01:33:45,100 --> 01:33:51,400
Why ratios along the camera X and Camera?

1715
01:33:51,400 --> 01:33:53,600
Y axes, right?

1716
01:33:53,600 --> 01:33:58,800
So again, I'm just starting here and I'm walking out along those to

1717
01:33:58,800 --> 01:34:00,600
produce a point on the plane.

1718
01:34:01,000 --> 01:34:01,500
Now, I

1719
01:34:01,700 --> 01:34:04,600
Need in addition, a size idea.

1720
01:34:04,800 --> 01:34:10,300
I need to know like a film width and a film height here.

1721
01:34:13,500 --> 01:34:17,500
and I need to know, like, basically a half of those

1722
01:34:18,700 --> 01:34:23,500
because again, like however wide it is, I'm multiplying a value from

1723
01:34:23,500 --> 01:34:24,700
negative 1 to 1.

1724
01:34:24,900 --> 01:34:30,500
However wide it is, I if this was W, I want to multiply it by half of

1725
01:34:30,500 --> 01:34:33,800
w because I want the maximum I go in a direction to be half that cuz

1726
01:34:33,800 --> 01:34:35,600
I'm starting from the center, right?

1727
01:34:37,200 --> 01:34:43,100
So here I've got a film W film H and I'm going to say those are just

1728
01:34:43,100 --> 01:34:43,900
again one.

1729
01:34:44,500 --> 01:34:48,800
And then I'm going to say half film W, equals film w.

1730
01:34:51,100 --> 01:34:51,700
Like so.

1731
01:34:54,500 --> 01:34:58,500
And that just gives me again, a simple way of constructing a location.

1732
01:34:58,700 --> 01:35:00,300
So now, I want to shoot my Ray.

1733
01:35:01,400 --> 01:35:05,500
So my film Ray is just going to be or I'll just call it Ray.

1734
01:35:08,200 --> 01:35:08,800
Direction.

1735
01:35:10,300 --> 01:35:14,000
So I knew the race starts at the camera location, I know the ray

1736
01:35:14,000 --> 01:35:18,200
direction is going to be the normalized version of whatever.

1737
01:35:18,200 --> 01:35:23,000
My film point is - my camera location, right?

1738
01:35:23,000 --> 01:35:25,100
Because I'm just shooting at in that direction.

1739
01:35:25,400 --> 01:35:29,900
So, then I have a real origin Ray Direction and I'm ready to ask, you

1740
01:35:29,900 --> 01:35:38,800
know, basically the color here is going to be whatever our raycast

1741
01:35:38,800 --> 01:35:40,000
function does with

1742
01:35:40,200 --> 01:35:40,700
Origin.

1743
01:35:42,500 --> 01:35:43,300
Ray Direction.

1744
01:35:44,500 --> 01:35:47,600
And taking this world into account.

1745
01:35:48,900 --> 01:35:50,200
So there we have it.

1746
01:35:50,400 --> 01:35:51,600
That's how we're going to get our color.

1747
01:35:51,600 --> 01:35:52,900
We're going to start at this very origin.

1748
01:35:52,900 --> 01:35:54,200
We're going to cast out in this Ray direction.

1749
01:35:54,200 --> 01:35:55,300
We're going to assume you have a function.

1750
01:35:55,300 --> 01:35:56,600
That could tell us what the color is there.

1751
01:35:56,900 --> 01:35:59,800
The color is going to come back and

1752
01:36:00,000 --> 01:36:01,600
We need to convert that color.

1753
01:36:01,600 --> 01:36:05,100
And I think we already have again, a way of packing that color down.

1754
01:36:05,600 --> 01:36:11,700
We have RGB Pack 4 by 8, it's going to expect the values to be 255

1755
01:36:13,900 --> 01:36:14,800
based there.

1756
01:36:15,200 --> 01:36:19,000
So we got to do, we got to do a little, something something there,

1757
01:36:19,200 --> 01:36:19,800
right?

1758
01:36:20,400 --> 01:36:23,700
But we can do that pretty easily by just converting it first.

1759
01:36:24,000 --> 01:36:29,800
So if I do RGB Pack 4 by 8, that's going to expect a

1760
01:36:30,000 --> 01:36:30,600
V4.

1761
01:36:31,300 --> 01:36:37,500
So what I'll do here is just say, I'm going to take a final color

1762
01:36:37,500 --> 01:36:46,400
value here or or like like BMP color and I'm going to say that that's

1763
01:36:46,400 --> 01:36:47,300
a V4.

1764
01:36:48,800 --> 01:36:52,400
I'm going to say that the alpha value is going to be 255 and the color

1765
01:36:52,400 --> 01:36:54,100
value is going to be 255 times.

1766
01:36:54,300 --> 01:36:56,300
Whatever the color is, we get back right?

1767
01:36:56,800 --> 01:37:00,300
That way I can call RGB pack for

1768
01:37:04,700 --> 01:37:08,200
I can call RGB packed 4 by 8 on the be a fun color, get back a pact

1769
01:37:08,200 --> 01:37:08,600
color.

1770
01:37:08,800 --> 01:37:12,700
And then when I write this in to our bitmap, instead of writing, the

1771
01:37:12,700 --> 01:37:18,100
bogus value here, I can actually read a real value into the location

1772
01:37:18,400 --> 01:37:19,900
and get something real.

1773
01:37:20,200 --> 01:37:22,900
Now, if we compile this, hopefully, oops.

1774
01:37:23,200 --> 01:37:25,200
Hopefully we don't miss a star there.

1775
01:37:28,700 --> 01:37:29,500
Hopefully, at this point.

1776
01:37:29,500 --> 01:37:34,400
Now we have this raycast and we need to implement it, right?

1777
01:37:34,400 --> 01:37:37,300
We need to say what that raycast does.

1778
01:37:37,500 --> 01:37:42,400
But before I do that, that's going to involve a lot of math and work

1779
01:37:42,400 --> 01:37:43,400
on our part.

1780
01:37:43,500 --> 01:37:46,100
And so before I do that, I want to make sure that it can just even

1781
01:37:46,100 --> 01:37:51,400
return color values and and have them written out properly, right?

1782
01:37:52,100 --> 01:37:55,500
So when I do my raycast and I I'm expecting it to take a

1783
01:37:55,800 --> 01:37:56,300
Here.

1784
01:37:56,400 --> 01:37:58,900
And I'm expecting it to take a ray origin redirection.

1785
01:37:58,900 --> 01:38:03,600
Like so, what I want to do is I want to make sure that if I, if I, you

1786
01:38:03,600 --> 01:38:06,800
know, make a result value here, they'll get packed properly.

1787
01:38:07,100 --> 01:38:09,400
So first of all, let's do the most simple thing.

1788
01:38:09,800 --> 01:38:16,200
Let's return 0 and see if when I run the program I get back a black

1789
01:38:16,200 --> 01:38:16,900
image, right?

1790
01:38:16,900 --> 01:38:20,200
Because I want you know, I don't want any color values here at all.

1791
01:38:20,700 --> 01:38:23,500
So I'm expecting to see a thing of the day director, that just all

1792
01:38:23,500 --> 01:38:25,100
black and I do and that's good.

1793
01:38:25,200 --> 01:38:25,600
And now that

1794
01:38:25,700 --> 01:38:29,400
It's verify that I can return back a color value, that makes sense to

1795
01:38:29,400 --> 01:38:29,800
me.

1796
01:38:29,900 --> 01:38:34,800
So let's say I want to Output read as my color value.

1797
01:38:34,800 --> 01:38:35,700
Here we go.

1798
01:38:36,200 --> 01:38:39,900
And now let's look at here and see and you can see it's wrong already,

1799
01:38:40,000 --> 01:38:40,600
right?

1800
01:38:41,400 --> 01:38:42,100
It's blue.

1801
01:38:42,500 --> 01:38:46,800
So that means that these this are GBA Pac.

1802
01:38:47,200 --> 01:38:51,600
4x4 is is packing based on RGB ordering.

1803
01:38:52,300 --> 01:38:55,600
So what I probably want to do is use a, the B gr a pact

1804
01:38:55,700 --> 01:38:57,400
Which I think does in the opposite order.

1805
01:38:57,400 --> 01:38:59,800
Yeah, so I really want Biggio.

1806
01:39:00,000 --> 01:39:02,400
Pack and there, I've already gotten rid of a bug that would have cost

1807
01:39:02,400 --> 01:39:05,900
us a bunch of headaches later again, just by taking it cautious, and

1808
01:39:05,900 --> 01:39:09,200
making sure that you do simple test to ensure that you don't have some

1809
01:39:09,200 --> 01:39:14,800
kind of a stupid, you know, stupid thing going on there.

1810
01:39:15,800 --> 01:39:16,400
All right.

1811
01:39:16,600 --> 01:39:19,700
So now we need to take the ray casting and actually try to do

1812
01:39:19,700 --> 01:39:21,400
something realistic with the raycasting.

1813
01:39:21,400 --> 01:39:25,600
That's actually going to produce some results that we can verify mean

1814
01:39:25,600 --> 01:39:27,800
something to somebody at some point.

1815
01:39:28,600 --> 01:39:29,900
So, let's go ahead and

1816
01:39:30,000 --> 01:39:32,100
And try to do that.

1817
01:39:32,400 --> 01:39:34,900
So what I'm going to do first that's going to say, well I know that

1818
01:39:34,900 --> 01:39:38,200
what I said, what I wanted to do was take the materials.

1819
01:39:39,600 --> 01:39:43,900
And take a look at that first material and I want to take its color

1820
01:39:43,900 --> 01:39:45,200
and assume that, that's the result.

1821
01:39:45,200 --> 01:39:48,300
So if I never hit anything, if my rage is mrs.

1822
01:39:48,300 --> 01:39:52,100
Everything in the world I'm going to use material zero as a color and

1823
01:39:52,100 --> 01:39:53,900
I think we set that to Black so we'll just see black.

1824
01:39:53,900 --> 01:39:57,300
If we don't hear anything then what I want to do is I want to look

1825
01:39:57,300 --> 01:40:01,400
through all of the things in the world and see which one I hit first.

1826
01:40:01,400 --> 01:40:03,200
Now, remember the link one thing in the world, you have to worry too

1827
01:40:03,200 --> 01:40:04,200
much about that right now.

1828
01:40:05,600 --> 01:40:08,100
But in the future we're going to have like multiple spheres and planes

1829
01:40:08,100 --> 01:40:08,400
and stuff.

1830
01:40:08,400 --> 01:40:08,500
We

1831
01:40:08,700 --> 01:40:09,700
Don't know which one we hit first.

1832
01:40:09,700 --> 01:40:11,700
How do we know which one we hit first?

1833
01:40:11,700 --> 01:40:14,900
Well, if you look at what's out there in the world,

1834
01:40:16,200 --> 01:40:19,800
I've got these spheres, I Got This Plane, I'm looking at it, right?

1835
01:40:20,100 --> 01:40:23,700
Well what I want to do is I say when I cast a ray, I'm going to start

1836
01:40:23,700 --> 01:40:25,900
producing these values that are where I shit.

1837
01:40:26,000 --> 01:40:29,600
So here's a bunch of places that this Ray would intersect the geometry

1838
01:40:29,600 --> 01:40:30,400
of the world.

1839
01:40:30,700 --> 01:40:34,900
I always want the one that's closest to where I started from, right,

1840
01:40:34,900 --> 01:40:37,900
because the first thing I hit is the first thing I have to process.

1841
01:40:38,300 --> 01:40:42,100
Even if this thing is translucent, I want to process the hit here

1842
01:40:42,100 --> 01:40:44,400
first and then keep casting through.

1843
01:40:44,500 --> 01:40:45,700
I don't want

1844
01:40:46,000 --> 01:40:51,300
Do something weird where I use, like afar like a back hit of this Ray

1845
01:40:51,300 --> 01:40:53,700
because then I'll get an incorrect, sorting order of things.

1846
01:40:53,900 --> 01:40:56,400
So I want to make sure I was take the first hit, what that means is

1847
01:40:56,400 --> 01:40:59,400
I'm going to go through here and do all of my hit detection.

1848
01:41:03,000 --> 01:41:08,300
I want to do it based on who is closest to the real origin, right?

1849
01:41:08,500 --> 01:41:12,700
So I'm going to start out by saying hit distance and I'm going to use

1850
01:41:12,700 --> 01:41:14,400
that Maxim F value.

1851
01:41:14,600 --> 01:41:17,100
So I'm going to do hit distance, equals F, 32 Max.

1852
01:41:17,200 --> 01:41:20,000
I'm going to go through there and when I take a hit I'm only going to

1853
01:41:20,000 --> 01:41:21,200
process that hit.

1854
01:41:21,300 --> 01:41:26,500
If I actually found that I did.

1855
01:41:26,500 --> 01:41:30,300
I that it's closer than any of the other hits I've processed, right?

1856
01:41:31,100 --> 01:41:31,800
So, here we go.

1857
01:41:33,900 --> 01:41:36,100
I'm going to start out clean and x equals 0.

1858
01:41:36,400 --> 01:41:40,100
I'm going to let plane index run up to the number of planes in the

1859
01:41:40,100 --> 01:41:40,700
world.

1860
01:41:42,000 --> 01:41:43,100
Step through each of them.

1861
01:41:44,100 --> 01:41:46,200
I now want to get out a particular plane.

1862
01:41:48,200 --> 01:41:52,500
So I'm just going to take that plane and say, all right, whatever, you

1863
01:41:52,500 --> 01:41:53,500
know, we've got here.

1864
01:41:53,500 --> 01:41:54,400
Let's go ahead and Factor.

1865
01:41:54,400 --> 01:41:59,500
You know what, I might just grab it out in wholesale planes, plain

1866
01:41:59,500 --> 01:41:59,800
index.

1867
01:42:00,300 --> 01:42:03,200
I'm going to grab that plane and then I'm going to do the intersection

1868
01:42:03,200 --> 01:42:07,400
test with the plane and I'm going to basically to say like if you know

1869
01:42:07,900 --> 01:42:14,500
I want some kind of a hit distance here so I want like a like a this

1870
01:42:14,500 --> 01:42:16,600
distance kind of a thing, all right?

1871
01:42:16,600 --> 01:42:20,700
So how far it was so I want to do like Ray intersects plane

1872
01:42:22,400 --> 01:42:26,000
and when I do that intersection of Ranger sex plane, I want to do re

1873
01:42:26,000 --> 01:42:29,100
origin Ray Direction and then the plane normal.

1874
01:42:29,100 --> 01:42:35,300
So I want to do plane normal plane D like so I want to do that.

1875
01:42:35,300 --> 01:42:36,600
Ray intersection test here.

1876
01:42:38,200 --> 01:42:41,000
And to be honest, when I think about it, I probably could do this in

1877
01:42:41,000 --> 01:42:41,500
line.

1878
01:42:49,000 --> 01:42:49,700
I'm probably going to leave.

1879
01:42:49,700 --> 01:42:52,300
Let's just leave like that for second, but I'm going to say if this

1880
01:42:52,300 --> 01:42:56,400
distance is less than the current his distance that I wanted.

1881
01:42:56,500 --> 01:42:59,200
And furthermore, it also has to be greater than zero.

1882
01:42:59,300 --> 01:43:03,300
Because remember, when we do these tests, we're going to be using the

1883
01:43:03,300 --> 01:43:03,600
math.

1884
01:43:03,600 --> 01:43:07,800
That it's very difficult to write math that test for intersection with

1885
01:43:07,800 --> 01:43:12,400
array because array is like an infant is a is a half space.

1886
01:43:12,400 --> 01:43:13,900
You know, it's

1887
01:43:15,100 --> 01:43:17,700
Has an origin point and it doesn't extend back in the other direction.

1888
01:43:18,200 --> 01:43:20,800
The math that we're going to write is always going to intersect with

1889
01:43:20,800 --> 01:43:22,300
like a line or something.

1890
01:43:22,600 --> 01:43:25,800
And so we need to make sure we clip it manually after we do the

1891
01:43:25,800 --> 01:43:29,800
intersection and get rid of the ones that are that are zeroed, right?

1892
01:43:31,400 --> 01:43:34,000
So we're going to say if this if the distance is greater than 0 but

1893
01:43:34,000 --> 01:43:36,100
less than the hit distance, right?

1894
01:43:36,400 --> 01:43:38,700
Then we can process the hit.

1895
01:43:39,200 --> 01:43:44,400
So at that point we will say all right we're going to process the hit.

1896
01:43:44,500 --> 01:43:47,700
We're going to say that the hip distance is going to now this is now

1897
01:43:47,700 --> 01:43:50,900
the closest hit and we're also going to say that result is going to be

1898
01:43:50,900 --> 01:43:55,100
the materials color of this plane.

1899
01:43:56,800 --> 01:43:58,300
Like so, all right.

1900
01:43:58,400 --> 01:43:58,800
Really?

1901
01:43:58,800 --> 01:43:59,500
Really basic.

1902
01:44:00,000 --> 01:44:01,000
That's all we want to do.

1903
01:44:01,200 --> 01:44:06,300
And if we compile this, we should find Hoops, we don't have float Max

1904
01:44:07,000 --> 01:44:10,200
and that's because we don't have

1905
01:44:17,400 --> 01:44:18,100
slow down.

1906
01:44:18,100 --> 01:44:20,500
Eh, I believe ya.

1907
01:44:21,200 --> 01:44:24,200
And so now, all we really need to do is write Ray intersects plane.

1908
01:44:24,200 --> 01:44:27,800
We need to write some of that takes a plane and a ray intersects them.

1909
01:44:28,400 --> 01:44:30,800
Now again, this is not particularly hard math to do.

1910
01:44:30,800 --> 01:44:34,300
Fortunately, if we have a position and array.

1911
01:44:34,300 --> 01:44:37,100
Like so, so here's our Ray origin.

1912
01:44:38,300 --> 01:44:40,300
This is our Ray Direction.

1913
01:44:42,400 --> 01:44:46,500
And we've got a plane out in the world and that has a normal devalue

1914
01:44:46,500 --> 01:44:50,500
like so what we need to do is figure out a way to intersect these two

1915
01:44:50,500 --> 01:44:51,000
things, right?

1916
01:44:51,000 --> 01:44:56,500
We have to figure out a way to to find this point.

1917
01:44:56,600 --> 01:44:57,100
All right?

1918
01:44:57,900 --> 01:44:59,100
Well, what do we know about array?

1919
01:44:59,700 --> 01:44:59,800
Well,

1920
01:45:00,000 --> 01:45:06,200
Let's say that we've got that re origin in this case, we know that

1921
01:45:06,200 --> 01:45:08,800
we're starting at the ray origin and we know that we're marching out,

1922
01:45:08,800 --> 01:45:11,800
I'm gonna introduce a synthetic T value here, which is the saying some

1923
01:45:11,800 --> 01:45:15,700
amount of marching along the ray direction, right?

1924
01:45:16,000 --> 01:45:20,800
This is the equation for the ray where T is greater than or equal to

1925
01:45:20,800 --> 01:45:22,200
0, right?

1926
01:45:22,200 --> 01:45:26,800
So we're going to start because this would be t - this is t+, right?

1927
01:45:26,800 --> 01:45:28,400
So we're going in this direction.

1928
01:45:29,400 --> 01:45:31,000
I don't know what is happening there.

1929
01:45:31,000 --> 01:45:31,800
That's probably something.

1930
01:45:31,800 --> 01:45:33,000
You awesome pain windows.

1931
01:45:33,000 --> 01:45:36,800
I have to figure out turn off but we're marching in this direction as

1932
01:45:36,800 --> 01:45:37,700
long as we want.

1933
01:45:37,800 --> 01:45:41,200
So T can just get in front of them out to the maximum floating point

1934
01:45:41,200 --> 01:45:44,500
value and we know that our plane, right?

1935
01:45:44,500 --> 01:45:46,500
So this is the equation for re-write.

1936
01:45:46,800 --> 01:45:54,200
This is our F of R 0 Rd T, but really it's just F of T because these

1937
01:45:54,200 --> 01:45:58,500
two are fixed for our purposes, so our F of T equals r0.

1938
01:45:58,500 --> 01:45:59,000
+ t,

1939
01:45:59,200 --> 01:46:00,900
R&D, right?

1940
01:46:02,000 --> 01:46:05,100
And this is the function for the re our plane equation.

1941
01:46:05,400 --> 01:46:10,800
On the other hand, we already said what it was its n, p+ d, equals 0.

1942
01:46:11,500 --> 01:46:16,300
So if we want to know, when a ray would land directly on the plane,

1943
01:46:16,400 --> 01:46:18,200
this is the equation that tells us we land on the plane.

1944
01:46:18,500 --> 01:46:22,300
We know p p is this, right?

1945
01:46:22,400 --> 01:46:27,200
So, if we substitute in this equation, for the point, we can find out

1946
01:46:27,400 --> 01:46:29,100
and solve for T, we can find out when

1947
01:46:29,200 --> 01:46:30,400
When we would hit it, right?

1948
01:46:30,600 --> 01:46:34,600
So we do n, r0 + TR d.

1949
01:46:35,800 --> 01:46:40,000
Plus the equal zero we then just have to solve, right?

1950
01:46:41,500 --> 01:46:42,500
This is a transpose here.

1951
01:46:43,300 --> 01:46:44,500
So n transpose.

1952
01:46:44,500 --> 01:46:47,300
AR 0 plus T and transpose.

1953
01:46:47,300 --> 01:46:49,900
R d plus d, equals 0.

1954
01:46:50,400 --> 01:46:51,500
That's our equation.

1955
01:46:52,000 --> 01:46:53,200
Lucky for us.

1956
01:46:53,700 --> 01:46:58,000
T only exists on one term here, so we can isolate things really

1957
01:46:58,000 --> 01:46:58,600
quickly.

1958
01:46:58,700 --> 01:47:06,000
We have n TR D, equals negative, D / -, and transpose AR 0, the

1959
01:47:06,000 --> 01:47:06,900
negatives cancel.

1960
01:47:06,900 --> 01:47:11,000
And I believe we're just left with n transpose AR D, equals

1961
01:47:11,400 --> 01:47:12,900
The over.

1962
01:47:14,600 --> 01:47:15,000
Boo.

1963
01:47:17,500 --> 01:47:18,600
I left my T value.

1964
01:47:20,300 --> 01:47:23,500
This is sloppy math day just pretend none of that ever happened.

1965
01:47:25,100 --> 01:47:30,400
Pretend you didn't see that, but I meant to write was we only have a

1966
01:47:30,400 --> 01:47:32,800
t-value to solve for that.

1967
01:47:32,800 --> 01:47:39,900
Leaves us with t and t are D, equals - d - n TR 0.

1968
01:47:40,300 --> 01:47:43,000
And then, what I meant to do is take that guy and put him on the

1969
01:47:43,000 --> 01:47:46,700
bottom, divide through and TRD to solve for T.

1970
01:47:47,100 --> 01:47:51,700
So we end up with negative d - n TR 0 and TRD, right?

1971
01:47:51,700 --> 01:47:54,700
This is a DOT product, this is a DOT product, this is a known value.

1972
01:47:54,800 --> 01:47:58,800
So all of these are known and our d and r 0, all known very simple.

1973
01:48:00,600 --> 01:48:01,800
Result, right?

1974
01:48:02,200 --> 01:48:04,200
So to get this distance value.

1975
01:48:06,000 --> 01:48:11,100
I just have to read it off - plain D, which is that value there -

1976
01:48:11,100 --> 01:48:16,900
inner product of the normal to the plane and whatever the ray origin

1977
01:48:16,900 --> 01:48:18,400
is right.

1978
01:48:24,000 --> 01:48:29,400
I want to divide that by n TR D, which is the inner product of again

1979
01:48:29,400 --> 01:48:30,400
that plane normal.

1980
01:48:32,100 --> 01:48:35,600
And whatever the ray that are D is the right direction.

1981
01:48:37,000 --> 01:48:39,500
And I have my answer, right?

1982
01:48:39,500 --> 01:48:40,400
So we can get rid of that.

1983
01:48:40,800 --> 01:48:42,900
Now we do have one problem.

1984
01:48:43,000 --> 01:48:44,200
Goodbye denominator here.

1985
01:48:49,300 --> 01:48:54,000
And the problem we have with, this is an inner product, can produce a

1986
01:48:54,000 --> 01:48:54,500
zero.

1987
01:48:54,900 --> 01:48:59,800
If the plane normal and the ray direction or perpendicular, we would

1988
01:48:59,800 --> 01:49:02,500
get a zero in our denominator and we cannot divide by zero.

1989
01:49:02,800 --> 01:49:04,000
Right, that would be bad.

1990
01:49:04,700 --> 01:49:06,000
What does that mean, physically?

1991
01:49:06,800 --> 01:49:09,600
Well, what it means is I've got a re Direction now.

1992
01:49:09,600 --> 01:49:13,500
I've got a plane normally it will hit the plane, right?

1993
01:49:13,600 --> 01:49:16,100
Even if the planes going this way, we'll get an answer.

1994
01:49:16,100 --> 01:49:18,500
It'll just be a negative answer, right?

1995
01:49:19,300 --> 01:49:26,100
But if the ray Direction and the plane were the same, sorry if the ray

1996
01:49:26,100 --> 01:49:28,800
Direction and the normal were perpendicular.

1997
01:49:28,900 --> 01:49:33,000
So the the plane is running exactly parallel to the ray.

1998
01:49:33,600 --> 01:49:35,400
They never hit right?

1999
01:49:35,400 --> 01:49:36,600
They'll never hit each other.

2000
01:49:36,900 --> 01:49:40,800
And so what the math is telling us is that there is an undefined place

2001
01:49:40,800 --> 01:49:44,300
where we cannot find the answer at all because there is no answer and

2002
01:49:44,300 --> 01:49:45,900
that's actually the math being really good there.

2003
01:49:45,900 --> 01:49:48,400
It's telling us that these two things can't intersect

2004
01:49:49,000 --> 01:49:51,600
so, what we want to do there is say, if the denominator

2005
01:49:52,700 --> 01:49:55,500
Is between some very small bounds, right?

2006
01:49:55,700 --> 01:49:59,200
So, we've got some tolerance value here, right?

2007
01:49:59,200 --> 01:50:00,400
Let's say it's very small.

2008
01:50:00,900 --> 01:50:04,800
And basically, if the denominator itself is less than the negative

2009
01:50:04,800 --> 01:50:08,200
tolerance or I should say, if the absolute value, let's say,

2010
01:50:09,600 --> 01:50:10,800
Don't we have an ABS?

2011
01:50:16,400 --> 01:50:18,800
I don't know if we do, doesn't matter what I could say is if the

2012
01:50:18,800 --> 01:50:22,800
denominator is less than the negative tolerance.

2013
01:50:25,700 --> 01:50:27,800
Or greater than the positive tolerance.

2014
01:50:29,400 --> 01:50:30,500
Then we can continue.

2015
01:50:34,200 --> 01:50:37,800
But if it's not, we can't it just didn't hit right?

2016
01:50:38,700 --> 01:50:39,400
Does that make sense?

2017
01:50:40,500 --> 01:50:43,700
And so now we have a thing that will raycast against this plane up,

2018
01:50:43,700 --> 01:50:46,400
borrowing math typos and stuff like that.

2019
01:50:46,400 --> 01:50:47,200
That's bad.

2020
01:50:47,600 --> 01:50:51,100
You know, we wouldn't have won but that's the basic idea.

2021
01:50:51,600 --> 01:50:55,600
So now what I want to do is I want to introduce something because now

2022
01:50:55,600 --> 01:50:57,000
we're actually going to start testing this.

2023
01:50:57,300 --> 01:50:59,800
I want to do something that will make.

2024
01:51:00,100 --> 01:51:01,400
Lives a little bit simpler.

2025
01:51:02,400 --> 01:51:08,400
Whenever we build, I want to go ahead and run it and I want to, you

2026
01:51:08,400 --> 01:51:09,800
know, so I want to do a push d.

2027
01:51:11,500 --> 01:51:13,600
Basically, to the data directory.

2028
01:51:17,300 --> 01:51:18,400
And I want to run the program.

2029
01:51:23,700 --> 01:51:29,200
Like so and that way when I run like so and you know what?

2030
01:51:29,200 --> 01:51:31,300
And let me also put a little thing in so I can verify that it's

2031
01:51:31,300 --> 01:51:31,700
running.

2032
01:51:57,600 --> 01:52:01,100
so this way we can see that it does, it's Ray Kasten and then it

2033
01:52:01,100 --> 01:52:01,800
finishes

2034
01:52:03,100 --> 01:52:03,600
There we go.

2035
01:52:04,000 --> 01:52:05,000
Recast and done.

2036
01:52:05,700 --> 01:52:10,100
And so now we can actually go see the result.

2037
01:52:10,100 --> 01:52:13,700
Every time you run, I'd like it to pop up our result to so we can see

2038
01:52:13,700 --> 01:52:14,600
what the result is.

2039
01:52:14,600 --> 01:52:21,500
So I'll also just do a start on the output value which is test up at

2040
01:52:21,500 --> 01:52:21,900
map.

2041
01:52:24,500 --> 01:52:25,200
And there it is.

2042
01:52:27,400 --> 01:52:27,800
Okay.

2043
01:52:33,800 --> 01:52:36,900
So here is our resulting value.

2044
01:52:38,000 --> 01:52:41,200
It looks a little busted to me but I don't know whether it's because I

2045
01:52:41,200 --> 01:52:47,100
set up our stuff busted or whether the ray Tracer is busted, we got

2046
01:52:47,100 --> 01:52:51,500
partly the result we wanted which is half red, half black, which is

2047
01:52:51,500 --> 01:52:52,400
what we should get.

2048
01:52:53,700 --> 01:52:56,700
But I don't know whether we're if the red should be on the top or the

2049
01:52:56,700 --> 01:53:00,900
bottom based on what I set the plane values to so we might have to.

2050
01:53:01,000 --> 01:53:02,700
So now we just want to debug our stuff to make sure.

2051
01:53:02,900 --> 01:53:05,900
We've got the correct things in mind.

2052
01:53:06,000 --> 01:53:06,800
Also,

2053
01:53:08,900 --> 01:53:14,400
We're doing a bottom-up bitmap and that is what we set up our film to

2054
01:53:14,400 --> 01:53:15,000
do as well.

2055
01:53:15,000 --> 01:53:16,500
Why is pointing upwards?

2056
01:53:16,700 --> 01:53:18,700
So in theory that should all be correct as well.

2057
01:53:18,700 --> 01:53:21,700
But again, we need to verify all of these assumptions so that we can

2058
01:53:21,700 --> 01:53:24,900
start our Ray tracer on solid footing and not have any weird like

2059
01:53:25,400 --> 01:53:27,500
weird nonsense going on, right?

2060
01:53:30,000 --> 01:53:34,300
Okay, so let me go ahead and check what we set up for our world here.

2061
01:53:35,700 --> 01:53:37,700
Here's our planes.

2062
01:53:38,100 --> 01:53:39,500
We said that our planes.

2063
01:53:39,500 --> 01:53:41,100
Normal was pointing straight up.

2064
01:53:41,100 --> 01:53:46,200
Our D value is right down the middle so it's it's just a p.

2065
01:53:46,200 --> 01:53:49,300
Origin pointing upward, so that's fine.

2066
01:53:51,800 --> 01:53:53,400
And then our camera P.

2067
01:53:53,400 --> 01:53:58,000
It's supposed to be kind of up above the surface, so the red should be

2068
01:53:58,000 --> 01:53:59,800
on the bottom, and it's not right now.

2069
01:54:00,100 --> 01:54:03,800
So, I think we've got a bug there and I want to take a look at it.

2070
01:54:04,400 --> 01:54:07,900
So let me just double check again that we've got our right equations

2071
01:54:07,900 --> 01:54:08,400
here.

2072
01:54:20,500 --> 01:54:21,900
I just want to test it one more time.

2073
01:54:22,700 --> 01:54:24,600
So let me just just double-check these equations.

2074
01:54:24,600 --> 01:54:26,300
I want to make sure they're right, and I'm gonna step through them and

2075
01:54:26,300 --> 01:54:31,000
see what's going on and make sure that we don't have bugs in there.

2076
01:54:31,300 --> 01:54:31,700
Okay.

2077
01:54:32,500 --> 01:54:32,900
So,

2078
01:54:34,900 --> 01:54:40,500
We have, I'm gonna do this like more slowly methodically here.

2079
01:54:41,200 --> 01:54:43,200
So we have n transpose.

2080
01:54:43,200 --> 01:54:44,500
P plus d.

2081
01:54:44,600 --> 01:54:45,300
Equals 0.

2082
01:54:45,300 --> 01:54:46,500
That's our plane equation.

2083
01:54:47,600 --> 01:54:49,600
We then have Jenny

2084
01:54:51,300 --> 01:54:55,300
Our equation for the ray which is I'm going to write this a little

2085
01:54:55,300 --> 01:54:56,500
more compactly here.

2086
01:54:56,500 --> 01:55:00,600
But actually I'll write it the same way I did before which is re

2087
01:55:00,600 --> 01:55:05,700
origin plus T redirection right?

2088
01:55:06,000 --> 01:55:10,500
And that equals our Point substituting these in I get in transpose,

2089
01:55:11,000 --> 01:55:11,300
right.

2090
01:55:11,300 --> 01:55:16,300
Origin plus T, right direction plus d equals 0.

2091
01:55:18,000 --> 01:55:18,900
Multiplying out.

2092
01:55:18,900 --> 01:55:20,100
I get n transpose.

2093
01:55:20,100 --> 01:55:23,400
AR 0 plus T and transpose.

2094
01:55:23,500 --> 01:55:28,500
R d, plus d, equals 0 subtracting over to the other side.

2095
01:55:28,500 --> 01:55:33,500
We get T and transpose r d equals negative d.

2096
01:55:34,900 --> 01:55:39,500
- n transpose AR 0 dividing out.

2097
01:55:39,900 --> 01:55:45,400
I get - d - n transpose AR 0 / n transpose r d--

2098
01:55:46,800 --> 01:55:51,900
Right, and N transpose Rd is here.

2099
01:55:56,000 --> 01:55:57,200
And that is our denominator.

2100
01:55:57,400 --> 01:56:03,400
It's correct - plane D- plane n times, right?

2101
01:56:03,400 --> 01:56:05,800
Origin is correct there.

2102
01:56:06,500 --> 01:56:07,600
We're dividing by the Dominator.

2103
01:56:07,600 --> 01:56:08,700
That's our T value.

2104
01:56:09,300 --> 01:56:10,900
That all looks good to me.

2105
01:56:11,500 --> 01:56:14,600
So that all seems pretty straightforward.

2106
01:56:14,900 --> 01:56:18,800
I don't see any real obvious errors in there.

2107
01:56:26,200 --> 01:56:27,200
Yeah.

2108
01:56:29,700 --> 01:56:33,100
I don't see anything particularly strange going on there.

2109
01:56:33,900 --> 01:56:36,100
The real origin is the camera position.

2110
01:56:36,400 --> 01:56:40,400
The radial direction is the film P camera P.

2111
01:56:40,700 --> 01:56:44,800
So I think this should be giving me what I expect there again.

2112
01:56:44,800 --> 01:56:47,100
I don't think there's anything wonky going on there.

2113
01:56:48,100 --> 01:56:50,800
So let's go ahead and try to figure out why we're getting.

2114
01:56:51,000 --> 01:56:51,400
And you know what?

2115
01:56:51,400 --> 01:56:53,500
I also want to, I'm going to set that background color something

2116
01:56:53,500 --> 01:56:57,100
slightly different cuz the background of that viewer happens to be

2117
01:56:57,100 --> 01:56:57,700
black.

2118
01:56:57,700 --> 01:56:59,400
So I want to see exactly how

2119
01:56:59,500 --> 01:56:59,600
How?

2120
01:57:00,100 --> 01:57:01,800
At the images as well.

2121
01:57:01,800 --> 01:57:07,200
So must set this to like a just a gray, just so I can see ya.

2122
01:57:08,900 --> 01:57:14,700
So this looks like exactly backwards from what I would expect, right?

2123
01:57:14,700 --> 01:57:16,900
It looks exactly like the wrong.

2124
01:57:20,700 --> 01:57:25,600
Scan out and I assume we're not flipping or bitmap anymore, right?

2125
01:57:25,600 --> 01:57:28,800
We're doing bottom up so that seems right and

2126
01:57:32,300 --> 01:57:37,400
And so we must just have one simple error in here and I just don't

2127
01:57:37,400 --> 01:57:38,200
know what it is.

2128
01:57:38,500 --> 01:57:42,300
So I'm going to go ahead and step in so I can just see if I see

2129
01:57:42,300 --> 01:57:47,900
anything that I don't like that would save us some trouble and give us

2130
01:57:47,900 --> 01:57:49,300
a clue as to what's going on.

2131
01:57:50,800 --> 01:57:52,100
So there's our Ray origin.

2132
01:57:52,100 --> 01:57:56,700
We're up one, and we are back 10, right?

2133
01:57:58,500 --> 01:58:02,000
Or forward 10, I guess that makes sense.

2134
01:58:07,600 --> 01:58:09,200
our redirection is,

2135
01:58:12,000 --> 01:58:13,400
Negative X.

2136
01:58:13,400 --> 01:58:18,300
That makes sense because we're looking at the image plane - why, which

2137
01:58:18,300 --> 01:58:22,500
also makes sense somewhat

2138
01:58:46,800 --> 01:58:49,000
I'm not so sure about that.

2139
01:58:49,800 --> 01:58:51,300
So let's hold on one second here.

2140
01:58:55,700 --> 01:59:00,400
Since I was drawing it this way before with the negative 10, I kind of

2141
01:59:00,600 --> 01:59:04,500
want to be a little bit more matching my mental model.

2142
01:59:07,600 --> 01:59:08,700
So here's the plane.

2143
01:59:09,300 --> 01:59:13,900
Here's why here's X that's Z.

2144
01:59:14,300 --> 01:59:16,000
I wanted the camera back here.

2145
01:59:16,300 --> 01:59:19,900
So that's actually - why and I just want to set it that way so that

2146
01:59:19,900 --> 01:59:21,900
we're matching my mental model.

2147
01:59:22,100 --> 01:59:26,000
So that we're looking down like this, it just helps me to debug

2148
01:59:26,000 --> 01:59:26,200
things.

2149
01:59:26,200 --> 01:59:29,100
If if I'm not like thinking of the wrong thing in my head,

2150
01:59:31,100 --> 01:59:38,400
Okay, so yeah, the film centers should be the film distance, which is

2151
01:59:38,400 --> 01:59:42,800
one down the negative Z axis, which should be this axis roughly.

2152
01:59:42,800 --> 01:59:44,400
So, it should be like four words this way.

2153
01:59:48,900 --> 01:59:52,400
And I think that's a little bit closer to what I wanted.

2154
01:59:54,600 --> 01:59:56,600
Okay, so let's try it one more time.

2155
01:59:57,500 --> 01:59:57,800
All right.

2156
01:59:57,800 --> 01:59:58,800
So let's take a look at the rate.

2157
01:59:58,800 --> 01:59:59,900
Origin -

2158
02:00:00,100 --> 02:00:01,900
And one that's what I wanted.

2159
02:00:02,200 --> 02:00:08,000
Ray Direction the Y being positive.

2160
02:00:10,700 --> 02:00:14,000
Is correct because we're going that direction.

2161
02:00:15,500 --> 02:00:19,100
And the Z being positive also makes.

2162
02:00:22,600 --> 02:00:26,100
That, that doesn't make sense.

2163
02:00:30,900 --> 02:00:31,500
Does it?

2164
02:00:39,300 --> 02:00:42,500
Because it is Z should actually be negative when we're starting out.

2165
02:00:42,500 --> 02:00:45,300
And the reason that I say that is because the cameras y-axis is

2166
02:00:45,300 --> 02:00:49,200
effectively more or less pointing Z along Z, right?

2167
02:00:50,500 --> 02:00:54,500
And if the cameras Y axis is pointing along Z, I would expect it to

2168
02:00:54,500 --> 02:00:57,300
initially be shooting downward because the film.

2169
02:00:57,300 --> 02:01:01,400
Why should be negative 1 at the start, right?

2170
02:01:02,700 --> 02:01:05,200
So something's a little off there.

2171
02:01:06,200 --> 02:01:12,100
And I don't know what it is, but it needs to get fixed.

2172
02:01:20,400 --> 02:01:22,100
So I'm going to step into that.

2173
02:01:24,400 --> 02:01:25,600
See what I messed up.

2174
02:01:27,900 --> 02:01:30,600
So let's first check film X and film.

2175
02:01:30,600 --> 02:01:33,600
Why you should be negative 1 and negative 1 which they are

2176
02:01:35,200 --> 02:01:36,900
Let's take a look at film pee.

2177
02:01:42,300 --> 02:01:43,400
Why I hate that.

2178
02:01:43,700 --> 02:01:44,300
I hate that.

2179
02:01:44,300 --> 02:01:46,100
It the new wind Visual Studio.

2180
02:01:46,100 --> 02:01:47,700
Doesn't move you down to the next line.

2181
02:01:47,700 --> 02:01:50,300
When you hit return, that's super sucky.

2182
02:01:52,200 --> 02:01:54,700
This is visible to your 2017, and I don't like it.

2183
02:01:57,600 --> 02:01:58,300
All right.

2184
02:02:00,200 --> 02:02:05,200
So camera p 0 - 10 1 film p is negative 5.

2185
02:02:09,600 --> 02:02:12,900
That makes sense because of the film, that's the film X offset there.

2186
02:02:12,900 --> 02:02:14,200
I'm gonna look at Film Center as well.

2187
02:02:15,900 --> 02:02:16,500
That should be 0.

2188
02:02:16,500 --> 02:02:23,200
It is, it should be slightly further and y and z.

2189
02:02:27,500 --> 02:02:31,100
I think that looks pretty much all correct to me.

2190
02:02:35,900 --> 02:02:37,300
That looks pretty much all correct to me.

2191
02:02:39,800 --> 02:02:45,100
So now, if we look at film P, what's the camera X camera?

2192
02:02:45,100 --> 02:02:45,500
Oops.

2193
02:02:45,800 --> 02:02:47,200
And that's going to take forever.

2194
02:02:47,200 --> 02:02:50,200
To get used to have to hit the down down.

2195
02:02:50,200 --> 02:02:51,200
That's that's terrible.

2196
02:02:51,200 --> 02:02:52,400
Why do they change that?

2197
02:02:53,000 --> 02:02:53,800
I have no idea.

2198
02:02:54,500 --> 02:02:55,600
So, camera X is negative 1.

2199
02:02:55,600 --> 02:02:59,600
As we expect camera, why is a highly negative

2200
02:03:00,000 --> 02:03:03,000
Value, but it should be a positive Z value.

2201
02:03:03,300 --> 02:03:05,300
That looks like we still have a bug.

2202
02:03:06,600 --> 02:03:07,400
Right here.

2203
02:03:11,800 --> 02:03:14,300
So when we are producing these values, looks like we still got a bug

2204
02:03:14,300 --> 02:03:14,600
here.

2205
02:03:14,800 --> 02:03:18,500
So, R Cross of cameras, easy with the up Axis.

2206
02:03:25,100 --> 02:03:25,900
Let's take a look here.

2207
02:03:32,300 --> 02:03:33,900
So, we're looking to produce this.

2208
02:03:35,700 --> 02:03:39,200
Here's our camera X camera Z, camera y.

2209
02:03:40,400 --> 02:03:41,700
So, we're looking to produce this.

2210
02:03:41,700 --> 02:03:46,400
And what I would like to do here is, I would like to ensure that, you

2211
02:03:46,400 --> 02:03:49,800
know, these are all accurate.

2212
02:03:50,200 --> 02:03:55,000
So if we take a look at what supposed to happen here, if I know that I

2213
02:03:55,000 --> 02:03:56,300
have my up Vector,

2214
02:03:58,300 --> 02:04:04,300
And I prescribe mice easy, if I have a seat C, Vector crossed with an

2215
02:04:04,300 --> 02:04:09,100
up Vector, what I want to be able to do is cross up and Z together,

2216
02:04:09,500 --> 02:04:10,100
right?

2217
02:04:10,300 --> 02:04:12,700
That's why I do here across up and Z together.

2218
02:04:18,300 --> 02:04:20,200
Did I did I liked think I had?

2219
02:04:20,200 --> 02:04:23,300
Did I like undo a correct thing here or something like that?

2220
02:04:23,300 --> 02:04:24,100
Because this is 2.

2221
02:04:24,200 --> 02:04:27,700
This is back to where I thought I was starting from, right, but if I

2222
02:04:27,700 --> 02:04:32,800
have an up Vector, and I crossed CZ that actually does still argue for

2223
02:04:32,800 --> 02:04:34,500
the direct the way that I had it before.

2224
02:04:36,800 --> 02:04:37,200
Right?

2225
02:04:38,100 --> 02:04:40,100
So c z here is going this way.

2226
02:04:40,100 --> 02:04:44,900
I have an up, I would cross up and Z to get X, right?

2227
02:04:45,000 --> 02:04:47,700
I would then cross Z and X to get y.

2228
02:04:49,200 --> 02:04:52,300
So did I like, talked myself out of the right solution before?

2229
02:04:52,300 --> 02:04:54,400
I think I did, I think I had it right?

2230
02:04:54,400 --> 02:04:58,700
And I changed it because of that diagram mess up.

2231
02:04:58,700 --> 02:04:58,800
What?

2232
02:04:58,800 --> 02:05:02,500
I really my mental model, I thought my camera piece of it - 10, I had

2233
02:05:02,500 --> 02:05:03,200
it at 10.

2234
02:05:04,100 --> 02:05:08,300
I wonder if that was the entirety of it but that is now correct.

2235
02:05:09,500 --> 02:05:11,400
And that is the bitmap that I expected.

2236
02:05:12,600 --> 02:05:16,000
Yeah, I I talked myself out of the correct code.

2237
02:05:16,000 --> 02:05:16,900
That's pretty good.

2238
02:05:19,700 --> 02:05:20,500
All right.

2239
02:05:20,700 --> 02:05:26,100
So anyway we have our Ray and our plane as you can see, when I run

2240
02:05:26,100 --> 02:05:26,300
this.

2241
02:05:26,300 --> 02:05:33,500
Now, we get our red plane and we get our gray sky, if you will, I

2242
02:05:33,500 --> 02:05:36,800
don't know what you want to call it, but we get that.

2243
02:05:37,200 --> 02:05:37,900
Whatever that is.

2244
02:05:39,600 --> 02:05:42,800
So now, what we need to do is we need to say, all right, we need to

2245
02:05:42,800 --> 02:05:44,800
add our spheres to this, right?

2246
02:05:44,800 --> 02:05:46,600
Because that was the other thing that I said that I wanted.

2247
02:05:47,000 --> 02:05:48,600
So I'm going to go ahead and add a sphere.

2248
02:05:53,200 --> 02:05:54,600
I'm going to put about the origin.

2249
02:06:01,100 --> 02:06:02,300
And give it a new material.

2250
02:06:10,400 --> 02:06:15,900
This will be a blue Sphere for, who knows why it just will be.

2251
02:06:17,000 --> 02:06:21,600
And then what I want to do is I want to add that sphere in here, just

2252
02:06:21,600 --> 02:06:23,100
like we did before with the plane.

2253
02:06:23,900 --> 02:06:28,900
So now I have a sphere and if I run it, what just happened?

2254
02:06:34,700 --> 02:06:35,500
Hmm.

2255
02:06:36,200 --> 02:06:38,900
So why would adding a sphere there?

2256
02:06:40,100 --> 02:06:44,400
Cause our mat index to be wrong plane dot.

2257
02:06:44,400 --> 02:06:47,800
Matt index should still be one.

2258
02:06:47,900 --> 02:06:49,500
It should still be picking.

2259
02:06:55,100 --> 02:06:58,600
Of course, this should be 3, but that should have nothing to do with

2260
02:06:58,600 --> 02:06:59,300
it, right?

2261
02:07:02,000 --> 02:07:03,100
How did we get blue?

2262
02:07:08,900 --> 02:07:12,400
0 1 & 2, we set the colors.

2263
02:07:13,600 --> 02:07:18,000
Here, we're taking our world materials were using the mat index of the

2264
02:07:18,000 --> 02:07:18,800
plane.

2265
02:07:21,800 --> 02:07:24,200
That should index into the materials properly.

2266
02:07:28,100 --> 02:07:28,700
That's bizarre.

2267
02:07:28,700 --> 02:07:29,900
Let's check out what happened there.

2268
02:07:34,100 --> 02:07:35,200
I'm going to take a quick look here.

2269
02:07:37,900 --> 02:07:38,700
At our world.

2270
02:07:41,500 --> 02:07:42,700
There's our spheres.

2271
02:07:46,100 --> 02:07:49,000
I hope that was a good typo.

2272
02:07:53,400 --> 02:07:53,900
There we go.

2273
02:07:55,100 --> 02:07:57,300
Alright, so we yeah.

2274
02:07:57,300 --> 02:07:59,300
I just accidentally set the plane index.

2275
02:07:59,300 --> 02:08:00,700
Again, Matt index.

2276
02:08:00,700 --> 02:08:01,200
That's good.

2277
02:08:01,700 --> 02:08:05,700
So now we need to actually have a loop that that takes into account.

2278
02:08:07,500 --> 02:08:10,100
The fact that we have series as well and so this is going to be

2279
02:08:10,100 --> 02:08:13,700
similar but all of the intersection code will be different right?

2280
02:08:27,300 --> 02:08:29,100
So here is a floating are spheres out.

2281
02:08:29,700 --> 02:08:32,900
Basically, everything is exactly the same.

2282
02:08:32,900 --> 02:08:37,600
The only thing is we need to now put in the intersection test for a

2283
02:08:37,600 --> 02:08:38,600
sphere now.

2284
02:08:38,600 --> 02:08:41,800
Unfortunately, for us the intersection test for a sphere is a little

2285
02:08:41,800 --> 02:08:43,300
more complicated but that's okay.

2286
02:08:43,700 --> 02:08:45,200
We can still work it out.

2287
02:08:45,600 --> 02:08:46,900
We're all Brave programmers here.

2288
02:08:46,900 --> 02:08:47,500
It's fine.

2289
02:08:48,400 --> 02:08:51,800
So here is what happens if we want to do a sphere.

2290
02:08:52,700 --> 02:08:55,100
Do the same exact procedures you did for a plane right?

2291
02:08:55,100 --> 02:08:55,900
Remember how I did it?

2292
02:08:55,900 --> 02:08:59,300
I said, well, I've got the equation that says, what?

2293
02:08:59,300 --> 02:08:59,600
The

2294
02:09:00,000 --> 02:09:04,100
His point is and so all I need is a thing that takes a sphere as

2295
02:09:04,100 --> 02:09:07,900
equation and tells me if a point is on or not and we know how to do

2296
02:09:07,900 --> 02:09:09,200
that, actually, right?

2297
02:09:09,500 --> 02:09:13,000
We know that the equation for a sphere is just the same as the

2298
02:09:13,000 --> 02:09:14,300
equation for a circle.

2299
02:09:15,500 --> 02:09:19,100
It's just going to be all of the value squared equal.

2300
02:09:19,100 --> 02:09:20,900
It - the radius equaling zero or whatever.

2301
02:09:20,900 --> 02:09:21,500
Right?

2302
02:09:22,000 --> 02:09:26,500
So we know that, for example, a sphere is just the point x squared.

2303
02:09:26,500 --> 02:09:29,800
Plus the point Y squared plus the point Z

2304
02:09:30,000 --> 02:09:34,700
Z squared equals the radius squared or another way to write that is

2305
02:09:34,700 --> 02:09:37,800
minus the radius squared equals 0, right?

2306
02:09:37,900 --> 02:09:39,200
It's moving over to their side.

2307
02:09:39,400 --> 02:09:42,800
So if that's the case, we can trivially.

2308
02:09:42,800 --> 02:09:48,000
Do this exact operation exactly the same way by leveraging.

2309
02:09:48,000 --> 02:09:54,400
The fact that we actually know what those points are right because we

2310
02:09:54,400 --> 02:09:56,000
can basically solve the equation for T.

2311
02:09:56,000 --> 02:09:59,800
Again, just like we were doing in the previous case.

2312
02:10:00,200 --> 02:10:04,100
If we take a look at what happens here, x squared plus, y squared plus

2313
02:10:04,100 --> 02:10:07,800
Z squared, that should look pretty familiar to folks that is just the

2314
02:10:07,800 --> 02:10:09,400
dot product, right?

2315
02:10:09,800 --> 02:10:11,100
Of a vector with itself.

2316
02:10:11,300 --> 02:10:13,600
So this is just P transpose P.

2317
02:10:13,700 --> 02:10:18,000
Minus r squared equals zero for the love of God Windows.

2318
02:10:18,000 --> 02:10:19,800
What is that weird back button thing?

2319
02:10:24,100 --> 02:10:25,300
Does anyone know what that is?

2320
02:10:27,000 --> 02:10:29,000
Some kind of just real thing, I don't know.

2321
02:10:31,400 --> 02:10:34,500
So, anyway, we essentially just have P transpose P.

2322
02:10:34,700 --> 02:10:36,400
Minus r squared equals zero, right?

2323
02:10:36,400 --> 02:10:37,800
That's all we're trying to compute here.

2324
02:10:38,300 --> 02:10:39,900
So P transpose p.

2325
02:10:40,300 --> 02:10:41,900
Is this right?

2326
02:10:43,100 --> 02:10:44,300
What would that look like?

2327
02:10:44,600 --> 02:10:51,100
So P transpose P would be R 0 plus t or d transpose.

2328
02:10:51,200 --> 02:10:51,600
Right.

2329
02:10:51,600 --> 02:10:55,500
R0 + T Rd, right?

2330
02:10:55,500 --> 02:10:56,200
It would just be

2331
02:10:57,100 --> 02:10:57,800
This here.

2332
02:10:58,400 --> 02:11:03,200
And since the dot product does distribute, we can probably just do

2333
02:11:03,200 --> 02:11:04,900
this in sort of a

2334
02:11:07,400 --> 02:11:08,200
What's the what's the word?

2335
02:11:08,200 --> 02:11:12,400
I'm looking for a way we can, we can do this as if we were doing a

2336
02:11:12,400 --> 02:11:13,400
regular multiplication.

2337
02:11:13,500 --> 02:11:14,000
Right.

2338
02:11:14,100 --> 02:11:23,500
So we can do R 0 transpose, AR 0 + T Rd transpose AR 0 or a origin or

2339
02:11:23,500 --> 02:11:26,700
whatever you want to do plus the same thing again, right?

2340
02:11:26,700 --> 02:11:30,800
So This this term is actually going to be squared here, right?

2341
02:11:32,000 --> 02:11:34,500
Plus this term squared as well, right?

2342
02:11:34,500 --> 02:11:35,500
So Plus

2343
02:11:36,300 --> 02:11:37,100
T squared.

2344
02:11:39,100 --> 02:11:40,700
Actually, that's not true.

2345
02:11:41,100 --> 02:11:43,900
That's a to yeah, right.

2346
02:11:43,900 --> 02:11:44,700
Because that

2347
02:11:45,900 --> 02:11:48,500
R0 T, Rd T Rd?

2348
02:11:48,500 --> 02:11:51,800
R 0 is 2 times TR D 0 right?

2349
02:11:52,400 --> 02:11:53,600
Plus t squared.

2350
02:11:55,000 --> 02:11:57,100
R 0 transpose, AR 0, right?

2351
02:11:57,100 --> 02:11:59,900
So I believe we can get away with that because

2352
02:12:00,000 --> 02:12:03,500
As the dot product happens to distribute, we end up with a quadratic

2353
02:12:03,500 --> 02:12:06,200
equation in t, right?

2354
02:12:06,200 --> 02:12:07,700
That is this value.

2355
02:12:07,900 --> 02:12:12,300
So literally, the whole equation is actually just substituting that in

2356
02:12:12,900 --> 02:12:14,900
right for p transpose p.

2357
02:12:15,800 --> 02:12:17,100
I get the entire equation.

2358
02:12:17,500 --> 02:12:20,400
So, unfortunately it's a quadratic equation which means I have to use

2359
02:12:20,400 --> 02:12:22,300
the quadratic equation to solve it.

2360
02:12:22,300 --> 02:12:25,400
But fortunately, it's not like that's a huge deal, right?

2361
02:12:25,400 --> 02:12:28,000
Because the quadratic equation is the quadratic equation.

2362
02:12:28,300 --> 02:12:29,800
So if I organized

2363
02:12:30,000 --> 02:12:35,100
These terms I get t squared r 0 TR 0, right?

2364
02:12:36,300 --> 02:12:42,400
Plus the T term, which is T to r d transpose AR 0, right?

2365
02:12:44,200 --> 02:12:50,200
And then the constant term, which is R 0 transpose, AR 0, minus r

2366
02:12:50,200 --> 02:12:52,000
squared, right?

2367
02:12:57,000 --> 02:13:02,300
So actually, this is our D.

2368
02:13:03,100 --> 02:13:08,800
So that's actually an R&D and my handwriting is an impediment to the

2369
02:13:08,800 --> 02:13:09,400
math.

2370
02:13:12,000 --> 02:13:12,300
Right.

2371
02:13:12,300 --> 02:13:14,400
So it's going to look something like this where we have a quadratic

2372
02:13:14,400 --> 02:13:22,800
equation in like a BC Hoops, see to calculate the intersection for the

2373
02:13:22,800 --> 02:13:23,400
sphere.

2374
02:13:25,100 --> 02:13:27,300
So, in order to do the quadratic equation, right?

2375
02:13:27,300 --> 02:13:29,800
It's the standard thing of

2376
02:13:31,600 --> 02:13:33,100
Gosh, can I remember this?

2377
02:13:33,100 --> 02:13:36,100
It's like negative B plus or minus square root of

2378
02:13:38,300 --> 02:13:42,400
B squared, minus 4AC over 2A.

2379
02:13:43,000 --> 02:13:44,400
Is that the quadratic equation?

2380
02:13:47,800 --> 02:13:50,500
You can tell I do a lot of work on interactive fiction these days and

2381
02:13:50,500 --> 02:13:52,700
not a whole lot of work on 3D rendering because I can't even remember

2382
02:13:52,700 --> 02:13:57,100
the quadratic equation negative B plus or minus B squared minus 4AC

2383
02:13:57,100 --> 02:13:57,500
over 2A.

2384
02:13:57,500 --> 02:13:57,700
Okay?

2385
02:13:57,700 --> 02:14:01,100
So I can remember the called activation, I just can't be sure that I

2386
02:14:01,100 --> 02:14:05,300
remember the quadratic equation which is just as bad anyway.

2387
02:14:05,700 --> 02:14:08,000
So let's think about this for a second, this is going to be our

2388
02:14:08,000 --> 02:14:10,800
equation for T which is the file how far along the rail we went,

2389
02:14:10,800 --> 02:14:11,300
right?

2390
02:14:13,700 --> 02:14:14,800
And so what does that mean?

2391
02:14:15,100 --> 02:14:16,800
Like what what are we getting here?

2392
02:14:16,800 --> 02:14:18,300
What do we what are we?

2393
02:14:19,700 --> 02:14:20,600
What are we trying to say?

2394
02:14:21,900 --> 02:14:24,500
Well, if you look at this equation it has a plus, or minus in it and A

2395
02:14:24,500 --> 02:14:27,700
Plus or a minus means fundamentally speaking, we have two solutions,

2396
02:14:27,900 --> 02:14:30,100
we have negative B, minus this value.

2397
02:14:30,100 --> 02:14:33,600
Over 2A, we have negative B, plus this value over 2A.

2398
02:14:33,900 --> 02:14:39,100
So when we plug in these a,b,c into this equation, get the solutions.

2399
02:14:39,100 --> 02:14:42,000
We get two solutions out, why are we going to get two solutions out?

2400
02:14:42,000 --> 02:14:42,500
Well, the reason we get

2401
02:14:42,700 --> 02:14:45,800
Stitches out is if you look at what happens when we send a ray through

2402
02:14:45,800 --> 02:14:51,000
a circle or a sphere or any other kind of quadratic embedded in a

2403
02:14:51,000 --> 02:14:55,000
space, we get two intersections right, there's an intersection here

2404
02:14:55,000 --> 02:14:55,800
and intersection there.

2405
02:14:56,000 --> 02:14:59,800
So it stands to reason that we would get two equations out there.

2406
02:15:00,000 --> 02:15:03,900
Correspond to the near and far hits of that plane.

2407
02:15:04,400 --> 02:15:09,300
We want both and we need to look to see which one of them we get.

2408
02:15:09,700 --> 02:15:13,800
That makes more sense to us if our Ray origin is here and we hit this

2409
02:15:13,800 --> 02:15:14,000
one.

2410
02:15:14,000 --> 02:15:16,600
First we want to keep that solution.

2411
02:15:16,700 --> 02:15:20,200
Not this one because we don't want to process The Far Side hit of the

2412
02:15:20,200 --> 02:15:21,600
sphere, right?

2413
02:15:23,400 --> 02:15:26,200
so this is fundamentally what we're doing, and we're fundamentally

2414
02:15:26,200 --> 02:15:35,500
saying that Rd squared to our dr0 and

2415
02:15:36,900 --> 02:15:40,100
R0 squared, minus r squared.

2416
02:15:40,500 --> 02:15:45,600
We're fundamentally saying that this is what we want to compute.

2417
02:15:46,300 --> 02:15:47,800
I may have been slapped with the math there.

2418
02:15:47,800 --> 02:15:49,000
This may be wrong.

2419
02:15:49,200 --> 02:15:51,900
So we may have to more carefully go through the terms there in a

2420
02:15:51,900 --> 02:15:55,100
second to make sure I didn't mess them up, but that's the basic idea

2421
02:15:55,300 --> 02:15:56,600
of solving these equations.

2422
02:15:56,600 --> 02:15:59,100
That's how we would, that's what the steps I use.

2423
02:15:59,100 --> 02:16:00,000
The solvent are correct.

2424
02:16:00,000 --> 02:16:03,000
I just bad meticulous Mathai.

2425
02:16:04,900 --> 02:16:07,700
I would like a good computer algebra package someday but there aren't

2426
02:16:07,700 --> 02:16:08,200
any so.

2427
02:16:08,300 --> 02:16:08,700
Oh well.

2428
02:16:09,900 --> 02:16:12,800
So anyway what I want to do now is I want to actually compute that

2429
02:16:13,000 --> 02:16:14,100
value for T.

2430
02:16:14,400 --> 02:16:17,200
So what I need to do is I need to specify basically two different

2431
02:16:17,200 --> 02:16:17,700
values.

2432
02:16:18,700 --> 02:16:24,900
You know, I needed t0 and T1 or I could do a t+ team - for example and

2433
02:16:24,900 --> 02:16:30,300
then I need to compute like - p d plus the root term.

2434
02:16:33,600 --> 02:16:35,200
Over 2A.

2435
02:16:42,200 --> 02:16:50,299
And again, I also need similarly to to do the the corresponding -

2436
02:16:50,299 --> 02:16:51,100
version, right?

2437
02:16:55,400 --> 02:16:58,100
I know my root term is the square.

2438
02:16:58,100 --> 02:17:01,000
Root of B squared, minus 4AC.

2439
02:17:01,600 --> 02:17:07,000
So I've got B times B this for a times C.

2440
02:17:13,400 --> 02:17:16,200
And I knew my denominator is just equal to 2 .0, x.

2441
02:17:16,200 --> 02:17:16,400
Eh

2442
02:17:17,799 --> 02:17:18,200
Okay.

2443
02:17:20,500 --> 02:17:21,799
so, if we look at these,

2444
02:17:23,600 --> 02:17:27,799
If we look at these terms, what we can see is, there's two places we

2445
02:17:27,799 --> 02:17:28,600
can go wrong.

2446
02:17:29,700 --> 02:17:33,000
The first is, if the denominator is 0 again, right?

2447
02:17:33,000 --> 02:17:35,700
So, that's one way we would not intersect with the sphere.

2448
02:17:36,600 --> 02:17:39,100
The other way is if R square root becomes imaginary.

2449
02:17:39,100 --> 02:17:43,799
So if the square root becomes, you know, less than 0 less than 0,

2450
02:17:44,200 --> 02:17:44,600
right?

2451
02:17:46,799 --> 02:17:52,400
At looking at these values, what you can see is minus 4AC, right?

2452
02:17:53,200 --> 02:17:58,000
We know that the real origin squared cannot be negative, right.

2453
02:17:58,000 --> 02:17:59,299
There is no way.

2454
02:18:00,299 --> 02:18:03,600
For the origin squared to be negative and there's also no way.

2455
02:18:08,600 --> 02:18:10,400
For our to be negative since the radius.

2456
02:18:10,400 --> 02:18:14,500
So we know we're subtracting a value, a negative value away from a

2457
02:18:14,500 --> 02:18:19,100
positive value there, and we don't really know how they will compare.

2458
02:18:19,100 --> 02:18:22,400
So we don't know what the real Origins like compared to the radius.

2459
02:18:22,900 --> 02:18:26,299
We have no idea how far the, you know, those two things are so don't

2460
02:18:26,299 --> 02:18:27,299
really know what to say about.

2461
02:18:27,299 --> 02:18:33,299
See a is Ray Direction squared, that's always positive right for is

2462
02:18:33,299 --> 02:18:34,200
always positive.

2463
02:18:34,200 --> 02:18:37,299
So it's really see that would determine whether this is a positive or

2464
02:18:37,299 --> 02:18:38,000
negative value.

2465
02:18:38,000 --> 02:18:38,200
And

2466
02:18:38,299 --> 02:18:42,200
Don't know, which it will be B squared on the other hand is always

2467
02:18:42,200 --> 02:18:42,900
positive.

2468
02:18:43,100 --> 02:18:46,500
So all we really would need to know to know whether we're always going

2469
02:18:46,500 --> 02:18:47,500
to be a valid term.

2470
02:18:47,500 --> 02:18:53,900
Here is whether our D transpose AR 0 times 2 is always going to be

2471
02:18:56,100 --> 02:19:01,000
A more positive value when squared, then, whatever C could potentially

2472
02:19:01,000 --> 02:19:03,400
be in terms of a negative value, right?

2473
02:19:04,400 --> 02:19:09,100
And unfortunately, that's kind of a difficult thing to analyze to know

2474
02:19:09,100 --> 02:19:11,000
whether or not that can ever actually go.

2475
02:19:11,600 --> 02:19:13,500
You can see that it's a little bit tricky, right?

2476
02:19:13,500 --> 02:19:18,100
Like B squared, which is this value here,

2477
02:19:20,799 --> 02:19:25,100
Already transpose AR 0 could I mean that could even be 0, right?

2478
02:19:25,100 --> 02:19:31,600
So this term could be zero and so the question of whether or not ace

2479
02:19:32,100 --> 02:19:37,299
the squared a is the and the squared I'm sorry not squared a the

2480
02:19:37,799 --> 02:19:41,500
length of the direction Vector which we kind of actually know already

2481
02:19:41,500 --> 02:19:43,900
is one because we normalized it.

2482
02:19:43,900 --> 02:19:47,000
So to be honest we know that in all these cases a is 1.

2483
02:19:51,500 --> 02:19:54,400
I guess what I would say is we know that the so here's what, you know,

2484
02:19:54,400 --> 02:19:57,700
what we can we can prove this without actually have to do the map.

2485
02:19:59,800 --> 02:20:03,700
We know that the ray direction is never going to be anything other

2486
02:20:03,700 --> 02:20:07,600
than one when we're feeding it in, but we also know that we can miss

2487
02:20:07,600 --> 02:20:08,200
the sphere.

2488
02:20:09,100 --> 02:20:11,700
The reason we know we can miss the sphere is because, hey, if here's

2489
02:20:11,700 --> 02:20:15,400
the sphere and the thing is going this way, we won't hit it, right?

2490
02:20:15,800 --> 02:20:21,300
So, we know that this term must be able to become like an unsolvable

2491
02:20:21,300 --> 02:20:22,200
math value.

2492
02:20:22,200 --> 02:20:24,200
Right has to become imaginary at some point.

2493
02:20:25,600 --> 02:20:30,400
So what that tells us is you know this since this denominator can't be

2494
02:20:30,400 --> 02:20:31,000
the problem.

2495
02:20:31,000 --> 02:20:31,900
It's got to be here.

2496
02:20:32,900 --> 02:20:37,500
So what we know there is yeah instead of checking the denominator like

2497
02:20:37,500 --> 02:20:41,100
we're checking before, it's the root term that we need to check now

2498
02:20:41,200 --> 02:20:43,900
and we need to make sure that the root term is going to be over our

2499
02:20:43,900 --> 02:20:46,100
tolerance value, right?

2500
02:20:48,400 --> 02:20:49,100
For now.

2501
02:20:56,900 --> 02:20:57,300
Right.

2502
02:20:58,300 --> 02:20:59,800
Okay, so assuming our route,

2503
02:21:00,200 --> 02:21:00,700
Oops.

2504
02:21:02,500 --> 02:21:05,900
Assuming our route term is over our tolerance value, that's the thing

2505
02:21:05,900 --> 02:21:08,000
that would determine whether we can start testing.

2506
02:21:09,500 --> 02:21:12,800
This stuff is now no longer relevant to us.

2507
02:21:13,100 --> 02:21:15,100
And so we want to do here is now C.

2508
02:21:15,300 --> 02:21:20,200
We want the whichever one of these two is closer so what we want to do

2509
02:21:20,200 --> 02:21:23,500
is say basically our T value and what I probably should have done up

2510
02:21:23,500 --> 02:21:23,600
here.

2511
02:21:23,600 --> 02:21:26,700
Instead of this distance is to call this the T value because that's

2512
02:21:26,700 --> 02:21:28,400
what we're really talking about all the time.

2513
02:21:30,200 --> 02:21:30,700
Right.

2514
02:21:37,200 --> 02:21:40,200
So what I want to do here is say that let's assume that the T value is

2515
02:21:40,200 --> 02:21:41,800
equal to the teepee value.

2516
02:21:42,100 --> 02:21:45,800
Right now, what I'm going to do is then say if the T N value

2517
02:21:49,200 --> 02:21:49,800
Is.

2518
02:21:51,900 --> 02:21:53,300
Is greater than zero.

2519
02:21:54,700 --> 02:21:55,000
Right.

2520
02:21:55,000 --> 02:21:56,200
So it's in front of us.

2521
02:21:57,700 --> 02:22:03,000
And it is less than the teepee value, then it's a better hit.

2522
02:22:16,100 --> 02:22:16,900
Does that make sense?

2523
02:22:17,100 --> 02:22:18,700
So I only want hits in front of us.

2524
02:22:20,300 --> 02:22:23,200
And I want to see whether or not it's better than the teepee hit so

2525
02:22:23,200 --> 02:22:23,900
it's closer.

2526
02:22:23,900 --> 02:22:25,300
So I'm looking right?

2527
02:22:26,100 --> 02:22:28,400
And then what I'm going to do is just test T here.

2528
02:22:30,100 --> 02:22:31,600
The same way I was testing it before.

2529
02:22:43,500 --> 02:22:45,900
And so then the last step here is I have to fill in these terms.

2530
02:22:46,500 --> 02:22:49,300
So this is going to be the inner product of R&D with itself.

2531
02:22:53,500 --> 02:22:55,300
B is going to be too.

2532
02:22:56,900 --> 02:22:57,300
Times.

2533
02:22:57,300 --> 02:23:00,500
The inner product of the two of the right origin in the right

2534
02:23:00,500 --> 02:23:05,900
direction and C is going to be the inner product of the rate origin

2535
02:23:05,900 --> 02:23:08,100
with a self-, the radius.

2536
02:23:13,300 --> 02:23:19,400
Like so, so hey we got our sphere so we couldn't have been too wrong

2537
02:23:20,300 --> 02:23:21,800
but it's not the right place.

2538
02:23:22,200 --> 02:23:24,800
So we still have some problems, right?

2539
02:23:24,800 --> 02:23:31,600
We've got a we've got a bug here of some kind right now.

2540
02:23:36,800 --> 02:23:41,900
The first thing you'll notice is I have a problem with Origins that we

2541
02:23:41,900 --> 02:23:42,900
haven't discussed.

2542
02:23:43,100 --> 02:23:47,900
It should probably not have had any effect here, but the fact is we

2543
02:23:47,900 --> 02:23:50,800
have to correct for it anyway, if we want to get further down the

2544
02:23:50,800 --> 02:23:51,200
line.

2545
02:23:51,600 --> 02:23:55,900
So you'll notice what I did is when I said, what the Spheres equation

2546
02:23:55,900 --> 02:23:58,900
was where was that was right here, right?

2547
02:23:59,200 --> 02:23:59,800
You'll notice that.

2548
02:24:00,000 --> 02:24:00,800
Use P.

2549
02:24:01,400 --> 02:24:05,000
But really, this doesn't have the center of the sphere represented

2550
02:24:05,000 --> 02:24:05,500
anywhere.

2551
02:24:05,700 --> 02:24:09,800
So technically what these are is, they're always like px- sphere X,

2552
02:24:09,900 --> 02:24:10,400
right?

2553
02:24:10,500 --> 02:24:16,300
It's, it's got to be the position relative to the center of the

2554
02:24:16,300 --> 02:24:20,700
sphere, which we did not take into account, so we were just using it

2555
02:24:20,700 --> 02:24:22,100
as if the Seer was always at the origin.

2556
02:24:22,100 --> 02:24:23,200
The store is not at the origin.

2557
02:24:23,800 --> 02:24:27,900
So what that means is that that point equation that we have in there,

2558
02:24:28,100 --> 02:24:29,800
all of the things that we had before

2559
02:24:30,000 --> 02:24:33,800
Or where we were sort of saying P transpose P.

2560
02:24:34,300 --> 02:24:37,700
We actually need those to take into account that that subtraction,

2561
02:24:37,900 --> 02:24:38,100
right?

2562
02:24:38,100 --> 02:24:39,100
That's going to happen there.

2563
02:24:40,500 --> 02:24:46,800
So this Ray origin really whenever it's used needs to be more like

2564
02:24:46,800 --> 02:24:48,500
local origin, right?

2565
02:24:48,500 --> 02:24:50,600
Or sphere relative origin.

2566
02:24:51,800 --> 02:24:52,400
Right?

2567
02:24:53,500 --> 02:24:57,000
So the sphere relative rate origin is going to be the worry origin -

2568
02:24:57,000 --> 02:24:58,200
the sphere origin.

2569
02:24:59,900 --> 02:25:01,800
And then, just by substituting that in there.

2570
02:25:01,800 --> 02:25:04,700
We can use the same equations, right?

2571
02:25:06,000 --> 02:25:08,600
Because that's basically, like, before we were, we did all the

2572
02:25:08,600 --> 02:25:10,400
equations with a sphere centered at 0 0.

2573
02:25:10,400 --> 02:25:14,300
I need to move everything so that it's now relative to that sphere.

2574
02:25:14,900 --> 02:25:17,400
So again, like I said, that doesn't affect the image at all.

2575
02:25:17,400 --> 02:25:22,100
I just want to get that out of there first off, but the reason that

2576
02:25:22,100 --> 02:25:24,800
that shouldn't affect anything is because when we set up the world's,

2577
02:25:25,000 --> 02:25:25,900
where is that?

2578
02:25:26,600 --> 02:25:28,900
We left the sphere at 000.

2579
02:25:29,700 --> 02:25:30,200
Right.

2580
02:25:31,200 --> 02:25:36,200
So now we know there is some bug with the way that we're casting are

2581
02:25:36,200 --> 02:25:39,900
raised or the way that we're doing, our sphere intersection that is

2582
02:25:39,900 --> 02:25:43,600
called the our stuff to show up a little bit off center from where we

2583
02:25:43,600 --> 02:25:46,700
expect it to be and we need to figure out why that is.

2584
02:25:46,900 --> 02:25:50,000
Now, unfortunately we have a problem here which is that we don't

2585
02:25:50,000 --> 02:25:53,500
really know whether that's because of something in our camera code

2586
02:25:53,500 --> 02:25:55,500
that's wrong, which could be the case.

2587
02:25:56,600 --> 02:25:59,300
Or if there's something in our sphere intersection code, that's

2588
02:26:00,000 --> 02:26:04,600
Which could also be the case now, positively unwisely.

2589
02:26:06,200 --> 02:26:09,600
I am going to assume that it's in the camera setup code.

2590
02:26:09,900 --> 02:26:12,900
The reason I'm going to assume that first and look for that first is

2591
02:26:12,900 --> 02:26:17,000
because nothing in the sphere intersection code right now.

2592
02:26:17,000 --> 02:26:20,600
Screams x-axis to me, right?

2593
02:26:21,200 --> 02:26:28,400
So when I look at this, that looks more or less correct in Y and Z and

2594
02:26:28,400 --> 02:26:32,600
just not X and that to me suggests that there's something wrong with

2595
02:26:32,600 --> 02:26:35,900
my equations for X only and in order.

2596
02:26:36,000 --> 02:26:37,000
For something to be wrong with my equation.

2597
02:26:37,000 --> 02:26:37,300
For x.

2598
02:26:37,300 --> 02:26:40,900
Only X has to show up special somewhere.

2599
02:26:41,200 --> 02:26:44,200
It does not show up special here, it does.

2600
02:26:44,200 --> 02:26:46,700
Show up special down here.

2601
02:26:47,800 --> 02:26:48,300
Right.

2602
02:26:51,800 --> 02:26:54,700
So that's all I really have to go on and again I don't really know.

2603
02:26:54,700 --> 02:26:55,800
That's a shot in the dark.

2604
02:26:56,400 --> 02:26:59,800
It's just again something that I'm sort of like--.

2605
02:27:00,500 --> 02:27:03,200
Using to focus my attention first.

2606
02:27:03,500 --> 02:27:07,100
So, right off the bat, I see a typo, Right?

2607
02:27:07,200 --> 02:27:09,200
Image, .height, image.

2608
02:27:09,300 --> 02:27:09,900
Height is wrong.

2609
02:27:09,900 --> 02:27:13,600
It should be imaged with and that, that's the entirety of the problem,

2610
02:27:14,300 --> 02:27:14,700
okay?

2611
02:27:16,400 --> 02:27:18,300
So good getting closer.

2612
02:27:19,600 --> 02:27:22,300
So now this points out of thing that member, if you go all the way

2613
02:27:22,300 --> 02:27:24,900
back to beginning, when I said, like, we're just use a square for now.

2614
02:27:24,900 --> 02:27:26,800
But we need a rectangle eventually when I talked about that image

2615
02:27:26,800 --> 02:27:29,500
plane, now we need to address that that problem.

2616
02:27:30,000 --> 02:27:33,700
So now we have a problem which is that hey, we are casting a square.

2617
02:27:34,200 --> 02:27:36,100
We are shooting at are raised in a square pattern.

2618
02:27:36,500 --> 02:27:38,900
The imagery producing is not a square.

2619
02:27:39,300 --> 02:27:42,000
We could choose to make it a square, right?

2620
02:27:44,800 --> 02:27:46,000
Does, don't need to be there anymore.

2621
02:27:51,300 --> 02:27:54,900
We could choose to make it a square right by replacing this with 720.

2622
02:27:55,400 --> 02:27:59,600
Now, we've got a proper image, but we would like to be able to cast

2623
02:27:59,600 --> 02:28:04,300
any image size we want and account for that, right?

2624
02:28:04,500 --> 02:28:09,500
So in order to do that, what we need is an aspect ratio handling in

2625
02:28:09,500 --> 02:28:09,900
there.

2626
02:28:10,000 --> 02:28:14,900
So that when we cast a wider Dimension, we expand how far we're going

2627
02:28:14,900 --> 02:28:16,600
in that direction.

2628
02:28:16,700 --> 02:28:19,400
Now, I'm going to say that we always want to just do one point.

2629
02:28:19,400 --> 02:28:19,800
Oh,

2630
02:28:22,600 --> 02:28:26,400
As our basis and we could do it either way.

2631
02:28:26,400 --> 02:28:29,500
We could say that 1.0 is a maximum, or we could say that 1.0 is the

2632
02:28:29,500 --> 02:28:31,900
minimum and it doesn't really matter which one we do.

2633
02:28:31,900 --> 02:28:34,200
I'm going to say one point is the maximum just for the heck of it.

2634
02:28:34,500 --> 02:28:38,600
And so, what that means is, we need to look to see if one of our

2635
02:28:38,600 --> 02:28:41,800
Dimensions is higher than the other dimension, right?

2636
02:28:42,000 --> 02:28:43,500
We need to basically look and go.

2637
02:28:43,500 --> 02:28:49,100
All right, is the image with greater than the image height and also is

2638
02:28:49,100 --> 02:28:51,100
the image height greater than the image with

2639
02:28:51,600 --> 02:28:52,200
Right.

2640
02:28:54,500 --> 02:28:57,900
And what we need to do here is adjust the one, if the other is wrong.

2641
02:28:58,700 --> 02:29:01,700
So if our film with is greater than our height, they what we need to

2642
02:29:01,700 --> 02:29:05,400
do is we need to shrink our height down, okay?

2643
02:29:06,200 --> 02:29:09,300
So we need to take whatever our image height is.

2644
02:29:10,600 --> 02:29:12,200
We need to shrink that down.

2645
02:29:15,200 --> 02:29:16,500
Around here has got to be sure.

2646
02:29:19,500 --> 02:29:19,800
Oh wait.

2647
02:29:19,800 --> 02:29:21,400
No, no, no, sorry.

2648
02:29:21,900 --> 02:29:22,700
I don't need to do that.

2649
02:29:22,900 --> 02:29:24,100
Just, I don't need to set the.

2650
02:29:24,700 --> 02:29:25,700
That height can remain the same.

2651
02:29:25,700 --> 02:29:28,100
It's, it's just the film height that needs to change.

2652
02:29:28,400 --> 02:29:31,100
I need to shrink the film height down, so that's proportionally,

2653
02:29:31,100 --> 02:29:31,700
correct.

2654
02:29:31,800 --> 02:29:35,600
I need the height to be correct based on the image height.

2655
02:29:35,600 --> 02:29:39,700
So, what I need to do here is say, well, whatever the film width is

2656
02:29:40,000 --> 02:29:40,600
right.

2657
02:29:40,900 --> 02:29:47,300
I want the film with times a conversion that will convert it over to

2658
02:29:47,400 --> 02:29:49,000
the same.

2659
02:29:49,100 --> 02:29:49,700
Proportion.

2660
02:29:53,400 --> 02:29:56,800
So if I take the ratio of the image height, to the image with that

2661
02:29:56,800 --> 02:29:59,300
will tell me how to take a whip and produce a height from it.

2662
02:29:59,300 --> 02:29:59,800
So I'm going to keep

2663
02:30:00,100 --> 02:30:04,000
Film with constant and recreate the film height out of it, right?

2664
02:30:04,200 --> 02:30:06,500
And I can do the exact same process in reverse.

2665
02:30:10,700 --> 02:30:11,000
Here.

2666
02:30:11,300 --> 02:30:15,200
And again this is just dimensional analysis at its most basic I'm

2667
02:30:15,200 --> 02:30:16,000
basically saying.

2668
02:30:16,000 --> 02:30:18,100
Well alright, if I have a width

2669
02:30:19,200 --> 02:30:21,100
I'm going to multiply it by.

2670
02:30:24,100 --> 02:30:25,500
A height over with.

2671
02:30:26,500 --> 02:30:29,800
To get a height out the other side, the widths cancel, right?

2672
02:30:30,000 --> 02:30:34,100
So, again, I have a high time Computing, so I want to end up with

2673
02:30:34,100 --> 02:30:34,600
height.

2674
02:30:34,600 --> 02:30:38,900
So, I want width times height over with, to cancel the widths and get

2675
02:30:38,900 --> 02:30:39,600
a hideout.

2676
02:30:39,800 --> 02:30:42,600
Same at the opposite is true, in the other case, right?

2677
02:30:42,800 --> 02:30:44,600
So that's just shrinking that Dimension down.

2678
02:30:45,000 --> 02:30:46,900
So now you can see we're producing a proper image.

2679
02:30:46,900 --> 02:30:51,700
That's just got the aspect ratio of correct in there and presumably if

2680
02:30:51,700 --> 02:30:52,500
you wanted to.

2681
02:30:52,600 --> 02:30:55,100
We could now just set whatever we want here.

2682
02:30:55,200 --> 02:30:56,000
You know, if we want to do

2683
02:30:56,200 --> 02:30:58,300
1096 by 2048 for some reason.

2684
02:30:58,300 --> 02:31:02,200
I don't know why you want to do that but now we can run our Ray Tracer

2685
02:31:03,000 --> 02:31:05,800
and it'll take a lot longer because there's way more race but now we

2686
02:31:05,800 --> 02:31:07,200
have like just an image.

2687
02:31:07,200 --> 02:31:08,300
That's like much more.

2688
02:31:08,700 --> 02:31:10,300
Can I zoom in on this thing somehow?

2689
02:31:10,700 --> 02:31:12,000
Why isn't the mouse wheel work?

2690
02:31:12,800 --> 02:31:14,600
I'm just because this program is extremely slow.

2691
02:31:15,600 --> 02:31:17,800
I guess how do I zoom in?

2692
02:31:18,900 --> 02:31:20,200
Can you seriously not zoom in.

2693
02:31:20,900 --> 02:31:21,400
There we go.

2694
02:31:22,200 --> 02:31:22,600
There we go.

2695
02:31:23,800 --> 02:31:25,900
So now you can see we just have a lot more resolution but we basically

2696
02:31:25,900 --> 02:31:27,200
did the exact same thing, so that's good.

2697
02:31:27,200 --> 02:31:29,800
So we're really resolution dependent there and that's good.

2698
02:31:30,300 --> 02:31:32,300
I want to see my Ray Kasten.

2699
02:31:33,800 --> 02:31:36,500
You know, that took a long time because this is a really an optimized

2700
02:31:36,500 --> 02:31:39,400
program and we're not in compiling an optimized mode, and that's a lot

2701
02:31:39,400 --> 02:31:41,600
of raycast to do in with some slow code.

2702
02:31:42,200 --> 02:31:47,400
What I'd like to do here is I'd like to go ahead and have a progress

2703
02:31:47,400 --> 02:31:48,800
update somehow.

2704
02:31:49,600 --> 02:31:52,300
So, what I'm going to do here is I'm going to go ahead and say while

2705
02:31:52,300 --> 02:31:57,100
we're out putting this here, I'm going to just output some status as

2706
02:31:57,100 --> 02:31:57,500
we go.

2707
02:31:58,100 --> 02:32:00,800
So I'm going to come through here and just do something like

2708
02:32:26,400 --> 02:32:30,000
So here's me just doing something that will just print out Ray casting

2709
02:32:30,000 --> 02:32:34,100
row, you can see that it kind of goes, it's not very good for use in a

2710
02:32:34,100 --> 02:32:35,300
non console window.

2711
02:32:36,100 --> 02:32:39,100
So maybe I shouldn't quite do that or have a mode that doesn't quite

2712
02:32:39,100 --> 02:32:41,900
do it that way, but if we were to run it from here, it would make a

2713
02:32:41,900 --> 02:32:42,700
lot more sense.

2714
02:32:42,700 --> 02:32:43,800
So here's the

2715
02:32:45,600 --> 02:32:46,500
Data directory.

2716
02:32:46,900 --> 02:32:52,600
If I go back to build a legacy you can see it sort of printing out

2717
02:32:52,600 --> 02:32:53,400
their nice.

2718
02:32:55,500 --> 02:32:59,900
Sort of status, what I'm also going to do.

2719
02:33:00,000 --> 02:33:02,000
Here is I'm just going to go ahead and make it so we don't do that

2720
02:33:02,000 --> 02:33:02,600
every time.

2721
02:33:03,100 --> 02:33:04,700
So I'll just do if y.

2722
02:33:07,900 --> 02:33:09,400
You know, mod.

2723
02:33:13,800 --> 02:33:16,200
Let's say every 64 lines.

2724
02:33:21,200 --> 02:33:24,900
Right, and now it'll just do like, you know, 01234, whatever kind of

2725
02:33:24,900 --> 02:33:25,300
thing.

2726
02:33:28,800 --> 02:33:29,300
Right here.

2727
02:33:35,400 --> 02:33:40,200
It would be really cool if someday for coder supported that optionally

2728
02:33:41,400 --> 02:33:43,500
because it could, it would be interesting if it did.

2729
02:33:44,400 --> 02:33:46,300
And the other thing we could do here is make this a percent if we

2730
02:33:46,300 --> 02:33:47,600
wanted to write.

2731
02:33:47,700 --> 02:33:50,300
So the thing I could do is say, well, let's divide by the image

2732
02:33:50,300 --> 02:33:50,800
height.

2733
02:34:03,100 --> 02:34:05,600
And now we should get like some nice percentage values in there as

2734
02:34:05,600 --> 02:34:06,900
they go, right?

2735
02:34:07,500 --> 02:34:08,200
And that's good.

2736
02:34:15,600 --> 02:34:16,300
So, that's nice.

2737
02:34:17,100 --> 02:34:19,000
And the other thing we can do is we can f flush here.

2738
02:34:21,500 --> 02:34:24,300
To make sure that we actually get those printouts happening as they

2739
02:34:24,300 --> 02:34:28,000
happen instead of, if they're in a buffered scenario, which they might

2740
02:34:28,000 --> 02:34:30,700
be on like a Linux, for example, would probably buffer those up,

2741
02:34:31,200 --> 02:34:31,700
right.

2742
02:34:32,000 --> 02:34:35,500
So, there's a nice little guy, a nice little Ray Tracer that rates

2743
02:34:35,500 --> 02:34:35,900
everything.

2744
02:34:35,900 --> 02:34:39,900
It produces images that look awful right now because we haven't really

2745
02:34:39,900 --> 02:34:41,300
done much to make them.

2746
02:34:41,300 --> 02:34:45,900
Look not awful but and it's very slow but you know it's it's a start

2747
02:34:45,900 --> 02:34:46,100
right?

2748
02:34:46,100 --> 02:34:47,100
So there's started to retrace.

2749
02:34:48,100 --> 02:34:50,500
So, now the question is well, all right, let's just

2750
02:34:51,100 --> 02:34:56,600
Let's do like something slightly more complicated here, just to get

2751
02:34:56,600 --> 02:34:59,300
things rolling.

2752
02:34:59,300 --> 02:35:00,200
A little bit better.

2753
02:35:02,800 --> 02:35:05,900
So let's try doing something that's a little bit more realistic.

2754
02:35:06,400 --> 02:35:10,700
Only the barest, barest amount, more realistic like we're talking like

2755
02:35:11,200 --> 02:35:13,500
tiny tiny, tiny bit of realistic.

2756
02:35:13,500 --> 02:35:16,100
So so so very very

2757
02:35:17,400 --> 02:35:19,500
Minor Improvement.

2758
02:35:19,500 --> 02:35:21,100
Just so we can see what a ray Tracer.

2759
02:35:21,100 --> 02:35:23,100
Should look like a little bit better on.

2760
02:35:23,100 --> 02:35:27,500
I'm going to basically create an arbitrary Skype value here.

2761
02:35:27,500 --> 02:35:32,200
Let's say .3, I'm going to take again that material for the plane.

2762
02:35:32,200 --> 02:35:40,100
I'm going to say is like you know 0.5 0.5 0.5 let's say and I'm going

2763
02:35:40,100 --> 02:35:47,300
to take the material to color here and say that that should be

2764
02:35:56,300 --> 02:35:56,700
I don't know.

2765
02:35:56,700 --> 02:35:57,600
Point 7f,

2766
02:35:58,700 --> 02:35:59,700
.5 f.

2767
02:36:00,600 --> 02:36:02,400
Point 3F, maybe something like that.

2768
02:36:03,600 --> 02:36:06,600
Now if we run this again what you'll see is we just get kind of

2769
02:36:06,700 --> 02:36:07,900
nothing particular, interesting.

2770
02:36:07,900 --> 02:36:12,200
We get like a gray plane and you know, maybe I'll give the be a little

2771
02:36:12,200 --> 02:36:17,200
bit of color to the incoming lighting.

2772
02:36:21,100 --> 02:36:24,100
There's a great plane like a it's like a sky you know, whatever.

2773
02:36:26,200 --> 02:36:26,500
Right?

2774
02:36:26,500 --> 02:36:27,000
So there we go.

2775
02:36:27,000 --> 02:36:28,600
We've got some material values there.

2776
02:36:29,200 --> 02:36:32,200
And what I'm going to do is just a very, very straightforward thing

2777
02:36:32,400 --> 02:36:37,100
where when I raycast here, what I'm going to do is say well whenever I

2778
02:36:37,100 --> 02:36:42,400
hit something, i-i'm going to maybe keep going, right?

2779
02:36:42,400 --> 02:36:47,600
Like maybe I'll just like continue casting through the world, right?

2780
02:36:50,300 --> 02:36:53,800
And furthermore, what I might do is say, well, I also am going to say

2781
02:36:53,800 --> 02:36:56,000
that we've got as R 0 value.

2782
02:36:56,300 --> 02:37:01,800
So are like our Min hip distance, I'm going to say that that's like

2783
02:37:01,800 --> 02:37:04,900
some small value as well, right?

2784
02:37:05,300 --> 02:37:08,300
So I'm going to go in here and say that like Min hit distance

2785
02:37:13,100 --> 02:37:17,100
And this is really janky right now, like I said we're not really you

2786
02:37:17,100 --> 02:37:20,600
know a lot of these things you don't want to do eventually once we

2787
02:37:20,600 --> 02:37:25,800
start talking about more sophisticated stuff will just make Min hit

2788
02:37:25,800 --> 02:37:28,200
distance here, just temporarily as something to work from.

2789
02:37:28,500 --> 02:37:32,400
Okay so what I'm going to do here is I'm going to say well what if I

2790
02:37:32,400 --> 02:37:34,600
just want to maybe like raycast

2791
02:37:38,800 --> 02:37:40,700
Repeatedly, right?

2792
02:37:40,900 --> 02:37:41,900
So here's our

2793
02:37:52,400 --> 02:37:53,000
are we down?

2794
02:37:56,900 --> 02:37:59,600
What I want to do here is I want to say like, all right, let's suppose

2795
02:37:59,600 --> 02:38:03,600
we're going to shoot multiple Rays when we actually shoot out a ray,

2796
02:38:03,800 --> 02:38:04,500
right?

2797
02:38:04,900 --> 02:38:08,300
So I'm going to do like a ray count equals 0.

2798
02:38:08,300 --> 02:38:10,800
Re count is less than I don't know.

2799
02:38:12,200 --> 02:38:13,100
Let's say, four.

2800
02:38:14,400 --> 02:38:19,200
Plus plus re account and 8 is probably a more sophisticated number,

2801
02:38:19,200 --> 02:38:20,500
but it doesn't really matter.

2802
02:38:22,000 --> 02:38:25,600
So let's say I'm going to cast a trays and what I'm going to do is

2803
02:38:25,600 --> 02:38:33,700
every time I get a hit, I'm actually going to change that the idea

2804
02:38:33,700 --> 02:38:38,100
about where the origin is and about where the ray direction, is that

2805
02:38:38,100 --> 02:38:39,200
I'm coming from, right?

2806
02:38:39,400 --> 02:38:41,700
So I'm going to have a thing called Next origin.

2807
02:38:43,200 --> 02:38:44,400
Next Direction.

2808
02:38:44,900 --> 02:38:45,500
Like so.

2809
02:38:47,900 --> 02:38:51,200
And I'm going to have a thing which specifies, whether or not I

2810
02:38:51,200 --> 02:38:53,700
actually ever did hit anything, right?

2811
02:38:54,500 --> 02:38:57,900
So this is just a, like, hit something.

2812
02:39:00,500 --> 02:39:03,600
So, I'm just going to say hit something people's true.

2813
02:39:08,200 --> 02:39:14,300
Like, so, and I'm going to have some idea of a color value in here as

2814
02:39:14,300 --> 02:39:14,600
well.

2815
02:39:15,200 --> 02:39:15,500
Right?

2816
02:39:16,100 --> 02:39:17,900
So I want to know, like what color I hit.

2817
02:39:21,000 --> 02:39:22,600
there's they don't really need to clear these, but

2818
02:39:28,900 --> 02:39:31,400
And honestly, you know what, I could probably do is just like hit

2819
02:39:31,400 --> 02:39:32,100
material.

2820
02:39:53,700 --> 02:39:55,900
So this way, I'll know what material I hit.

2821
02:39:57,300 --> 02:39:59,100
Maybe I'll call that hit Matt index.

2822
02:40:01,900 --> 02:40:04,600
And what I could really do is just use that.

2823
02:40:08,100 --> 02:40:11,600
Instead, so all instead of having a Boolean which I don't really need,

2824
02:40:11,600 --> 02:40:13,800
I'll just set hit Matt index equal to 0.

2825
02:40:13,800 --> 02:40:16,900
I know that 0 is a non thing, right?

2826
02:40:17,800 --> 02:40:20,900
And I'll do my hit Mac index and then what I can do at the end of

2827
02:40:20,900 --> 02:40:23,900
this, as I can say, if hit Matt index, I know I hit something

2828
02:40:23,900 --> 02:40:26,400
otherwise, I am done, right?

2829
02:40:27,400 --> 02:40:32,500
So great, you know, break out of the loop, we don't have anything.

2830
02:40:35,300 --> 02:40:37,200
More to do here, right?

2831
02:40:38,200 --> 02:40:41,800
And so, what I'm going to end up here is I'm going to end up with

2832
02:40:41,900 --> 02:40:43,300
essentially a

2833
02:40:47,000 --> 02:40:51,100
Sort of a stack if you will of materiel operations as I March through

2834
02:40:51,100 --> 02:40:54,600
the world, and we're going to have to probably keep track of some of

2835
02:40:54,600 --> 02:41:00,400
these things here in, in a, in some kind of reasonable way, but we'll

2836
02:41:00,400 --> 02:41:01,200
get to that in a second.

2837
02:41:02,700 --> 02:41:06,900
So as I come through here, if I hit him, if I hit a material index and

2838
02:41:06,900 --> 02:41:09,100
I have the next origin X Direction thing.

2839
02:41:09,400 --> 02:41:15,600
What I need to know here is, I need to know where I would cast from

2840
02:41:15,700 --> 02:41:16,400
next.

2841
02:41:16,800 --> 02:41:17,800
Fi when I hit something.

2842
02:41:17,800 --> 02:41:20,600
So I need to know the point that I hid in the world and I also need to

2843
02:41:20,600 --> 02:41:22,900
know the Direction I Would cast off in.

2844
02:41:22,900 --> 02:41:26,900
So I need to know like the surface normal at that point for example.

2845
02:41:27,300 --> 02:41:30,300
And so maybe what I'll call that instead of next direction is next to

2846
02:41:30,300 --> 02:41:34,900
normal because really it's not the next Direction necessarily, right.

2847
02:41:36,700 --> 02:41:37,000
Okay.

2848
02:41:38,000 --> 02:41:40,600
So what I want to do now is say alright I've got a next origin and

2849
02:41:40,600 --> 02:41:41,400
next door Mille.

2850
02:41:41,800 --> 02:41:44,700
So in this case, if I'm Ray casting a plane.

2851
02:41:44,900 --> 02:41:47,900
I know that the next origin is just the point on the plane that I

2852
02:41:47,900 --> 02:41:48,400
ended up at.

2853
02:41:48,400 --> 02:41:51,800
So it's just and this is the same in both cases, whatever the

2854
02:41:51,800 --> 02:41:55,000
redirection is, I know that I just go whatever the t-value I find.

2855
02:41:55,000 --> 02:41:59,800
I just go that far in there I am but the next normal is, you know, not

2856
02:42:00,000 --> 02:42:02,700
Related to that, it's just whatever the plane normal is, right.

2857
02:42:02,700 --> 02:42:07,500
Because that's, that's the, the normal to the surface is whatever that

2858
02:42:07,500 --> 02:42:08,200
plane normal is.

2859
02:42:08,200 --> 02:42:11,600
So if I come down here for hit distance, it Matt index.

2860
02:42:11,600 --> 02:42:14,900
Again, same thing here, I've got to compute these two.

2861
02:42:14,900 --> 02:42:20,000
My next origin is the same, right, but my next newer mole is not the

2862
02:42:20,000 --> 02:42:20,300
same.

2863
02:42:20,300 --> 02:42:25,600
My next normal is going to be based on the sphere and in order to

2864
02:42:25,600 --> 02:42:28,800
figure out what this the sphere normal is.

2865
02:42:28,800 --> 02:42:30,000
I really just have to look

2866
02:42:30,000 --> 02:42:37,300
look to see what the direction is to, from the center of the sphere to

2867
02:42:37,300 --> 02:42:38,800
that origin, right?

2868
02:42:39,100 --> 02:42:43,500
Because the normal at the point on a sphere, you know, whatever the

2869
02:42:43,500 --> 02:42:43,900
serious.

2870
02:42:43,900 --> 02:42:45,500
If I know that this is where I hid.

2871
02:42:45,500 --> 02:42:48,300
The normal is always just from the center out to that point, right?

2872
02:42:48,300 --> 02:42:50,500
That's always going to be tangent at that point.

2873
02:42:51,100 --> 02:42:54,600
So, the next animal is just going to be whatever the sphere origin is.

2874
02:42:56,200 --> 02:42:57,800
- what of that next version is.

2875
02:42:58,500 --> 02:43:02,900
So if I hit something, I can choose to continue casting, and what I

2876
02:43:02,900 --> 02:43:08,800
can do to continue casting is I can just say, well next origin.

2877
02:43:10,300 --> 02:43:12,700
That'll be my real origin for the next cast.

2878
02:43:12,800 --> 02:43:16,400
Ray direction will be the real origin and off we go.

2879
02:43:16,900 --> 02:43:18,400
So that will just let me keep casting.

2880
02:43:18,400 --> 02:43:20,100
I can like bounce all through the scene.

2881
02:43:20,500 --> 02:43:21,000
Right.

2882
02:43:22,100 --> 02:43:25,100
And so now, all I need to do is have some way of recording all that

2883
02:43:25,100 --> 02:43:26,600
information that I got there.

2884
02:43:27,200 --> 02:43:33,600
And and once I have that information doing the light propagation that

2885
02:43:33,600 --> 02:43:35,600
I need to do in order to produce.

2886
02:43:37,300 --> 02:43:37,500
Yeah.

2887
02:43:37,500 --> 02:43:38,700
Like the the

2888
02:43:42,400 --> 02:43:43,300
What should I say?

2889
02:43:44,500 --> 02:43:48,100
I need to have a way to take that light path and produce what I think,

2890
02:43:48,100 --> 02:43:53,100
the lighting should be along that path based on how the light has been

2891
02:43:53,300 --> 02:43:54,700
provided, right?

2892
02:43:55,800 --> 02:43:59,900
So we have a problem here, which we which we really need to resolve

2893
02:44:00,500 --> 02:44:06,600
and we can, I think resolve this fairly straightforward actually at

2894
02:44:06,600 --> 02:44:09,400
the moment, what I'm going to do is when we set this color here where

2895
02:44:09,900 --> 02:44:11,700
we have the mat Index, right?

2896
02:44:12,400 --> 02:44:15,900
so, what we want to do here is when we find the Hitman index,

2897
02:44:18,400 --> 02:44:20,100
And we do our bounces.

2898
02:44:20,300 --> 02:44:24,200
If I reset this temporarily to just do a single Ray, count cast.

2899
02:44:24,600 --> 02:44:27,900
Then that means whatever we hit for the material index.

2900
02:44:29,100 --> 02:44:32,100
That could be our result color, if that makes sense.

2901
02:44:33,000 --> 02:44:34,500
So I'm just going to do that really quickly.

2902
02:44:34,500 --> 02:44:40,000
Just for a second here, I'm going to do World, materials, hit that

2903
02:44:40,000 --> 02:44:43,800
index, and I'm going to make the result color, be equal to that color,

2904
02:44:44,100 --> 02:44:44,500
right?

2905
02:44:55,100 --> 02:44:58,500
So it doesn't really it guess it's not smart enough to realize.

2906
02:44:58,500 --> 02:44:59,800
We'll do this for now, but it's not smart.

2907
02:45:00,000 --> 02:45:01,500
Realize that doesn't need to do that.

2908
02:45:04,000 --> 02:45:07,400
So there's our program, the thing I was going to say is what I want to

2909
02:45:07,400 --> 02:45:11,800
do here is I need to expand our material now because I want to do

2910
02:45:11,800 --> 02:45:13,300
something a little bit more realistic.

2911
02:45:13,400 --> 02:45:18,000
I want to expand our material to have some concept of whether it emits

2912
02:45:18,000 --> 02:45:20,500
light, or reflects light, right?

2913
02:45:21,200 --> 02:45:27,100
So, I want like an admit color, and I want a reflection color, right?

2914
02:45:27,200 --> 02:45:29,900
So this is like, how much?

2915
02:45:30,000 --> 02:45:31,200
Light it reflects.

2916
02:45:31,200 --> 02:45:33,700
This is how much light it emits, right?

2917
02:45:33,900 --> 02:45:35,800
And again, I'm not actually doing anything physically.

2918
02:45:35,800 --> 02:45:39,600
Corrector I'm not trying to do anything along those lines yet.

2919
02:45:39,800 --> 02:45:44,600
I'm just doing the basics for what to make this work at all right?

2920
02:45:46,200 --> 02:45:46,600
Okay.

2921
02:45:47,300 --> 02:45:51,100
So, in order to set an admit color, for each of these things and all

2922
02:45:51,100 --> 02:45:55,000
that stuff, I need to kind of make this a little bit more, I need to

2923
02:45:55,000 --> 02:45:59,100
admit color, reflect color, I don't want the well actually don't need

2924
02:45:59,100 --> 02:46:00,300
to set the reflect color for that one.

2925
02:46:00,900 --> 02:46:03,000
And I don't need something to mix colors for these.

2926
02:46:03,000 --> 02:46:04,100
So it's going to be more like this.

2927
02:46:04,500 --> 02:46:06,700
I want the sky to admit that color.

2928
02:46:06,900 --> 02:46:10,200
I want the other two to reflect these colors but not omit anything.

2929
02:46:10,600 --> 02:46:14,700
And so now I have like an admit color and a reflect color, right?

2930
02:46:17,000 --> 02:46:21,500
So, what I need to do is I then need to use those colors in some way

2931
02:46:21,500 --> 02:46:24,900
that actually makes some sense, right?

2932
02:46:25,100 --> 02:46:28,800
So when I cast my re out, I then have a path that I can use to

2933
02:46:28,800 --> 02:46:33,600
propagate light if actively through along the path, right?

2934
02:46:33,600 --> 02:46:34,900
I have some number of bounces.

2935
02:46:35,100 --> 02:46:37,200
So if, for example, I put this back up to eight.

2936
02:46:37,300 --> 02:46:41,200
I'm going to bounce this rate eight times when I don't hit a material

2937
02:46:41,200 --> 02:46:41,900
index at all.

2938
02:46:41,900 --> 02:46:45,000
So if I don't hit a material index here, then

2939
02:46:45,300 --> 02:46:48,900
I actually need to do is produce the final color at that point, right?

2940
02:46:48,900 --> 02:46:54,300
Because I know that I would have the that zero color incoming at that

2941
02:46:54,300 --> 02:46:57,800
point and I need to do something there, right?

2942
02:46:59,100 --> 02:47:03,000
Okay, so let's figure out how we would actually go about doing this.

2943
02:47:04,300 --> 02:47:07,300
We basically need our result to be an accumulator at this point.

2944
02:47:07,600 --> 02:47:09,800
So we don't want to initialize it to this color anymore.

2945
02:47:09,900 --> 02:47:13,500
What we want to do is set our result color up to be nothing, right to

2946
02:47:13,500 --> 02:47:14,200
be black.

2947
02:47:15,000 --> 02:47:15,400
Okay,

2948
02:47:17,500 --> 02:47:23,000
Now, what we want to do from there is say, well as we go through our

2949
02:47:23,000 --> 02:47:28,600
raise, we have some degree to which these colors, get Dominion sized,

2950
02:47:28,600 --> 02:47:28,800
right?

2951
02:47:28,800 --> 02:47:31,000
How they how the reflectance kind of goes.

2952
02:47:31,000 --> 02:47:34,100
Now, what we would want to do ideally and what we probably switch to

2953
02:47:34,100 --> 02:47:34,800
doing later.

2954
02:47:35,000 --> 02:47:39,000
When we want to be more fancy about this is we've got our Ray path

2955
02:47:39,000 --> 02:47:40,200
here, right?

2956
02:47:40,700 --> 02:47:44,800
And our Ray path is like the cameras, here, it hits a surface.

2957
02:47:44,800 --> 02:47:47,000
It bounces off cast somewhere.

2958
02:47:47,300 --> 02:47:50,100
Some of the surface that bounces off and off we go, right?

2959
02:47:51,500 --> 02:47:56,300
Now, the problem with this is, if you look at what happens here, we're

2960
02:47:56,300 --> 02:47:57,600
casting the raised in this order.

2961
02:47:57,600 --> 02:47:58,300
This is re 0.

2962
02:47:58,300 --> 02:47:58,900
This is very one.

2963
02:47:58,900 --> 02:47:59,900
This is Ray to or

2964
02:48:00,900 --> 02:48:04,500
If this is our thing that we hit our emitter like we hit the sky here

2965
02:48:04,500 --> 02:48:07,100
and this is like emitting light, right?

2966
02:48:07,300 --> 02:48:10,600
Then what we really want to do is take this emission value multiply it

2967
02:48:10,600 --> 02:48:12,600
by the coefficient of reflectance here.

2968
02:48:12,800 --> 02:48:16,600
Multiply it by the coefficient of reflectance here and so on, right?

2969
02:48:18,100 --> 02:48:19,700
But we're going in the reverse order.

2970
02:48:20,100 --> 02:48:26,400
So we need to do is save up, what we would have X as we go so that

2971
02:48:26,400 --> 02:48:30,000
when we get to an emitter we can actually track that, right?

2972
02:48:30,700 --> 02:48:35,900
So we effectively have an attenuation value here and that attenuation

2973
02:48:35,900 --> 02:48:39,400
value starts off at one because we have not attenuated the light at

2974
02:48:39,400 --> 02:48:39,700
all.

2975
02:48:39,900 --> 02:48:44,400
So when we initially cast The Ray, there's no light absorption at all.

2976
02:48:44,500 --> 02:48:47,800
We're going to see whatever we hit right there.

2977
02:48:47,900 --> 02:48:49,500
and if we hit a material,

2978
02:48:51,300 --> 02:48:51,900
Right?

2979
02:48:52,000 --> 02:48:54,300
When we hit a material, we need to do two things.

2980
02:48:54,500 --> 02:48:58,700
First of all, we need to see what that materials admittance is, right?

2981
02:48:58,800 --> 02:49:01,700
So I want to do is find my Mac here.

2982
02:49:01,800 --> 02:49:03,700
Find what my Matt actually is.

2983
02:49:06,300 --> 02:49:09,400
Let's do it like this and I'll just say World materials hit Matt

2984
02:49:09,400 --> 02:49:09,900
index.

2985
02:49:10,000 --> 02:49:10,900
So, what is the material?

2986
02:49:10,900 --> 02:49:11,300
I hit.

2987
02:49:11,300 --> 02:49:12,900
This is the material I hit.

2988
02:49:15,500 --> 02:49:19,200
And then what I want to do is say alright that material it has an

2989
02:49:19,200 --> 02:49:21,500
emission color and a reflectance color.

2990
02:49:22,200 --> 02:49:25,400
I want to take the reflectance color of this material and multiply my

2991
02:49:25,400 --> 02:49:27,200
attenuation by it, right?

2992
02:49:28,700 --> 02:49:32,700
So I basically want to like keep a running attenuation of how much the

2993
02:49:32,700 --> 02:49:35,100
light is an attenuated as I step out across the re.

2994
02:49:35,200 --> 02:49:35,500
Right?

2995
02:49:35,500 --> 02:49:37,900
So starts out at one no attenuation make a hit.

2996
02:49:38,000 --> 02:49:38,500
How much will that?

2997
02:49:38,500 --> 02:49:40,100
Attenuate it this much right?

2998
02:49:40,100 --> 02:49:40,900
And off I go.

2999
02:49:48,800 --> 02:49:50,700
We're going to have a cosine term in here but we'll talk about that in

3000
02:49:50,700 --> 02:49:51,100
a second.

3001
02:49:51,900 --> 02:49:54,300
So I'm going to not I'm not but the coast interning at open this would

3002
02:49:54,300 --> 02:49:58,500
be a to do not but we'll get that second.

3003
02:49:59,400 --> 02:50:03,100
Then the other thing I want to do is whatever the this if this service

3004
02:50:03,100 --> 02:50:07,000
is itself, an amateur, if this service provides light, then what I

3005
02:50:07,000 --> 02:50:11,500
want to do is I want to propagate that light back to the camera by

3006
02:50:11,500 --> 02:50:15,500
taking however much all the attenuation has been so far not including

3007
02:50:15,500 --> 02:50:18,100
this one so I'm gonna do it before I do the update of the

3008
02:50:18,200 --> 02:50:18,900
Attenuation.

3009
02:50:19,800 --> 02:50:22,600
And I want to take the emissions color of this surface and do the

3010
02:50:22,600 --> 02:50:25,700
hadamard between those to find out how much of this light will

3011
02:50:25,700 --> 02:50:27,200
propagate back to the camera.

3012
02:50:27,700 --> 02:50:29,500
And I'm going to add that into the result.

3013
02:50:29,700 --> 02:50:32,800
So that gives me for any emission that I find at the place.

3014
02:50:32,800 --> 02:50:36,600
I just hit whatever attenuation all along the race so far.

3015
02:50:36,600 --> 02:50:38,500
I got to put that in there, right?

3016
02:50:41,200 --> 02:50:45,600
Then I can go on to do my, you know, more and more and more, right?

3017
02:50:46,000 --> 02:50:49,200
And the same thing that happens here for hit.

3018
02:50:49,200 --> 02:50:51,500
Matt, next, this is going to have to happen.

3019
02:50:53,100 --> 02:50:54,500
For the final one as well.

3020
02:50:54,500 --> 02:50:58,800
Like so meaning, if we don't hit anything, we'd want to propagate back

3021
02:50:58,800 --> 02:51:00,000
the emission color of

3022
02:51:00,000 --> 02:51:02,300
The null material right?

3023
02:51:02,500 --> 02:51:06,600
When we're done okay and that's what we want to do.

3024
02:51:06,600 --> 02:51:10,400
That's the color value that we would produce on this re right coming

3025
02:51:10,400 --> 02:51:11,000
backwards.

3026
02:51:21,800 --> 02:51:23,400
I don't know why that got typed in there.

3027
02:51:25,100 --> 02:51:29,200
But so for the, when we go to cast the secondary Ray, we have the

3028
02:51:29,200 --> 02:51:31,400
normal right now, but that's not very useful to us.

3029
02:51:31,400 --> 02:51:33,900
If you think about it, the normal is not a particularly useful value

3030
02:51:34,500 --> 02:51:36,300
because that is not a direction to cast a ray in.

3031
02:51:36,300 --> 02:51:37,500
So we need to talk about that.

3032
02:51:37,500 --> 02:51:39,100
So we need to do a reflection here.

3033
02:51:44,500 --> 02:51:45,100
And there we go.

3034
02:51:45,200 --> 02:51:50,000
Okay, so let's go ahead and run this and we're going to get some

3035
02:51:50,000 --> 02:51:50,300
results.

3036
02:51:50,300 --> 02:51:52,500
We don't really want, but what do you do?

3037
02:51:52,900 --> 02:51:57,900
So here is our the result of our scene and so far.

3038
02:51:57,900 --> 02:51:59,300
Actually this isn't too bad right.

3039
02:51:59,300 --> 02:52:03,300
It kind of looks like it should look, we have a sky which is as bright

3040
02:52:03,300 --> 02:52:08,800
as it is right, we have a ground plane which is reflecting the sky and

3041
02:52:08,800 --> 02:52:13,300
to a certain extent, a level and we have a plane sphere which is

3042
02:52:13,600 --> 02:52:15,100
Acting the sky again.

3043
02:52:15,100 --> 02:52:17,200
Attenuated a certain level, right?

3044
02:52:18,900 --> 02:52:19,900
And that's not bad.

3045
02:52:19,900 --> 02:52:24,300
Actually that's that's starting to be pretty reasonable at some level,

3046
02:52:24,300 --> 02:52:24,600
right?

3047
02:52:24,600 --> 02:52:27,200
That's like okay, we're starting to bounce some light around.

3048
02:52:27,200 --> 02:52:28,400
Okay, what that's good.

3049
02:52:29,400 --> 02:52:32,200
But again now we have this problem of well.

3050
02:52:32,200 --> 02:52:34,500
Alright, so we're doing multiple bouts of our light so we hit

3051
02:52:34,500 --> 02:52:35,100
something we go.

3052
02:52:35,100 --> 02:52:37,200
When we found this guy, if you think that's what actually happened.

3053
02:52:37,200 --> 02:52:40,500
We, when we hit this plane, we bounced up and we found the sky, right?

3054
02:52:40,500 --> 02:52:41,700
Which is what we wanted to do.

3055
02:52:42,100 --> 02:52:42,800
So we're getting there.

3056
02:52:42,800 --> 02:52:45,000
Were getting sort of closer to a ray Tracer is actually producing

3057
02:52:45,000 --> 02:52:46,600
something useful, but we're not quite there yet.

3058
02:52:46,600 --> 02:52:48,300
We don't affection of a cosine and

3059
02:52:48,400 --> 02:52:51,300
Don't have one more thing we need, which is more than one re per

3060
02:52:51,300 --> 02:52:52,900
pixel, right?

3061
02:52:54,900 --> 02:52:57,700
And we'll talk about that now as we wrap this up.

3062
02:52:58,000 --> 02:53:01,500
So we're almost done actually with a reasonable rate racer, that just

3063
02:53:01,500 --> 02:53:04,800
doesn't have any physical light transport our materials, but that

3064
02:53:04,800 --> 02:53:06,600
actually sort of works, right?

3065
02:53:07,300 --> 02:53:10,500
This is why Racers are always such a good thing to write because they

3066
02:53:10,500 --> 02:53:14,400
produce interesting looking images that you can be kind of happy that

3067
02:53:14,400 --> 02:53:17,800
you got, but they don't take very long to write, right?

3068
02:53:17,800 --> 02:53:18,000
You can

3069
02:53:18,300 --> 02:53:22,200
Like I just, I didn't have that much stuff to write to actually make

3070
02:53:22,200 --> 02:53:24,800
them work, so that's why they're kind of a nice rewarding thing to do.

3071
02:53:25,800 --> 02:53:27,900
All right, so what we need to do now is we need to sort of extend this

3072
02:53:27,900 --> 02:53:31,000
little bit by, by making this reflectance, take some things into

3073
02:53:31,000 --> 02:53:33,500
account that we actually would care about, right?

3074
02:53:34,600 --> 02:53:40,700
Okay, so let's take, let's let's think about this for a second and and

3075
02:53:40,700 --> 02:53:45,200
give ourselves a little bit of a reflective function here.

3076
02:53:45,200 --> 02:53:47,000
And it's not going to be good for Flex Flex, not going to be

3077
02:53:47,000 --> 02:53:48,100
physically accurate.

3078
02:53:48,100 --> 02:53:50,600
We're not trying to do anything fancy here at all.

3079
02:53:51,100 --> 02:53:53,700
I just want to get a little bit more of a ray Tracer done.

3080
02:53:53,800 --> 02:53:57,000
So we can call it a day and say we were done, right?

3081
02:53:58,300 --> 02:53:59,900
okay, so let's suppose that with I

3082
02:54:00,000 --> 02:54:01,500
Surface, so here's the camera.

3083
02:54:02,700 --> 02:54:03,700
I'm looking at a surface.

3084
02:54:04,400 --> 02:54:07,400
I cast some Ray and I hit the surface, right.

3085
02:54:08,400 --> 02:54:09,700
I know the normal to the surface.

3086
02:54:10,300 --> 02:54:12,700
So what I could do is say, well, if this is a perfectly stuck as a

3087
02:54:12,700 --> 02:54:15,600
mirror, I know which way I would bounce out.

3088
02:54:15,800 --> 02:54:16,000
Right.

3089
02:54:16,000 --> 02:54:19,100
So perfectly specular surface bounces out in exactly the direction.

3090
02:54:19,100 --> 02:54:22,200
It came in right at comes in this direction at bounces out perfectly.

3091
02:54:23,700 --> 02:54:26,100
So if I'm at a glancing angle, it's a glancing angle and basically,

3092
02:54:26,100 --> 02:54:29,800
you know, the angle to the plane of the thing coming in is the same as

3093
02:54:29,800 --> 02:54:31,900
the angle going out, right?

3094
02:54:33,800 --> 02:54:35,500
That's a reflection and we know what it is.

3095
02:54:36,400 --> 02:54:40,200
However, when I'm looking for light sources, what I'm effectively

3096
02:54:40,200 --> 02:54:43,200
doing is I'm saying, well, I need to know what the in what the

3097
02:54:43,200 --> 02:54:46,700
lighting is for this surface, from all the light coming in that

3098
02:54:46,700 --> 02:54:49,300
bounces out in the direction of the camera and we've had multiple

3099
02:54:49,300 --> 02:54:51,200
streams on lighting a hammer here, go watch one of them if you don't

3100
02:54:51,200 --> 02:54:53,000
know how lighting Works, watch one of them.

3101
02:54:55,200 --> 02:54:56,900
So we could have two different kinds of services.

3102
02:54:57,100 --> 02:55:02,600
One is a very reflective surface that reflects light directly like a

3103
02:55:02,600 --> 02:55:03,100
mirror,

3104
02:55:04,200 --> 02:55:06,500
But then, we could go all the way to a service that was very diffused,

3105
02:55:06,500 --> 02:55:09,700
like chalky, that just takes all the incoming light and reflects it

3106
02:55:09,700 --> 02:55:10,300
evenly.

3107
02:55:11,800 --> 02:55:15,100
And so, what I need is, I need a value that tells me how I want to do

3108
02:55:15,100 --> 02:55:19,700
that, and if it's one of those chalky substance has, I want to look

3109
02:55:19,800 --> 02:55:23,000
randomly out in all directions of the hemisphere?

3110
02:55:23,400 --> 02:55:26,900
If it's one of those highly reflective surfaces I want to look very

3111
02:55:26,900 --> 02:55:29,700
carefully in One Direction, right?

3112
02:55:32,100 --> 02:55:34,400
And there's different ways we can do that but what I'm gonna do right

3113
02:55:34,400 --> 02:55:38,300
now is a very biased technique because, again, we haven't gotten the

3114
02:55:38,300 --> 02:55:38,500
point.

3115
02:55:38,500 --> 02:55:41,200
We're going to talk about like sampling and physical reflective

3116
02:55:41,200 --> 02:55:41,500
functions.

3117
02:55:41,500 --> 02:55:42,000
That's our thing.

3118
02:55:42,100 --> 02:55:45,200
So do a very biased technique and the bias technique is just I'm going

3119
02:55:45,200 --> 02:55:49,600
to take random points in the hemisphere shooting in the hemisphere,

3120
02:55:50,100 --> 02:55:54,000
and I'm going to collapse them down to the reflectance, the pure

3121
02:55:54,000 --> 02:55:58,900
reflection Vector based solely on a single parameter, right?

3122
02:55:59,000 --> 02:56:00,900
So this is not physically accurate.

3123
02:56:01,100 --> 02:56:01,400
Wait.

3124
02:56:01,400 --> 02:56:02,800
It's just going to give us an approximation.

3125
02:56:02,800 --> 02:56:06,800
We can use and then the next time we revisit our Ray Tracer, maybe the

3126
02:56:06,800 --> 02:56:12,300
thing that we'll do is we'll try to increase the quality of this

3127
02:56:12,300 --> 02:56:15,900
Legend transport, and that's when we would start to get into those

3128
02:56:15,900 --> 02:56:16,700
sorts of things.

3129
02:56:19,000 --> 02:56:20,700
So we're just going to call the specular right now.

3130
02:56:23,900 --> 02:56:24,900
Zero is pure.

3131
02:56:24,900 --> 02:56:29,100
Defuse one is pure speculation.

3132
02:56:36,500 --> 02:56:36,900
Right.

3133
02:56:37,300 --> 02:56:38,200
I'm talking mirror.

3134
02:56:38,200 --> 02:56:40,600
The team's they often use but chops and mirrors are not purely,

3135
02:56:40,600 --> 02:56:42,800
secular diffuse, they're just closer.

3136
02:56:43,100 --> 02:56:44,200
So it gives you some intuition

3137
02:56:46,200 --> 02:56:49,000
All right, so what I want to do here is say, alright, if I'm going to

3138
02:56:49,000 --> 02:56:51,800
reflect this Vector, I need two Reflections function.

3139
02:56:51,800 --> 02:56:54,900
I need to reflect it around the normal and we know how to do this,

3140
02:56:54,900 --> 02:56:55,100
right?

3141
02:56:55,100 --> 02:56:55,400
Folks.

3142
02:56:55,400 --> 02:56:56,900
We know how to do this.

3143
02:56:56,900 --> 02:56:58,400
We discussed this on handmade hero.

3144
02:56:58,500 --> 02:56:59,800
If we have a normal,

3145
02:57:00,000 --> 02:57:01,800
And we have a vector that's in coming.

3146
02:57:02,000 --> 02:57:04,300
So remember we had a re Direction, it was looking like this so the re

3147
02:57:04,300 --> 02:57:06,200
directions pointing that way, right?

3148
02:57:07,200 --> 02:57:09,600
So if we have a retrograde Direction pointing that way and we want the

3149
02:57:09,600 --> 02:57:13,200
raid to come out along that reflection, what do we need to do?

3150
02:57:13,300 --> 02:57:16,500
We did dot product it with the normal, right?

3151
02:57:16,600 --> 02:57:20,100
That's going to give us a negative in this direction and we need to,

3152
02:57:20,100 --> 02:57:25,100
then subtract that twice to bump this back up to this, right?

3153
02:57:26,500 --> 02:57:27,600
Very simple equation.

3154
02:57:28,400 --> 02:57:30,300
So what we have is we have our Ray Direction,

3155
02:57:31,800 --> 02:57:35,700
And we're just going to add that inner product of the ray Direction.

3156
02:57:35,800 --> 02:57:39,200
With the normal, we're going to add two of those in, right?

3157
02:57:39,200 --> 02:57:41,800
So we start with that redirection, we're pointing down this way.

3158
02:57:43,300 --> 02:57:45,700
Right now, we're going to add two of those, right?

3159
02:57:45,700 --> 02:57:48,700
And we're going to add them in the direction of the normal itself.

3160
02:57:50,700 --> 02:57:55,100
Again, taking an incoming Vector, we want to reflect it back up around

3161
02:57:55,100 --> 02:57:56,700
the plane, right?

3162
02:57:56,700 --> 02:57:59,200
So, whatever this direction is, that's pointing here, that's our

3163
02:57:59,200 --> 02:57:59,600
normal.

3164
02:57:59,600 --> 02:58:03,500
We want to go ahead and make sure that we take however, distance this

3165
02:58:03,500 --> 02:58:06,100
was here alone, that normal, and move it up twice to produce that

3166
02:58:06,100 --> 02:58:06,500
reflection.

3167
02:58:06,500 --> 02:58:11,000
So now we have comes in, comes out, so there's our a Direction, that's

3168
02:58:11,000 --> 02:58:11,900
reflected.

3169
02:58:13,700 --> 02:58:16,000
And well, I like I said, I wanted to have a coefficient here.

3170
02:58:16,600 --> 02:58:21,100
So what I want to do is I want to produce a V3, that's like a bounce,

3171
02:58:21,400 --> 02:58:22,500
like a pure bounce.

3172
02:58:24,500 --> 02:58:28,700
And then, what I want to do is I want to produce a random bounce which

3173
02:58:28,700 --> 02:58:31,900
would be, you know, not taking into account the incoming Direction,

3174
02:58:31,900 --> 02:58:33,100
just randomly bounces.

3175
02:58:33,700 --> 02:58:36,100
And I want to blend these two things together.

3176
02:58:36,300 --> 02:58:42,600
So then I want my Ray direction to be equal to my pure bounce, and my

3177
02:58:42,600 --> 02:58:43,600
random bounce.

3178
02:58:43,800 --> 02:58:46,400
I want to lurk between those two.

3179
02:58:46,400 --> 02:58:49,300
So I want to go from random bounce.

3180
02:58:49,900 --> 02:58:53,300
If the value is 0 for the materials specular,

3181
02:58:59,000 --> 02:59:03,500
I should say let's call this scatter because it's not a real value.

3182
02:59:04,200 --> 02:59:05,000
Let's go this cat.

3183
02:59:05,700 --> 02:59:09,700
So I want to take that scatter value and I want to alert between the

3184
02:59:09,700 --> 02:59:14,400
random and a pure bounce based on how much scattering there is right.

3185
02:59:15,400 --> 02:59:19,500
And what I'm going to do is to produce the random bouts here, I need

3186
02:59:19,500 --> 02:59:22,800
to just figure out something that's in that hemisphere right?

3187
02:59:23,300 --> 02:59:27,100
So what I'm going to do is I'm going to take that next normal.

3188
02:59:28,000 --> 02:59:28,300
Right.

3189
02:59:28,300 --> 02:59:29,100
And that is

3190
02:59:30,500 --> 02:59:32,400
That is the thing that's pointing upwards like this.

3191
02:59:32,700 --> 02:59:38,000
I know that if I take the next normal and I just add like a random set

3192
02:59:38,000 --> 02:59:40,200
of values to it, right?

3193
02:59:40,200 --> 02:59:44,200
I should be able to get something randomly permuted, and again,

3194
02:59:51,300 --> 02:59:55,000
Random bounce vectors are actually really hard to do, right?

3195
02:59:55,200 --> 02:59:56,000
Because

3196
03:00:00,300 --> 03:00:06,000
Evenly distributed points over a hemisphere that correspond to a

3197
03:00:06,000 --> 03:00:08,400
sampling pattern and are not biased.

3198
03:00:08,500 --> 03:00:12,900
And that and are produced quickly can actually be fairly challenging.

3199
03:00:12,900 --> 03:00:13,900
You'd be surprised.

3200
03:00:14,600 --> 03:00:19,400
There's a lot of people who've done various attempts to do that,

3201
03:00:19,400 --> 03:00:19,900
right?

3202
03:00:20,000 --> 03:00:23,600
And there's, you know, better and better ones, but it was not an

3203
03:00:23,600 --> 03:00:24,400
obvious thing, right?

3204
03:00:24,400 --> 03:00:26,400
It wasn't like one of those things computer graphs are just like, oh,

3205
03:00:26,400 --> 03:00:28,900
and then we just do this and it works and it's perfect.

3206
03:00:29,000 --> 03:00:29,500
It's so

3207
03:00:30,400 --> 03:00:35,600
This is something we would have to come back to later because we're

3208
03:00:35,600 --> 03:00:36,900
not gonna do some particular good right now.

3209
03:00:37,100 --> 03:00:42,300
So, to take that next normal, I'm just going to add a random bilateral

3210
03:00:42,300 --> 03:00:43,900
Vector to it and then normalize it.

3211
03:00:43,900 --> 03:00:45,300
So I'm just going to say normalize

3212
03:00:47,600 --> 03:00:48,900
Random bilateral Vector.

3213
03:00:49,400 --> 03:00:53,500
So that's just, you know again a vector we're going to need a random

3214
03:00:53,500 --> 03:00:54,300
series here.

3215
03:00:55,100 --> 03:00:58,900
And what we can do for right now is we have a we can just use R and

3216
03:00:59,200 --> 03:01:01,500
the C runtime Library function, it's awful.

3217
03:01:02,100 --> 03:01:05,700
So we'll want to put in a better random number generator at some point

3218
03:01:06,000 --> 03:01:09,700
as well, but right now, I just have a thing where I can say random

3219
03:01:09,700 --> 03:01:10,700
bilateral.

3220
03:01:15,200 --> 03:01:17,100
This is just a number between 0 and 1.

3221
03:01:17,600 --> 03:01:20,600
So do random bilateral three times and normalize that.

3222
03:01:22,800 --> 03:01:24,100
So here's our internal.

3223
03:01:24,700 --> 03:01:31,600
If we were to and of the lateral your to unilateral

3224
03:01:34,800 --> 03:01:38,400
And what these are going to do is just produce, random numbers will

3225
03:01:38,400 --> 03:01:40,100
use the C runtime libraries function.

3226
03:01:40,200 --> 03:01:41,000
Again it's awful.

3227
03:01:41,000 --> 03:01:42,500
So we will have to replace it.

3228
03:01:42,600 --> 03:01:46,300
This is nothing to do with the fact that we because remember this

3229
03:01:46,300 --> 03:01:48,100
program, we're using the steamer trunks, not like a maid here.

3230
03:01:48,100 --> 03:01:50,000
We try to avoid the C runtime Library.

3231
03:01:51,000 --> 03:01:52,200
I'm not trying to buy this here on time.

3232
03:01:52,400 --> 03:01:54,200
It just ran just he's awful.

3233
03:01:54,600 --> 03:01:56,300
So we will need to replace it in the future.

3234
03:02:04,100 --> 03:02:06,900
I so want me to do here is I'm going to say, all right, let's go ahead

3235
03:02:06,900 --> 03:02:08,500
and produce a result here.

3236
03:02:08,700 --> 03:02:13,900
That result is going to be the Rand function, mod or sorry, / Random

3237
03:02:13,900 --> 03:02:14,400
Acts.

3238
03:02:16,300 --> 03:02:17,800
Which is the maximum value can produce.

3239
03:02:17,800 --> 03:02:21,200
So this should give us a number between zero and one anytime we want

3240
03:02:21,200 --> 03:02:22,100
it, that's random.

3241
03:02:22,300 --> 03:02:26,200
And then for the bilateral version of that I can just produce a result

3242
03:02:26,200 --> 03:02:29,200
that is two times random unilateral

3243
03:02:31,300 --> 03:02:32,000
Minus one.

3244
03:02:35,300 --> 03:02:41,800
Right, and so now we have a way of randomly bouncing our stuff off.

3245
03:02:42,000 --> 03:02:45,400
It shouldn't again produce any different results because it should

3246
03:02:45,400 --> 03:02:48,300
still, hopefully most of the time, find the sky or whatever else it

3247
03:02:48,300 --> 03:02:49,400
needs to do, right?

3248
03:02:50,300 --> 03:02:53,100
And so we should be pretty good to go at this point.

3249
03:02:54,300 --> 03:02:58,900
So yeah, I mean, like I said, hopefully that's not working properly.

3250
03:02:58,900 --> 03:02:59,900
That's the new Ray.

3251
03:03:00,000 --> 03:03:09,800
And and yeah, like presumably I could I don't know if it ever really

3252
03:03:09,800 --> 03:03:11,000
shit down too much.

3253
03:03:11,000 --> 03:03:15,200
But yeah, anyway, so we should be using in a bunch of cases.

3254
03:03:15,200 --> 03:03:18,100
Pretty random reflection vectors here.

3255
03:03:19,900 --> 03:03:22,000
Random bounce.

3256
03:03:22,100 --> 03:03:24,300
Matt scatter, pure bounce.

3257
03:03:26,600 --> 03:03:27,400
Actually that's so.

3258
03:03:27,400 --> 03:03:28,800
You know what the normalized needs?

3259
03:03:28,800 --> 03:03:30,400
We need to normalize here as well.

3260
03:03:30,400 --> 03:03:33,100
We don't really need to normalize our Ray directions, but I'm doing it

3261
03:03:33,100 --> 03:03:33,500
anyway.

3262
03:03:36,200 --> 03:03:38,300
Okay, so I believe this is working.

3263
03:03:38,700 --> 03:03:39,800
Why do I believe it's working?

3264
03:03:40,000 --> 03:03:43,300
Well, I believe it's working because if you actually are working as a

3265
03:03:43,800 --> 03:03:47,900
the wrong term, I believe this might be working.

3266
03:03:48,400 --> 03:03:51,000
The reason I say that is because if we zoom in here what you can see

3267
03:03:51,000 --> 03:03:59,100
is that various places have black dots where they did not find it, Ray

3268
03:03:59,100 --> 03:04:01,300
intersection with anything, right?

3269
03:04:02,300 --> 03:04:04,800
And that would correspond to if it hit the sphere.

3270
03:04:04,800 --> 03:04:04,900
Now,

3271
03:04:05,200 --> 03:04:08,000
Reason, I don't quite think it's working is because we should have

3272
03:04:08,000 --> 03:04:13,200
seen some potential places where we hit the sphere and all things

3273
03:04:13,200 --> 03:04:15,000
should be black dots on the sphere as well.

3274
03:04:15,300 --> 03:04:17,500
And the fact that there's not is troubling to me.

3275
03:04:17,500 --> 03:04:19,500
So, I think we're not quite right yet.

3276
03:04:19,600 --> 03:04:21,900
We probably have to take a look at this and debug it a little bit.

3277
03:04:24,300 --> 03:04:26,000
So we just make sure I know what's going on here.

3278
03:04:26,200 --> 03:04:28,700
The pure about should be the ray direction that we cast.

3279
03:04:29,700 --> 03:04:32,700
It should be the inner product with the normal, obviously.

3280
03:04:32,800 --> 03:04:34,400
And that's that's yeah.

3281
03:04:34,400 --> 03:04:38,100
That's what we want, x ray Direction and

3282
03:04:40,300 --> 03:04:41,000
X.

3283
03:04:41,000 --> 03:04:44,300
Whatever that next thermal is that should correct us to putting out.

3284
03:04:45,700 --> 03:04:51,400
If I take this out and just do ray Direction, equals pure bounce.

3285
03:04:55,100 --> 03:04:56,600
I should get no black dots.

3286
03:05:01,500 --> 03:05:02,700
For the most part, right?

3287
03:05:05,300 --> 03:05:09,900
Although I should in theory, pure bounces right here, should hit the

3288
03:05:09,900 --> 03:05:10,600
sphere.

3289
03:05:11,800 --> 03:05:12,400
Right.

3290
03:05:12,600 --> 03:05:16,800
So, that does seem a little wrong because these should not be hitting

3291
03:05:17,300 --> 03:05:18,500
these should hit the sky.

3292
03:05:19,100 --> 03:05:20,700
So we still have a little bit more to do here.

3293
03:05:20,700 --> 03:05:22,800
So let's stick with pure bounce, temporarily

3294
03:05:26,200 --> 03:05:28,400
And and figure out what's going on wrong with that.

3295
03:05:29,100 --> 03:05:31,100
So let me just walk through what I did here.

3296
03:05:31,200 --> 03:05:34,200
When we hit the plane, we're going to set the normal to the plane and

3297
03:05:34,200 --> 03:05:35,200
that seems about, right?

3298
03:05:35,200 --> 03:05:39,600
And we're going to set the origin equal to ah there's our problem.

3299
03:05:42,400 --> 03:05:46,800
So we didn't start at the re origin when we walk to our new origin.

3300
03:05:46,900 --> 03:05:49,000
That's that's yeah, that's just wrong.

3301
03:05:49,800 --> 03:05:50,300
There we go.

3302
03:05:51,800 --> 03:05:53,200
So we're getting a little better here.

3303
03:05:58,600 --> 03:05:59,500
How do I zoom?

3304
03:06:00,200 --> 03:06:01,900
Why doesn't the mouse wheel work?

3305
03:06:02,600 --> 03:06:03,400
It's really weird.

3306
03:06:03,400 --> 03:06:06,300
The mouse wheel doesn't like work in this app but I don't know why.

3307
03:06:10,800 --> 03:06:14,700
So again not quite right because this is not exactly what I would have

3308
03:06:14,700 --> 03:06:16,200
expected to have happen, right?

3309
03:06:16,200 --> 03:06:18,400
This still doesn't look quite right to me.

3310
03:06:19,200 --> 03:06:23,000
I should be seeing some discoloration here, where the pure bounce

3311
03:06:23,000 --> 03:06:26,800
would have hit the sphere and I don't know why I'm getting these

3312
03:06:27,200 --> 03:06:29,400
little artifacts in here.

3313
03:06:30,000 --> 03:06:33,400
So again, still buggy, right still, not quite right.

3314
03:06:40,600 --> 03:06:44,300
Next normal, in either case, looks pretty good.

3315
03:06:49,200 --> 03:06:53,300
And when I do my hit Max index, I'm accumulating the attenuation thus

3316
03:06:53,300 --> 03:06:56,700
far along the ray times, the emission color coming from here seems

3317
03:06:56,700 --> 03:06:57,600
about right?

3318
03:06:57,700 --> 03:07:01,500
The attenuation is going to increase by however much the reflection is

3319
03:07:01,500 --> 03:07:02,100
happening here.

3320
03:07:02,100 --> 03:07:03,500
It's going to attenuate further.

3321
03:07:04,300 --> 03:07:06,400
I'm going to step to wherever the next origin.

3322
03:07:06,400 --> 03:07:11,000
Is we really could just keep the hit the best distance.

3323
03:07:11,000 --> 03:07:15,900
Like I could just say, let's let's forget the next origin thing for

3324
03:07:15,900 --> 03:07:18,300
now, just to simplify things and just say,

3325
03:07:18,500 --> 03:07:20,000
It's just the hit distance.

3326
03:07:28,800 --> 03:07:29,000
Right?

3327
03:07:29,000 --> 03:07:32,000
So we're just going to move along that right direction, right?

3328
03:07:32,700 --> 03:07:35,100
And then the redirection again is just going to be whatever the rate

3329
03:07:35,100 --> 03:07:40,100
of reaction was and it's oh there's the bug.

3330
03:07:41,200 --> 03:07:44,000
I said I subtract those values and I didn't subtract them.

3331
03:07:45,200 --> 03:07:45,400
Okay.

3332
03:07:45,400 --> 03:07:48,600
So they're so now I think we've got that to bugged or hopefully and

3333
03:07:48,600 --> 03:07:53,500
we'll see though that doesn't so we still we must still have a general

3334
03:07:53,500 --> 03:07:57,300
bug in here because that should have changed like the fact that pure

3335
03:07:57,300 --> 03:07:59,500
bounce being incorrect.

3336
03:07:59,500 --> 03:08:04,800
Here didn't make any difference in the image is not correct, right?

3337
03:08:04,800 --> 03:08:05,200
Ooh.

3338
03:08:07,400 --> 03:08:11,300
Didn't mean to leave that open so we have next origin.

3339
03:08:11,300 --> 03:08:12,900
Undeclared identifier, there we go.

3340
03:08:14,600 --> 03:08:15,700
It didn't actually compile.

3341
03:08:21,900 --> 03:08:24,200
So, this guy actually does have to compute that.

3342
03:08:27,700 --> 03:08:28,700
Hmm.

3343
03:08:28,800 --> 03:08:30,500
So is there an easier way to compute this?

3344
03:08:31,900 --> 03:08:32,900
Yeah, there probably is.

3345
03:08:32,900 --> 03:08:38,200
Actually that information that we need probably came in here so we

3346
03:08:38,200 --> 03:08:40,500
have sphere relative re origin.

3347
03:08:41,000 --> 03:08:45,000
So we know that we're really just saying

3348
03:08:46,200 --> 03:08:47,400
Well now, all right.

3349
03:08:47,400 --> 03:08:50,000
I'm not going to try and overcomplicate this but we've already done

3350
03:08:50,000 --> 03:08:50,600
the work here.

3351
03:08:50,600 --> 03:08:54,400
I believe to actually get what we want out of this so we could prep.

3352
03:08:54,400 --> 03:08:57,800
We I think we can reuse this information to get the normal out really

3353
03:08:57,800 --> 03:08:58,300
quickly.

3354
03:09:11,000 --> 03:09:12,300
So that's a separate issue.

3355
03:09:12,300 --> 03:09:14,200
But anyway, so we'll do this here.

3356
03:09:14,200 --> 03:09:23,800
So T times J Direction plus 3 Origin - sphere P, right?

3357
03:09:25,900 --> 03:09:28,600
What you can see here is this is just going to be the relative origin.

3358
03:09:29,600 --> 03:09:31,700
So this is going to be zero relative, radio origin.

3359
03:09:34,600 --> 03:09:38,000
I believe, because if you look at what this is, this is the new hip

3360
03:09:38,000 --> 03:09:38,800
point, right?

3361
03:09:38,900 --> 03:09:41,300
Is there a origin plus the redirection times T?

3362
03:09:42,000 --> 03:09:45,700
We're going to - the sphere P but Ray origin - fear p is already

3363
03:09:45,700 --> 03:09:48,200
computed as fear relative re origin.

3364
03:09:49,900 --> 03:09:53,500
Like so, so I believe that's the correct way to do that.

3365
03:09:54,800 --> 03:09:55,100
Okay.

3366
03:09:57,800 --> 03:09:59,700
All right, so let's take a look.

3367
03:09:59,700 --> 03:10:01,600
Here me.

3368
03:10:03,700 --> 03:10:04,300
Zoom in.

3369
03:10:05,500 --> 03:10:08,000
So, what we're seeing here is kind of a little bit odd.

3370
03:10:08,900 --> 03:10:12,800
We can see the bottom of the sphere, now, as the plane cuts it as if

3371
03:10:12,800 --> 03:10:15,700
the plane itself is transparent.

3372
03:10:15,800 --> 03:10:19,700
Now what that implies to me is that our Ray direction for some reason,

3373
03:10:19,700 --> 03:10:22,700
is not getting flipped properly because we're looking, we're

3374
03:10:22,700 --> 03:10:25,800
continuing down through the plane, which we shouldn't do.

3375
03:10:25,800 --> 03:10:30,000
We should be bouncing back up, but I don't actually know why we're

3376
03:10:30,000 --> 03:10:31,800
getting that artifact.

3377
03:10:32,700 --> 03:10:33,300
How we're actually

3378
03:10:33,500 --> 03:10:36,500
Lee doing that, right?

3379
03:10:37,200 --> 03:10:43,100
So the re Direction times the next normal should be a negative value.

3380
03:10:43,600 --> 03:10:49,100
And so, when we subtract it out, we should like that subtraction

3381
03:10:49,100 --> 03:10:51,600
should, you know, should work?

3382
03:10:52,000 --> 03:10:55,400
And I could normalize that just for good measure but that's not the

3383
03:10:55,400 --> 03:10:56,000
problem.

3384
03:10:57,800 --> 03:10:59,800
Something else weird is going on there, right?

3385
03:10:59,800 --> 03:11:00,700
But you can see what I mean.

3386
03:11:00,700 --> 03:11:05,200
We're getting, we're basically doing a hit and then punching through

3387
03:11:05,300 --> 03:11:09,600
to get to the next one as if we didn't change what the ray Direction.

3388
03:11:09,600 --> 03:11:11,500
Actually was right.

3389
03:11:13,900 --> 03:11:19,000
And I'm not sure why we're having that Oddity occur.

3390
03:11:20,600 --> 03:11:27,200
Something weird is happening there and I don't know what Inlet well

3391
03:11:27,200 --> 03:11:27,800
actually.

3392
03:11:30,000 --> 03:11:30,800
You know what?

3393
03:11:31,600 --> 03:11:33,200
Maybe that's just correct.

3394
03:11:34,200 --> 03:11:37,000
Maybe that's just the reflection of the sphere.

3395
03:11:39,300 --> 03:11:40,100
In the plane.

3396
03:11:46,300 --> 03:11:46,600
Right.

3397
03:11:46,600 --> 03:11:47,300
It could be.

3398
03:11:49,200 --> 03:11:51,300
So maybe I shouldn't call that a bug, just yet.

3399
03:11:52,400 --> 03:11:55,500
Because I don't actually know if it is, that could actually be

3400
03:11:55,500 --> 03:11:57,400
correct, shockingly enough.

3401
03:11:58,400 --> 03:11:59,800
All right, so we have a little more work to do.

3402
03:12:00,000 --> 03:12:03,600
Your let's let's push forward a little bit and I'm going to call it a

3403
03:12:03,600 --> 03:12:06,200
day pretty soon because this has been plenty of programming for a test

3404
03:12:06,200 --> 03:12:06,800
stream.

3405
03:12:09,400 --> 03:12:09,800
Here we go.

3406
03:12:09,800 --> 03:12:13,300
I'm going to put that random bounce back in here, right?

3407
03:12:17,700 --> 03:12:20,700
Okay, and this is actually looking good.

3408
03:12:20,800 --> 03:12:23,400
I know this is that's going to come as a shock because this doesn't

3409
03:12:23,400 --> 03:12:23,900
look good.

3410
03:12:24,200 --> 03:12:26,400
But is actually looking good, right?

3411
03:12:26,400 --> 03:12:30,000
But you can see is we've got some random noise in there now and it

3412
03:12:30,000 --> 03:12:32,700
looks like it's getting darker as it kind of gets to places that

3413
03:12:32,700 --> 03:12:35,000
should actually be darker because they'll hit each other and so on.

3414
03:12:35,900 --> 03:12:39,300
So I'm actually thinking that's pretty encouraging probably.

3415
03:12:39,300 --> 03:12:41,900
There's still some bugs in here but what I want to do now is the last

3416
03:12:41,900 --> 03:12:42,900
step of the process.

3417
03:12:44,300 --> 03:12:49,300
I just want to go in here and say, all right, let's take our

3418
03:12:51,300 --> 03:12:55,500
our casting and let's just do more than one sample per pixel.

3419
03:12:55,500 --> 03:12:58,200
So right now what we're doing is we're taking a color and we're just

3420
03:12:58,200 --> 03:12:59,300
doing one cast.

3421
03:12:59,500 --> 03:13:03,500
What I want to do here is I want to do a bunch of raycast, right?

3422
03:13:03,600 --> 03:13:10,300
I want to do a re-index equals 0 R and X is less than raise per pixel

3423
03:13:11,000 --> 03:13:13,400
re-index plus, right?

3424
03:13:15,200 --> 03:13:18,800
And I don't really want to do this exactly what I'm showing you here.

3425
03:13:20,800 --> 03:13:23,000
I want to do it a slightly different way later but you know at the

3426
03:13:23,000 --> 03:13:25,200
moment we're going to do it this way.

3427
03:13:25,900 --> 03:13:30,000
So what I want to do here is to find a raise for Pixel and let's just

3428
03:13:30,000 --> 03:13:35,600
say we cast, you know, 16 raise for Pixel, and I'm just going to go

3429
03:13:35,600 --> 03:13:39,000
through and I'm going to say, however many raise for Pixel, we have

3430
03:13:41,200 --> 03:13:44,400
How to make a contribution value, which is 1 over the Rays for Pixel,

3431
03:13:45,300 --> 03:13:45,800
right?

3432
03:13:50,000 --> 03:13:51,200
And there's some stuff we want to do here.

3433
03:13:51,200 --> 03:13:54,400
This is not the right way to sample this, but we're going to do what's

3434
03:13:54,400 --> 03:13:55,200
he say stuff later.

3435
03:13:55,400 --> 03:13:58,200
But we're going to take a 1 over the race for Pixel value now.

3436
03:13:58,200 --> 03:13:59,900
We're just going to say that that's the contribution.

3437
03:14:00,100 --> 03:14:04,600
So we're going to take the color as a sum of a series of Ray, casts

3438
03:14:05,500 --> 03:14:06,900
through the world, right?

3439
03:14:06,900 --> 03:14:09,300
And what this is going to do is going to make it take a lot longer for

3440
03:14:09,300 --> 03:14:10,100
us to do our image.

3441
03:14:10,100 --> 03:14:13,400
You can kind of see it's taking a long time now to do and we can speed

3442
03:14:13,400 --> 03:14:16,100
this up dramatically by compiling and release mode which I'll do in a

3443
03:14:16,100 --> 03:14:16,700
second here.

3444
03:14:17,400 --> 03:14:19,200
Now that we're not really stepping through it at the moment.

3445
03:14:21,300 --> 03:14:23,800
But this will basically just do a lot of recasting.

3446
03:14:24,300 --> 03:14:27,900
And then what you can do is you can see that when we take our average

3447
03:14:27,900 --> 03:14:30,800
there we start to get a better image, right?

3448
03:14:30,800 --> 03:14:36,600
This is starting to look more like a real Ray casted image, and, and

3449
03:14:36,600 --> 03:14:39,600
the like, there's a bunch of stuff we haven't done yet that we should

3450
03:14:39,600 --> 03:14:45,700
do, we don't have the cosine term in here, which we need to have in

3451
03:14:45,700 --> 03:14:49,100
order to get the attenuation properly accounted for

3452
03:14:49,300 --> 03:14:52,000
Or and I'm not going to be too specific about it here.

3453
03:14:56,700 --> 03:14:59,300
other than to say that because of the sort of angular

3454
03:15:00,000 --> 03:15:03,700
Happens due to raise, we've talked about this before, handmade here is

3455
03:15:03,700 --> 03:15:04,400
lighting stuff.

3456
03:15:05,100 --> 03:15:09,400
The aperture size here, right is different than the aperture size

3457
03:15:09,400 --> 03:15:10,100
here.

3458
03:15:10,200 --> 03:15:13,300
So, as the red gets more angled, it attenuates more based on the

3459
03:15:13,300 --> 03:15:14,400
cosine of the angle.

3460
03:15:14,900 --> 03:15:18,600
What we want to do here is say we've got an attenuation amount that

3461
03:15:18,600 --> 03:15:23,200
attenuation amount is going to be the reflectance color attenuated by,

3462
03:15:23,700 --> 03:15:28,800
right that redirection next normal cosine function.

3463
03:15:29,100 --> 03:15:29,900
So basically,

3464
03:15:30,000 --> 03:15:33,200
Lee, when the ray Direction, the next normal are directly in line with

3465
03:15:33,200 --> 03:15:33,800
each other.

3466
03:15:36,100 --> 03:15:38,400
And again, the redirection has to be kind of flipped so that they're

3467
03:15:39,000 --> 03:15:39,600
looking upwards.

3468
03:15:40,100 --> 03:15:41,100
I want this.

3469
03:15:43,600 --> 03:15:47,800
Cosine attenuation to come in here like so.

3470
03:15:48,200 --> 03:15:51,500
And if the cosine attenuation is less than 0.

3471
03:15:51,800 --> 03:15:54,100
I want the cosine tation to be 0, right?

3472
03:15:54,300 --> 03:15:57,600
And then I'm going to attenuate that reflectance in there.

3473
03:15:57,600 --> 03:15:59,200
Oh, you know what?

3474
03:15:59,200 --> 03:16:00,100
Please stop.

3475
03:16:00,900 --> 03:16:05,400
I want to I want to have a more sped-up version than that, please.

3476
03:16:08,600 --> 03:16:10,000
So I'm going to go to the build up at

3477
03:16:13,600 --> 03:16:14,300
There we go.

3478
03:16:14,800 --> 03:16:16,200
And so, here's our raycast.

3479
03:16:17,200 --> 03:16:19,500
And now we've got well actually that

3480
03:16:22,200 --> 03:16:24,200
Seems a bit harsh.

3481
03:16:27,100 --> 03:16:28,700
Let's take a look at that term when we're time.

3482
03:16:35,600 --> 03:16:41,700
so, the cosine attenuation is the inner product of the ray Direction

3483
03:16:41,700 --> 03:16:43,800
and the next normal

3484
03:16:45,400 --> 03:16:47,500
I feel like that's correct, though.

3485
03:16:51,000 --> 03:16:53,000
Maybe I shouldn't get into this yet because we have so many other

3486
03:16:53,000 --> 03:16:54,500
terms that could be wrong here.

3487
03:16:57,200 --> 03:16:58,000
Yeah, I do.

3488
03:16:58,000 --> 03:17:01,500
I probably shouldn't be throwing in one physically accurate thing

3489
03:17:01,500 --> 03:17:03,800
without the rest of them, because then you're going to end up in a

3490
03:17:03,800 --> 03:17:05,200
situation where, you know,

3491
03:17:07,400 --> 03:17:08,000
Get results.

3492
03:17:08,000 --> 03:17:09,300
You definitely don't want.

3493
03:17:12,900 --> 03:17:14,000
But I suppose that's a different story.

3494
03:17:14,000 --> 03:17:15,600
Let me kind of get that again.

3495
03:17:22,200 --> 03:17:22,600
Oops.

3496
03:17:32,200 --> 03:17:34,400
I mean it does look sort of correct.

3497
03:17:39,400 --> 03:17:40,200
To be honest.

3498
03:17:48,000 --> 03:17:51,800
I just don't, I feels a little too steep for me, and so I feel like

3499
03:17:51,800 --> 03:17:55,400
it's probably because of the materials, not being that way.

3500
03:17:55,700 --> 03:17:57,800
So I might kill this for now.

3501
03:18:03,100 --> 03:18:05,400
And we'll deal with that on another stream when we actually have some

3502
03:18:05,400 --> 03:18:06,900
time to look at the rest of them.

3503
03:18:09,200 --> 03:18:16,400
Alright, so now we have a, you know, sort of semi, you know, a pseudo

3504
03:18:16,400 --> 03:18:17,000
Ray Tracer.

3505
03:18:17,300 --> 03:18:19,900
Let's just try putting in a couple other things here.

3506
03:18:22,100 --> 03:18:24,000
Just really quickly, right?

3507
03:18:24,800 --> 03:18:30,200
So what I want to do now is I want to say, all right, I'm going to add

3508
03:18:30,400 --> 03:18:31,400
another sphere.

3509
03:18:31,500 --> 03:18:35,200
So I'm going to say that I've got two spheres.

3510
03:18:50,800 --> 03:18:54,300
And I'm going to put the other sphere like I don't know, off to the

3511
03:18:54,300 --> 03:18:54,700
side.

3512
03:18:56,600 --> 03:18:57,000
Right?

3513
03:18:57,700 --> 03:18:59,600
And maybe I'm going to I'll move it like

3514
03:19:01,300 --> 03:19:03,200
Closer, a little closer to us as well.

3515
03:19:07,900 --> 03:19:12,200
Like so and then maybe I'll put another sphere up in the air

3516
03:19:12,200 --> 03:19:12,800
somewhere.

3517
03:19:26,000 --> 03:19:29,000
And, you know, we should use a rake out for this.

3518
03:19:36,100 --> 03:19:39,200
Like so, where we just compute the size of the array, based on what we

3519
03:19:39,200 --> 03:19:40,000
defined it as.

3520
03:19:40,000 --> 03:19:43,000
So, that way I can just say, like, hey playing count is the array kind

3521
03:19:43,000 --> 03:19:43,800
of planes.

3522
03:19:44,800 --> 03:19:49,100
It's your account is already kind of spheres material, count array

3523
03:19:49,100 --> 03:19:51,600
count of materials.

3524
03:19:52,400 --> 03:19:54,200
And then, that way, when we're in here, right?

3525
03:19:54,400 --> 03:19:59,000
I can just go like, okay, you know, we've got this many planes.

3526
03:20:06,400 --> 03:20:09,100
This miniseries whatever and it's like no big deal.

3527
03:20:09,800 --> 03:20:12,600
Okay, so what I want to do is I'm going to set these to some different

3528
03:20:12,600 --> 03:20:13,300
materials here.

3529
03:20:13,300 --> 03:20:15,600
I'm just going to make some more materials for us.

3530
03:20:20,500 --> 03:20:23,400
And so, what I'm going to do is going to make one of these like, you

3531
03:20:23,400 --> 03:20:26,500
know, a sort of a cherry red sphere.

3532
03:20:27,300 --> 03:20:29,400
And I make one of these like,

3533
03:20:31,100 --> 03:20:34,000
A sort of mirrored, green ball or something.

3534
03:20:40,700 --> 03:20:45,200
And so what I'm going to do is these materials now have you know this

3535
03:20:45,200 --> 03:20:48,700
extra parameter here, that's called scatter.

3536
03:20:49,100 --> 03:20:52,800
And what I'm going to do is I'm going to take that scatter scatter was

3537
03:20:52,800 --> 03:20:56,000
a it's like non scatter, right?

3538
03:20:56,000 --> 03:20:57,600
Like it's really non-standard.

3539
03:20:57,600 --> 03:20:58,900
But anyway, I want to make

3540
03:21:00,000 --> 03:21:02,900
It's one that's in, that's oops.

3541
03:21:09,500 --> 03:21:10,200
So, here we go.

3542
03:21:12,700 --> 03:21:14,800
What you can see now is our green ball, right?

3543
03:21:14,800 --> 03:21:21,000
That's up there is, I mean, this is like I said, this is the really

3544
03:21:21,000 --> 03:21:23,700
cool part about Racers is that, you know, you've seen, I've done

3545
03:21:23,700 --> 03:21:24,700
almost nothing, right?

3546
03:21:24,700 --> 03:21:26,000
It was like a few hours of programming.

3547
03:21:26,000 --> 03:21:28,800
I wrote everything more or less from scratch, right?

3548
03:21:28,800 --> 03:21:31,700
I've bit my up writer, the braised stuff, whatever.

3549
03:21:32,000 --> 03:21:35,300
We copied some stuff from the from the math library is about all.

3550
03:21:35,300 --> 03:21:35,600
We did.

3551
03:21:35,600 --> 03:21:38,700
But you know, how long it would have those few things have taken a

3552
03:21:38,700 --> 03:21:41,200
written, so it's very little code in there.

3553
03:21:42,000 --> 03:21:44,500
You already get something that does some kind of interesting stuff.

3554
03:21:44,500 --> 03:21:50,800
Like here is a reflection thing and whatever you know and and you can

3555
03:21:50,800 --> 03:21:53,700
even see it's not reflecting this because it doesn't reflect red light

3556
03:21:54,500 --> 03:21:56,200
very much, right?

3557
03:21:58,500 --> 03:22:02,400
And so since this knocks out all green light, it shows up black in

3558
03:22:02,400 --> 03:22:05,500
here just, you know, it's just interesting, right?

3559
03:22:05,900 --> 03:22:09,300
And furthermore, we can do kind of testing stuff like we can even even

3560
03:22:09,300 --> 03:22:13,300
with just such a dumb program that doesn't have any like we're not

3561
03:22:13,300 --> 03:22:14,600
really doing anything physically correct.

3562
03:22:14,600 --> 03:22:15,100
Yet.

3563
03:22:16,400 --> 03:22:19,000
We can even go in there and just say, oh, you know what?

3564
03:22:19,000 --> 03:22:22,300
Let's make it only partially reflective, right?

3565
03:22:22,500 --> 03:22:25,300
Which is kind of wild but we can do that, right?

3566
03:22:25,300 --> 03:22:28,200
We can have a sort of more complicated material and you see

3567
03:22:28,400 --> 03:22:29,600
This gets kind of fuzzy.

3568
03:22:31,000 --> 03:22:31,400
Right.

3569
03:22:34,700 --> 03:22:35,800
So that's pretty cool.

3570
03:22:35,800 --> 03:22:39,600
And so, the only other thing that I'd like to do here is right now,

3571
03:22:39,600 --> 03:22:40,700
we're running out these colors.

3572
03:22:40,700 --> 03:22:45,400
We're not handling the srgb translation, and it would be nice to be

3573
03:22:45,400 --> 03:22:46,200
able to do that.

3574
03:22:47,000 --> 03:22:50,600
So, what I would like is I'd like to be able to do a linear one to

3575
03:22:50,600 --> 03:22:54,500
srgb 555, just by taking like a square root in here or whatever, just

3576
03:22:54,500 --> 03:22:55,100
a quick,

3577
03:22:57,400 --> 03:23:01,600
One of these guys that can do the, the srgb translation.

3578
03:23:08,700 --> 03:23:10,800
so that when we go to pack this color,

3579
03:23:16,000 --> 03:23:21,500
instead of maybe doing it this way, I'm going to actually use the

3580
03:23:21,500 --> 03:23:25,400
linear 1s or to be 255, so that it'll actually encode it a little more

3581
03:23:25,400 --> 03:23:26,100
correctly here.

3582
03:23:27,200 --> 03:23:30,400
So let me actually do it this way.

3583
03:23:34,100 --> 03:23:37,300
So in here, I'm just going to do a V4 of the color.

3584
03:23:38,700 --> 03:23:39,600
And 55.

3585
03:23:41,900 --> 03:23:45,200
So this we will gamma correct just to make sure image is right and you

3586
03:23:45,200 --> 03:23:48,000
can see that's a lot different looking when you gamma correct it.

3587
03:23:48,200 --> 03:23:52,600
So when you go from linear light it's just going to be very dim and

3588
03:23:52,600 --> 03:23:53,100
wrong.

3589
03:23:53,800 --> 03:23:58,100
If you don't gamma correct now, that's not the correct gamma.

3590
03:24:00,000 --> 03:24:04,700
Nice to have the real gamma function in here and so I don't know, like

3591
03:24:05,000 --> 03:24:07,700
srgb function.

3592
03:24:08,300 --> 03:24:10,900
What is the actual srgb equation?

3593
03:24:26,100 --> 03:24:28,400
Actually want it in this quite a detailed terms.

3594
03:24:28,400 --> 03:24:30,200
I just want to know what the actual

3595
03:24:31,900 --> 03:24:33,100
Value is here.

3596
03:24:46,400 --> 03:24:48,100
I don't want this transformation.

3597
03:24:48,100 --> 03:24:49,200
I just want the

3598
03:24:56,900 --> 03:24:58,300
This is all I really wanted.

3599
03:25:03,600 --> 03:25:05,000
So, here's srgb to linear.

3600
03:25:05,000 --> 03:25:06,000
We want the opposite.

3601
03:25:06,000 --> 03:25:08,300
So we want this, right?

3602
03:25:09,300 --> 03:25:10,100
This is the equation.

3603
03:25:10,100 --> 03:25:14,200
I actually was looking for and so, I just want this because I want

3604
03:25:14,200 --> 03:25:15,500
something a little bit better.

3605
03:25:17,500 --> 03:25:19,000
That's some crazy aunts.

3606
03:25:19,000 --> 03:25:20,300
They're all right.

3607
03:25:20,300 --> 03:25:24,700
So 0.003, 1308.

3608
03:25:27,500 --> 03:25:29,700
And 12.9 too.

3609
03:25:33,600 --> 03:25:37,600
So we have a conditional here so we you know let me let me make

3610
03:25:37,600 --> 03:25:40,100
something that transfers a single component.

3611
03:25:41,600 --> 03:25:44,400
So let me let me make something here which can do

3612
03:25:47,300 --> 03:25:49,800
linear to srgb.

3613
03:25:53,800 --> 03:25:55,600
This will be exact.

3614
03:25:57,900 --> 03:26:00,000
This is the SS RGB value.

3615
03:26:00,000 --> 03:26:00,800
Here's the linear.

3616
03:26:00,800 --> 03:26:01,000
Oops.

3617
03:26:01,000 --> 03:26:01,200
No.

3618
03:26:01,200 --> 03:26:02,300
So this is the linear value.

3619
03:26:02,500 --> 03:26:03,900
I'm gonna produce the S value.

3620
03:26:06,700 --> 03:26:10,200
and so, what I have to do here is I have to say, okay, if the incoming

3621
03:26:10,200 --> 03:26:11,300
linear value

3622
03:26:14,200 --> 03:26:16,900
is less than or equal to

3623
03:26:18,700 --> 03:26:20,100
this magic constant.

3624
03:26:21,800 --> 03:26:22,300
Right.

3625
03:26:23,000 --> 03:26:24,400
Then I need to set it.

3626
03:26:25,400 --> 03:26:29,700
Two s equals L times 12 .92.

3627
03:26:33,200 --> 03:26:34,300
And otherwise.

3628
03:26:36,100 --> 03:26:40,300
I just do this power operation here.

3629
03:26:41,200 --> 03:26:46,200
So I do 1.0 I5 f

3630
03:26:49,200 --> 03:26:56,300
times the power L 2, 1 point 0, f /, 2.4 f.

3631
03:26:57,500 --> 03:26:58,100
Right.

3632
03:26:58,500 --> 03:26:58,900
-

3633
03:27:00,600 --> 03:27:01,600
5f.

3634
03:27:03,100 --> 03:27:06,000
Like so, so that's the equation.

3635
03:27:06,000 --> 03:27:06,900
We're going to use there.

3636
03:27:07,400 --> 03:27:10,500
And I'd also like to clamp this, so I'd like to do something where

3637
03:27:10,500 --> 03:27:15,700
it's like, okay, if L is less than 0 L equals 0.

3638
03:27:18,600 --> 03:27:24,200
If L is greater than 1.0 l equals 1, point 0 and then we produce RS

3639
03:27:24,200 --> 03:27:24,700
value.

3640
03:27:26,700 --> 03:27:27,100
Right.

3641
03:27:30,800 --> 03:27:32,400
And maybe I'll write this like this.

3642
03:27:37,300 --> 03:27:37,700
There we go.

3643
03:27:39,900 --> 03:27:41,400
So, there's our exact linear.

3644
03:27:44,600 --> 03:27:45,500
To srgb.

3645
03:27:46,500 --> 03:27:49,500
And so, then when I can do, is say, alright, our bitmap color value.

3646
03:27:54,300 --> 03:27:56,300
Is going to be exact linear to srgb.

3647
03:28:09,600 --> 03:28:13,900
I of each of the input color values, are G.

3648
03:28:14,800 --> 03:28:15,200
Be

3649
03:28:17,700 --> 03:28:20,200
Oops, we got a bugbear.

3650
03:28:24,500 --> 03:28:25,700
Missing semicolon.

3651
03:28:26,300 --> 03:28:28,500
Confusion 2oo, sorry, power.

3652
03:28:33,200 --> 03:28:35,400
Let's just put that in here with a square root.

3653
03:28:55,100 --> 03:28:58,000
So off we go with our recasting this in theory.

3654
03:28:58,000 --> 03:29:00,700
Should be the correct srgb image.

3655
03:29:03,300 --> 03:29:05,600
We have done zero testing at this point.

3656
03:29:05,600 --> 03:29:12,000
So we really just don't know if it is or isn't and you know.

3657
03:29:12,300 --> 03:29:17,500
So I don't pretend that that's correct.

3658
03:29:17,600 --> 03:29:21,700
We could have lots of bugs in here but it's a good first start.

3659
03:29:21,700 --> 03:29:25,200
And the next step would be to go through and start verifying color

3660
03:29:25,200 --> 03:29:28,200
transport and putting in real color transport equations, verify that

3661
03:29:28,200 --> 03:29:28,400
are

3662
03:29:29,400 --> 03:29:31,700
Srgb is right and that bitmap is correctly.

3663
03:29:31,700 --> 03:29:32,400
Encoding it.

3664
03:29:32,400 --> 03:29:35,200
I don't know if we have to set flags that bitmap to tell it.

3665
03:29:35,400 --> 03:29:39,900
That's srgb properly blah blah blah blah blah blah but we're

3666
03:29:39,900 --> 03:29:41,300
relatively good there.

3667
03:29:41,600 --> 03:29:44,000
As far as you know, as things go.

3668
03:29:45,200 --> 03:29:48,100
Let me also add some other spheres here.

3669
03:29:50,900 --> 03:29:54,300
Let's go and add a sphere with material index for here.

3670
03:29:55,800 --> 03:29:58,500
I wonder if I should just bake the materials directly into the things.

3671
03:29:58,500 --> 03:29:59,900
I probably should have, I don't know.

3672
03:30:00,000 --> 03:30:02,200
I do that indirect reference, it's just going to make things slower.

3673
03:30:02,200 --> 03:30:03,000
It's just kind of dumb.

3674
03:30:07,000 --> 03:30:09,100
They probably should just include the material in them.

3675
03:30:10,000 --> 03:30:10,700
I'm saying to you.

3676
03:30:21,100 --> 03:30:26,600
so this will be a more reflective when it's well, we'll put this one

3677
03:30:26,600 --> 03:30:27,200
at like,

3678
03:30:37,500 --> 03:30:38,900
So there we go, right?

3679
03:30:39,000 --> 03:30:39,400
Like

3680
03:30:41,600 --> 03:30:42,700
That's that's the basics.

3681
03:30:43,100 --> 03:30:50,000
Now like I said we're missing our cosine attenuation term in here, so

3682
03:30:50,400 --> 03:30:55,300
things don't look right at even not even really close to correct and

3683
03:30:56,400 --> 03:30:59,200
and because we don't have like a real reflectance function, either on

3684
03:30:59,200 --> 03:31:01,700
their there's problems with that.

3685
03:31:02,400 --> 03:31:09,200
So we have a lot of issues with respect to that reflection.

3686
03:31:10,000 --> 03:31:10,800
and,

3687
03:31:13,900 --> 03:31:18,100
Yeah, and so this is really the next thing that would have to get done

3688
03:31:18,100 --> 03:31:18,800
properly.

3689
03:31:20,700 --> 03:31:25,400
Where the cosine attenuation is actually in there, it might be better

3690
03:31:25,400 --> 03:31:29,800
now that we're in linear light space properly, but it's still just

3691
03:31:29,800 --> 03:31:33,300
looks overbearing to me.

3692
03:31:34,100 --> 03:31:37,800
Like, I've messed something else up but I'm just not sure.

3693
03:31:39,200 --> 03:31:41,000
What exactly that was that?

3694
03:31:41,000 --> 03:31:42,500
I messed up, right?

3695
03:31:42,900 --> 03:31:47,700
But it does look messed up for lack of a better term.

3696
03:31:47,700 --> 03:31:52,900
It, the fall-off is too harsh and I'm not sure exactly what it is.

3697
03:31:53,400 --> 03:32:00,300
So when we go through here and actually, like are careful about what

3698
03:32:00,300 --> 03:32:04,800
we're doing in terms of how the razor attenuated and how we actually

3699
03:32:04,800 --> 03:32:08,400
perform the reflection and scattering and all those other.

3700
03:32:08,600 --> 03:32:16,000
It's a good things that we'll probably isolate why we're getting that,

3701
03:32:16,800 --> 03:32:21,300
you know what looks like a to Harsha and attenuation coming off there.

3702
03:32:22,800 --> 03:32:24,600
I also don't really know.

3703
03:32:25,300 --> 03:32:26,700
What did I set the light too?

3704
03:32:35,900 --> 03:32:37,300
yeah, so that light

3705
03:32:38,800 --> 03:32:39,200
what?

3706
03:32:39,300 --> 03:32:40,700
Let's try one of the thing.

3707
03:32:41,000 --> 03:32:43,900
I'm going to pick one of our spheres here.

3708
03:32:43,900 --> 03:32:44,900
The red sphere.

3709
03:32:45,100 --> 03:32:47,200
I'm going to actually make that in a minute color.

3710
03:32:49,900 --> 03:32:51,800
Plus we can have a light caster.

3711
03:32:54,300 --> 03:32:59,500
and just so we can see if that's working properly and, you know, it

3712
03:32:59,500 --> 03:32:59,800
doesn't

3713
03:33:00,100 --> 03:33:01,500
Look like it to me.

3714
03:33:08,200 --> 03:33:11,800
Probably because I think in Mission at that scale, probably because

3715
03:33:11,800 --> 03:33:14,000
we're again, we're not really.

3716
03:33:16,500 --> 03:33:17,600
Physically accurate in here.

3717
03:33:17,600 --> 03:33:20,200
Emitters need to be much brighter than diffusers.

3718
03:33:21,600 --> 03:33:27,300
And so now you can see that that light is actually starting to get to

3719
03:33:27,300 --> 03:33:30,400
provide some, some actual value here, right?

3720
03:33:36,500 --> 03:33:37,100
There you go.

3721
03:33:37,800 --> 03:33:39,900
So at least the emission is working properly.

3722
03:33:39,900 --> 03:33:40,500
It just

3723
03:33:42,500 --> 03:33:46,100
You know, because nothing is a physically accurate value at this

3724
03:33:46,100 --> 03:33:47,200
point, it's a little iffy.

3725
03:33:48,400 --> 03:33:50,900
So let's wrap up again.

3726
03:33:50,900 --> 03:33:52,500
We have a ton of work to do here.

3727
03:33:54,300 --> 03:33:54,600
What's up?

3728
03:33:54,600 --> 03:33:56,000
Put a note of the top so people know.

3729
03:34:24,200 --> 03:34:28,600
So anyway in the ray Tracer here you know, off we go.

3730
03:34:29,500 --> 03:34:32,100
The only thing that I figure we should throw in just at the last

3731
03:34:32,100 --> 03:34:32,600
minute.

3732
03:34:32,600 --> 03:34:34,500
Is this Ray origin?

3733
03:34:34,500 --> 03:34:35,600
Ray Direction stuff.

3734
03:34:35,700 --> 03:34:37,000
I'm going to compute it every time.

3735
03:34:42,600 --> 03:34:45,600
Like this and you might be like, well, why are you do that, right?

3736
03:34:45,600 --> 03:34:48,100
Because, you know, if I run it now, it's just I'm just recalculating

3737
03:34:48,100 --> 03:34:50,000
the same value multiple times for no reason.

3738
03:34:50,700 --> 03:34:54,200
And the reason is because, well, it took, if we were to actually do

3739
03:34:54,200 --> 03:34:58,400
some sub-pixel sampling in there, we could get anti-aliasing for free,

3740
03:34:58,900 --> 03:34:59,100
right?

3741
03:34:59,100 --> 03:35:04,400
I mean, if you look at it right now, we're casting these Ray's out.

3742
03:35:04,400 --> 03:35:04,800
Oops.

3743
03:35:05,000 --> 03:35:06,100
Didn't mean to do that.

3744
03:35:12,600 --> 03:35:13,100
Here we go.

3745
03:35:14,300 --> 03:35:17,200
So if you look at it right now, we're casting all these Ray's out.

3746
03:35:17,200 --> 03:35:21,000
And so that gives us a better like these colors get smoother.

3747
03:35:21,000 --> 03:35:26,800
As we increase the sampling rate there but all of these don't improve,

3748
03:35:26,900 --> 03:35:27,400
right?

3749
03:35:27,400 --> 03:35:31,700
So the colors we get less noise in here, they're still noise, but it's

3750
03:35:31,700 --> 03:35:32,800
less than it was, right?

3751
03:35:32,800 --> 03:35:37,000
As we increase the ray count but we don't get any better

3752
03:35:38,100 --> 03:35:42,300
anti-aliasing, but what we can do is just Jitter are starting.

3753
03:35:42,400 --> 03:35:42,900
Samples.

3754
03:35:42,900 --> 03:35:46,400
And then we would get that Ray tracing that that extra amount, right?

3755
03:35:47,200 --> 03:35:50,800
So if I were to take, for example, this right here,

3756
03:35:53,700 --> 03:35:59,700
And just Jitter it by half a pixel in either direction for X and Y.

3757
03:35:59,700 --> 03:35:59,800
We

3758
03:36:00,000 --> 03:36:02,400
Some rate, we get some anti aliasing for free.

3759
03:36:03,000 --> 03:36:06,200
I mean, it's not free but it's like, you know, it puts it all in the

3760
03:36:06,200 --> 03:36:07,300
same pipeline, right?

3761
03:36:08,300 --> 03:36:14,100
So if your I'd just go like, okay, let's let's take our

3762
03:36:27,100 --> 03:36:29,300
Let's take our values here and say, well, okay.

3763
03:36:29,300 --> 03:36:33,600
I want my film X to be a, I'm sorry.

3764
03:36:33,600 --> 03:36:36,000
I want my office to be a land random bilateral?

3765
03:36:36,700 --> 03:36:39,300
Right offset.

3766
03:36:43,100 --> 03:36:44,800
From where it would be.

3767
03:36:45,000 --> 03:36:48,500
But then I don't want it to quite be a full 0 to 1 negative 1 to 1,

3768
03:36:48,500 --> 03:36:49,600
because that would be way too much red.

3769
03:36:49,600 --> 03:36:54,400
I want to be a pixel in size so I want to multiply it by 1 pixel like

3770
03:36:54,700 --> 03:36:59,800
picks something like this.

3771
03:37:01,200 --> 03:37:05,100
So we can just say, okay one pixel is going to be 1.0 over the image

3772
03:37:05,100 --> 03:37:06,300
height, right?

3773
03:37:11,400 --> 03:37:15,000
And with like so and I want these to be again half.

3774
03:37:15,900 --> 03:37:19,300
So what I'm going to do is actually do it like that, right?

3775
03:37:19,700 --> 03:37:23,500
So if I move a half pixel in either Direction, as a scattering

3776
03:37:23,500 --> 03:37:27,300
function around, I can then like, basically get some anti-aliasing

3777
03:37:27,300 --> 03:37:31,400
there, for free, and free is probably the wrong word to use here, but

3778
03:37:31,900 --> 03:37:33,000
looped in with everything.

3779
03:37:33,600 --> 03:37:37,700
And so now, if I zoom in there, what you can see is, it's getting a

3780
03:37:37,700 --> 03:37:39,300
little smoother, right?

3781
03:37:39,400 --> 03:37:41,400
It's still not great, but it's getting smoother.

3782
03:37:41,400 --> 03:37:43,100
It's no more noisy than anything else.

3783
03:37:43,100 --> 03:37:44,500
Is probably at this point.

3784
03:37:45,200 --> 03:37:45,500
Let's go.

3785
03:37:46,200 --> 03:37:46,700
Zoom.

3786
03:37:48,500 --> 03:37:49,800
But you can kind of see, right?

3787
03:37:49,800 --> 03:37:53,600
You can see getting some of that taking a little bit of the edge off

3788
03:37:55,000 --> 03:37:59,000
and so if I increase the raise for Pixel to, it will take longer,

3789
03:37:59,100 --> 03:37:59,700
right?

3790
03:38:00,100 --> 03:38:03,000
But if I want to produce a better image like a, no, he's just cast

3791
03:38:03,000 --> 03:38:06,800
more raised and trade essentially time.

3792
03:38:08,700 --> 03:38:13,000
For for image quality, which is a nice, right?

3793
03:38:13,000 --> 03:38:15,400
A nice aspect of rate racers,

3794
03:38:19,100 --> 03:38:23,200
So here's a higher quality image and what you can see now is if I zoom

3795
03:38:23,200 --> 03:38:23,700
in there, right?

3796
03:38:23,700 --> 03:38:26,600
It's starting to get relatively smooth and a lot of places but you

3797
03:38:26,600 --> 03:38:29,700
still get a lot of noise because hey, we're not doing anything smart

3798
03:38:29,700 --> 03:38:30,500
on sampling right now.

3799
03:38:30,500 --> 03:38:33,900
And just in general rate, Racers tend to need a lot of samples to

3800
03:38:33,900 --> 03:38:35,600
converge on anything, right?

3801
03:38:37,100 --> 03:38:40,500
So maybe we want to do even more than that.

3802
03:38:40,500 --> 03:38:44,400
And if we wanted to do more than that, then the problem we have that

3803
03:38:44,400 --> 03:38:50,300
we run into almost immediately is that we first of all, we can Cindy

3804
03:38:50,300 --> 03:38:55,800
this so we can be wide, which is great and we can cast like 8 or 16

3805
03:38:55,800 --> 03:38:56,600
raised at a time.

3806
03:38:56,600 --> 03:38:59,700
Probably only eight on this because it's, I,

3807
03:39:00,000 --> 03:39:01,100
As avx-512.

3808
03:39:02,300 --> 03:39:05,200
But the real problem we run into is if we're a c runtime Library

3809
03:39:05,200 --> 03:39:05,900
function.

3810
03:39:07,100 --> 03:39:10,100
If we just use the basic C, runtime Library, don't have threads and we

3811
03:39:10,100 --> 03:39:13,500
really want threads because we want to run this 8 wide 8 threads of

3812
03:39:13,500 --> 03:39:14,000
time.

3813
03:39:14,300 --> 03:39:17,800
So we want to locate wide and 8 threads, but we don't have the ability

3814
03:39:17,800 --> 03:39:18,400
to do that.

3815
03:39:19,400 --> 03:39:22,500
So, you know, we probably have to introduce a little bit of Windows in

3816
03:39:22,500 --> 03:39:24,200
here just so we can get more threads.

3817
03:39:25,000 --> 03:39:29,200
What I'm going to go take some questions before we end, but before we

3818
03:39:29,200 --> 03:39:29,800
do that,

3819
03:39:31,500 --> 03:39:35,400
I'm just gonna start this running so that as I take questions, if we

3820
03:39:35,400 --> 03:39:38,700
have any questions where's my little

3821
03:39:40,300 --> 03:39:41,000
Switcher thing.

3822
03:39:41,000 --> 03:39:41,500
There it is.

3823
03:39:43,700 --> 03:39:46,500
The ray Tracer can be tracing as we go.

3824
03:39:50,500 --> 03:39:53,200
Alright, Madam 87 is this series for total beginners in game

3825
03:39:53,200 --> 03:39:53,700
programming?

3826
03:39:54,200 --> 03:39:58,300
Yeah, it's for total beginners in game programming.

3827
03:39:58,300 --> 03:39:59,900
But not total beginners in programming.

3828
03:39:59,900 --> 03:40:02,300
It assumes, you kind of know how see Works sort of.

3829
03:40:04,700 --> 03:40:07,300
So if you start a beginning of series, it will assume some knowledge

3830
03:40:07,300 --> 03:40:09,900
of see, it won't assume any knowledge of game programming.

3831
03:40:20,000 --> 03:40:20,400
Can you girls?

3832
03:40:20,400 --> 03:40:23,200
Ask is it possible or how hard is it to have a debug system built into

3833
03:40:23,200 --> 03:40:23,700
your project?

3834
03:40:23,700 --> 03:40:28,000
That completely eliminates the need for a dedicated side debugger?

3835
03:40:32,200 --> 03:40:35,500
Not really, I mean, you still need, you can have a debug system that

3836
03:40:35,500 --> 03:40:38,800
you that is kind of custom-built, but you still need a way to step

3837
03:40:38,800 --> 03:40:43,000
through things and typically that requires an external program at

3838
03:40:43,000 --> 03:40:46,200
least to get the harder bugs, so you can build your own sort of side

3839
03:40:46,200 --> 03:40:48,200
thing and that would work.

3840
03:40:52,100 --> 03:40:53,300
Oh, my mic is bouncing again.

3841
03:40:53,600 --> 03:40:54,700
You know what, I forgot.

3842
03:40:54,700 --> 03:40:59,000
I can't wear the hoodie or I can wear it, but it has to be like open.

3843
03:40:59,600 --> 03:41:00,600
Sorry about that.

3844
03:41:02,100 --> 03:41:06,700
We, this is a known problem and I just forgot I can't wear the hoodie.

3845
03:41:07,300 --> 03:41:08,300
Hey, Something to Remind Me.

3846
03:41:13,900 --> 03:41:15,900
By applying, I just saw an old video where it says the project will go

3847
03:41:15,900 --> 03:41:18,000
on at least until 2016.

3848
03:41:18,000 --> 03:41:19,100
How far along towards the end of the?

3849
03:41:19,100 --> 03:41:19,900
Are your hand mirror?

3850
03:41:20,300 --> 03:41:21,100
I don't know.

3851
03:41:21,300 --> 03:41:26,100
I estimated like, six hundred episodes and we're only at like 400

3852
03:41:26,100 --> 03:41:27,000
episodes right now.

3853
03:41:27,300 --> 03:41:28,000
So,

3854
03:41:31,000 --> 03:41:32,700
Yeah, at least 200 more episodes.

3855
03:41:32,700 --> 03:41:34,900
So probably at least another year of episodes.

3856
03:41:35,200 --> 03:41:39,100
One of the things I forgot when I said at least till 2016 through 2016

3857
03:41:39,400 --> 03:41:43,200
is I was thinking for some reason that six hundred episodes was two

3858
03:41:43,200 --> 03:41:46,800
years but we don't stream everyday.

3859
03:41:48,200 --> 03:41:52,800
So it's actually a lot more than that because we don't actually do a

3860
03:41:52,800 --> 03:41:53,600
swim every day.

3861
03:41:54,500 --> 03:41:57,900
So six hundred episodes actually mapped to like 4 years or something,

3862
03:41:58,100 --> 03:41:58,600
right?

3863
03:42:02,200 --> 03:42:04,300
This is going to be uploaded with the normally hmh code as well.

3864
03:42:04,500 --> 03:42:05,600
Yeah, I'll stick it in.

3865
03:42:05,600 --> 03:42:06,800
It'll be where that?

3866
03:42:07,100 --> 03:42:08,300
Where that directory is there?

3867
03:42:12,800 --> 03:42:15,700
Best alloy said there's a bug in the denominator check.

3868
03:42:16,000 --> 03:42:16,800
Thank you!

3869
03:42:16,800 --> 03:42:20,100
I will take a look at that now

3870
03:42:25,600 --> 03:42:26,000
Okay.

3871
03:42:26,000 --> 03:42:26,400
Oops.

3872
03:42:27,000 --> 03:42:27,500
Go

3873
03:42:31,400 --> 03:42:31,900
There we go.

3874
03:42:33,700 --> 03:42:34,100
oh,

3875
03:42:37,900 --> 03:42:38,500
thank you.

3876
03:42:38,500 --> 03:42:39,900
I don't know why I type that in.

3877
03:42:40,900 --> 03:42:41,700
That's about typo.

3878
03:42:41,700 --> 03:42:46,800
So denominator is less than the - Clarence sorry or denominator is

3879
03:42:46,800 --> 03:42:50,000
greater than the regular tolerance off we go.

3880
03:42:50,800 --> 03:42:54,500
I don't know if that change anything and probably didn't really change

3881
03:42:54,500 --> 03:42:56,800
anything in practice, but we'll run it again, just to be safe.

3882
03:43:01,000 --> 03:43:01,800
All right.

3883
03:43:22,600 --> 03:43:23,100
Best chili.

3884
03:43:23,100 --> 03:43:24,400
Shouldn't you initialize your material?

3885
03:43:24,400 --> 03:43:27,100
So emit color and ref color are initialized.

3886
03:43:27,200 --> 03:43:29,400
They automatically get initialized to 0.

3887
03:43:30,800 --> 03:43:34,500
Because I use that Open Bracket, close bracket equals Open Bracket,

3888
03:43:34,500 --> 03:43:37,500
close bracket on the array, so the whole array gets cleared to zero.

3889
03:43:41,600 --> 03:43:44,500
Just used maybe instead of Reinventing brdf what you call reflectance,

3890
03:43:44,800 --> 03:43:46,500
use some well-known, brdf like Disney's.

3891
03:43:46,500 --> 03:43:48,900
You can look at the implication of one in EG blender.

3892
03:43:49,800 --> 03:43:53,200
Yeah we could use a simplified like a

3893
03:43:55,200 --> 03:43:56,400
Standard reflectance model.

3894
03:43:58,200 --> 03:44:04,100
I believe dice also published their own, which is similar to the

3895
03:44:04,100 --> 03:44:04,800
Disney one.

3896
03:44:11,000 --> 03:44:13,200
Could be used raycasting determine a scene in real time.

3897
03:44:13,200 --> 03:44:16,200
That would allow infinite visibility like with sparse voxel octree as

3898
03:44:16,200 --> 03:44:21,900
opposed to rasterizer rasterize errs versus Ray tracers.

3899
03:44:21,900 --> 03:44:24,500
Doesn't really have anything to do with infinite visibility.

3900
03:44:25,300 --> 03:44:28,900
You can have a rasterizer that does infinite visibility just fine.

3901
03:44:30,700 --> 03:44:35,400
In fact, there are many, so that's really not part of it.

3902
03:44:36,200 --> 03:44:40,600
The reason is Ray casting is usually for better reflectance.

3903
03:44:41,200 --> 03:44:45,200
Right, because rasterizer is have a lot of a lot of trouble with light

3904
03:44:45,200 --> 03:44:45,800
propagation.

3905
03:44:45,800 --> 03:44:48,700
After use all these hacks to get light propagation to work, whereas

3906
03:44:48,700 --> 03:44:52,900
Races, they just work because hey, they compute the ray tracing very

3907
03:44:55,200 --> 03:44:57,100
Very much like it gets compute in the real world.

3908
03:44:57,900 --> 03:44:59,700
So really the

3909
03:45:00,000 --> 03:45:00,900
Them is they're just too slow.

3910
03:45:00,900 --> 03:45:02,900
So the reason we don't see real-time Ray tracers is because they're

3911
03:45:02,900 --> 03:45:04,400
just too slow for complex scenes.

3912
03:45:06,000 --> 03:45:08,600
But yeah, if you can find a way to make it run fast enough, then off

3913
03:45:08,600 --> 03:45:12,200
you go, there is one sort of pseudo real-time engine.

3914
03:45:12,200 --> 03:45:18,300
It's called Brigade that does Real Time Ray tracing i-it's code is

3915
03:45:18,300 --> 03:45:19,400
pretty similar to the code.

3916
03:45:19,400 --> 03:45:23,700
We just typed into, they actually, that does it on the GPU so it can

3917
03:45:23,700 --> 03:45:25,200
be very paralyzed and fast.

3918
03:45:26,400 --> 03:45:30,400
And most of the stuff they have to do there is like with seen

3919
03:45:30,400 --> 03:45:32,900
optimization by using like KD trees and stuff like that.

3920
03:45:33,900 --> 03:45:35,600
To optimize the rate reversals.

3921
03:45:39,400 --> 03:45:43,800
Whatever happened to Al bot, I don't have a labott set up yet.

3922
03:45:45,000 --> 03:45:45,400
Why not?

3923
03:45:45,400 --> 03:45:46,500
You standard thread.

3924
03:45:47,000 --> 03:45:48,800
I don't really want to use a standard Library.

3925
03:45:48,800 --> 03:45:49,900
It's so terrible.

3926
03:45:50,900 --> 03:45:54,400
It's just coincidence that they're three of the sphere is all.

3927
03:45:54,400 --> 03:45:55,500
Have their top bottom line up.

3928
03:45:55,500 --> 03:46:00,100
Exactly on the horizon or is that an artifact of something we're

3929
03:46:00,100 --> 03:46:00,700
doing.

3930
03:46:05,600 --> 03:46:08,000
I mean, it's probably an artifact of the way, the camera setup.

3931
03:46:09,400 --> 03:46:11,700
I guess, but I would have to think it through more.

3932
03:46:15,900 --> 03:46:24,700
Could you just insert pragma OMP on the Ray Caster Loop 02 to try and

3933
03:46:26,000 --> 03:46:30,100
make it run on multiple processors possibly?

3934
03:46:30,400 --> 03:46:31,900
But I'd rather do it right.

3935
03:46:31,900 --> 03:46:35,200
Which I mean at some point we just should do it right.

3936
03:46:37,200 --> 03:46:38,900
Could you disable Windows Bells?

3937
03:46:38,900 --> 03:46:40,900
I hate these sounds.

3938
03:46:45,200 --> 03:46:45,700
You know what?

3939
03:46:45,700 --> 03:46:47,400
I haven't heard any of the sounds.

3940
03:46:49,800 --> 03:46:51,200
You guys heard the sounds?

3941
03:46:53,200 --> 03:46:55,600
Oh, cuz the black magic device is still set.

3942
03:46:55,600 --> 03:46:57,400
Okay, that should have been muted.

3943
03:46:57,400 --> 03:46:58,300
Sorry about that.

3944
03:47:04,700 --> 03:47:05,200
Messi Elda.

3945
03:47:05,200 --> 03:47:09,600
The anti Alias has roping artifacts, why?

3946
03:47:11,400 --> 03:47:12,100
Well.

3947
03:47:18,300 --> 03:47:26,300
I mean, I couldn't say for sure but roping roping are defects are

3948
03:47:26,300 --> 03:47:27,200
going to occur.

3949
03:47:27,200 --> 03:47:32,300
Any time you have a box filter e like process happening, which is

3950
03:47:32,300 --> 03:47:36,500
basically what's happening here because we're not really using any

3951
03:47:36,500 --> 03:47:38,700
kind of good randomization for that.

3952
03:47:38,700 --> 03:47:41,200
So I don't know that you're ever going to really get rid of those.

3953
03:47:41,600 --> 03:47:44,800
You would have to intentionally do like blue toys filtering on the

3954
03:47:44,800 --> 03:47:47,900
actual points you were sending out.

3955
03:47:50,000 --> 03:47:56,400
So really it's mostly just a case of 256 samples in a square is going

3956
03:47:56,400 --> 03:47:59,300
to basically amount to a box filter which is going to have a rope

3957
03:47:59,300 --> 03:47:59,800
artifact.

3958
03:48:00,200 --> 03:48:02,300
But that's what's going to look like, right?

3959
03:48:06,500 --> 03:48:09,500
The other problem is that the zoom on this thing is going to do it by

3960
03:48:09,500 --> 03:48:11,500
linear filter, right?

3961
03:48:13,100 --> 03:48:16,400
So what we really need to do is open this in a program that will view

3962
03:48:16,400 --> 03:48:19,100
it fairly, which I can try to do.

3963
03:48:38,100 --> 03:48:40,400
I love this, right?

3964
03:48:40,900 --> 03:48:43,000
It's like Microsoft has made their stuff.

3965
03:48:43,000 --> 03:48:46,200
So complicated, even they mess up.

3966
03:48:46,200 --> 03:48:48,200
How to add something to a context window?

3967
03:48:50,200 --> 03:48:54,000
In their own default program inside their own explorer that can't even

3968
03:48:54,000 --> 03:48:54,600
get it right?

3969
03:48:59,200 --> 03:49:00,800
so here, if we zoom in on it,

3970
03:49:02,800 --> 03:49:10,300
You can see it's not so bad, it's not that ropey actually but you know

3971
03:49:10,600 --> 03:49:12,100
it's never going to be perfect.

3972
03:49:25,400 --> 03:49:27,500
With the growing popularity of multi-threading make procedural

3973
03:49:27,500 --> 03:49:28,300
programming harder.

3974
03:49:28,300 --> 03:49:31,900
But yes, it already has, I mean, people already have to do a lot of

3975
03:49:31,900 --> 03:49:35,400
work to make sure their stuff is set up from the ground up for

3976
03:49:35,400 --> 03:49:39,300
multi-threading when you wouldn't prefer to write and there's

3977
03:49:39,300 --> 03:49:40,100
techniques.

3978
03:49:40,300 --> 03:49:45,600
You know, you can employ that help make it better and there's, you

3979
03:49:45,600 --> 03:49:50,300
know, ways you can structure code to make it more likely to work well

3980
03:49:50,300 --> 03:49:52,600
multi-threaded but none of that changes.

3981
03:49:52,600 --> 03:49:54,100
The fact that that's that's

3982
03:49:54,400 --> 03:49:57,700
Had the programmer had to think about normally in single-threaded

3983
03:49:57,700 --> 03:49:59,200
program you never had to think about any of that stuff.

3984
03:49:59,500 --> 03:50:03,400
So even even techniques that make it easier for you to do is I still

3985
03:50:03,400 --> 03:50:04,100
mental overhead.

3986
03:50:04,100 --> 03:50:06,200
That you don't wish you wish you didn't have to do, right?

3987
03:50:08,700 --> 03:50:10,600
Can you make one of the Spheres a mirror?

3988
03:50:13,100 --> 03:50:15,400
Yes, I can.

3989
03:50:24,200 --> 03:50:24,700
Hmm.

3990
03:50:26,100 --> 03:50:29,000
Which one of the Spheres do you want to be a mirror?

3991
03:50:30,100 --> 03:50:33,800
The green ball, maybe, or the blue ball, or maybe the tan ball?

3992
03:50:34,100 --> 03:50:34,700
I don't know.

3993
03:50:35,100 --> 03:50:36,200
Let me just add another one.

3994
03:50:46,600 --> 03:50:49,500
Now, I'm going to not make it completely reflected because you can't

3995
03:50:49,500 --> 03:50:52,000
make anything perfectly reflective or light could Bounce Around the

3996
03:50:52,000 --> 03:50:55,200
scene forever, which you don't really want in a ray Tracer.

3997
03:50:55,200 --> 03:50:57,200
When you start to, especially when you start to do more physically

3998
03:50:58,200 --> 03:50:59,100
accurate stuff,

3999
03:51:00,000 --> 03:51:02,800
So, no such thing as a pure me really, but it's okay that won't

4000
03:51:02,800 --> 03:51:03,800
actually break anything.

4001
03:51:03,800 --> 03:51:06,500
If you have a pure mirror, so that'll be fine.

4002
03:51:06,900 --> 03:51:08,800
And I'll just stick in a forest fear here.

4003
03:51:11,500 --> 03:51:12,600
And that's fear.

4004
03:51:13,100 --> 03:51:18,500
I will put maybe off in the distance sort of on the ground so I'll

4005
03:51:18,500 --> 03:51:22,300
make it maybe you like

4006
03:51:23,500 --> 03:51:24,100
this.

4007
03:51:33,200 --> 03:51:36,500
And we'll let that go for a little bit.

4008
03:51:41,300 --> 03:51:44,200
All right, so, it looks like that's all of the questions.

4009
03:51:45,000 --> 03:51:48,000
I will say that I was very happy with how the question prompter worked

4010
03:51:48,000 --> 03:51:48,500
out there.

4011
03:51:50,500 --> 03:51:55,600
That was pretty great, so I'm very happy about that.

4012
03:52:00,500 --> 03:52:03,700
Is this source code included with $15 for handmade hero Source?

4013
03:52:03,800 --> 03:52:09,900
Yeah, I mean, you have to wait till I update this

4014
03:52:13,200 --> 03:52:17,300
So tonight, when I update the repositories, it will be in there.

4015
03:52:18,600 --> 03:52:20,300
But yeah, I'll it'll just be in there.

4016
03:52:31,400 --> 03:52:33,000
Oh wait, you're right.

4017
03:52:34,300 --> 03:52:35,400
You are right.

4018
03:52:36,800 --> 03:52:39,100
You know what I probably should have done this with an initializer

4019
03:52:39,100 --> 03:52:41,000
list, so I wouldn't have to worry about that.

4020
03:52:45,200 --> 03:52:46,100
But it didn't.

4021
03:52:50,300 --> 03:52:51,600
So, hold on a second.

4022
03:52:55,200 --> 03:52:58,200
Also, the sphere is in the wrong place, right?

4023
03:52:58,200 --> 03:52:58,800
So

4024
03:53:00,300 --> 03:53:04,400
this last fear, I actually want to be forward and why?

4025
03:53:04,400 --> 03:53:07,500
So I want it, I want that, I think is what I wanted.

4026
03:53:19,000 --> 03:53:21,000
Can you share the question prompt your code to I miss?

4027
03:53:21,000 --> 03:53:23,100
Some of the stream and would like to see it.

4028
03:53:23,400 --> 03:53:26,900
Eventually, I'll get around to that, but it's on the other machine.

4029
03:53:26,900 --> 03:53:29,600
So it's not in the handmade hero Source, directory the moment.

4030
03:53:30,600 --> 03:53:34,300
It's also like so boring.

4031
03:53:34,300 --> 03:53:36,900
I don't know why anyone would need the source code to it, but

4032
03:53:43,500 --> 03:53:44,200
Genesis 3.

4033
03:53:44,200 --> 03:53:47,700
I mean before if we could use traditional re-crafting like Wolfenstein

4034
03:53:47,700 --> 03:53:52,800
used to determine mesh visibility in the distance just using diffuse

4035
03:53:52,800 --> 03:53:53,700
lighting.

4036
03:53:57,100 --> 03:53:59,400
Not really sure what that means.

4037
03:54:15,500 --> 03:54:19,600
All right, so there's our Pure mirror ball back in the distance there.

4038
03:54:19,700 --> 03:54:26,000
You can kind of see what's going down with that and yeah.

4039
03:54:28,500 --> 03:54:29,700
I mean, there you go.

4040
03:54:30,200 --> 03:54:33,100
That's that's the long and short of it.

4041
03:54:33,700 --> 03:54:36,600
All right, folks, that's it for our test stream.

4042
03:54:37,000 --> 03:54:40,900
I think we did learn one valuable thing, which is I have to remember,

4043
03:54:40,900 --> 03:54:46,800
not to wear a hoodie closed, which I am likely to do.

4044
03:54:46,800 --> 03:54:51,200
So, I'm not sure what to do about that because the mic does bump into

4045
03:54:51,200 --> 03:54:51,600
it.

4046
03:54:53,100 --> 03:54:58,200
I guess I'll have to figure out something else there to use, but

4047
03:54:58,600 --> 03:55:01,600
But yeah, so thanks everyone for joining me.

4048
03:55:01,600 --> 03:55:02,900
I think that went fine.

4049
03:55:02,900 --> 03:55:08,600
So tomorrow will either start back on him here tomorrow or improve our

4050
03:55:08,600 --> 03:55:09,400
Ray Tracer.

4051
03:55:10,300 --> 03:55:13,100
And then either way, we'll be back to him a zero coding.

4052
03:55:13,100 --> 03:55:16,600
Either either tomorrow or next weekend, but it looks like we're good

4053
03:55:16,600 --> 03:55:17,200
to go.

4054
03:55:17,400 --> 03:55:21,200
And yeah, and everything worked out pretty well.

4055
03:55:22,100 --> 03:55:24,700
The stream didn't crash the new machines are both running.

4056
03:55:24,700 --> 03:55:25,600
Okay.

4057
03:55:26,800 --> 03:55:27,600
So that's

4058
03:55:30,400 --> 03:55:32,400
That's yeah, that's good.

4059
03:55:33,600 --> 03:55:34,400
All right.

4060
03:55:34,400 --> 03:55:37,300
So let's go back here.

4061
03:55:39,200 --> 03:55:40,400
And wind things down.

4062
03:55:40,400 --> 03:55:42,100
There's our final image for the day.

4063
03:55:43,900 --> 03:55:45,300
Let's let's say, you know what?

4064
03:55:45,300 --> 03:55:46,500
Let's save that off.

4065
03:55:49,000 --> 03:55:52,200
Today is the 21st, so that's 2017.

4066
03:55:53,400 --> 03:55:56,400
1021 first.

4067
03:55:57,900 --> 03:55:59,200
Image First,

4068
03:56:00,500 --> 03:56:02,000
A image.

4069
03:56:03,500 --> 03:56:08,700
So that's not bad for a first, you know, for a couple hours of on

4070
03:56:08,700 --> 03:56:10,200
stream programming where everything was explained.

4071
03:56:10,200 --> 03:56:11,400
I'm happy with that.

4072
03:56:12,200 --> 03:56:16,300
And again, really what needs to happen now is we just need to like,

4073
03:56:18,300 --> 03:56:25,500
You know, get a better, get a more physical model of how the light is

4074
03:56:25,500 --> 03:56:26,500
going to propagate.

4075
03:56:27,100 --> 03:56:31,400
And I think you know those are two things that Cindy is it make

4076
03:56:31,400 --> 03:56:35,900
everything run, insanity and threaded so that the speeds, okay?

4077
03:56:36,800 --> 03:56:38,800
And then go ahead and

4078
03:56:40,400 --> 03:56:44,000
And get the get the light transport working properly, because the

4079
03:56:44,000 --> 03:56:48,100
light transport in there is kind of a joke and it'll look a lot better

4080
03:56:48,100 --> 03:56:50,700
if we actually like get some real physical values in there.

4081
03:56:50,700 --> 03:56:55,100
And so we can see some some good light transport results because the

4082
03:56:55,100 --> 03:56:56,700
ray tracing stays the same regardless, right?

4083
03:56:56,700 --> 03:56:58,400
Look, Ray tracing is Ray tracing?

4084
03:57:00,000 --> 03:57:04,500
That part can be upgraded separately from the light transport which,

4085
03:57:04,500 --> 03:57:07,900
you know, once you know, a path through the scene that you want to

4086
03:57:07,900 --> 03:57:10,900
transfer it right along, that is a separate problem, right?

4087
03:57:12,000 --> 03:57:12,400
so,

4088
03:57:13,900 --> 03:57:17,500
Anyway, I'll go ahead and close this down.

4089
03:57:17,700 --> 03:57:19,100
Get all this stuff out of here.

4090
03:57:20,900 --> 03:57:21,800
Get rid of that.

4091
03:57:22,500 --> 03:57:23,500
Sure we'll save that.

4092
03:57:23,500 --> 03:57:24,000
Why not?

4093
03:57:27,300 --> 03:57:28,100
Close that.

4094
03:57:30,500 --> 03:57:31,300
Close Milton.

4095
03:57:33,700 --> 03:57:35,100
Articles on, just let that up.

4096
03:57:35,800 --> 03:57:37,400
All right, thank you, everyone for joining me.

4097
03:57:37,400 --> 03:57:40,200
For our first day back.

4098
03:57:40,500 --> 03:57:41,600
We didn't do any handmade hero.

4099
03:57:41,600 --> 03:57:44,200
This was I don't know what we categorize this as this is like a

4100
03:57:44,200 --> 03:57:49,600
handmade practice session, I guess just to make sure that everything

4101
03:57:49,600 --> 03:57:50,100
was working.

4102
03:57:50,100 --> 03:57:52,200
Okay and it seems like a strange working, okay.

4103
03:57:52,700 --> 03:57:55,800
So we will try returning to regular hand material programming, very

4104
03:57:55,800 --> 03:57:56,400
shortly.

4105
03:57:58,200 --> 03:58:01,500
If you want to follow along with a series at home and I will upload

4106
03:58:01,500 --> 03:58:02,600
that ray-tracing source code.

4107
03:58:02,800 --> 03:58:06,800
You wanted to get that and play around with it all the source code

4108
03:58:06,800 --> 03:58:07,900
comes with the pre-order.

4109
03:58:07,900 --> 03:58:13,500
So if you preorder handmade hero on handmade here at org, you can

4110
03:58:13,500 --> 03:58:17,800
start playing around that source, code yourself and do experiments

4111
03:58:17,800 --> 03:58:18,500
with the ray Tracer.

4112
03:58:18,500 --> 03:58:20,600
If you'd like to play around them or if you want.

4113
03:58:20,600 --> 03:58:23,000
If you're looking for some extracurricular activities to do, in fact

4114
03:58:23,100 --> 03:58:24,500
you could go ahead and approve.

4115
03:58:24,500 --> 03:58:30,600
The light transport you can look up online some information about

4116
03:58:30,600 --> 03:58:32,600
physical light transport, or you can also

4117
03:58:32,700 --> 03:58:38,600
So get if you are the sort of person who has a bunch of money and

4118
03:58:38,600 --> 03:58:42,900
doesn't mind spending it on things, you can actually go to the

4119
03:58:42,900 --> 03:58:46,700
physically based rendering book.

4120
03:58:46,700 --> 03:58:47,700
Where is it?

4121
03:58:48,700 --> 03:58:55,700
This guy you could go order a book such as this one which is about

4122
03:58:55,700 --> 03:59:01,900
physically based rendering and you could read it and you could use

4123
03:59:01,900 --> 03:59:02,600
some of that knowledge.

4124
03:59:02,700 --> 03:59:08,100
Edge to improve the light transport or add a real Lens model to the

4125
03:59:08,100 --> 03:59:08,400
camera.

4126
03:59:08,400 --> 03:59:13,500
Like I said, there's no lens on the camera right now and there's just

4127
03:59:13,500 --> 03:59:17,300
a plethora of things that you can do in terms of improving the quality

4128
03:59:19,100 --> 03:59:21,300
with that bear bone structure, that's in there right now.

4129
03:59:21,300 --> 03:59:24,000
You can sort of upgrade the pieces and make them more and more robust

4130
03:59:24,000 --> 03:59:24,600
as you go.

4131
03:59:26,200 --> 03:59:26,800
So that's about it.

4132
03:59:26,800 --> 03:59:28,800
If you want support the video series, we have a patreon page.

4133
03:59:28,800 --> 03:59:29,800
We also have a schedule bot.

4134
03:59:29,800 --> 03:59:32,500
If you want to follow us, you can see that it says a little too.

4135
03:59:32,700 --> 03:59:36,600
Turbot and it post a schedule for every weekend and that reminds you

4136
03:59:36,600 --> 03:59:37,100
when it's ready.

4137
03:59:37,100 --> 03:59:39,000
So that's kind of handy thing of trying to catch us live.

4138
03:59:39,200 --> 03:59:42,700
We also have a fantastic episode guide maintained by the wonderful May

4139
03:59:42,700 --> 03:59:44,800
Blow from the chat.

4140
03:59:46,100 --> 03:59:47,500
And he also has a patreon.

4141
03:59:47,500 --> 03:59:50,800
You can support where he annotates, lots of people's stuff.

4142
03:59:51,700 --> 03:59:56,600
So this is a pretty cool Patron to support this byblos project here.

4143
03:59:58,200 --> 03:59:59,800
I don't know why why does that go?

4144
04:00:00,300 --> 04:00:02,100
Why doesn't that go to his patreon page?

4145
04:00:03,000 --> 04:00:05,400
Does anyone know, is that a bug here that should go to his patreon

4146
04:00:05,400 --> 04:00:05,700
page?

4147
04:00:05,700 --> 04:00:06,300
Shouldn't it?

4148
04:00:07,000 --> 04:00:09,800
Because this goes to 0, there goes so, it's I don't know.

4149
04:00:09,800 --> 04:00:11,000
This is kind of confusing.

4150
04:00:14,000 --> 04:00:15,400
Because that goes to my patreon.

4151
04:00:15,400 --> 04:00:16,600
That should go to midlas Patron.

4152
04:00:16,600 --> 04:00:17,800
I don't know what's going on here.

4153
04:00:18,100 --> 04:00:23,200
You got me but point being out of the handmade Network folks probably

4154
04:00:23,200 --> 04:00:24,300
have done some things to the layout.

4155
04:00:24,300 --> 04:00:27,900
I have no idea but the point is there's a patron for supporting the

4156
04:00:27,900 --> 04:00:30,400
episode guide but anyway the episode guide is pretty great.

4157
04:00:30,700 --> 04:00:32,800
Like for example, I mentioned the inner product

4158
04:00:34,900 --> 04:00:37,400
You can actually do stuff where you like search through all of the

4159
04:00:37,400 --> 04:00:42,300
episodes 4 times when I talked about the inner product and it'll kind

4160
04:00:42,300 --> 04:00:43,900
of give you some information.

4161
04:00:43,900 --> 04:00:46,300
So, like, you know, a nice talk about that reflection function and,

4162
04:00:46,300 --> 04:00:50,000
you know, here's some of that stuff and, you know, probably have

4163
04:00:50,000 --> 04:00:52,000
talking about the dot product to right?

4164
04:00:52,500 --> 04:00:53,600
Here's dot product stuff.

4165
04:00:53,600 --> 04:00:58,900
So I would highly recommend utilizing that if you have any sort of

4166
04:00:58,900 --> 04:01:00,300
questions, it's a great resource.

4167
04:01:00,800 --> 04:01:03,300
And again, you can support the patreon for the people who do that.

4168
04:01:03,300 --> 04:01:03,400
Because

4169
04:01:03,500 --> 04:01:04,200
It's really nice to them.

4170
04:01:04,200 --> 04:01:05,300
They just did it themselves.

4171
04:01:05,300 --> 04:01:06,800
Like I had nothing to do with it.

4172
04:01:08,000 --> 04:01:12,600
It was entirely volunteer maintained so that's it.

4173
04:01:13,200 --> 04:01:18,100
I will be back tomorrow as the lit live countdown.

4174
04:01:18,100 --> 04:01:19,800
Timer says 19 hours from now.

4175
04:01:19,800 --> 04:01:23,400
I'll be back here to do some regularly scheduled stream programming.

4176
04:01:23,400 --> 04:01:26,800
I hope see you back here for that until then have fun programming and

4177
04:01:26,800 --> 04:01:29,200
I'll see everyone out there on the internet.

4178
04:01:30,200 --> 04:01:31,200
Take it easy everybody.

4179
04:01:31,400 --> 04:01:33,400
And I will now switch back to the streaming computer.

4180
04:01:33,500 --> 04:01:35,100
Pewter and stop the recording.

