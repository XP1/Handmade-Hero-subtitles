1
00:00:03,600 --> 00:00:05,800
Hello, everyone, and welcome to handmade hero.

2
00:00:05,800 --> 00:00:08,700
The sure we code a complete game live on stream.

3
00:00:09,200 --> 00:00:14,800
We finished our sort of our foray into showing how to do memory

4
00:00:14,800 --> 00:00:20,600
management stuff over the past couple episodes where I showed, how to

5
00:00:21,400 --> 00:00:25,200
take the same sort of techniques we were using with flat allocations

6
00:00:25,700 --> 00:00:28,800
in handmade hero, and switch them to Dynamic applications if you

7
00:00:28,800 --> 00:00:30,000
wanted them to be that way.

8
00:00:30,400 --> 00:00:32,600
And so now we can kind of do either one.

9
00:00:32,900 --> 00:00:35,800
We have the opportunity now to basically pick and choose.

10
00:00:38,700 --> 00:00:43,800
And there's really very little almost no game code that really has to

11
00:00:43,800 --> 00:00:44,800
change for that.

12
00:00:44,800 --> 00:00:48,300
Pretty much all of the game code that we wrote originally can just run

13
00:00:48,300 --> 00:00:51,400
on either system, it doesn't really matter as long as everything.

14
00:00:51,400 --> 00:00:54,700
Kind of thinks of itself is operating through an arena.

15
00:00:54,700 --> 00:00:58,500
There's not a lot of other stuff that we have to do there, and so we

16
00:00:58,500 --> 00:01:00,600
could probably pretty Flex Flex.

17
00:01:00,600 --> 00:01:06,100
Flex, ssibly switch between the two kind of models pre allocation and

18
00:01:06,100 --> 00:01:08,300
dynamic allocation without really having.

19
00:01:08,400 --> 00:01:12,500
Thing to think too hard about how our code is working, which is nice

20
00:01:12,500 --> 00:01:14,400
because it means that that's not a decision.

21
00:01:14,400 --> 00:01:17,300
We really have to care about too hard, right?

22
00:01:17,600 --> 00:01:20,800
When, you know, that you can sort of have something to be pretty

23
00:01:20,800 --> 00:01:23,300
fungible and not have to change very much code.

24
00:01:23,300 --> 00:01:26,200
It means that you no longer really have to worry too much about that

25
00:01:26,200 --> 00:01:29,800
during your development process because it's not really infecting

26
00:01:29,800 --> 00:01:32,900
other parts of the code with that decision, in a way that makes it

27
00:01:32,900 --> 00:01:33,800
hard to change.

28
00:01:34,300 --> 00:01:38,200
So, the best kinds of systems in terms

29
00:01:38,400 --> 00:01:42,200
of that flexibility are the ones where you know that your choice is

30
00:01:42,200 --> 00:01:47,000
really just kind of free to change and you don't really have to worry

31
00:01:47,000 --> 00:01:50,300
too hard about it because then you know when it comes time to ship you

32
00:01:50,300 --> 00:01:53,500
can play around with the options then and see what suits your fancy

33
00:01:53,500 --> 00:01:57,900
and you don't have to sort of have this latent fear in your head gets

34
00:01:57,900 --> 00:02:01,100
kind of like well if we made the wrong decision early on it's going to

35
00:02:01,100 --> 00:02:04,800
affect all of these other things in the project and then so we better

36
00:02:04,800 --> 00:02:07,200
make sure we get it right because if we didn't get it right, then it's

37
00:02:07,200 --> 00:02:08,300
going to be this huge cost.

38
00:02:08,500 --> 00:02:10,800
Her to try and undo that mistake.

39
00:02:10,900 --> 00:02:11,900
So, yeah.

40
00:02:11,900 --> 00:02:14,100
Hopefully I've shown that that really doesn't matter.

41
00:02:14,100 --> 00:02:16,400
As long as you kind of stick to the principles that we originally

42
00:02:16,400 --> 00:02:19,600
established for dealing with Arena allocations that you can pretty

43
00:02:19,600 --> 00:02:25,000
much then choose to treat the underlying system however you want.

44
00:02:25,100 --> 00:02:27,800
And you can pretty freely switch between dynamically.

45
00:02:27,800 --> 00:02:32,400
Grobel Arenas which allow you to use as much memory as you want or

46
00:02:32,400 --> 00:02:35,300
pre-allocated Arenas, where you're going to guarantee that you've

47
00:02:35,300 --> 00:02:38,200
tested your game and you know that it you know, if you

48
00:02:38,500 --> 00:02:41,900
Pick a one gig footprint for it or something that it can stay within

49
00:02:41,900 --> 00:02:45,000
that footprint and and leave it at that.

50
00:02:46,000 --> 00:02:49,700
So you have options there, and hopefully I've given you a sort of a

51
00:02:49,700 --> 00:02:53,100
good understanding of how both of them work and so that you can choose

52
00:02:53,100 --> 00:02:54,100
which ones you want.

53
00:02:54,600 --> 00:02:59,200
But now that brings us to a point in handmade hero where I don't

54
00:02:59,200 --> 00:02:59,800
really know.

55
00:03:00,000 --> 00:03:07,400
What we're doing because we don't have a specific to do, let's see

56
00:03:07,400 --> 00:03:07,800
here.

57
00:03:09,400 --> 00:03:13,500
So we've got maybe maybe the best things to do.

58
00:03:13,500 --> 00:03:17,100
Now, would be to kind of go do some of the cleanup that we postponed?

59
00:03:17,600 --> 00:03:20,900
Like I said, I normally don't like to leave bugs lying around in the

60
00:03:20,900 --> 00:03:22,400
code base on handmade hero.

61
00:03:22,400 --> 00:03:25,500
I sometimes have to because we're trying to kind of break things up as

62
00:03:25,500 --> 00:03:28,900
much as possible into chunks that are like easy for people to sort of

63
00:03:29,500 --> 00:03:29,800
Watch.

64
00:03:30,000 --> 00:03:31,900
A continuous through line of the coding.

65
00:03:32,800 --> 00:03:35,600
So we tend to sort of put things off a little bit, maybe that we would

66
00:03:35,600 --> 00:03:36,800
have investigated a little sooner.

67
00:03:36,800 --> 00:03:40,000
So we've got a couple things on here that are that way.

68
00:03:40,000 --> 00:03:43,700
And so we've got the fact that our cutscenes were malfunctioning.

69
00:03:44,800 --> 00:03:48,900
We've got the fact that the traversable stuff when we changed over

70
00:03:49,800 --> 00:03:53,200
when we did a little bit of clean up on our stem region, things aren't

71
00:03:53,200 --> 00:03:54,600
set up quite properly.

72
00:03:55,000 --> 00:03:59,300
And then we also had sort of this a little bit of work to do on the

73
00:03:59,300 --> 00:03:59,800
arena front.

74
00:04:00,000 --> 00:04:05,500
Are now that we have the ability to switch between Dynamic and static

75
00:04:05,500 --> 00:04:07,000
sort of allocated Arenas.

76
00:04:07,800 --> 00:04:11,500
There is sort of one past we should sort of do over the code, which is

77
00:04:11,500 --> 00:04:14,000
just to maybe make it a little bit clearer.

78
00:04:14,100 --> 00:04:17,899
How Arenas aligned with each other, and how they are cleaned up.

79
00:04:17,899 --> 00:04:21,399
So that we know that all of our Arenas we've thought through what's in

80
00:04:21,399 --> 00:04:22,100
them now.

81
00:04:22,300 --> 00:04:25,700
And maybe done a little bit more work on making sure that they're

82
00:04:25,700 --> 00:04:27,600
reasonable and logical, how they work.

83
00:04:27,600 --> 00:04:29,500
And, who's responsible for what?

84
00:04:30,400 --> 00:04:33,100
Because it's good to just lock that down at some point.

85
00:04:33,100 --> 00:04:36,300
I think we have enough understanding of how our system works at this

86
00:04:36,300 --> 00:04:39,000
point that we should be able to, you know,

87
00:04:44,300 --> 00:04:47,700
Clean that up a little bit more from where it was for how it kind of

88
00:04:47,700 --> 00:04:51,800
randomly grew now that we sort of know exactly what all of the parts

89
00:04:51,800 --> 00:04:52,100
are.

90
00:04:53,200 --> 00:04:56,600
So I think that that that seems like a good thing to do is just to

91
00:04:56,600 --> 00:04:59,300
start in on this maybe for the next couple days and just kind of

92
00:04:59,300 --> 00:05:03,000
finish that stuff up and I'd like to kind of get to the point.

93
00:05:03,900 --> 00:05:09,400
You know, we're we're we're we're maybe going to tackle this part here

94
00:05:09,900 --> 00:05:12,600
because I do think I want to maybe upgrade things to be a more

95
00:05:12,600 --> 00:05:13,400
traditional 3D.

96
00:05:13,700 --> 00:05:19,000
Path as the last thing we do in our engine stuff and you know, I think

97
00:05:19,000 --> 00:05:22,400
that based on my experience in ruminating on it which I've kind of

98
00:05:22,400 --> 00:05:23,400
discussed a little bit.

99
00:05:23,500 --> 00:05:26,400
I just really don't like the pure 2D path.

100
00:05:27,100 --> 00:05:28,100
I'm glad we tried it.

101
00:05:28,100 --> 00:05:30,500
It was my first time ever trying a 2d path.

102
00:05:30,500 --> 00:05:32,000
I've always written 3D games before.

103
00:05:32,000 --> 00:05:34,300
I've really never written a 2-D game.

104
00:05:35,000 --> 00:05:38,900
I mean, I sort of maybe did one one time, but it was that an indie

105
00:05:38,900 --> 00:05:42,300
game Jam where I was kind of using a prebuilt code base where

106
00:05:42,300 --> 00:05:43,400
everything you know was already.

107
00:05:43,500 --> 00:05:43,700
Done.

108
00:05:43,700 --> 00:05:46,800
So I didn't I didn't really write much myself and it didn't have any

109
00:05:46,800 --> 00:05:47,100
depth.

110
00:05:47,100 --> 00:05:52,200
It was like a fully flat 2D game not like a handmade hero is where

111
00:05:52,200 --> 00:05:55,500
there's like this sort of you know, orthographic View.

112
00:05:57,000 --> 00:05:59,300
So, I'm really pretty heavily leaning towards.

113
00:06:00,000 --> 00:06:00,400
Doing that.

114
00:06:00,400 --> 00:06:02,900
So I think what I'd like to do is just over the next couple days get

115
00:06:02,900 --> 00:06:06,500
us to that point and then do the graphics upgrade and we'll sort of do

116
00:06:06,500 --> 00:06:09,900
a transition to the real artwork with the graphics up way upgrade kind

117
00:06:09,900 --> 00:06:15,600
of in tandem there so that we can like get absolutely final stuff on

118
00:06:15,600 --> 00:06:16,100
all of that.

119
00:06:16,100 --> 00:06:19,000
We're we're sure that all of our coordinate systems are exactly the

120
00:06:19,000 --> 00:06:22,800
way that we want them, because that's the only thing that I really

121
00:06:23,400 --> 00:06:23,700
feel.

122
00:06:23,700 --> 00:06:27,700
Like it's still kind of up in the air a little bit in terms of stuff

123
00:06:27,700 --> 00:06:29,900
that I'm not comfortable writing large.

124
00:06:30,000 --> 00:06:33,400
Each amounts of game code on top of because I just don't, like the way

125
00:06:33,400 --> 00:06:38,000
it felt and that, that 2D stuff with the heavy sorting back end.

126
00:06:38,000 --> 00:06:39,600
I really just don't like it.

127
00:06:40,000 --> 00:06:45,000
And I think that probably going to a more traditional 3D pipeline

128
00:06:45,000 --> 00:06:50,500
there, as much as it would be nice to not have to do for various

129
00:06:50,500 --> 00:06:54,000
reasons like such as targeting lower end, things for fun like older

130
00:06:54,000 --> 00:06:55,500
raspberry pies or something like that.

131
00:06:55,500 --> 00:06:59,900
Maybe I really just think it's probably not going to work in terms of

132
00:07:00,000 --> 00:07:03,200
Of what I would want to do with the game long term and you know,

133
00:07:03,200 --> 00:07:03,900
particle effects.

134
00:07:03,900 --> 00:07:07,800
Also it just it feels like that sorting is just too heavy weight and

135
00:07:07,800 --> 00:07:11,500
there's really no other way to do it other than to go Z buffer.

136
00:07:11,500 --> 00:07:15,300
And so I feel like what I want to do is just make that call and say.

137
00:07:15,300 --> 00:07:21,900
All right, we'll go z-buffer and, and leave it at that because, you

138
00:07:21,900 --> 00:07:23,700
know, there's nothing wrong with using a z-buffer, right?

139
00:07:23,700 --> 00:07:25,500
That's what graphics cards are set up to do.

140
00:07:26,000 --> 00:07:28,400
So, at some level, it's just like, I don't fight it.

141
00:07:28,400 --> 00:07:29,800
I think it's just cleaner to go that

142
00:07:29,900 --> 00:07:30,200
Way.

143
00:07:30,200 --> 00:07:34,600
And we'll let the GPU do its thing and will Implement a z-buffer in

144
00:07:34,600 --> 00:07:38,200
our software rasterizer and off we'll go, right?

145
00:07:38,200 --> 00:07:38,600
So

146
00:07:41,100 --> 00:07:42,500
I think that's the game plan.

147
00:07:43,600 --> 00:07:46,000
At least that's my feeling about it.

148
00:07:47,300 --> 00:07:47,900
I'm Jimmy

149
00:07:50,700 --> 00:07:53,600
And at that point I feel like we'll have done a pretty good tour here

150
00:07:53,600 --> 00:07:57,000
and I don't know what it'll be about, 400 Days of just about

151
00:07:57,000 --> 00:08:01,800
everything, you might want to look at inside a game engine.

152
00:08:01,800 --> 00:08:03,000
I mean, we've done so many.

153
00:08:03,100 --> 00:08:05,700
It's kind of crazy to think back on how many different things that

154
00:08:05,700 --> 00:08:07,100
we've shown how to do on this series.

155
00:08:07,100 --> 00:08:10,100
It's been like, we've built so many things from scratch.

156
00:08:10,100 --> 00:08:10,800
It's crazy.

157
00:08:11,500 --> 00:08:15,700
So yeah, I think that that's a pretty good stopping point there, where

158
00:08:15,700 --> 00:08:18,500
it'll be like all right, you know, we've covered

159
00:08:19,100 --> 00:08:22,100
You know, we've given a taste of how to do just about everything that

160
00:08:22,100 --> 00:08:25,000
you might be doing in a game engine, because now they'll be some 3D in

161
00:08:25,000 --> 00:08:25,900
there as well.

162
00:08:26,800 --> 00:08:31,500
And hopefully that's a really good solid base, you know, 400 hours

163
00:08:31,500 --> 00:08:35,900
worth of materials that you can jump around in and then we can just go

164
00:08:36,500 --> 00:08:36,900
from there.

165
00:08:36,900 --> 00:08:38,400
We'll write the game code.

166
00:08:38,400 --> 00:08:41,200
And, you know, the part that I like least

167
00:08:44,000 --> 00:08:45,300
But I can't put it off forever.

168
00:08:45,300 --> 00:08:46,800
Eventually, you have to write the game code.

169
00:08:46,900 --> 00:08:50,400
If you don't have an another person who does that for you, that's what

170
00:08:50,400 --> 00:08:52,800
you, you know, if you had a designer programmer, they would be doing

171
00:08:52,800 --> 00:08:53,200
that.

172
00:08:54,000 --> 00:08:55,900
And that's really a nice thing if you can find one.

173
00:08:55,900 --> 00:08:59,700
But unfortunately, designers gamed good game designers are, there's

174
00:08:59,700 --> 00:08:59,900
almost

175
00:09:00,000 --> 00:09:01,100
Of them out there in the world.

176
00:09:01,100 --> 00:09:03,900
Most game designers aren't aren't very good.

177
00:09:03,900 --> 00:09:07,000
So you don't usually have the luxury of just having someone around.

178
00:09:07,000 --> 00:09:10,000
Who happens to be a good programmer and a very good designer who you

179
00:09:10,000 --> 00:09:13,700
can just be like, hey how about you do that game, code stuff.

180
00:09:13,700 --> 00:09:17,600
So, you know, like it or not.

181
00:09:17,600 --> 00:09:21,000
I am going to have to do that part of it.

182
00:09:21,500 --> 00:09:26,100
And yeah, maybe we'll ask some game designers for help.

183
00:09:26,100 --> 00:09:29,800
If we have any problems that were like, yeah, this is you

184
00:09:30,000 --> 00:09:32,600
No, this is a design game design.

185
00:09:32,600 --> 00:09:35,100
Think you're not really what I do.

186
00:09:35,100 --> 00:09:40,900
So, if you want to maybe chime in on some design things, maybe we'll

187
00:09:40,900 --> 00:09:48,500
ask John or Daniel or somebody to step in and and give us some advice,

188
00:09:48,700 --> 00:09:52,500
but either way that seems like the game plan.

189
00:09:52,500 --> 00:09:55,000
So I'm going to go ahead and just start taking a look at some of these

190
00:09:55,000 --> 00:09:55,800
bugs here.

191
00:09:56,600 --> 00:09:59,000
I don't know if we have any GitHub bugs.

192
00:10:00,000 --> 00:10:03,700
Are I haven't looked in a while.

193
00:10:07,600 --> 00:10:10,200
It looks like maybe we've got one which would be this one.

194
00:10:11,200 --> 00:10:12,800
Obviously this is not really a bug.

195
00:10:12,800 --> 00:10:15,700
This is just an important thing we have to do, right?

196
00:10:17,300 --> 00:10:23,800
Not sure what this has to do with anything, but not really a bug per

197
00:10:23,800 --> 00:10:31,000
se and so this I think is our only bug and so maybe and that would be

198
00:10:31,000 --> 00:10:32,800
take care of when we do the graphics update.

199
00:10:32,800 --> 00:10:34,500
I think so.

200
00:10:34,500 --> 00:10:36,400
I think we're pretty good to go here.

201
00:10:36,400 --> 00:10:37,300
So I think

202
00:10:37,400 --> 00:10:43,700
Really, just looking at the bugs that we have here and I'll start

203
00:10:43,700 --> 00:10:45,100
taking a look at those now.

204
00:10:45,500 --> 00:10:49,300
So if I build the game, I believe what we found was that before when

205
00:10:49,300 --> 00:10:51,400
we did the cutscene stuff, you know?

206
00:10:51,400 --> 00:10:56,800
I when I ran the the cutscene stuff you hit Escape that jumps out to

207
00:10:56,800 --> 00:10:58,900
the cutscene this again.

208
00:10:58,900 --> 00:11:02,700
The pink screen is a placeholder for our title screen which is not

209
00:11:02,700 --> 00:11:05,000
supposed to be there because no one's done in the artwork for it.

210
00:11:05,400 --> 00:11:07,300
But then here, when we switch to this,

211
00:11:07,400 --> 00:11:08,500
Screen here that we're looking at.

212
00:11:08,500 --> 00:11:15,100
This should have been showing a, you know, the the orphanage shot and

213
00:11:15,100 --> 00:11:16,000
all that stuff.

214
00:11:16,000 --> 00:11:16,900
And it's not.

215
00:11:16,900 --> 00:11:21,400
So what I'd like to know is what's going on there, you know, why are

216
00:11:21,400 --> 00:11:22,000
we getting this?

217
00:11:22,000 --> 00:11:24,900
This weird black screen, what's happening there.

218
00:11:24,900 --> 00:11:30,600
So let's go ahead and take a look at the cutscene stuff and just just

219
00:11:30,600 --> 00:11:35,000
get a quick, you know, feel make sure that, you know, the basic things

220
00:11:35,000 --> 00:11:37,400
are happening and that we, when we were doing our reorganization,

221
00:11:37,400 --> 00:11:37,900
And isolation.

222
00:11:37,900 --> 00:11:41,700
We didn't make some really stupid mistake.

223
00:11:41,700 --> 00:11:46,500
That's why this isn't rendering before we dive in any further and take

224
00:11:46,500 --> 00:11:46,800
a look.

225
00:11:46,800 --> 00:11:49,800
So you can see at least we're calling it, right?

226
00:11:50,200 --> 00:11:51,200
We're coming through here.

227
00:11:51,200 --> 00:11:54,900
We call render cutscene at time, so that's good.

228
00:11:55,600 --> 00:11:59,800
We're taking a look at the shots and you can see here, we got

229
00:12:00,000 --> 00:12:04,100
It's I guess it's on shot to at the moment or well shot one, but, you

230
00:12:04,100 --> 00:12:05,500
know, the second shot.

231
00:12:06,300 --> 00:12:07,200
So that's good.

232
00:12:07,300 --> 00:12:09,000
That seems like what we would expect.

233
00:12:09,000 --> 00:12:12,400
So we know that we're actually calling render render layered scene,

234
00:12:12,800 --> 00:12:13,600
which is good.

235
00:12:13,700 --> 00:12:16,600
And here on render layered scene, when we're kind of coming through

236
00:12:16,600 --> 00:12:17,100
here.

237
00:12:17,700 --> 00:12:24,700
We do our little, we do our little camera stuff here and going through

238
00:12:24,700 --> 00:12:28,200
doing doing our push bitmaps, so that all looks good.

239
00:12:28,200 --> 00:12:29,800
And so the only question here is

240
00:12:30,000 --> 00:12:35,700
Like, well, you know, we did change the transform stuff recently and I

241
00:12:35,700 --> 00:12:40,800
do wonder if when we train change the transform stuff, we may not have

242
00:12:40,800 --> 00:12:49,300
really done what we needed to do in terms of setting up the this stuff

243
00:12:49,300 --> 00:12:50,800
properly, right?

244
00:12:51,700 --> 00:12:54,000
I don't really know, you know.

245
00:12:54,000 --> 00:12:58,700
We haven't really looked much at this but I don't really know if we

246
00:12:58,700 --> 00:12:59,700
thought through What would

247
00:13:00,000 --> 00:13:04,300
To our cutscene code when we did some of those transform changes.

248
00:13:04,600 --> 00:13:08,100
And if I remember correctly, there's kind of like, you know, in the

249
00:13:08,100 --> 00:13:11,200
sort group stuff inside this transform thing.

250
00:13:12,800 --> 00:13:13,800
There's a bunch of stuff here.

251
00:13:13,800 --> 00:13:15,200
Like, what the floor is each chunk.

252
00:13:15,200 --> 00:13:16,700
See stuff is right.

253
00:13:17,500 --> 00:13:24,000
And so now a days when we pass in an update Z and in fact, now that

254
00:13:24,000 --> 00:13:26,600
I'm saying this out loud, I feel like this is almost certainly what it

255
00:13:26,600 --> 00:13:26,800
is.

256
00:13:27,200 --> 00:13:32,900
When we pass in one of these things it was really the the this Z is

257
00:13:32,900 --> 00:13:34,500
just becomes a y offset.

258
00:13:34,500 --> 00:13:38,600
If you remember correctly and the Z that we actually use for

259
00:13:38,600 --> 00:13:42,000
displacement is the floor Z.

260
00:13:43,100 --> 00:13:45,200
Displacement stuff, right?

261
00:13:45,800 --> 00:13:50,700
And so we probably it's just a case of where we were setting the Z

262
00:13:50,700 --> 00:13:56,900
values before you can see that the p z value here, getting set where

263
00:13:56,900 --> 00:13:59,900
we were, setting the Z, those Z values before.

264
00:14:00,100 --> 00:14:05,400
Probably we just have to Now set a different Z value, to make it flow

265
00:14:05,400 --> 00:14:09,200
through the transform pass, a little bit more cleanly.

266
00:14:10,300 --> 00:14:12,000
So yeah, when we do,

267
00:14:12,100 --> 00:14:13,700
Do entity basis.

268
00:14:16,000 --> 00:14:16,500
See here.

269
00:14:16,500 --> 00:14:17,400
Basis.

270
00:14:18,800 --> 00:14:20,200
When we do this, right?

271
00:14:20,600 --> 00:14:27,200
We then we change this thing to have the distance to PCB to pzb

272
00:14:27,200 --> 00:14:29,600
distance of of Target - Flora, see, right?

273
00:14:29,800 --> 00:14:30,900
And Flora Z is the value.

274
00:14:30,900 --> 00:14:34,400
We pass in and distance above Target, right is just that that

275
00:14:34,400 --> 00:14:35,500
stationary value.

276
00:14:35,900 --> 00:14:39,600
So it's really just this part that's controlling that distance.

277
00:14:39,600 --> 00:14:44,800
And so in general I think if we want our cutscene to be restored to

278
00:14:45,100 --> 00:14:49,100
To working the way that it used to, then it's really not that anymore

279
00:14:49,100 --> 00:14:50,300
in terms of what controls.

280
00:14:50,300 --> 00:14:57,200
It's really the floor Z so it's really you know, oops, it's really

281
00:14:57,200 --> 00:14:57,700
that.

282
00:14:57,700 --> 00:14:59,600
I think that is what we would need.

283
00:15:00,000 --> 00:15:01,100
And oops.

284
00:15:02,200 --> 00:15:06,300
And that is probably most of our problem there.

285
00:15:06,300 --> 00:15:07,200
Let's take a quick look.

286
00:15:07,200 --> 00:15:10,100
I should probably set it up to start in cut scene modes.

287
00:15:10,100 --> 00:15:13,400
We don't have to wait for the are quote, unquote title screen.

288
00:15:13,800 --> 00:15:17,300
But again, I think that's part of it because, you know, we weren't

289
00:15:17,400 --> 00:15:21,700
properly setting that value at all before, let's take a quick look at

290
00:15:21,700 --> 00:15:22,500
what's going on there.

291
00:15:24,500 --> 00:15:32,200
Alright, so inside, here are transform offset, P has a z value of

292
00:15:32,200 --> 00:15:33,700
zero, which is what I want.

293
00:15:33,700 --> 00:15:35,000
I don't want it to be offset there.

294
00:15:35,200 --> 00:15:39,400
And now, we do have a floor Z offset of - 200.

295
00:15:41,800 --> 00:15:46,800
Let's take a quick look here at what's going to happen when I flew

296
00:15:46,800 --> 00:15:50,200
through the transform just so I can get a feel for what else gets used

297
00:15:50,200 --> 00:15:50,600
here.

298
00:15:51,000 --> 00:15:53,100
Right, hold on a second.

299
00:15:53,800 --> 00:15:59,000
So here's my push bitmap call and and

300
00:16:02,800 --> 00:16:04,100
Somewhere here.

301
00:16:05,700 --> 00:16:07,200
We should.

302
00:16:09,000 --> 00:16:11,500
Be getting the basis.

303
00:16:14,900 --> 00:16:15,800
Tim that basis.

304
00:16:16,600 --> 00:16:18,700
So get bitmap Tim automatically, does that?

305
00:16:19,000 --> 00:16:22,000
Never mind, never mind.

306
00:16:22,100 --> 00:16:23,500
But let's take a look at what it returned.

307
00:16:23,500 --> 00:16:24,000
Anyway.

308
00:16:25,200 --> 00:16:29,000
So let's see here, scale 3.77.

309
00:16:29,300 --> 00:16:34,800
So I guess what I'd say is it looks like to let's just take a quick

310
00:16:34,800 --> 00:16:35,400
look here.

311
00:16:37,300 --> 00:16:41,700
You know here we've got our pz - camera off set C so that's clearly

312
00:16:41,700 --> 00:16:44,600
talking about, you know, that that distance.

313
00:16:44,700 --> 00:16:47,800
They're if we if we look and see what our Z values are, right?

314
00:16:47,800 --> 00:16:51,900
Our Z values are actually kind of getting further away the Z value

315
00:16:51,900 --> 00:16:53,600
kind of goes up right?

316
00:16:53,700 --> 00:16:56,100
That's the opposite sense that it used to be though.

317
00:16:57,100 --> 00:17:03,900
So really this value is supposed to be flipped around because the

318
00:17:03,900 --> 00:17:08,000
floor is he goes up towards the screen, whereas our cutscenes were

319
00:17:08,000 --> 00:17:09,200
going the other way.

320
00:17:10,099 --> 00:17:12,700
So that's another bug in there in addition.

321
00:17:13,800 --> 00:17:14,500
So yeah, so I've got

322
00:17:14,599 --> 00:17:17,099
At least those two, those should both be fixed.

323
00:17:17,099 --> 00:17:20,599
Now, trying to think if there's other things, that might be tricky

324
00:17:20,599 --> 00:17:21,500
inside the transform.

325
00:17:21,500 --> 00:17:22,500
Let's see how we're doing here.

326
00:17:22,500 --> 00:17:24,500
If we were able to fix any of that.

327
00:17:25,200 --> 00:17:25,700
Let's see.

328
00:17:25,700 --> 00:17:26,200
There we go.

329
00:17:28,500 --> 00:17:29,500
Why did that?

330
00:17:33,100 --> 00:17:33,800
Let me see here.

331
00:17:35,600 --> 00:17:37,000
Why did that not trigger right away?

332
00:17:37,000 --> 00:17:37,600
And I know why.

333
00:17:37,600 --> 00:17:42,300
Anyway, so, here we are on the floor Z, which I think now is

334
00:17:48,400 --> 00:17:50,000
Well, that's still going the wrong way.

335
00:17:50,700 --> 00:17:54,400
I thought when I looked at this before, I guess it wasn't going the

336
00:17:54,400 --> 00:17:54,800
wrong way.

337
00:17:54,800 --> 00:17:58,300
Let me just let me just double check because I want this to be going

338
00:17:58,600 --> 00:17:59,300
upward.

339
00:18:00,500 --> 00:18:05,200
Like I want the floor Z value to get negative as it gets further away

340
00:18:05,600 --> 00:18:07,700
and I just want to make sure that that's actually what we're doing

341
00:18:07,700 --> 00:18:08,000
here.

342
00:18:12,500 --> 00:18:14,600
Because I know those e values in there, I just looked at the ones that

343
00:18:14,600 --> 00:18:17,900
the cutscene they were actually going.

344
00:18:17,900 --> 00:18:20,000
They were increasing as they got further away.

345
00:18:20,000 --> 00:18:22,100
Why is that not trigger this?

346
00:18:22,600 --> 00:18:23,300
By the way?

347
00:18:24,300 --> 00:18:24,600
I guess.

348
00:18:24,600 --> 00:18:27,500
There's just a pause a quick black screen in there or something like

349
00:18:27,500 --> 00:18:27,800
this.

350
00:18:28,700 --> 00:18:33,800
So anyway here we are with the camera off set Z and the peasy.

351
00:18:34,500 --> 00:18:36,800
So I guess this is already negated.

352
00:18:36,800 --> 00:18:39,200
We must already negate it when it comes in.

353
00:18:39,200 --> 00:18:40,800
I guess, right?

354
00:18:43,200 --> 00:18:47,000
And I'm not really sure why that is, but that's apparently how we do

355
00:18:47,000 --> 00:18:47,100
it.

356
00:18:47,100 --> 00:18:49,600
So, where do we get that from the layer?

357
00:18:50,000 --> 00:18:57,300
The layer p-value here it is, is already pre negated, so why does that

358
00:18:57,300 --> 00:18:57,800
happen?

359
00:18:57,800 --> 00:18:58,600
How is that happening?

360
00:18:58,600 --> 00:19:02,100
Because these are not negative here, so those must be negated in some

361
00:19:02,100 --> 00:19:06,100
other way, right, I guess.

362
00:19:06,100 --> 00:19:10,200
I mean, I don't know what else is happening there per se.

363
00:19:11,800 --> 00:19:12,900
Let's see.

364
00:19:15,400 --> 00:19:17,400
let's see here, intro cutscene

365
00:19:24,100 --> 00:19:26,000
layers P.

366
00:19:27,100 --> 00:19:31,300
So interestingly enough the layers in that actually do have - zzz

367
00:19:32,800 --> 00:19:33,500
Oh, okay.

368
00:19:33,700 --> 00:19:34,900
So that's just the scale.

369
00:19:34,900 --> 00:19:37,300
I was looking at, I'm just an idiot.

370
00:19:37,300 --> 00:19:38,900
I'm looking at the wrong value.

371
00:19:38,900 --> 00:19:40,600
So they are - inside here.

372
00:19:40,600 --> 00:19:43,300
I was for some reason looking at this, I don't know why brain fart.

373
00:19:43,300 --> 00:19:45,300
I looked at the last value going over the last 50.

374
00:19:45,500 --> 00:19:48,600
It's not Z, there's my ex, there's my why there's my Z so that all

375
00:19:48,600 --> 00:19:49,200
makes sense.

376
00:19:49,300 --> 00:19:50,900
So, there's that 200

377
00:19:51,800 --> 00:19:54,900
- 200 so that that's actually good.

378
00:19:54,900 --> 00:19:58,300
It's going - is going backwards into the screen which is what I

379
00:19:58,300 --> 00:19:59,000
wanted.

380
00:19:59,400 --> 00:20:00,200
So that's fine.

381
00:20:00,700 --> 00:20:05,000
So when we compute this value, here is our computation.

382
00:20:05,100 --> 00:20:07,200
This value comes out - which is what I want.

383
00:20:07,200 --> 00:20:08,100
So I didn't have to worry.

384
00:20:08,100 --> 00:20:09,100
That was fine.

385
00:20:09,700 --> 00:20:10,900
It's assigned to the floor z.

386
00:20:10,900 --> 00:20:12,800
Now I want to actually not mess up.

387
00:20:12,800 --> 00:20:19,800
My stepping here, I want to step to see what the transform is that

388
00:20:19,800 --> 00:20:20,500
happens there.

389
00:20:20,500 --> 00:20:21,500
So here, we are in pushed.

390
00:20:21,600 --> 00:20:22,100
Map.

391
00:20:22,600 --> 00:20:27,100
I'm going to step in here and I'm going to look at the get render

392
00:20:27,100 --> 00:20:30,100
entity basis P here so I can take a look at what happens.

393
00:20:31,000 --> 00:20:33,200
So, here's my p-value, right?

394
00:20:33,200 --> 00:20:36,200
And I'm going to put that in the watch window so I can see it a little

395
00:20:36,200 --> 00:20:36,900
bit easier.

396
00:20:37,300 --> 00:20:41,500
Here's my X and my Y and those are reasonable because those are the

397
00:20:41,500 --> 00:20:42,300
upper corner.

398
00:20:42,300 --> 00:20:44,400
So that, you know, that seems okay.

399
00:20:44,400 --> 00:20:49,600
And let's take a look at object, transform offset key as well.

400
00:20:49,800 --> 00:20:51,400
Just to make sure that that's not so

401
00:20:51,600 --> 00:20:55,100
It's not changing the Z value at all, but it's got the X and Y in

402
00:20:55,100 --> 00:20:56,000
there, and that's fine.

403
00:20:57,900 --> 00:20:59,900
all right, so we're

404
00:21:00,000 --> 00:21:03,900
Darth the graphic, we have distance above Target is set to what it's

405
00:21:03,900 --> 00:21:05,900
set to nothing, so that's fine.

406
00:21:07,400 --> 00:21:10,200
And then we come through here and we say, all right, whatever the

407
00:21:10,200 --> 00:21:14,000
floor is e is then the distance away is going to be sort of the

408
00:21:14,000 --> 00:21:16,200
negative of that, which is fine, which is 200.

409
00:21:16,200 --> 00:21:18,500
There we go, the near clipping plane.

410
00:21:18,500 --> 00:21:21,100
We don't have to worry about because we're certainly not that close to

411
00:21:21,100 --> 00:21:21,400
it.

412
00:21:22,000 --> 00:21:22,600
Height off.

413
00:21:22,600 --> 00:21:27,200
A floor is 200 and oh-oh.

414
00:21:34,800 --> 00:21:39,500
Ah, okay, so the Z value is still an absolute coordinates there.

415
00:21:39,500 --> 00:21:43,700
So we have to then say because we're using that for y displacement, we

416
00:21:43,700 --> 00:21:49,800
have to then also say that whatever the Z value is that we pass down,

417
00:21:49,900 --> 00:21:51,600
which I guess we can pass.

418
00:21:51,600 --> 00:21:56,100
The way we were passing is actually also going to be equal to that so

419
00:21:56,100 --> 00:21:58,200
that they're set equivalently, right?

420
00:21:58,200 --> 00:21:59,000
Both things.

421
00:22:00,100 --> 00:22:01,700
Let's take a look at what we got there.

422
00:22:03,000 --> 00:22:06,000
We have to step through that one more time, just to see what happens

423
00:22:06,000 --> 00:22:06,900
after that one.

424
00:22:07,600 --> 00:22:11,500
Meow, meow, meow, meow, meow meow meow meow, meow, meow meow.

425
00:22:11,500 --> 00:22:11,800
Meow

426
00:22:13,900 --> 00:22:19,900
Okay, so now the cutscene has been restored and that looks roughly

427
00:22:19,900 --> 00:22:20,600
correct to me.

428
00:22:21,200 --> 00:22:22,300
So I think we're good.

429
00:22:22,300 --> 00:22:27,100
Let me go ahead and just speed us up a little bit here so that we can

430
00:22:27,100 --> 00:22:32,000
see what are.what are cutscene.

431
00:22:32,000 --> 00:22:36,400
Looks like later, we really need to work on our debug you.

432
00:22:36,400 --> 00:22:42,500
I hear this is not in a very efficient way to to speed things up takes

433
00:22:42,500 --> 00:22:43,400
forever.

434
00:22:45,300 --> 00:22:49,900
So, all of these look like they used to look to me for the most part,

435
00:22:50,000 --> 00:22:52,100
everything seems pretty.

436
00:22:52,100 --> 00:22:52,500
Okay.

437
00:22:52,500 --> 00:22:56,700
Now, I don't see a lot of issues here.

438
00:23:15,200 --> 00:23:17,500
Yeah, so I think that's it.

439
00:23:17,500 --> 00:23:21,300
It was just that fact that we added the weird floor stuff and the

440
00:23:21,600 --> 00:23:23,900
cutscenes have to run through it again.

441
00:23:23,900 --> 00:23:26,600
Probably another good reason to switch to a more traditional 3D path.

442
00:23:26,600 --> 00:23:31,900
I mean this stuff is so hacky the the sort of Two and a Half D where

443
00:23:31,900 --> 00:23:36,200
displacement thing just gets very happy and you know the nice part

444
00:23:36,200 --> 00:23:40,600
about the 3D stuff is it's been so well kind of hammered on that you

445
00:23:40,600 --> 00:23:42,500
kind of know the right way to do things.

446
00:23:42,900 --> 00:23:44,600
Maybe again it's just that because I'm more

447
00:23:45,000 --> 00:23:47,400
Instant 3D that it feels that way to me.

448
00:23:47,400 --> 00:23:47,800
I don't know.

449
00:23:47,800 --> 00:23:50,200
But 2D always just feels very happy to me in that way.

450
00:23:50,200 --> 00:23:50,900
And I did it.

451
00:23:51,100 --> 00:23:52,800
It's kind of frustrating anyway.

452
00:23:53,500 --> 00:23:55,100
So that bug is done.

453
00:23:55,100 --> 00:23:56,900
Let's take a look now at the traversals.

454
00:23:57,400 --> 00:23:57,800
Again.

455
00:23:57,800 --> 00:23:59,800
If you remember what this bug was, it's

456
00:24:00,000 --> 00:24:03,000
That when I run the game, you can see that.

457
00:24:03,000 --> 00:24:05,100
There's a problem with initial traversals.

458
00:24:05,100 --> 00:24:08,600
First of all, those snakes are not supposed to start off on the main

459
00:24:08,600 --> 00:24:08,900
character.

460
00:24:08,900 --> 00:24:10,800
That's a total bug.

461
00:24:10,800 --> 00:24:16,000
The there's there's not supposed to be any way to hop through those

462
00:24:16,000 --> 00:24:16,600
trees, right?

463
00:24:16,600 --> 00:24:18,900
Those traversals are supposed to be occupied by the trees.

464
00:24:18,900 --> 00:24:21,000
They're not being occupied by the tree is currently.

465
00:24:21,000 --> 00:24:24,800
So there's something about the initial creation phase, which we were

466
00:24:24,800 --> 00:24:28,800
sort of working on a little bit that made it so that the traversable

467
00:24:28,800 --> 00:24:29,600
is didn't get set.

468
00:24:30,000 --> 00:24:33,700
Early and so that's like something that we definitely want to fix.

469
00:24:33,900 --> 00:24:36,900
It's the only bug I noticed that got introduced when we did that sort

470
00:24:36,900 --> 00:24:37,800
of change over.

471
00:24:38,100 --> 00:24:40,500
And so we want to kind of go through there and figure out why that's

472
00:24:40,500 --> 00:24:44,800
happening like what our problem is there because I don't actually know

473
00:24:44,800 --> 00:24:49,000
what what's causing that and we want to just fix that one.

474
00:24:50,300 --> 00:24:51,700
So let me go ahead and do that.

475
00:24:52,200 --> 00:24:54,000
Cure is

476
00:24:58,400 --> 00:25:00,100
The way that is happening at the moment.

477
00:25:00,800 --> 00:25:02,600
So the Sim region.

478
00:25:03,000 --> 00:25:08,200
I think we sort of Switched the packing so that now like world doesn't

479
00:25:08,200 --> 00:25:08,900
do.

480
00:25:08,900 --> 00:25:09,300
Oops.

481
00:25:11,000 --> 00:25:12,700
World doesn't do the packing, right?

482
00:25:12,900 --> 00:25:16,700
What we do is we just have ways to, to say, I want to put something

483
00:25:16,700 --> 00:25:20,800
into a chunk, or remove something from a chunk, which is this, you

484
00:25:20,800 --> 00:25:24,100
know, kind of code here that just in charge of like, bucketing up the

485
00:25:24,100 --> 00:25:25,200
world, right?

486
00:25:26,700 --> 00:25:27,100
Excuse me.

487
00:25:34,600 --> 00:25:37,800
And that stuff is now entirely.

488
00:25:38,200 --> 00:25:43,100
Just it's just what the same region uses to basically stream in and

489
00:25:43,100 --> 00:25:45,500
stream out entities from the permanent World storage.

490
00:25:45,500 --> 00:25:45,800
Now.

491
00:25:45,800 --> 00:25:46,600
The thing is

492
00:25:49,000 --> 00:25:54,600
We then when we want to create entities we have a SIM region that's

493
00:25:54,600 --> 00:25:58,100
open that we use to create the things that we want to create in the

494
00:25:58,100 --> 00:25:58,800
world.

495
00:25:59,100 --> 00:26:03,500
But what we found is, although most of the things are working

496
00:26:03,500 --> 00:26:06,800
properly, that sort of traversable placement stuff, isn't working

497
00:26:06,800 --> 00:26:07,400
properly.

498
00:26:08,000 --> 00:26:12,800
And so what I need to do is take a look at say, for example, why trees

499
00:26:12,800 --> 00:26:16,600
are not being able to occupy their proper traversable points.

500
00:26:16,600 --> 00:26:17,900
Now, if we look at when that

501
00:26:18,200 --> 00:26:18,800
Happening.

502
00:26:19,600 --> 00:26:24,800
I believe it's this code right here, you can see what happens when you

503
00:26:24,800 --> 00:26:25,800
call add wall.

504
00:26:25,800 --> 00:26:29,400
You pass it a reference to one of those traversable which is just like

505
00:26:29,400 --> 00:26:35,500
okay like I'm talking about this place over here and that that's

506
00:26:35,500 --> 00:26:41,600
reversible reference is just where the tree is supposed to be placed.

507
00:26:41,900 --> 00:26:46,800
And what I don't know is why this code basically isn't working, right?

508
00:26:46,800 --> 00:26:48,000
This entity occupying

509
00:26:48,100 --> 00:26:51,800
Going to standing on code isn't working and we kind of want to look at

510
00:26:51,800 --> 00:26:52,700
why that is.

511
00:26:53,800 --> 00:26:58,800
So one thing I want to do first is I want to also ask the question of

512
00:26:59,000 --> 00:26:59,800
what's Happening

513
00:27:00,000 --> 00:27:01,800
Those traversable references.

514
00:27:01,800 --> 00:27:05,900
Exactly, let me take a quick look at how those are working.

515
00:27:05,900 --> 00:27:07,500
Let's see, traversable reference.

516
00:27:08,000 --> 00:27:11,400
So you can see that it's got an entity reference there and an index.

517
00:27:12,300 --> 00:27:15,300
And so it's just saying like, hey, here's the entity.

518
00:27:15,300 --> 00:27:20,600
I'm talking about, here's the index of the entity as well for packing

519
00:27:20,600 --> 00:27:21,300
purposes.

520
00:27:21,500 --> 00:27:25,300
So let's take a look at just what it, what it set to in that call,

521
00:27:25,300 --> 00:27:28,500
just so I can have a sense of what's even getting past in here.

522
00:27:30,200 --> 00:27:35,400
So here I am in that call when one of those trees is getting passed on

523
00:27:36,300 --> 00:27:39,700
to the system and it looks like.

524
00:27:39,700 --> 00:27:43,300
All right, so there's no editi pointer but there isn't any value, The

525
00:27:43,300 --> 00:27:44,700
Entity value is 7.

526
00:27:45,700 --> 00:27:50,700
And so one of the interesting things about that is at this point, we

527
00:27:50,700 --> 00:27:52,000
do have a SIM region.

528
00:27:52,000 --> 00:27:55,000
So really that entity pointer should be valid.

529
00:27:55,300 --> 00:27:59,300
And the fact that that entity pointer isn't valid is probably 100

530
00:27:59,300 --> 00:27:59,900
percent of the

531
00:28:00,000 --> 00:28:05,200
Well, um, actually, so inside the play World call.

532
00:28:05,200 --> 00:28:10,400
When we're actually adding this wall, when we look up into the rooms

533
00:28:10,800 --> 00:28:14,000
information, we're not getting back, the kind of traversable that I'm

534
00:28:14,000 --> 00:28:14,900
looking for.

535
00:28:15,400 --> 00:28:19,700
So what I'd like to do is I'd like to go ahead and find out why we're

536
00:28:19,700 --> 00:28:22,100
getting why we're not having any pointers in there.

537
00:28:22,100 --> 00:28:26,100
And that's probably all we really need to do so inside.

538
00:28:26,600 --> 00:28:27,800
Handmade World mode.

539
00:28:28,800 --> 00:28:32,500
When I have ADD standard room here and add standard room.

540
00:28:32,800 --> 00:28:37,600
What I'm doing is, I'm getting back, right, these?

541
00:28:37,600 --> 00:28:40,000
These traversable 's from that call.

542
00:28:40,100 --> 00:28:40,800
So it's this.

543
00:28:40,800 --> 00:28:43,200
It's this guy right here, that's malfunctioning.

544
00:28:43,200 --> 00:28:45,500
He set up to zero as you can see.

545
00:28:45,800 --> 00:28:47,000
So let's see what happens.

546
00:28:47,300 --> 00:28:50,600
So this is probably our entire problem here.

547
00:28:50,900 --> 00:28:55,300
We're setting just only the entity standing on index and we're not

548
00:28:55,300 --> 00:28:58,400
sending the pointer really what we want to do is probably the

549
00:28:58,600 --> 00:28:59,300
Rest of that.

550
00:28:59,600 --> 00:29:00,200
Now, right?

551
00:29:00,200 --> 00:29:01,700
We want to set the pointer.

552
00:29:01,700 --> 00:29:03,900
So this is probably just some, you know, you know, this code is

553
00:29:03,900 --> 00:29:04,200
hacking.

554
00:29:04,200 --> 00:29:07,100
This is The Pact World gencode, which we haven't spent much time

555
00:29:07,100 --> 00:29:07,800
thinking about.

556
00:29:08,500 --> 00:29:11,900
So the fact that pointer wasn't set is probably most of the problem

557
00:29:12,100 --> 00:29:12,900
it's might yet.

558
00:29:12,900 --> 00:29:14,800
In fact, it looks like it was all the problem.

559
00:29:15,100 --> 00:29:17,600
So we just weren't setting that pointer and we wanted to set that

560
00:29:17,600 --> 00:29:19,800
pointer because that's when you have a SIM region.

561
00:29:19,800 --> 00:29:22,600
That pointer is the thing that's actually being used.

562
00:29:22,600 --> 00:29:26,000
We were probably just hacking the index ID there, back in the day,

563
00:29:26,000 --> 00:29:27,600
when we didn't have a SIM region open.

564
00:29:27,600 --> 00:29:28,200
So, we were just,

565
00:29:28,500 --> 00:29:31,800
Old setting the values as you know, prior to packing.

566
00:29:32,300 --> 00:29:35,100
So I think that's really all there is to that and now you know,

567
00:29:35,100 --> 00:29:36,400
everyone is properly.

568
00:29:36,700 --> 00:29:40,300
You can see that the trees have the highlighted orange debug thing

569
00:29:40,300 --> 00:29:40,900
beneath them.

570
00:29:41,100 --> 00:29:44,400
That lets us know that they're actually standing on that point, which

571
00:29:44,400 --> 00:29:45,300
is what we want.

572
00:29:45,400 --> 00:29:46,800
There's nothing over there obviously.

573
00:29:47,400 --> 00:29:50,100
And so that's all well and good.

574
00:29:50,400 --> 00:29:53,900
Everyone's happy, everyone's smiling, it's like Christmas morning.

575
00:29:54,800 --> 00:29:58,300
It's like the most perfect little Christmas morning when

576
00:29:58,500 --> 00:29:59,400
Krampus comes.

577
00:30:00,000 --> 00:30:03,400
He actually comes before that, but that's beside the point.

578
00:30:04,100 --> 00:30:04,400
All right.

579
00:30:04,400 --> 00:30:09,600
So that was that bug and now that bug is gone and that's all good.

580
00:30:09,600 --> 00:30:10,400
Well, and good.

581
00:30:11,400 --> 00:30:13,200
It's 5:30 right now.

582
00:30:13,200 --> 00:30:17,100
According to the clock, which means that we have 30 minutes to take a

583
00:30:17,100 --> 00:30:18,000
look at something.

584
00:30:18,400 --> 00:30:23,200
So maybe cleaning up this Arena stuff is the best way to do that at

585
00:30:23,200 --> 00:30:24,100
the moment.

586
00:30:25,200 --> 00:30:29,700
I'm not 100% sure how I want to go about that.

587
00:30:30,000 --> 00:30:34,900
But probably what I want to do is put in something that forces us to

588
00:30:35,300 --> 00:30:40,300
explicitly like initialize Arenas just so that we can kind of have

589
00:30:40,300 --> 00:30:45,700
some kind of attribution as to what arena is what like right now we're

590
00:30:45,700 --> 00:30:49,900
using zero initialization for Arenas which means that an arena can

591
00:30:49,900 --> 00:30:53,800
just be set to zero it can just be cleared to zero and it will

592
00:30:53,800 --> 00:30:55,600
magically stop start working.

593
00:30:56,400 --> 00:30:59,000
I do like that in a in general.

594
00:30:59,000 --> 00:30:59,900
That is how I

595
00:31:00,000 --> 00:31:04,100
For a code to work in general, but in certain cases, there are reasons

596
00:31:04,100 --> 00:31:05,500
why that's not so useful.

597
00:31:06,800 --> 00:31:09,800
In this particular case, one of the reasons why that's not so useful

598
00:31:10,100 --> 00:31:14,000
is that zero clearing the Arena's means that there's really no way for

599
00:31:14,000 --> 00:31:18,700
me to put information in there about which arena is which right?

600
00:31:19,100 --> 00:31:22,900
I can't set like any debug information on those arenas for example

601
00:31:23,900 --> 00:31:28,200
because I'm not ever calling anything to initialize them, right?

602
00:31:28,200 --> 00:31:33,100
So I literally have no idea what Arenas what and I can't do some kind

603
00:31:33,100 --> 00:31:36,500
of trick like store the file and line number of the initializer.

604
00:31:36,600 --> 00:31:37,200
The arena.

605
00:31:37,400 --> 00:31:40,900
So that when I look through later and go, oh, let's see, who's using

606
00:31:40,900 --> 00:31:41,500
what memory?

607
00:31:41,500 --> 00:31:42,200
I can just go.

608
00:31:42,200 --> 00:31:45,000
Oh, that's the arena that start, you know, from from this part of the

609
00:31:45,000 --> 00:31:46,900
code and this is the arena from the other part of the code.

610
00:31:51,400 --> 00:31:59,300
Now we can just to be clear, we can still gather that data and we have

611
00:31:59,300 --> 00:32:02,200
other ways of gathering that data, the way that we have to gather that

612
00:32:02,200 --> 00:32:05,900
data is to do it by Arena pointer.

613
00:32:07,700 --> 00:32:11,200
And use sort of the debug collation system to pick up when people are

614
00:32:11,200 --> 00:32:14,500
using various Arenas and storing the data that way.

615
00:32:15,500 --> 00:32:19,000
So that is also another option, but it's definitely a more involved

616
00:32:19,000 --> 00:32:21,800
option than Simply Having the Rios be initialized.

617
00:32:22,200 --> 00:32:26,600
So there's that the other thing that's true about initializing Arenas,

618
00:32:26,600 --> 00:32:31,800
is I kind of want there to be some attribution of Arenas to parent

619
00:32:31,800 --> 00:32:32,800
Arenas basically.

620
00:32:32,900 --> 00:32:34,700
Like I'd like to sort of have a Rena's.

621
00:32:36,100 --> 00:32:40,700
Be at aggregated up so that you say you know, this arena is a

622
00:32:40,700 --> 00:32:43,700
submarine of this other Arena so that if this Arena gets cleaned up

623
00:32:43,700 --> 00:32:45,400
that Arena gets cleaned up, right?

624
00:32:45,900 --> 00:32:49,800
Because typically, if even if you want to separate arenas for

625
00:32:49,800 --> 00:32:53,700
allocations, oftentimes they can both be sort of thought of as getting

626
00:32:53,700 --> 00:32:58,700
cleaned up at the same time and it just reduces bugs if I have to if I

627
00:32:58,700 --> 00:32:59,900
have it so that an

628
00:33:00,000 --> 00:33:04,000
Time I just kind of say cure the things it exactly the same as an

629
00:33:04,000 --> 00:33:07,200
arena makes memory allocation simpler because you don't have to worry

630
00:33:07,200 --> 00:33:10,900
about smart pointers or explicitly freeing things or Garbage

631
00:33:10,900 --> 00:33:13,900
Collection or any of this stuff you can just say I have an arena.

632
00:33:13,900 --> 00:33:16,000
All the stuff for this part of the code goes in it.

633
00:33:16,000 --> 00:33:18,800
I know that if I want to just free at all, I just say, get rid of the

634
00:33:18,800 --> 00:33:21,300
arena and I don't have to think too hard about it, right?

635
00:33:21,400 --> 00:33:23,800
Kai does everything for me and it's nice and fast.

636
00:33:23,800 --> 00:33:25,400
It doesn't take any time, right?

637
00:33:27,100 --> 00:33:29,200
Well, the same thing is sort of true of attributing.

638
00:33:29,200 --> 00:33:34,100
The Arena's, this is basically like saying hey Arenas sort of have the

639
00:33:34,100 --> 00:33:37,500
equivalent of something like a smart pointer, which is to say that an

640
00:33:37,500 --> 00:33:40,400
arena can be in charge of freeing a sub Arena, right?

641
00:33:41,200 --> 00:33:46,400
And this is just a way of putting that sort of aggregation at a level

642
00:33:46,400 --> 00:33:50,600
that I think makes more sense than doing something like individual

643
00:33:50,600 --> 00:33:51,200
smart pointers.

644
00:33:51,200 --> 00:33:54,700
Because the problem I've been asked about smart pointers before and

645
00:33:54,700 --> 00:33:56,000
why don't use them there?

646
00:33:56,200 --> 00:33:58,600
And I don't use them is because they're very inefficient.

647
00:33:58,600 --> 00:33:59,600
They do a lot of work.

648
00:33:59,600 --> 00:34:04,000
That doesn't actually need to be done and cause a lot of code

649
00:34:04,000 --> 00:34:07,200
complexity to be introduced that that isn't actually doing anything

650
00:34:07,800 --> 00:34:11,300
and that is tends to be stuff that I just don't, like, I would rather

651
00:34:11,300 --> 00:34:14,800
have my code, only do things when it needs to do things as possible

652
00:34:15,699 --> 00:34:18,900
and you know, to a certain extent C and C++ make it kind of difficult

653
00:34:18,900 --> 00:34:22,100
to do that sometimes because they're not the best languages in terms

654
00:34:22,100 --> 00:34:26,000
of high level constructs to be sure but Arenas are

655
00:34:26,100 --> 00:34:29,800
Example of one relatively easy way, you can Implement something that

656
00:34:29,800 --> 00:34:32,699
gets you out of the business of having all of the like all of that

657
00:34:32,699 --> 00:34:35,600
crazy smartpoint Earnest and other things like that that I don't

658
00:34:35,600 --> 00:34:40,100
really feel like are very useful but that isn't to say that the

659
00:34:40,100 --> 00:34:45,800
concept of automatic cleanup is somehow bad automatic, cleanup is

660
00:34:45,800 --> 00:34:46,199
great.

661
00:34:46,199 --> 00:34:48,600
If you can figure out a way to implement it such that it doesn't do

662
00:34:48,600 --> 00:34:49,600
any surgery work.

663
00:34:50,100 --> 00:34:52,800
And with Arenas, I feel like you can kind of get a nice sweet spot

664
00:34:52,800 --> 00:34:56,000
there where it's like, alright Arenas are all going to agriculture.

665
00:34:56,100 --> 00:34:58,000
Up all of their allocations.

666
00:34:58,000 --> 00:35:01,000
So you're not going to have a lot of, you know, hundreds of little

667
00:35:01,000 --> 00:35:07,400
smart pointer deletion calls ruining your day, but you can sort of get

668
00:35:07,400 --> 00:35:12,300
that same behavior of like, I don't have to remember to free the World

669
00:35:12,300 --> 00:35:13,200
Arena.

670
00:35:13,200 --> 00:35:17,300
When I free the game mode Arena, I can just know that those two are

671
00:35:17,300 --> 00:35:21,500
linked so that when I close down this mode, the Arena's involved in

672
00:35:21,500 --> 00:35:24,000
that mode, will clean themselves up correctly, right?

673
00:35:24,000 --> 00:35:26,100
So you can kind of get

674
00:35:26,100 --> 00:35:31,100
get a nice Best of Both Worlds scenario there where you can have the

675
00:35:31,100 --> 00:35:34,500
automation, but you don't have to have any sort of

676
00:35:36,400 --> 00:35:43,500
You know, you don't have to worry about that other like the, the sort

677
00:35:43,500 --> 00:35:48,600
of pervasive waste that something like a smart pointer inserts into

678
00:35:48,600 --> 00:35:49,200
your code base.

679
00:35:49,200 --> 00:35:50,300
Right?

680
00:35:50,300 --> 00:35:54,500
So yeah, so I just wanted to take a quick look at that.

681
00:35:54,500 --> 00:35:59,100
One thing that we can do first is just take a look at everywhere.

682
00:35:59,100 --> 00:35:59,500
We're actually

683
00:36:00,100 --> 00:36:05,300
Using these things and just kind of get an idea for that for for how

684
00:36:05,300 --> 00:36:06,000
that's working.

685
00:36:06,500 --> 00:36:12,000
And you know, essentially we've got a lot of people who are getting it

686
00:36:12,000 --> 00:36:16,100
passed into them potentially but in terms of people who are actually

687
00:36:16,100 --> 00:36:18,400
doing it actually have one themselves.

688
00:36:19,100 --> 00:36:19,900
Let's see here.

689
00:36:20,100 --> 00:36:22,100
So we have one in the world.

690
00:36:24,200 --> 00:36:25,100
What's going on here?

691
00:36:27,000 --> 00:36:28,200
Why am I not able to?

692
00:36:32,500 --> 00:36:33,700
I don't know why I'm not able to do that.

693
00:36:33,900 --> 00:36:34,400
Oh right.

694
00:36:34,400 --> 00:36:36,500
This I'm using a version of for coder.

695
00:36:36,500 --> 00:36:37,600
That's a little bit old.

696
00:36:37,600 --> 00:36:39,300
I probably should upgrade my for coder.

697
00:36:39,700 --> 00:36:42,000
I was like, why can't I go next and previous in this buffer?

698
00:36:42,000 --> 00:36:44,900
And it's like because that was implemented in 4.0 12 or something like

699
00:36:44,900 --> 00:36:51,000
this for a part of 11, which I don't have installed, but I should all

700
00:36:51,000 --> 00:36:51,200
right.

701
00:36:51,200 --> 00:36:53,500
Anyway, no real issue there.

702
00:36:54,300 --> 00:36:56,500
We can still take a look at this fairly cleanly.

703
00:36:56,500 --> 00:36:59,100
So we've got one in handmade worlds.

704
00:37:00,100 --> 00:37:02,100
That that I least I thought that

705
00:37:02,200 --> 00:37:06,400
So when there, where was it inside?

706
00:37:06,400 --> 00:37:07,000
Hamid world.

707
00:37:07,000 --> 00:37:10,100
Yeah, right there, we've got one in handmade world.

708
00:37:12,000 --> 00:37:16,100
And then we've got some in handmade hero, you can see them sitting

709
00:37:16,100 --> 00:37:21,900
there, we've got like the audio, one runs the transient Arena, the

710
00:37:21,900 --> 00:37:27,900
game mode Arena, and then we've got the asset Arena, the debugger

711
00:37:27,900 --> 00:37:30,200
Arenas, and that's it.

712
00:37:30,200 --> 00:37:33,000
So, there aren't very many of these.

713
00:37:33,300 --> 00:37:40,800
There's actually very few of them and yeah, I guess so, one of the

714
00:37:40,800 --> 00:37:41,500
things that we

715
00:37:41,600 --> 00:37:42,100
And do.

716
00:37:42,100 --> 00:37:50,000
Now, if we want to is, we could pretty easily start thinking in terms

717
00:37:50,000 --> 00:37:55,300
of having the the arenas for like modes and stuff like that living

718
00:37:55,300 --> 00:37:58,600
inside the mode, which might be a little bit better than it is right

719
00:37:58,600 --> 00:37:59,100
now.

720
00:37:59,800 --> 00:38:02,100
And the reason that's a little bit better than what we were doing

721
00:38:02,100 --> 00:38:06,500
before, our is just because at the moment we couldn't keep multiple

722
00:38:06,500 --> 00:38:08,800
modes around, if that makes sense.

723
00:38:10,700 --> 00:38:11,100
Like

724
00:38:11,500 --> 00:38:16,000
we could actually create sort of a more robust type of like mode

725
00:38:16,000 --> 00:38:18,300
Moodle system if we want to.

726
00:38:18,300 --> 00:38:21,900
I don't know that we really, really do want to though, to be, to be

727
00:38:21,900 --> 00:38:22,800
completely honest with you.

728
00:38:26,100 --> 00:38:26,500
So, yeah.

729
00:38:26,500 --> 00:38:27,500
So there's that.

730
00:38:28,000 --> 00:38:31,200
Let me take a look at the World Arena stuff.

731
00:38:31,200 --> 00:38:32,600
Is there actually?

732
00:38:37,000 --> 00:38:38,400
Is it actually using its own?

733
00:38:38,400 --> 00:38:42,700
I guess it's not I guess the World Arena is just using whoever it's

734
00:38:42,700 --> 00:38:46,800
passed in as so I'll be honest.

735
00:38:46,800 --> 00:38:48,800
Maybe there really isn't anything to do here.

736
00:38:48,800 --> 00:38:52,800
It doesn't really look like there's there's all that much to do.

737
00:38:56,700 --> 00:38:57,900
Where's the search that?

738
00:38:57,900 --> 00:38:58,600
I just performed.

739
00:38:58,600 --> 00:38:59,200
There it is.

740
00:39:00,900 --> 00:39:03,000
There's really not very much to do here.

741
00:39:03,000 --> 00:39:05,400
It's pretty straightforward.

742
00:39:06,500 --> 00:39:07,100
Gosh.

743
00:39:07,900 --> 00:39:12,100
So, so maybe maybe we just don't need to do anything here.

744
00:39:16,000 --> 00:39:18,000
We've kept our memories usage, pretty clean.

745
00:39:18,000 --> 00:39:21,500
And I could pull that out but I guess I don't really know that we need

746
00:39:21,500 --> 00:39:21,900
to

747
00:39:26,300 --> 00:39:28,200
I could just leave it like it is for now.

748
00:39:36,300 --> 00:39:36,700
Yeah.

749
00:39:46,300 --> 00:39:46,900
Yeah, I don't know.

750
00:39:51,800 --> 00:39:55,800
I guess I'm going to have to say I do not really know.

751
00:39:57,700 --> 00:39:58,100
Yeah.

752
00:39:58,100 --> 00:40:01,000
Like what what to do about that?

753
00:40:01,500 --> 00:40:04,600
It looks like maybe this is just kind of the way it should be.

754
00:40:04,700 --> 00:40:09,100
Let's let's at least verify that we're not like leaking memory here.

755
00:40:09,100 --> 00:40:09,600
Though.

756
00:40:10,400 --> 00:40:15,700
You can see kind of our memory block situation where we've got, you

757
00:40:15,700 --> 00:40:17,600
know, our footprint up there.

758
00:40:17,600 --> 00:40:19,800
It's, that includes debug.

759
00:40:19,800 --> 00:40:21,300
So a lot of that memory is also

760
00:40:21,500 --> 00:40:23,800
We're going to be from the debug system and so on.

761
00:40:25,600 --> 00:40:28,900
Let's just make sure that when we switch in and out of these modes

762
00:40:28,900 --> 00:40:31,300
that we don't that we aren't hemorrhaging any memory here.

763
00:40:31,900 --> 00:40:37,000
Like here, for example, we have seventy six blocks allocated and you

764
00:40:37,000 --> 00:40:38,000
can kind of see it.

765
00:40:38,300 --> 00:40:40,900
It's stable at 76, is the cutscene playing?

766
00:40:41,400 --> 00:40:45,900
If I was to switch back into the game here I've suspected of the game.

767
00:40:45,900 --> 00:40:49,800
I've got seventy seven blocks allocated here, let's switch back out,

768
00:40:49,800 --> 00:40:52,300
or back down to 76 Back in 77.

769
00:40:53,000 --> 00:40:54,800
So, you know, we've got a nice stable.

770
00:40:55,100 --> 00:40:55,500
Footprint.

771
00:40:55,500 --> 00:40:57,200
I just want to make sure that was the case.

772
00:40:58,200 --> 00:41:01,200
So yeah, I guess I won't touch this anymore.

773
00:41:01,200 --> 00:41:04,000
Then I think that's fine, just the way it is.

774
00:41:04,800 --> 00:41:07,300
And I don't know that I really want to do this either.

775
00:41:07,300 --> 00:41:10,300
I think that that's probably fine the way that it is.

776
00:41:11,500 --> 00:41:15,700
So, yeah, we're kind of just down to this, which I've got about 20

777
00:41:15,700 --> 00:41:19,000
minutes left, and I don't know that I'm going to make much Headway out

778
00:41:19,000 --> 00:41:22,300
of here, but in terms of multiple SIM regions for frame.

779
00:41:22,300 --> 00:41:23,500
Yeah, this was kind of

780
00:41:27,400 --> 00:41:32,000
This was kind of just a problem with overlapping where we couldn't

781
00:41:32,000 --> 00:41:35,300
really figure out how we were going to deal with the overlap problem.

782
00:41:36,300 --> 00:41:41,000
And I talked about this a bunch and I don't remember any put real

783
00:41:41,000 --> 00:41:41,900
solutions to it.

784
00:41:41,900 --> 00:41:47,900
Unfortunately if me see if I've got a oh, I haven't rebooted the

785
00:41:47,900 --> 00:41:51,200
machine yet, have I I need to, I need to put like a sticky note on

786
00:41:51,200 --> 00:41:52,600
this machine to reboot it.

787
00:41:53,200 --> 00:41:54,800
So that the because the walk em dry

788
00:41:54,900 --> 00:41:57,000
Ivers are no longer working.

789
00:41:57,700 --> 00:41:59,700
Remember they died for some reason.

790
00:42:00,000 --> 00:42:05,100
I think when we, when we had that time, when we allocated so much

791
00:42:05,100 --> 00:42:06,600
memory, we like trash the machine.

792
00:42:06,600 --> 00:42:09,900
When we just like allocated, we were allocating without freeing and if

793
00:42:09,900 --> 00:42:10,700
you remember that.

794
00:42:11,600 --> 00:42:17,000
Yeah, but I gotta remember to do that because otherwise I won't get

795
00:42:17,100 --> 00:42:18,600
the proper tracking.

796
00:42:19,200 --> 00:42:24,900
But oh well, so the problem here on day 3 48, we go.

797
00:42:25,700 --> 00:42:29,000
This is like overlaps overlapping.

798
00:42:30,800 --> 00:42:37,200
Simulation, the problem with that was just that we can pretty easily

799
00:42:37,200 --> 00:42:39,400
do multiple simulations per frame.

800
00:42:39,800 --> 00:42:42,000
So, if you think about

801
00:42:43,700 --> 00:42:45,500
The game world looking kind of like this.

802
00:42:46,100 --> 00:42:49,200
And let's say this is how big a screen is so very tiny.

803
00:42:49,500 --> 00:42:52,300
And maybe there's another screen all the way over here.

804
00:42:52,300 --> 00:42:55,000
And like, yeah, there's like, you know, who knows tons of stuff in

805
00:42:55,000 --> 00:42:57,600
between here but you can like walk between it and whatever.

806
00:42:57,600 --> 00:43:01,100
So I could go all the way from here to here and it's like quite a few

807
00:43:01,400 --> 00:43:02,300
rooms away.

808
00:43:03,600 --> 00:43:05,800
Well, maybe I want to be simulating something here.

809
00:43:05,800 --> 00:43:09,100
And I want to be simulating something here because maybe up here.

810
00:43:09,100 --> 00:43:12,800
There's, you know, some NPC who's doing something important.

811
00:43:14,400 --> 00:43:17,200
Like maybe this, let's say, there's an NPC who's like looking for the

812
00:43:17,200 --> 00:43:19,800
hero and it's maybe going to find the hero eventually.

813
00:43:20,100 --> 00:43:24,100
So the NPC is like, walking along this path maybe and eventually going

814
00:43:24,100 --> 00:43:25,700
to get to the room that the heroes in.

815
00:43:26,300 --> 00:43:30,800
So here's the the NPC, you know, it's the simulation region would kind

816
00:43:30,800 --> 00:43:32,700
of be moving along this path.

817
00:43:32,700 --> 00:43:34,100
Moving moving, moving.

818
00:43:34,500 --> 00:43:38,200
And then eventually the the simulation regions would overlap.

819
00:43:38,200 --> 00:43:41,200
And you'd be left in a situation, where like, if this is a simulation

820
00:43:41,200 --> 00:43:42,500
region, here's the screen.

821
00:43:42,500 --> 00:43:43,300
And here's a simulation.

822
00:43:43,400 --> 00:43:45,400
One region for the hero.

823
00:43:45,600 --> 00:43:49,600
Right there would be an equivalent situation where maybe it would look

824
00:43:49,600 --> 00:43:54,300
like this for the NPC.

825
00:43:54,700 --> 00:44:00,000
And so their simulation regions, share a common boundary here and the

826
00:44:00,000 --> 00:44:05,400
problem with that is just that there's no way to reconcile this

827
00:44:05,400 --> 00:44:08,400
problem as far as I can think of in my head.

828
00:44:09,400 --> 00:44:13,300
Essentially, the only thing you can do that doesn't create.

829
00:44:13,400 --> 00:44:14,500
Some kind of weird.

830
00:44:14,500 --> 00:44:19,500
Buggy behavior is to merge the region so that your sim region now

831
00:44:19,500 --> 00:44:20,300
looks like this.

832
00:44:22,600 --> 00:44:23,100
Right.

833
00:44:25,800 --> 00:44:28,900
So that's actually fine, right?

834
00:44:28,900 --> 00:44:33,700
There's nothing particularly onerous about that and if it was just the

835
00:44:33,700 --> 00:44:38,400
case of, you know, in a typical game, there's what NPC and one Kuro

836
00:44:38,400 --> 00:44:44,700
that need their region simulated, that's probably fine, right?

837
00:44:44,700 --> 00:44:46,800
That that would just be fine.

838
00:44:48,200 --> 00:44:54,000
but the problem is, if you have multiple NPCs and the hero

839
00:44:56,300 --> 00:44:57,400
Hmm.

840
00:44:58,800 --> 00:44:59,800
you can end up in some

841
00:45:00,000 --> 00:45:03,700
Upstate where you've got lots of NPCs close to each other.

842
00:45:05,000 --> 00:45:06,200
And close to the hero.

843
00:45:06,500 --> 00:45:10,600
You end up with a giant Sim region that can't be subdivided and your

844
00:45:10,600 --> 00:45:13,200
frame rate would just tank, right?

845
00:45:14,000 --> 00:45:17,100
So I don't really have a solution for this problem.

846
00:45:17,100 --> 00:45:21,500
I don't know what you do to prevent that from becoming a serious

847
00:45:21,500 --> 00:45:22,100
problem.

848
00:45:22,800 --> 00:45:28,900
Other than just not allowing there to be enough NPCs that you would

849
00:45:28,900 --> 00:45:32,700
ever get into a situation where that could occur like, you know, you'd

850
00:45:32,700 --> 00:45:34,700
Force NPCs to only live in

851
00:45:34,800 --> 00:45:35,800
Our various regions.

852
00:45:35,800 --> 00:45:41,000
And, you know, NPC's can't free roam to some degree, right?

853
00:45:41,000 --> 00:45:45,300
So we know that, you know, maybe there's one or two NPCs that can free

854
00:45:45,300 --> 00:45:49,000
roam and we'll end up near the hero together and maybe that's fine.

855
00:45:49,300 --> 00:45:52,800
But then the rest of the NPC's who might be simulated stay within

856
00:45:53,000 --> 00:45:57,000
predefined areas and won't meet up with each other to create, you

857
00:45:57,000 --> 00:45:58,700
know, that kind of bad chaining effect.

858
00:46:02,100 --> 00:46:03,200
so, that's

859
00:46:04,300 --> 00:46:06,400
Alls I'm talking about, right?

860
00:46:07,200 --> 00:46:09,200
I hope that makes some sense there.

861
00:46:10,800 --> 00:46:11,600
Yeah.

862
00:46:11,700 --> 00:46:12,300
But

863
00:46:15,500 --> 00:46:18,900
Other than that, everything else that we do right now?

864
00:46:18,900 --> 00:46:24,800
As far as I know, is would just work like our multi simulating,

865
00:46:24,800 --> 00:46:26,900
multiple regions per frame would just work.

866
00:46:27,600 --> 00:46:30,300
I don't know that there's any problems with it and so then we could

867
00:46:30,300 --> 00:46:35,600
have like, all kinds of interesting NPC Behavior going on and stuff

868
00:46:35,600 --> 00:46:36,300
like that.

869
00:46:37,000 --> 00:46:40,900
So, one thing that might be interesting to know and I don't really

870
00:46:40,900 --> 00:46:42,000
know what it is at the moment.

871
00:46:42,000 --> 00:46:45,000
So I'm just going to take a quick Gander here is

872
00:46:45,600 --> 00:46:48,500
Without, you know, even though it means nothing because we're not

873
00:46:48,500 --> 00:46:52,500
really doing anything at the moment, I just want to get a ballpark

874
00:46:52,500 --> 00:46:57,700
estimate for if we were running in 02 mode, even just what we've got

875
00:46:57,700 --> 00:46:58,500
right now?

876
00:46:58,800 --> 00:47:03,700
What are we seeing in terms of a profile hit for, you know, the

877
00:47:03,700 --> 00:47:05,700
simulation step, right?

878
00:47:08,000 --> 00:47:11,100
So here's update and render entities, right?

879
00:47:11,200 --> 00:47:12,900
And here's the clocks for that.

880
00:47:13,600 --> 00:47:13,800
What?

881
00:47:13,800 --> 00:47:14,100
I guess.

882
00:47:14,100 --> 00:47:15,000
I don't know.

883
00:47:15,000 --> 00:47:17,300
Is what's that looking like in here?

884
00:47:17,600 --> 00:47:19,700
So, cures, debug collation.

885
00:47:19,700 --> 00:47:21,000
Here's the game update.

886
00:47:22,100 --> 00:47:25,900
Here's game update and render inside game update and render.

887
00:47:25,900 --> 00:47:31,200
We have update and render world's update rid of particle systems and N

888
00:47:31,200 --> 00:47:35,100
Sim, where's begins him?

889
00:47:35,900 --> 00:47:37,500
Is that an update and render worlds?

890
00:47:37,600 --> 00:47:38,800
Yeah, begin Sim.

891
00:47:39,000 --> 00:47:42,000
Execute brains update and render entities.

892
00:47:43,000 --> 00:47:45,100
So these are just really cheap at the moment.

893
00:47:45,100 --> 00:47:49,600
I guess is is one thing, so that's kind of nice.

894
00:47:52,300 --> 00:47:56,600
maybe I shouldn't worry about them too much, but, you know, yeah, if

895
00:47:56,600 --> 00:47:59,800
we were to get back to go back to the

896
00:48:00,000 --> 00:48:00,400
Here.

897
00:48:04,100 --> 00:48:07,800
You know, if that if that merge four or five times, it can get pretty

898
00:48:07,800 --> 00:48:08,200
big.

899
00:48:08,200 --> 00:48:09,100
I don't know maybe.

900
00:48:09,100 --> 00:48:11,500
Yeah, but maybe that's just not a problem.

901
00:48:23,700 --> 00:48:26,700
I guess I just don't have enough information to really make any kind

902
00:48:26,700 --> 00:48:27,900
of decision about this.

903
00:48:28,800 --> 00:48:32,200
I guess, maybe what I should do is just cross my fingers and go.

904
00:48:32,200 --> 00:48:32,800
All right.

905
00:48:32,800 --> 00:48:34,000
Well, you know,

906
00:48:37,200 --> 00:48:40,600
Until we actually have real world scenarios running.

907
00:48:40,700 --> 00:48:44,300
There's no way to make some kind of a priority, determination of like,

908
00:48:44,300 --> 00:48:45,400
what's going to happen here.

909
00:48:46,300 --> 00:48:50,500
So maybe the best thing to do is to just say, let's go ahead and you

910
00:48:50,500 --> 00:48:54,800
know, let's thread this thing and see if we just do multi-threaded

911
00:48:54,800 --> 00:48:59,300
World update across multiple threads like we do with our render or

912
00:48:59,300 --> 00:48:59,700
whatever.

913
00:48:59,800 --> 00:49:01,800
Let's just try that out and see.

914
00:49:03,600 --> 00:49:08,400
If we have that happen, make sure that that's all working fine and

915
00:49:08,400 --> 00:49:10,300
then we'll call it a day.

916
00:49:10,500 --> 00:49:10,700
What?

917
00:49:10,700 --> 00:49:16,900
I don't know, at the moment is how we would really debug that sort of

918
00:49:16,900 --> 00:49:20,300
stuff necessarily let's

919
00:49:21,800 --> 00:49:22,700
Zoom out here.

920
00:49:26,500 --> 00:49:30,500
Because we're probably going to need some kind of a debug view, right?

921
00:49:30,600 --> 00:49:34,100
I mean, like, you know, we can get, we could use like a View, kind of

922
00:49:34,100 --> 00:49:37,700
like this one where we can see more stuff.

923
00:49:38,300 --> 00:49:42,800
Unfortunately, our current renderer is not really set up.

924
00:49:42,900 --> 00:49:44,600
It's only set up to render.

925
00:49:47,100 --> 00:49:50,100
Things relative to a particular camera.

926
00:49:50,300 --> 00:49:53,900
I guess what we could do is just force, the other SIM regions to

927
00:49:53,900 --> 00:49:55,200
render as well.

928
00:49:55,200 --> 00:49:58,700
Like, in debug mode, we could force them to render out so that we

929
00:49:58,700 --> 00:50:00,900
could have sort of more things going.

930
00:50:01,300 --> 00:50:01,800
I don't know.

931
00:50:02,700 --> 00:50:05,700
Let's play around with this for just one quick second here.

932
00:50:06,600 --> 00:50:09,700
I'm going to go ahead and see what I can do in terms of

933
00:50:11,300 --> 00:50:12,400
Creating more entities.

934
00:50:13,100 --> 00:50:15,100
We probably need something.

935
00:50:20,400 --> 00:50:25,300
We probably need some way of dealing, with, with creating worlds.

936
00:50:25,300 --> 00:50:28,700
We don't really have a way to create big worlds, right now, we can

937
00:50:28,700 --> 00:50:30,200
store them and process them, just fine.

938
00:50:30,200 --> 00:50:32,700
We just don't have a way to really create them at the moment.

939
00:50:33,000 --> 00:50:34,400
So, that's a bit of a problem.

940
00:50:35,100 --> 00:50:35,800
But, here we go.

941
00:50:35,800 --> 00:50:40,200
Let's just see what happens if I create a tiny world, but that just

942
00:50:40,200 --> 00:50:41,200
happens to be bigger.

943
00:50:42,300 --> 00:50:44,500
So, if I go ahead and

944
00:50:46,700 --> 00:50:48,000
take a look here at the

945
00:50:51,700 --> 00:50:52,500
world.

946
00:50:56,400 --> 00:50:59,800
So yeah, if I go out here,

947
00:51:00,000 --> 00:51:00,500
Error.

948
00:51:01,500 --> 00:51:04,900
This is just a really long world, right?

949
00:51:04,900 --> 00:51:06,400
This world just keeps going

950
00:51:09,500 --> 00:51:10,500
and going, right?

951
00:51:12,200 --> 00:51:17,200
So what I kind of need to do and let me, maybe let me re-enable that

952
00:51:21,300 --> 00:51:27,100
make sure that we can actually make our game kind of go around a

953
00:51:27,100 --> 00:51:28,800
little bit, little bit more than that.

954
00:51:31,600 --> 00:51:32,300
There we go.

955
00:51:36,300 --> 00:51:41,200
So yeah, so you know, I guess what I'm saying is at the moment, we

956
00:51:41,200 --> 00:51:45,400
have a way to do a debug camera of that form, but we don't have a way

957
00:51:45,400 --> 00:51:50,600
to do a debug camera of like this form where it's like super wide out

958
00:51:50,600 --> 00:51:53,900
and instead of just showing what's in a simulation region, which is

959
00:51:53,900 --> 00:51:55,200
what we're showing right here.

960
00:51:58,800 --> 00:52:03,800
I would want to do something where we've got a little bit more, you

961
00:52:03,800 --> 00:52:06,600
know, information on the screen.

962
00:52:06,600 --> 00:52:10,300
Like so if we had multiple stim Regents, we'd see all of them.

963
00:52:12,700 --> 00:52:13,600
Yeah.

964
00:52:20,100 --> 00:52:21,300
Let's just try that.

965
00:52:21,300 --> 00:52:23,100
Let's just see what that would entail.

966
00:52:23,100 --> 00:52:24,200
I've got eight minutes left.

967
00:52:24,200 --> 00:52:26,900
Let's see what happens if I just play with that a little bit.

968
00:52:27,800 --> 00:52:30,700
So in World mode, Let's see what happens here.

969
00:52:30,700 --> 00:52:36,500
We sort of have this this idea that, you know, we start the Sim here.

970
00:52:37,700 --> 00:52:39,800
We are looking for controller input.

971
00:52:39,800 --> 00:52:43,100
Here, we update the brains here.

972
00:52:43,100 --> 00:52:48,800
We render things and then we finish, right?

973
00:52:49,500 --> 00:52:49,700
So,

974
00:52:49,900 --> 00:52:53,300
If we wanted to talk about a single unit of that, right?

975
00:52:53,300 --> 00:52:58,400
Like a single one of those I could I should be able to pull that out

976
00:52:58,500 --> 00:53:01,300
into a more coherent like thing.

977
00:53:01,300 --> 00:53:04,900
So we do update and render world, I should be able to do something

978
00:53:04,900 --> 00:53:05,100
here.

979
00:53:05,100 --> 00:53:07,000
Where I've kind of got another one of those

980
00:53:08,900 --> 00:53:09,600
Function here.

981
00:53:10,700 --> 00:53:15,100
That's going to be a little bit more concise so you know, let's say

982
00:53:15,100 --> 00:53:17,800
we've got this, begin Sim call.

983
00:53:17,800 --> 00:53:22,500
Let's see where the Sim regions actually used and you can sort of see

984
00:53:22,500 --> 00:53:26,300
the same region bounds getting used there in the wrecked outline stuff

985
00:53:28,600 --> 00:53:30,400
and then this getting used here.

986
00:53:30,800 --> 00:53:36,000
So let me just pull it at the Sim region part Sim Region 2 SIM region.

987
00:53:36,500 --> 00:53:37,100
Right?

988
00:53:37,600 --> 00:53:38,400
So

989
00:53:38,900 --> 00:53:44,000
Where we do sort of the temporary memory block.

990
00:53:44,000 --> 00:53:46,200
In fact, where is the memory itself?

991
00:53:46,400 --> 00:53:47,200
It's right here.

992
00:53:48,800 --> 00:53:53,700
So yeah, let's do this.

993
00:53:58,000 --> 00:53:59,700
So here is a Sim step.

994
00:54:00,200 --> 00:54:04,700
This is like, you know, simulate something like this.

995
00:54:06,000 --> 00:54:09,200
Or this is like do some region, I don't know.

996
00:54:17,000 --> 00:54:18,800
So here's update and render Sim region.

997
00:54:18,800 --> 00:54:21,600
And this thing, you know, does all the stuff that we would normally do

998
00:54:21,600 --> 00:54:22,000
now,

999
00:54:23,100 --> 00:54:25,500
Essentially, what I want to do is kind of predicate this.

1000
00:54:25,600 --> 00:54:30,000
I'd like to say, you know, are we accepting controller input, you

1001
00:54:30,000 --> 00:54:31,100
know, or aren't we?

1002
00:54:33,200 --> 00:54:37,700
And I don't know if the best way to do that is to do that here or if

1003
00:54:37,700 --> 00:54:41,600
that is something that we should sort of have this be in stages that

1004
00:54:41,600 --> 00:54:43,100
happen, I'm not sure.

1005
00:54:43,800 --> 00:54:46,300
But let's just make it be an if at the moment.

1006
00:54:48,000 --> 00:54:51,800
so like if Flags, you know, allow controller

1007
00:54:55,500 --> 00:54:59,100
Or allow, like, spawning don't know, something like that.

1008
00:55:00,100 --> 00:55:05,600
There's the brains happening update and render entities, and update,

1009
00:55:05,600 --> 00:55:10,300
and render particle systems and then we end, right?

1010
00:55:11,800 --> 00:55:15,300
So, we've got all that stuff.

1011
00:55:16,000 --> 00:55:18,600
And I guess part of the problem,

1012
00:55:20,500 --> 00:55:22,600
You know, at the five-minute warning, I'm probably not going to want

1013
00:55:22,600 --> 00:55:23,400
to do much of this.

1014
00:55:24,400 --> 00:55:27,000
So I probably would just leave this where it is at the moment because

1015
00:55:27,000 --> 00:55:30,300
what I realized too is we have some stuff baked in there that we don't

1016
00:55:30,300 --> 00:55:31,300
want baked in there.

1017
00:55:31,500 --> 00:55:36,300
Like if we go back, if we go to n Sim I think we've got some stuff in

1018
00:55:36,300 --> 00:55:39,700
here that we don't really want, like we've got the camera following

1019
00:55:39,700 --> 00:55:41,400
entity stuff, I guess that's okay.

1020
00:55:41,400 --> 00:55:43,600
Because if I render somewhere else that into they wouldn't be on

1021
00:55:43,600 --> 00:55:47,100
there, but I think we need to be more careful about that, sort of

1022
00:55:47,100 --> 00:55:48,400
stuff, if that makes sense.

1023
00:55:49,500 --> 00:55:50,200
All right.

1024
00:55:50,400 --> 00:55:54,900
So, let's see frame to frame camera, Delta p and all that stuff needs

1025
00:55:54,900 --> 00:55:55,300
to get.

1026
00:55:55,300 --> 00:55:57,600
So let me let me just see what we need in here.

1027
00:55:58,800 --> 00:56:02,600
So we need camera bounds and M, the Simba and stuff.

1028
00:56:02,800 --> 00:56:07,500
This stuff I think can actually Sim bounds expansion.

1029
00:56:07,700 --> 00:56:13,800
I think that stuff can actually be kind of over here still or maybe

1030
00:56:13,800 --> 00:56:15,700
put inside the Sim stuff itself.

1031
00:56:15,800 --> 00:56:20,200
Let me just take a quick look in here and say let's put that there.

1032
00:56:20,300 --> 00:56:20,600
There.

1033
00:56:25,200 --> 00:56:28,700
So here's the Train Arena stuff for beginning temporary memory.

1034
00:56:29,000 --> 00:56:32,200
So let's say that we pass, do we need the trance state for anything

1035
00:56:32,200 --> 00:56:32,900
else?

1036
00:56:33,200 --> 00:56:33,700
No.

1037
00:56:36,100 --> 00:56:38,000
The update and render entities, does need it.

1038
00:56:38,000 --> 00:56:41,000
I guess so guess we need the trance state in there.

1039
00:56:48,400 --> 00:56:50,200
We're going to want to pull some of the stuff apart.

1040
00:56:50,200 --> 00:56:55,300
I can totally tell but their books World mode.

1041
00:57:02,500 --> 00:57:04,200
And world is just.

1042
00:57:07,400 --> 00:57:08,700
Off of world mode, I believe.

1043
00:57:08,700 --> 00:57:13,200
So we don't really need to pass that in symbols.

1044
00:57:13,200 --> 00:57:15,200
Should probably be passed in, right?

1045
00:57:21,700 --> 00:57:23,000
And input.

1046
00:57:23,000 --> 00:57:24,400
So this is one way we could do it.

1047
00:57:24,400 --> 00:57:27,600
We could just say, if you pass this, an input, then we'll process

1048
00:57:27,600 --> 00:57:28,100
input.

1049
00:57:28,100 --> 00:57:29,200
Otherwise we won't

1050
00:57:33,700 --> 00:57:34,900
Let's see.

1051
00:57:34,900 --> 00:57:36,700
Rectangle 3, my bad.

1052
00:57:41,000 --> 00:57:44,500
So then we need to render group screen bounds.

1053
00:57:47,900 --> 00:57:49,200
And game state.

1054
00:57:54,900 --> 00:57:57,300
I feel like we're going to have to and maybe this would be good too.

1055
00:57:57,300 --> 00:57:59,600
I think this would be nice if we could spend a little time cleaning

1056
00:57:59,600 --> 00:58:03,100
the stuff, we've got too many struct.

1057
00:58:03,100 --> 00:58:07,100
Some of stuff that probably, we could consolidate and be a little bit

1058
00:58:07,100 --> 00:58:11,200
more judicious about those things would probably be good.

1059
00:58:12,600 --> 00:58:15,500
Let's see, Mouse pee.

1060
00:58:19,000 --> 00:58:19,800
Scott too many.

1061
00:58:21,600 --> 00:58:25,000
We've just put all the stuff into this code.

1062
00:58:25,000 --> 00:58:28,600
It does it in one pass and that's fine.

1063
00:58:28,600 --> 00:58:32,000
But it just feels like now is a good time that it's complicated

1064
00:58:32,000 --> 00:58:39,000
enough, we're going to want to, you know, sort of extricate, pull some

1065
00:58:39,000 --> 00:58:42,600
of those or exfiltrate, perhaps, some of that stuff out.

1066
00:58:42,600 --> 00:58:47,500
So that it's not in there when we're just trying to do like basics,

1067
00:58:47,700 --> 00:58:49,200
Some stuff that makes sense.

1068
00:58:52,200 --> 00:58:55,900
So really screen bounds is not something.

1069
00:58:55,900 --> 00:58:57,400
We have to draw in here.

1070
00:58:57,400 --> 00:59:02,800
I don't think but you know we might need that for other reasons so I

1071
00:59:02,800 --> 00:59:06,800
guess I'll pass it for the moment, tangle free screen bounds.

1072
00:59:09,500 --> 00:59:10,800
We do need the render group.

1073
00:59:19,900 --> 00:59:25,900
There we go and background color, I don't know what background color

1074
00:59:25,900 --> 00:59:31,600
is, therefore Oak for Farrar Fade Out effect, right?

1075
00:59:35,600 --> 00:59:36,000
Yeah.

1076
00:59:42,100 --> 00:59:42,900
Draw buffer.

1077
00:59:45,000 --> 00:59:46,700
what are we using the draw buffer for

1078
00:59:49,900 --> 00:59:50,800
I'm curious to know.

1079
00:59:52,200 --> 00:59:54,200
Like, what is the drug before do inside?

1080
00:59:54,500 --> 00:59:56,200
Entity update, render entities?

1081
01:00:03,400 --> 01:00:03,900
Radha.

1082
01:00:05,900 --> 01:00:07,700
I can't see because it's behind my head.

1083
01:00:09,600 --> 01:00:10,400
Let's try that again.

1084
01:00:12,500 --> 01:00:13,400
Draw buffer.

1085
01:00:16,500 --> 01:00:21,200
so it's just for putting the alpha floor, clip, rect and

1086
01:00:39,500 --> 01:00:43,400
So really, the only reason that we have to do that at all is just

1087
01:00:43,400 --> 01:00:47,800
because the width and the height are required to do the push wrecked

1088
01:00:47,800 --> 01:00:52,300
in the case, where we're not even trying to push a cliprect, we just

1089
01:00:52,300 --> 01:00:57,300
wanted to have a way of saying, hey we've got that Alpha floor, render

1090
01:00:57,300 --> 01:01:01,300
Target that we wanted to Target, and we needed the to do that.

1091
01:01:01,300 --> 01:01:04,800
So that one's like definitely the case to where it's like, you know,

1092
01:01:04,800 --> 01:01:08,100
you can see how there's too much stuff that needs to be kind of

1093
01:01:09,500 --> 01:01:11,300
Peace, you know, peace depart there.

1094
01:01:15,400 --> 01:01:16,400
So yeah.

1095
01:01:18,900 --> 01:01:21,800
I definitely think that this is good thing to do tomorrow to get into

1096
01:01:21,800 --> 01:01:25,800
some of this, get into some of this stuff.

1097
01:01:26,000 --> 01:01:26,300
All right.

1098
01:01:26,300 --> 01:01:28,600
So I'm just going to leave it just to leave ourselves in a functioning

1099
01:01:28,600 --> 01:01:28,900
state.

1100
01:01:28,900 --> 01:01:32,900
I'm going to leave it like it is here and right after we do sort of

1101
01:01:32,900 --> 01:01:35,000
our sin bounced up, I'll call that function.

1102
01:01:35,900 --> 01:01:36,300
But yeah.

1103
01:01:36,300 --> 01:01:40,500
I think that's just, that's too much and so pulling some of that stuff

1104
01:01:40,500 --> 01:01:43,600
out and like, separating out the responsibilities there.

1105
01:01:43,600 --> 01:01:45,600
So we have more control over who needs.

1106
01:01:45,600 --> 01:01:48,500
What and when we'll just allow us to have

1107
01:01:48,700 --> 01:01:51,300
Of a little bit better division of labor in there.

1108
01:01:52,300 --> 01:01:54,200
So let's go ahead and go to the Q&A for now.

1109
01:01:58,700 --> 01:02:02,000
If anyone has any questions, Now's the Time to ask them.

1110
01:02:09,700 --> 01:02:10,000
Happens.

1111
01:02:10,000 --> 01:02:11,000
If you jump on this.

1112
01:02:12,100 --> 01:02:13,100
That's awesome.

1113
01:02:20,300 --> 01:02:23,600
It like tried to jump but couldn't move the head through.

1114
01:02:26,400 --> 01:02:29,100
It's trying to jump to the other one member because this was for

1115
01:02:29,100 --> 01:02:30,400
jumping up and down, floors.

1116
01:02:31,800 --> 01:02:32,600
That's hilarious.

1117
01:02:37,300 --> 01:02:39,200
It can't move the head through the trees, though.

1118
01:02:41,400 --> 01:02:42,200
Hysterical.

1119
01:02:42,900 --> 01:02:47,400
So I wonder if we moved it down one if it would be able to write.

1120
01:02:47,500 --> 01:02:49,000
Like if we were to say

1121
01:02:56,500 --> 01:02:58,700
in a standard room, there is thing that's like

1122
01:03:00,200 --> 01:03:04,100
Yeah, Auto booster.

1123
01:03:04,100 --> 01:03:06,000
Whatever it is the offset.

1124
01:03:06,000 --> 01:03:07,100
Why I like

1125
01:03:16,600 --> 01:03:18,500
if that was moved down on the left hole,

1126
01:03:25,200 --> 01:03:26,000
Oh, come on.

1127
01:03:26,300 --> 01:03:31,600
Get out of my way, guys, uncool.

1128
01:03:32,100 --> 01:03:32,600
Here we go.

1129
01:03:33,500 --> 01:03:34,900
So the problem is that one.

1130
01:03:34,900 --> 01:03:40,000
Still up at the top there, so we need to, like, we need to get that.

1131
01:03:41,700 --> 01:03:42,700
That one down.

1132
01:03:48,700 --> 01:03:49,600
All right, seriously.

1133
01:03:49,600 --> 01:03:50,800
Get off the thing.

1134
01:03:52,400 --> 01:03:53,100
Lame.

1135
01:03:58,800 --> 01:03:59,300
There we go.

1136
01:04:05,200 --> 01:04:06,900
I kind of like these boots squares.

1137
01:04:07,000 --> 01:04:10,200
I think I'm going to put these boost squares to good use.

1138
01:04:10,400 --> 01:04:14,900
Like when we actually do some real rendering here of like some

1139
01:04:14,900 --> 01:04:18,800
artwork, I think it would be funny if you could jump on things and

1140
01:04:18,800 --> 01:04:20,900
have them kind of boost you around like that.

1141
01:04:20,900 --> 01:04:21,200
I don't know.

1142
01:04:21,200 --> 01:04:22,100
It's looking really cool.

1143
01:04:22,100 --> 01:04:23,600
I'm going to, I'm going to keep that in there.

1144
01:04:34,200 --> 01:04:37,100
Will the switch to 3d effect the arc work for him a hero?

1145
01:04:37,100 --> 01:04:39,900
I know we're will keep the artwork basically the same.

1146
01:05:49,500 --> 01:05:53,000
yes, you can ask and ask have a question generally, what I do is I

1147
01:05:53,500 --> 01:05:58,900
give precedence to any questions that are on topic, but if there

1148
01:05:58,900 --> 01:05:59,800
aren't any

1149
01:06:00,400 --> 01:06:03,400
On topic questions than I just use the time to answer off-topic

1150
01:06:03,400 --> 01:06:04,100
questions.

1151
01:07:03,900 --> 01:07:07,500
Lori says, hi I'm way behind you in the series but you talked about

1152
01:07:07,500 --> 01:07:08,300
Mixon.

1153
01:07:08,800 --> 01:07:12,000
I don't know if you did this yet, but can you please explain it?

1154
01:07:15,400 --> 01:07:18,900
So one of the problems with that term, of course, is that different

1155
01:07:18,900 --> 01:07:23,600
people use it for different things so I'm not even sure if you look it

1156
01:07:23,600 --> 01:07:25,700
up, whether it's used.

1157
01:07:29,600 --> 01:07:33,700
It's kind of an observation term that is not maybe as clear as it

1158
01:07:33,700 --> 01:07:34,400
needs to be.

1159
01:07:35,000 --> 01:07:36,000
But here you go.

1160
01:07:36,700 --> 01:07:41,000
And essentially what it's trying to talk about is just the fact that

1161
01:07:41,000 --> 01:07:42,900
you can you know, sort of

1162
01:07:45,500 --> 01:07:49,800
Consider making something that's just a bunch of different things

1163
01:07:49,800 --> 01:07:57,200
combined together, rather than the sort of higher the sort of C++, the

1164
01:07:57,200 --> 01:08:00,400
early C++ idea of object-oriented programming, which is kind of

1165
01:08:00,400 --> 01:08:03,700
broken, which is like things inherit from other things, which is not

1166
01:08:04,000 --> 01:08:06,700
usually a very good way to build things.

1167
01:08:07,200 --> 01:08:09,800
And other object-oriented language is don't have that problem.

1168
01:08:09,800 --> 01:08:14,400
Like, that's not endemic to all object-oriented, programming languages

1169
01:08:14,400 --> 01:08:15,100
more.

1170
01:08:15,300 --> 01:08:19,300
Object-oriented programming languages in C++ don't think of ab

1171
01:08:19,300 --> 01:08:20,600
training programming in that way.

1172
01:08:27,800 --> 01:08:33,100
But essentially, all a mix in is, is a mixing is just saying, well, I

1173
01:08:33,100 --> 01:08:36,800
want to be able to create especially in like, a game like setting.

1174
01:08:37,000 --> 01:08:42,000
I often want to be able to create objects that just have a bunch of

1175
01:08:42,000 --> 01:08:44,899
properties that I want them to have.

1176
01:08:45,200 --> 01:08:48,100
And I don't want to have to, really think about

1177
01:08:49,200 --> 01:08:51,200
How that's constructed, right?

1178
01:08:51,300 --> 01:08:55,500
I don't want to have to think about like, oh, you know, this creature

1179
01:08:55,500 --> 01:08:59,899
inherits from Human so that it can have like bipedal locomotion

1180
01:09:00,000 --> 01:09:05,500
Ocean and it and then, you know, I but then I kind of wanted to have

1181
01:09:05,500 --> 01:09:08,700
mandibles like a spider, but I can't inherit from spider because I can

1182
01:09:08,700 --> 01:09:12,600
only inherit from either human or spider because human and spider,

1183
01:09:12,600 --> 01:09:13,800
both defined Locomotion.

1184
01:09:13,800 --> 01:09:15,899
You can only have one or the other, you know, blah, blah blah.

1185
01:09:16,800 --> 01:09:19,200
So mixing is just the concept that like K.

1186
01:09:19,200 --> 01:09:21,200
You just grab what you need from where you need it.

1187
01:09:21,200 --> 01:09:26,800
And so, for example, you could grab The Locomotion from Human, you

1188
01:09:26,800 --> 01:09:29,800
know, bipedal locomotion is a thing that you can grab

1189
01:09:30,000 --> 01:09:32,500
ab and then mandibles, the thing you can grab.

1190
01:09:32,500 --> 01:09:36,700
And it's just kind of like, you know, this this sort of piece together

1191
01:09:36,800 --> 01:09:39,600
parts to make the thing that you were trying to make.

1192
01:09:40,500 --> 01:09:48,800
So that's all a mixin is, is just that concept and C++ kind of, really

1193
01:09:50,500 --> 01:09:56,100
sort of sort of poops, the bed, you know, kind of, kind of Browns, the

1194
01:09:56,100 --> 01:09:58,900
bed a lot when it comes to being able to support mix-ins, they do a

1195
01:09:58,900 --> 01:09:59,800
really poor job of

1196
01:10:00,700 --> 01:10:03,200
Because there's a bunch of stuff at can't do, like, referring to Outer

1197
01:10:03,200 --> 01:10:03,700
Scopes.

1198
01:10:03,700 --> 01:10:05,100
And there's, there's all these reasons.

1199
01:10:05,100 --> 01:10:08,800
Why mix-ins don't really work correctly and C++ that are not

1200
01:10:09,200 --> 01:10:13,400
inherently problems with the concept of object-oriented mix in there

1201
01:10:13,400 --> 01:10:14,800
just problems with C++.

1202
01:10:16,300 --> 01:10:17,700
You know, what else is new?

1203
01:10:18,800 --> 01:10:22,100
And so typically what ends up happening is if you want to actually

1204
01:10:22,100 --> 01:10:27,200
Implement Mixon in C++ for something that you're doing, typically, you

1205
01:10:27,200 --> 01:10:29,800
end up kind of writing the system yourself, which is what we did as

1206
01:10:29,800 --> 01:10:30,300
well, right?

1207
01:10:30,300 --> 01:10:34,900
We have the idea of a, like sort of giant mush entity model thing

1208
01:10:35,500 --> 01:10:39,000
that's designed to give us certain benefits of mixing like stuff.

1209
01:10:39,500 --> 01:10:45,000
And you know, that's typically what almost every game engine does like

1210
01:10:45,000 --> 01:10:45,700
almost new.

1211
01:10:45,800 --> 01:10:53,000
Game engines that I know of of any prominence try to use C++ like

1212
01:10:53,000 --> 01:10:57,600
features to do mix-ins because really all C++ that you do, there is

1213
01:10:57,600 --> 01:11:00,500
either multiple inheritance which doesn't really work very well for a

1214
01:11:00,500 --> 01:11:07,300
number of reasons or you just have you know a class that includes has

1215
01:11:07,300 --> 01:11:10,400
members of the things that you want and that also doesn't work very

1216
01:11:10,400 --> 01:11:13,100
well because you can iterate over them properly and there's all these

1217
01:11:13,100 --> 01:11:14,400
other problems with it, right?

1218
01:11:15,100 --> 01:11:15,700
So typically

1219
01:11:15,800 --> 01:11:18,900
Ali what almost every game engine does is they end up implementing

1220
01:11:18,900 --> 01:11:23,800
their own mix in right and either exporting it to a scripting language

1221
01:11:23,800 --> 01:11:26,400
or just using it inside C++ their own system.

1222
01:11:26,400 --> 01:11:30,800
Somehow of doing that either with like lists attached to the entities

1223
01:11:30,800 --> 01:11:36,100
or whatever else to basically compensate for that fundamentally flawed

1224
01:11:36,300 --> 01:11:38,400
C++ problem, right?

1225
01:11:44,300 --> 01:11:46,800
And still there are you working on any of the interaction student like

1226
01:11:46,800 --> 01:11:48,000
fire weapons versus ice?

1227
01:11:48,000 --> 01:11:50,400
Monster poisonous arrows and stuff like that?

1228
01:11:50,600 --> 01:11:53,600
Probably not, I wouldn't think so.

1229
01:11:55,400 --> 01:11:56,300
Tiny construct.

1230
01:11:56,300 --> 01:11:56,800
Very have topic.

1231
01:11:56,800 --> 01:11:59,300
Can you think of the last time you took a dynamic programming approach

1232
01:11:59,300 --> 01:11:59,900
to a problem?

1233
01:12:00,400 --> 01:12:04,700
EG shortest, edit distance, opulent bsts, Etc.

1234
01:12:04,700 --> 01:12:09,600
DP algorithms are allegedly a common interview topic despite how silly

1235
01:12:09,600 --> 01:12:10,500
that seems

1236
01:12:29,300 --> 01:12:33,300
So I guess I can't say that I've used one recently.

1237
01:12:42,900 --> 01:12:43,500
I mean.

1238
01:12:46,000 --> 01:12:50,500
so, depending on your view of what you would consider a proper dynamic

1239
01:12:50,500 --> 01:12:53,800
programming approach, there are definitely

1240
01:12:58,800 --> 01:13:02,300
There are definitely types of things that programmers often write

1241
01:13:02,300 --> 01:13:07,000
without thinking about them as being dynamic programming problems that

1242
01:13:07,000 --> 01:13:11,900
do have, the structure of memoize dynamic programming, right?

1243
01:13:13,200 --> 01:13:13,800
And

1244
01:13:18,300 --> 01:13:20,000
Hopefully, this is a term, yeah.

1245
01:13:23,300 --> 01:13:24,000
so,

1246
01:13:26,900 --> 01:13:28,100
To give an example.

1247
01:13:29,000 --> 01:13:30,600
First of all, let me just say what's on our program is.

1248
01:13:30,600 --> 01:13:34,500
So because I'm sorry I can't really think of what I've done in the

1249
01:13:34,500 --> 01:13:35,500
past couple months.

1250
01:13:35,500 --> 01:13:41,500
Let's say, so what dynamic programming is, is dynamic, programming is

1251
01:13:41,500 --> 01:13:44,400
usually about a bottom-up approach to a problem.

1252
01:13:44,600 --> 01:13:50,100
So, for example, you know, most of the time, you think about things

1253
01:13:50,700 --> 01:13:55,700
where, you know, you'll think about sort of divide and conquer,

1254
01:13:58,300 --> 01:13:58,700
Oops.

1255
01:14:02,900 --> 01:14:07,300
Or something like this, you know as kind of a programming strategy or

1256
01:14:07,300 --> 01:14:10,900
whatever where you might think about constructing things like you

1257
01:14:10,900 --> 01:14:12,300
know, a binary tree or something.

1258
01:14:12,300 --> 01:14:16,100
And so the idea is you know you have some top down approach to

1259
01:14:16,100 --> 01:14:20,200
something where you're trying to divide stuff up into more manageable

1260
01:14:20,200 --> 01:14:21,400
pieces, right?

1261
01:14:21,500 --> 01:14:24,700
And so you tend to think about coming at things from this perspective,

1262
01:14:24,700 --> 01:14:27,600
where you know, we've divided stuff up and we're kind of like the way

1263
01:14:27,600 --> 01:14:31,800
that we're sort of optimizing this algorithm is by participating.

1264
01:14:31,900 --> 01:14:35,200
Learning what it's working on Endo way so that it only works on the

1265
01:14:35,200 --> 01:14:37,500
things that it actually needs to work on, right?

1266
01:14:38,600 --> 01:14:43,000
So, you know, a lot of stuff that we talked about falls into this

1267
01:14:43,000 --> 01:14:47,100
category, but dynamic programming is sort of about doing, you know, a

1268
01:14:47,100 --> 01:14:52,800
slightly different way of thinking about that sort of thing rather

1269
01:14:52,800 --> 01:14:54,100
than thinking about it in this way.

1270
01:14:54,100 --> 01:14:58,200
It's like thinking about it in terms of, let's start with all of the

1271
01:14:58,200 --> 01:14:59,700
stuff that we have and just

1272
01:15:00,000 --> 01:15:03,300
Working with it and then what we'll do is we'll build up from there.

1273
01:15:03,300 --> 01:15:05,600
So you know, we'll do some stuff on these three elements.

1274
01:15:05,600 --> 01:15:08,400
But then we'll remember that we did that and then we'll build some

1275
01:15:08,400 --> 01:15:11,200
stuff on these three elements and remember that we did that and then

1276
01:15:11,200 --> 01:15:14,600
later, when we need to do stuff on all six of these elements will just

1277
01:15:14,600 --> 01:15:19,000
reuse the stuff that we did from those pieces, right?

1278
01:15:22,000 --> 01:15:25,200
and so sort of if you want to think of dynamic programming as just the

1279
01:15:25,200 --> 01:15:26,600
act of

1280
01:15:28,400 --> 01:15:33,900
Saving work that you've already done to reuse it later in a way that

1281
01:15:33,900 --> 01:15:35,600
builds upon that work.

1282
01:15:35,900 --> 01:15:39,000
That is the sort of thing that programmers can often write without

1283
01:15:39,000 --> 01:15:41,500
thinking that they were doing anything dynamic programming.

1284
01:15:41,500 --> 01:15:43,900
Like, they may, not even know the term dynamic programming, but that's

1285
01:15:43,900 --> 01:15:45,200
still kind of dynamic programming.

1286
01:15:46,000 --> 01:15:49,900
And so the thing that came to mind was, you know, let's say that

1287
01:15:49,900 --> 01:15:53,800
you're storing stuff out to disk write and like,

1288
01:15:55,600 --> 01:15:57,200
Oh wait, no, we did.

1289
01:15:57,200 --> 01:15:57,900
We did one.

1290
01:15:58,400 --> 01:15:59,200
I was like God.

1291
01:15:59,200 --> 01:16:00,600
It seems like we should don't want him here.

1292
01:16:00,600 --> 01:16:01,400
We did do one.

1293
01:16:04,600 --> 01:16:09,100
The graph, sorting the graph sorting in, in handmade here.

1294
01:16:09,100 --> 01:16:12,500
Oh, it does does do this, right.

1295
01:16:12,500 --> 01:16:16,200
So here is sir, I was like, gotta, it seems like we should have used

1296
01:16:16,200 --> 01:16:18,000
something that was deceptively dynamic programming.

1297
01:16:18,900 --> 01:16:19,600
So, yeah.

1298
01:16:20,000 --> 01:16:22,400
Remember our sorting stuff, right?

1299
01:16:23,500 --> 01:16:24,700
Where we did sort entries.

1300
01:16:25,000 --> 01:16:28,200
So, remember how this thing worked, we did a thing where we'd say,

1301
01:16:28,200 --> 01:16:31,600
okay, like we built a Sprite graph,

1302
01:16:32,800 --> 01:16:35,800
And then we did a recursive front-to-back sorting, right.

1303
01:16:36,200 --> 01:16:39,700
And the way we did that is we would go through and we'd sort things.

1304
01:16:39,900 --> 01:16:44,800
But when we sorted them, we would mark them as having been visited,

1305
01:16:45,000 --> 01:16:45,700
right?

1306
01:16:45,900 --> 01:16:50,000
So later when we were sorting things, that contained, that part of the

1307
01:16:50,000 --> 01:16:54,900
graph, we wouldn't re sort that part of the graph, we just know that

1308
01:16:54,900 --> 01:16:58,700
we'd already sorted that part and could just point into it, right?

1309
01:16:59,400 --> 01:17:01,800
That's sort of dynamic programming, right?

1310
01:17:01,800 --> 01:17:02,400
We didn't.

1311
01:17:02,700 --> 01:17:03,300
Partition.

1312
01:17:03,300 --> 01:17:09,300
This ahead of time into into connected sub graphs, which we could have

1313
01:17:09,300 --> 01:17:13,300
done and then sort the subgraphs we instead just sorted.

1314
01:17:13,400 --> 01:17:17,400
We just started sorting and we remembered every time we did sort.

1315
01:17:17,400 --> 01:17:20,700
So that if somebody else was coming in, who also needed to insert

1316
01:17:20,700 --> 01:17:22,800
themselves into that sort, they just could.

1317
01:17:23,300 --> 01:17:24,300
Does that make sense?

1318
01:17:32,400 --> 01:17:33,300
Tiny construct.

1319
01:17:33,300 --> 01:17:34,800
Does that help at all?

1320
01:17:50,100 --> 01:17:56,600
Because that's sort of like, a more, you know, a fairly light, but but

1321
01:17:56,600 --> 01:17:59,500
traditional concept from dynamic programming, right?

1322
01:17:59,500 --> 01:17:59,800
Is just

1323
01:18:00,000 --> 01:18:03,100
Hey, we start sorting this graph.

1324
01:18:03,300 --> 01:18:05,700
We remember that we sort parts of it.

1325
01:18:06,200 --> 01:18:07,200
Well, we don't really remember that.

1326
01:18:07,200 --> 01:18:10,300
We start parts, we just have ways of knowing if we sorted parts of it,

1327
01:18:10,400 --> 01:18:12,700
and then it's like, hey, don't start that again.

1328
01:18:12,700 --> 01:18:16,400
We already sorted it rather than keeping the graph in some structure

1329
01:18:16,400 --> 01:18:18,300
that we know which parts are which

1330
01:18:26,900 --> 01:18:30,700
Midlow asks, how about movable boosters that you can set up to chain

1331
01:18:30,700 --> 01:18:31,400
boost you?

1332
01:18:32,400 --> 01:18:34,200
Yeah, I mean we support it, right?

1333
01:18:54,800 --> 01:18:56,300
All right, so yeah.

1334
01:18:56,300 --> 01:18:57,600
So, anyway, ton of contract.

1335
01:18:57,600 --> 01:19:02,400
I hope that answers the question a little bit in terms of like more

1336
01:19:02,400 --> 01:19:08,500
traditional like named, you know, traditionally named dynamic

1337
01:19:08,500 --> 01:19:11,600
programming algorithms.

1338
01:19:12,300 --> 01:19:18,900
I don't know that, we've definitely not used them on handmade hero and

1339
01:19:18,900 --> 01:19:24,000
I don't know that I've used one recently.

1340
01:19:25,200 --> 01:19:29,700
You know, I am implementing some compression stuff right now and it's

1341
01:19:29,700 --> 01:19:32,500
not entirely out of the question that some dynamic programming might

1342
01:19:32,500 --> 01:19:36,200
happen on the 1935 codebase in the next couple weeks.

1343
01:19:39,000 --> 01:19:44,100
But it depends like some of the stuff with like, you know, forwards

1344
01:19:44,100 --> 01:19:46,600
optimal parsing and stuff like this sort of stuff.

1345
01:19:49,100 --> 01:19:52,800
It's entirely possible that I might use something that from dynamic

1346
01:19:52,800 --> 01:19:59,000
programming in, in a compression, in a dictionary compression stuff,

1347
01:19:59,000 --> 01:19:59,700
kind of thing.

1348
01:20:01,200 --> 01:20:01,600
But

1349
01:20:28,800 --> 01:20:30,100
SDS gimenez.

1350
01:20:30,100 --> 01:20:33,400
So part of the dynamic, programming question, mentioned the coding

1351
01:20:33,400 --> 01:20:34,200
interview?

1352
01:20:34,200 --> 01:20:37,200
Do you do one for new hires?

1353
01:20:37,400 --> 01:20:40,500
Well, we don't really hire any programmers at Molly rocket.

1354
01:20:41,100 --> 01:20:42,300
I'm the only programmer.

1355
01:20:42,600 --> 01:20:46,700
We pretty much only hire artists and no, we don't ask them about

1356
01:20:46,700 --> 01:20:47,900
dynamic programming.

1357
01:20:52,900 --> 01:20:55,500
I guess what I would say is I never asked

1358
01:20:57,900 --> 01:20:59,900
so, I've said this before, and

1359
01:21:00,000 --> 01:21:03,200
I'll say it again, just briefly in my mind.

1360
01:21:03,700 --> 01:21:08,300
Any interview that involves an interview, question of that nature is

1361
01:21:08,300 --> 01:21:12,800
not a good interview and will not produce good results.

1362
01:21:15,100 --> 01:21:16,000
So

1363
01:21:20,700 --> 01:21:24,100
so, my reasoning for that, is that

1364
01:21:27,500 --> 01:21:29,600
I have not known.

1365
01:21:32,200 --> 01:21:35,400
Really any programmers ever.

1366
01:21:36,400 --> 01:21:41,700
Where their ability to answer a question that they were unfamiliar

1367
01:21:41,700 --> 01:21:43,500
with had anything to do.

1368
01:21:43,500 --> 01:21:46,100
Whether they were someone that I wanted to program with or that I

1369
01:21:46,100 --> 01:21:47,600
would trust to write a good program.

1370
01:21:48,300 --> 01:21:55,400
It is literally unrelated pretty much every even the very greatest

1371
01:21:55,400 --> 01:22:00,100
programmers that I've known their good answers to questions.

1372
01:22:00,100 --> 01:22:03,500
Come only after they have had a chance to think about those questions

1373
01:22:03,500 --> 01:22:06,000
and internalize them on their own time, right?

1374
01:22:07,000 --> 01:22:11,000
And I think this is true of pretty much everybody.

1375
01:22:11,000 --> 01:22:19,500
Like, you know, if I walk into it, someone's office at Rad or

1376
01:22:19,500 --> 01:22:22,100
something and start talking to them about a problem.

1377
01:22:22,100 --> 01:22:25,800
There's only two reasons that I'm doing that.

1378
01:22:25,800 --> 01:22:32,300
Well, I guess technically there might be three one is because I think

1379
01:22:32,300 --> 01:22:35,500
they know more about this already than I do, right?

1380
01:22:35,500 --> 01:22:36,900
Like maybe I

1381
01:22:37,000 --> 01:22:39,700
On a walk into Charles blooms office and talk to him about

1382
01:22:39,700 --> 01:22:40,400
compression.

1383
01:22:40,700 --> 01:22:44,700
I'm not doing that because I think he's so smart that he's just going

1384
01:22:44,700 --> 01:22:46,800
to suddenly, no compression really well.

1385
01:22:47,000 --> 01:22:49,400
And have some great things to tell me about the problem I was working

1386
01:22:49,400 --> 01:22:49,700
on.

1387
01:22:50,900 --> 01:22:53,100
I just know he's a compression expert.

1388
01:22:53,100 --> 01:22:56,700
So I know he's already spent tons of time thinking about these things

1389
01:22:57,000 --> 01:23:00,600
and that's where his smarts right, you know, like he's a very smart

1390
01:23:00,600 --> 01:23:02,800
person who spent a lot of time thinking about that.

1391
01:23:02,900 --> 01:23:05,600
So that's why I want to have a white board discussion with him about

1392
01:23:05,600 --> 01:23:06,300
compression.

1393
01:23:06,400 --> 01:23:06,800
It's not

1394
01:23:07,000 --> 01:23:09,700
because I think he's just instantly going to know answers that other

1395
01:23:09,700 --> 01:23:11,500
people didn't know, or something like that, right?

1396
01:23:13,000 --> 01:23:17,700
So that's 12 might be if I just want to talk it through myself.

1397
01:23:17,700 --> 01:23:21,000
So I've been thinking about this problem a lot and it's about

1398
01:23:21,000 --> 01:23:24,400
compression and maybe I'm talking to someone who doesn't know anything

1399
01:23:24,400 --> 01:23:27,000
about compression, but that's okay because I know they're smart and

1400
01:23:27,000 --> 01:23:29,600
we'll just ask questions of prompt me and it's really about me,

1401
01:23:29,600 --> 01:23:34,100
thinking it through, not about them, thinking it through, right or

1402
01:23:34,100 --> 01:23:35,100
third.

1403
01:23:35,200 --> 01:23:39,600
It's if I want that person to think about it over time.

1404
01:23:39,800 --> 01:23:42,300
So like, okay, I'm going to go into the office.

1405
01:23:42,500 --> 01:23:45,200
It just talking about say, hey think about this, let me know, you

1406
01:23:45,200 --> 01:23:47,700
know, after you know, we'll talk about it again tomorrow or some of

1407
01:23:47,700 --> 01:23:48,300
that, right?

1408
01:23:49,200 --> 01:23:51,400
I have literally never thought.

1409
01:23:51,500 --> 01:23:55,100
Let me go into this office of this person who doesn't know anything

1410
01:23:55,100 --> 01:23:56,400
about this subject matter.

1411
01:23:57,300 --> 01:23:59,100
And I'm going to ask them this question.

1412
01:23:59,300 --> 01:23:59,500
And I'm

1413
01:24:00,000 --> 01:24:03,600
Them to have any any insight into it at, all right.

1414
01:24:03,600 --> 01:24:05,700
Then that just, that's not a thing.

1415
01:24:07,100 --> 01:24:08,300
I don't care about it.

1416
01:24:08,300 --> 01:24:10,200
I don't care how well, they can do it.

1417
01:24:10,400 --> 01:24:14,100
It makes no difference to me what someone can think about in 30

1418
01:24:14,100 --> 01:24:14,600
minutes.

1419
01:24:15,000 --> 01:24:17,200
I'm it's irrelevant right?

1420
01:24:18,600 --> 01:24:22,700
So the fact that this exists encoding interviews, boggles my mind, it

1421
01:24:22,700 --> 01:24:23,800
makes no sense.

1422
01:24:24,000 --> 01:24:26,700
I think it has nothing to do with whether you're a good programmer.

1423
01:24:26,900 --> 01:24:31,000
I think it has nothing to do with whether you'll be a good employee.

1424
01:24:31,000 --> 01:24:33,900
I think it has nothing to do with whether you'll be successful at that

1425
01:24:33,900 --> 01:24:35,500
job, no matter what that job is.

1426
01:24:35,700 --> 01:24:41,100
Because the thing that you are doing in that moment is literally 100%

1427
01:24:41,100 --> 01:24:45,000
unrelated to any job function, you will ever have in that capacity.

1428
01:24:45,500 --> 01:24:46,200
Full stop.

1429
01:24:48,600 --> 01:24:52,300
So I think the much more intelligent way to run a tech interview.

1430
01:24:52,300 --> 01:24:56,900
And I've said this many times on stream is the way Chris, Hecker

1431
01:24:57,000 --> 01:24:58,300
taught me how to do it.

1432
01:25:00,200 --> 01:25:02,200
And unfortunately, he's still never written this up.

1433
01:25:02,200 --> 01:25:03,800
I've asked many times to do it.

1434
01:25:03,900 --> 01:25:09,800
He has not, but I've explained it before and that is a properly.

1435
01:25:09,800 --> 01:25:10,000
Run.

1436
01:25:10,000 --> 01:25:16,400
Tech interview is you read the person's past work history?

1437
01:25:17,700 --> 01:25:23,100
And You Begin by asking them a series of get to know project questions

1438
01:25:23,100 --> 01:25:25,100
about something in that history.

1439
01:25:25,900 --> 01:25:29,400
So for example, let's say that going back to the compression example,

1440
01:25:29,400 --> 01:25:32,200
let's say that the person says on their resume, that they did a bunch

1441
01:25:32,200 --> 01:25:36,200
of work on compression in school or at their previous employer.

1442
01:25:36,900 --> 01:25:38,700
So I'm going to say, oh, tell me a little bit about what you do with

1443
01:25:38,700 --> 01:25:39,200
compression.

1444
01:25:39,200 --> 01:25:39,500
Okay.

1445
01:25:39,500 --> 01:25:42,500
What was the most interesting parts of that for you tell me like, give

1446
01:25:42,500 --> 01:25:46,600
me some background so that I can get to know the candidates project

1447
01:25:46,600 --> 01:25:46,800
like

1448
01:25:47,000 --> 01:25:49,900
They were doing on something that they said they did a bunch on,

1449
01:25:50,000 --> 01:25:50,600
right?

1450
01:25:52,600 --> 01:25:56,000
Then you pick some specific thing that they've mentioned there and you

1451
01:25:56,000 --> 01:26:02,900
drill down on it, to generate a proper interview, sort of problem, out

1452
01:26:02,900 --> 01:26:04,200
of what they have given you.

1453
01:26:04,700 --> 01:26:08,400
So, you find their core competency like what they are comfortable

1454
01:26:08,400 --> 01:26:10,400
with, and what they said they've worked on.

1455
01:26:11,100 --> 01:26:14,000
Then you build the thought problem out of that, it's like, oh we get

1456
01:26:14,000 --> 01:26:17,000
down there and it turns out that they like weird started mentioning LZ

1457
01:26:17,000 --> 01:26:17,400
compression.

1458
01:26:17,400 --> 01:26:18,300
Be like oh, okay.

1459
01:26:18,500 --> 01:26:21,000
So LZ, compressions, kind of interesting, right?

1460
01:26:21,000 --> 01:26:22,200
Like tell me about how

1461
01:26:22,400 --> 01:26:25,100
You coded your, you know, LZ.

1462
01:26:25,100 --> 01:26:27,400
You know, when you were outputting the symbols, you know, what did you

1463
01:26:27,400 --> 01:26:28,600
use for a back end.

1464
01:26:28,600 --> 01:26:29,800
Oh yeah, why did you choose that?

1465
01:26:29,900 --> 01:26:31,900
Oh, so what do you think about arithmetic and coders?

1466
01:26:31,900 --> 01:26:35,000
Like, did you try one of those like why did you choose Huffman?

1467
01:26:35,000 --> 01:26:36,400
Oh, it was for Speed purposes.

1468
01:26:36,400 --> 01:26:39,500
So what kind of architecture was this like that you were doing it on

1469
01:26:39,500 --> 01:26:40,800
and like, you know, blah blah.

1470
01:26:41,400 --> 01:26:46,300
So you want to, you want to build out and find out how well does this

1471
01:26:46,300 --> 01:26:46,700
person.

1472
01:26:46,700 --> 01:26:50,200
Think through the problems that they've actually worked on how well

1473
01:26:50,200 --> 01:26:52,100
did they retain that knowledge?

1474
01:26:52,300 --> 01:26:54,000
Can they explain it to you?

1475
01:26:54,100 --> 01:26:58,700
Are they able to answer good questions about trade-offs that they you

1476
01:26:58,700 --> 01:26:59,800
know, should have thought of that?

1477
01:27:00,000 --> 01:27:03,000
Time has any of these things ever occurred to them bubble.

1478
01:27:03,000 --> 01:27:04,200
That's how you do it.

1479
01:27:06,600 --> 01:27:12,800
And I find that that correlates very highly with whether somebody is a

1480
01:27:12,800 --> 01:27:16,700
good has a, is it capable of doing good programming?

1481
01:27:17,200 --> 01:27:22,200
The one thing that it does not screen for and I have no idea how you

1482
01:27:22,200 --> 01:27:23,700
actually screened for this.

1483
01:27:23,800 --> 01:27:26,600
It's the one thing that I have no idea what, how you can actually

1484
01:27:26,600 --> 01:27:29,800
determine the one thing it does not screen for.

1485
01:27:30,000 --> 01:27:31,100
Or is productivity.

1486
01:27:31,500 --> 01:27:38,800
So this interview technique much like the brain, teaser one like it.

1487
01:27:39,100 --> 01:27:39,600
As far as I know.

1488
01:27:39,600 --> 01:27:43,400
This interview technique has no downsides that other interview

1489
01:27:43,400 --> 01:27:43,900
techniques.

1490
01:27:43,900 --> 01:27:47,300
Don't also have and it has none of the other downsides that those

1491
01:27:47,300 --> 01:27:52,400
interview techniques do have except for one which they all share which

1492
01:27:52,400 --> 01:27:55,800
is that, you can have someone who's just a very smart, very capable

1493
01:27:55,800 --> 01:27:59,400
programmer who just never is capable of sitting in front of the

1494
01:27:59,400 --> 01:27:59,800
computer and

1495
01:28:00,000 --> 01:28:01,000
Actually programming.

1496
01:28:02,300 --> 01:28:03,000
Right.

1497
01:28:03,400 --> 01:28:05,800
So they may be somebody who gets almost no programming done in every

1498
01:28:05,800 --> 01:28:09,200
day not because their brain doesn't totally capable of thinking it

1499
01:28:09,200 --> 01:28:12,000
through and being smart about it and understanding it and writing good

1500
01:28:12,000 --> 01:28:14,400
code and all of those things they just never do it.

1501
01:28:15,200 --> 01:28:18,800
They like to talk all day or go to coffee or who knows what else,

1502
01:28:18,800 --> 01:28:19,100
right?

1503
01:28:19,100 --> 01:28:20,300
And this is a huge problem.

1504
01:28:22,000 --> 01:28:24,700
So I don't know how you figure that part out.

1505
01:28:25,000 --> 01:28:26,000
I have no idea.

1506
01:28:26,100 --> 01:28:30,800
Maybe you, look at the person's track record, or maybe you just

1507
01:28:30,800 --> 01:28:34,600
contact them for six months and see if they actually are doing work.

1508
01:28:36,300 --> 01:28:37,000
I don't know.

1509
01:28:37,300 --> 01:28:42,300
But what I can tell you is that as in terms of screening whether the

1510
01:28:42,300 --> 01:28:46,700
person is capable of writing good code and capable of understanding

1511
01:28:46,700 --> 01:28:49,900
things that is that that Chris hackers interview is the right

1512
01:28:49,900 --> 01:28:50,900
interview process.

1513
01:28:50,900 --> 01:28:51,200
I'm

1514
01:28:51,700 --> 01:28:55,500
Pretty positive that that is the way you go interviews that it revolve

1515
01:28:55,500 --> 01:28:56,600
around a prefab.

1516
01:28:56,600 --> 01:28:59,400
Question, our are awful.

1517
01:28:59,400 --> 01:29:01,400
They are just a bad idea.

1518
01:29:03,400 --> 01:29:05,800
I have no idea why they are popular.

1519
01:29:06,600 --> 01:29:08,700
I can I can pretty much guarantee you.

1520
01:29:08,700 --> 01:29:13,600
They just do not produce good, reliable results.

1521
01:29:13,800 --> 01:29:15,100
I think they end up.

1522
01:29:17,600 --> 01:29:20,900
Biasing you towards candidates who happen to have seen questions like

1523
01:29:20,900 --> 01:29:25,100
that before, which is not an indicator of their ability to solve,

1524
01:29:25,100 --> 01:29:25,600
interesting.

1525
01:29:25,600 --> 01:29:27,800
New problems, they bias.

1526
01:29:27,800 --> 01:29:31,000
You against people who are nervous or aren't fast on their feet.

1527
01:29:31,100 --> 01:29:33,700
Some of the best programmers you will come across.

1528
01:29:34,200 --> 01:29:38,300
Do are not comfortable interacting socially that way with people,

1529
01:29:38,300 --> 01:29:44,400
especially in a situation where they may feel intimidated, right?

1530
01:29:45,900 --> 01:29:51,500
I think it's it's just a it's an and I think that's true pretty much

1531
01:29:52,000 --> 01:29:53,800
across all demographics.

1532
01:29:53,800 --> 01:29:59,600
Like like I think that that no matter who you're looking at,

1533
01:30:00,000 --> 01:30:03,000
There's a high degree of chance that you might get somebody who would

1534
01:30:03,000 --> 01:30:06,600
be a very good programmer, but they will feel intimidated or

1535
01:30:06,600 --> 01:30:10,100
threatened or just plain nervous in this scenario.

1536
01:30:10,100 --> 01:30:14,900
And even if they would be capable on their own time of doing an

1537
01:30:14,900 --> 01:30:16,500
excellent job on the thing, you're asked to do it.

1538
01:30:16,500 --> 01:30:21,700
They just won't be able to in this situation and again, not a job

1539
01:30:21,700 --> 01:30:22,700
skill, right?

1540
01:30:22,700 --> 01:30:29,600
Like having someone respond, well under Fire, not a job skill of a

1541
01:30:30,000 --> 01:30:35,900
A a programmer sits in relative quiet with no threatening Persona or

1542
01:30:35,900 --> 01:30:37,100
intimidating.

1543
01:30:37,100 --> 01:30:44,100
Watchful eye hovering over them with their job, on the line every day.

1544
01:30:44,100 --> 01:30:50,300
That that is not at all the environment in which a programmer should

1545
01:30:50,300 --> 01:30:50,800
be working.

1546
01:30:50,800 --> 01:30:53,100
And if that is the environment that your company has set up, you've

1547
01:30:53,100 --> 01:30:54,300
got problems, right?

1548
01:30:56,000 --> 01:30:59,500
So Insurance Lee, what you're sort of screening for in in addition in

1549
01:30:59,500 --> 01:30:59,900
that interview

1550
01:31:00,000 --> 01:31:03,000
This is not only is this person familiar with this arbitrary subject

1551
01:31:03,000 --> 01:31:04,500
matter that we pulled out of a hat.

1552
01:31:04,800 --> 01:31:07,100
Like maybe they just never done dynamic programming before.

1553
01:31:07,500 --> 01:31:08,000
Who cares?

1554
01:31:08,000 --> 01:31:11,400
You can learn dynamic programming in a week less than that.

1555
01:31:11,400 --> 01:31:16,300
If you don't need to learn like a ton of different ton of different

1556
01:31:16,300 --> 01:31:17,500
variants on it, right?

1557
01:31:18,700 --> 01:31:20,300
So, who cares if they've ever seen that?

1558
01:31:20,400 --> 01:31:21,600
It's irrelevant, right?

1559
01:31:21,700 --> 01:31:24,100
But if someone's never seen dynamic programming before, they're

1560
01:31:24,100 --> 01:31:26,900
probably not going to be comfortable working on a dynamic programming

1561
01:31:26,900 --> 01:31:27,300
problem.

1562
01:31:27,300 --> 01:31:29,900
It's going to be very new to them and they're going to need a day or

1563
01:31:29,900 --> 01:31:31,700
two for it to sink into their brain.

1564
01:31:31,700 --> 01:31:34,000
Like what it means and how they might apply it, and that sort of

1565
01:31:34,000 --> 01:31:34,400
stuff.

1566
01:31:34,600 --> 01:31:36,100
So, why are you asking that question?

1567
01:31:36,100 --> 01:31:37,700
That's just dumb, right?

1568
01:31:37,800 --> 01:31:42,300
It doesn't make any sense and it doesn't give the interview, the

1569
01:31:42,300 --> 01:31:46,000
interview candidate, a chance to demonstrate whether they're a good

1570
01:31:46,000 --> 01:31:47,300
programmer or not, right?

1571
01:31:47,400 --> 01:31:48,300
So you need

1572
01:31:48,500 --> 01:31:49,400
Make them comfortable.

1573
01:31:49,400 --> 01:31:52,700
You need to put them on their own turf and and ask them questions

1574
01:31:52,700 --> 01:31:53,100
about things.

1575
01:31:53,100 --> 01:31:56,100
They have become familiar with to see how familiar.

1576
01:31:56,100 --> 01:31:57,100
Did they become with them?

1577
01:31:57,100 --> 01:31:59,900
They had plenty of time to do this thing at their previous employment

1578
01:31:59,900 --> 01:32:00,700
or in school.

1579
01:32:01,300 --> 01:32:03,200
What did they do, right?

1580
01:32:03,200 --> 01:32:04,400
And how did they do it?

1581
01:32:05,200 --> 01:32:06,700
You can find that out from them.

1582
01:32:06,800 --> 01:32:08,900
You don't need to make some stupid question.

1583
01:32:09,100 --> 01:32:15,300
Like, you know, can you prove that there are two places in the world

1584
01:32:15,300 --> 01:32:18,300
on opposite sides of the globe that have the same temperature or

1585
01:32:18,400 --> 01:32:19,700
Something else stupid like this.

1586
01:32:38,600 --> 01:32:39,800
Let's see here.

1587
01:33:06,000 --> 01:33:08,200
So I really should probably get going soon.

1588
01:33:08,200 --> 01:33:10,300
We're way over time here but I'm just looking to see what there's a

1589
01:33:10,300 --> 01:33:11,800
lot of questions, all of a sudden.

1590
01:33:16,000 --> 01:33:18,700
Is there any time you've talked about deep learning?

1591
01:33:19,400 --> 01:33:20,900
No, I have not.

1592
01:33:23,000 --> 01:33:27,900
I'm also not super knowledgeable about about learning based algorithms

1593
01:33:28,200 --> 01:33:30,500
and I have like limited experience with some of them but definitely

1594
01:33:30,500 --> 01:33:31,100
not.

1595
01:33:31,900 --> 01:33:33,300
Anyone like that.

1596
01:33:34,200 --> 01:33:37,300
That is probably the the current kind you might see.

1597
01:33:38,400 --> 01:33:39,400
Like neural networks.

1598
01:33:41,400 --> 01:33:43,000
I've never done a neural network algorithm

1599
01:33:45,600 --> 01:33:48,600
speaking of past jobs, would you rather see a job at a Java shop

1600
01:33:48,600 --> 01:33:52,500
versus a local colleges faculty for high performance Computing?

1601
01:33:52,500 --> 01:33:54,700
Again, I don't care.

1602
01:33:54,700 --> 01:34:00,200
I'm not the one to ask because I don't really hire people, right?

1603
01:34:00,200 --> 01:34:02,600
Like, if we ever hired people at Molly rocket, they'll be probably

1604
01:34:02,600 --> 01:34:05,200
very few people and they're probably people, I know already, right?

1605
01:34:05,200 --> 01:34:13,200
So you know my opinion on how to hire is not that relevant in terms of

1606
01:34:13,200 --> 01:34:13,900
people seeking employment.

1607
01:34:13,900 --> 01:34:15,600
I feel like the advice I have

1608
01:34:15,700 --> 01:34:16,200
To give on that.

1609
01:34:16,200 --> 01:34:21,000
It's just more like if you're trying to hire people, you know, and

1610
01:34:21,500 --> 01:34:24,000
don't do the things that Google does.

1611
01:34:24,000 --> 01:34:28,700
For example, I think they just have a really bad hiring process and

1612
01:34:28,800 --> 01:34:31,100
not to be too glib about it but I think it kind of shows in the

1613
01:34:31,100 --> 01:34:35,000
quality of their software to but that's a separate issue anyway.

1614
01:34:35,000 --> 01:34:38,900
Like I feel like you kind of need to to think that through in terms of

1615
01:34:38,900 --> 01:34:43,900
hiring but in terms of getting a job, you know, I don't I don't have

1616
01:34:43,900 --> 01:34:45,500
much to say because I'm not

1617
01:34:45,600 --> 01:34:48,600
Not the kind of person who's hiring for most of the available

1618
01:34:48,600 --> 01:34:49,400
positions out there.

1619
01:34:49,400 --> 01:34:51,800
It's more like the type of people who are hiring are more like the

1620
01:34:51,800 --> 01:34:54,800
kinds of people who tend to think that it's cool to ask a stupid

1621
01:34:54,800 --> 01:34:58,600
question in an interview about some puzzly weird thing, right?

1622
01:35:00,700 --> 01:35:05,200
As for if you're just asking out of curiosity, what I'd rather see, I

1623
01:35:05,200 --> 01:35:08,900
don't care what's on a resume as long as there's something on it.

1624
01:35:08,900 --> 01:35:13,200
I can ask about that will allow me to tell whether this person is a

1625
01:35:13,200 --> 01:35:14,600
good program or not, right?

1626
01:35:15,600 --> 01:35:21,000
So, you know, if the thing is, like, just, I don't know.

1627
01:35:21,000 --> 01:35:24,800
I like, did, like, JavaScript programming, for websites, or something.

1628
01:35:24,800 --> 01:35:27,400
Maybe it's going to be hard for me to drill down to anything.

1629
01:35:28,400 --> 01:35:29,400
Interesting enough.

1630
01:35:29,900 --> 01:35:32,000
To really find out.

1631
01:35:33,600 --> 01:35:37,500
But, you know, most other things that probably, there are like,

1632
01:35:37,500 --> 01:35:39,400
certainly, a high performance Computing lab.

1633
01:35:39,400 --> 01:35:40,500
I could easily ask questions.

1634
01:35:40,500 --> 01:35:42,600
That would tell me how, well, you can think through these problems

1635
01:35:42,600 --> 01:35:46,000
has, what kind of experience, you've had, what you, you know, how you

1636
01:35:46,000 --> 01:35:49,900
applied yourself there, certainly that would have it and at a random

1637
01:35:49,900 --> 01:35:52,700
Java shop, you know, again it depends what you were working on, but

1638
01:35:52,700 --> 01:35:57,200
probably there are things in whatever that job was that I could you

1639
01:35:57,200 --> 01:35:59,600
know ask about to find out how you are at

1640
01:35:59,700 --> 01:35:59,800
and,

1641
01:36:00,000 --> 01:36:03,100
M, and learning that new things and flexibility and all that sort of

1642
01:36:03,100 --> 01:36:03,900
stuff, right?

1643
01:36:11,500 --> 01:36:12,600
Gimenez, great interview.

1644
01:36:12,600 --> 01:36:16,000
It's the only issue I've had with that is candidates, who have no

1645
01:36:16,000 --> 01:36:16,400
products.

1646
01:36:16,400 --> 01:36:19,400
They're proud enough to really talk about and I feel like I'm judging

1647
01:36:19,400 --> 01:36:22,400
them unfairly for not having the same interest for programming outside

1648
01:36:22,400 --> 01:36:23,400
of work or class.

1649
01:36:24,100 --> 01:36:26,400
Well, I don't think that should be the case though, because if they've

1650
01:36:26,400 --> 01:36:29,400
had enough experience to be applying for the job at all, like they

1651
01:36:29,400 --> 01:36:30,800
have to have written a lot of code.

1652
01:36:31,100 --> 01:36:35,300
Like, if you haven't written enough code, then that's just like,

1653
01:36:36,500 --> 01:36:38,000
you're not going to be a good programmer, right?

1654
01:36:38,000 --> 01:36:40,100
So you might as well send the interview there, right?

1655
01:36:40,500 --> 01:36:41,000
Having written.

1656
01:36:41,100 --> 01:36:43,800
Enough code that there's something in your past we can talk about is

1657
01:36:43,800 --> 01:36:44,600
kind of a requirement.

1658
01:36:44,600 --> 01:36:47,200
You don't have to be proud of it, you just have to have done it,

1659
01:36:47,400 --> 01:36:48,200
right?

1660
01:36:50,000 --> 01:36:51,300
So there has to be something there.

1661
01:36:51,300 --> 01:36:55,400
And if there isn't then that's just probably a no higher because you

1662
01:36:55,400 --> 01:36:58,500
kind of need like there are no good programmers who haven't done a ton

1663
01:36:58,500 --> 01:36:59,200
of programming.

1664
01:37:00,200 --> 01:37:03,100
So, you know, even entry level people, I would expect them to have

1665
01:37:03,100 --> 01:37:05,200
done a lot of programming and that's cool.

1666
01:37:05,600 --> 01:37:07,600
It doesn't have to be outside of their assignments, but they had to

1667
01:37:07,600 --> 01:37:09,300
have done all their assignments at least, right?

1668
01:37:11,000 --> 01:37:14,500
And you know, wherever they were working, they had to be doing stuff

1669
01:37:14,500 --> 01:37:15,500
at work, right?

1670
01:37:15,900 --> 01:37:16,400
So

1671
01:37:42,200 --> 01:37:45,100
What are some things that can cause a smart individual who has a good

1672
01:37:45,100 --> 01:37:47,600
understanding of programming, not to be productive and what can be

1673
01:37:47,600 --> 01:37:49,200
done to eliminate these causes?

1674
01:37:49,300 --> 01:37:51,900
I don't know, I have no idea.

1675
01:37:56,200 --> 01:38:02,000
you know, I pretty much always program for 4 hours a day, every day at

1676
01:38:02,000 --> 01:38:02,600
a minimum,

1677
01:38:04,500 --> 01:38:11,900
like, even my slowest, you know, it's real rare for me to go a day

1678
01:38:11,900 --> 01:38:14,000
without four hours of programming in it, right?

1679
01:38:14,000 --> 01:38:20,900
I'm talking about a work day and, you know, most good programmers.

1680
01:38:20,900 --> 01:38:21,600
I know.

1681
01:38:26,000 --> 01:38:29,200
Have something like that.

1682
01:38:31,400 --> 01:38:35,000
And I don't know why they they are that way, right?

1683
01:38:35,500 --> 01:38:37,600
I definitely know programmers, who I'd say.

1684
01:38:37,600 --> 01:38:40,200
These people are very smart, they're not necessarily good programmers

1685
01:38:40,200 --> 01:38:41,800
because they just don't get it done.

1686
01:38:41,800 --> 01:38:42,300
Right?

1687
01:38:42,500 --> 01:38:46,300
And and writing code is not the only thing you'd be doing, right?

1688
01:38:46,300 --> 01:38:50,700
Like, for example, Fabien has famously said that, you know, sometimes

1689
01:38:50,700 --> 01:38:55,300
he like work stuff out in notebooks and just reads things for, you

1690
01:38:55,300 --> 01:38:57,900
know, several days at a time and then just writes the code and it's

1691
01:38:57,900 --> 01:38:59,800
done and it's great or whatever, right.

1692
01:39:00,300 --> 01:39:04,400
So, it's not necessarily typing in code, but it's doing actual

1693
01:39:04,400 --> 01:39:08,500
productive work for, you know, for hours a day I think is kind of what

1694
01:39:08,500 --> 01:39:09,700
you would expect a program doing.

1695
01:39:09,700 --> 01:39:11,900
And there's some people who just don't do that.

1696
01:39:11,900 --> 01:39:13,100
And I don't know why.

1697
01:39:13,900 --> 01:39:16,600
I just, I just have no idea why.

1698
01:39:18,600 --> 01:39:23,000
I don't know if it's like brain chemistry, or if it's like, bad habits

1699
01:39:23,000 --> 01:39:26,000
or something, but not being a manager.

1700
01:39:26,000 --> 01:39:28,600
I don't really have to worry about that.

1701
01:39:31,400 --> 01:39:35,900
At Molly, we pretty much only hire people who, you know, are going to

1702
01:39:35,900 --> 01:39:39,600
do, basically the same thing for art, we do exactly the same.

1703
01:39:39,600 --> 01:39:42,600
It's like, we want people who we know, are working no less than four

1704
01:39:42,600 --> 01:39:48,300
hours a day, you know, at a bare minimum because we know that if

1705
01:39:48,300 --> 01:39:53,100
everyone's doing at least that much work, every day you get a fair bit

1706
01:39:53,100 --> 01:39:54,800
of work, done every week, right?

1707
01:39:55,400 --> 01:39:58,800
Whereas people who just talk all the time or you know, surf the web or

1708
01:39:58,800 --> 01:40:01,100
whatever else you just, that's just not useful.

1709
01:40:01,200 --> 01:40:02,300
You know, it's not work.

1710
01:40:02,600 --> 01:40:05,100
It's that's like playing around or whatever.

1711
01:40:18,300 --> 01:40:21,100
Rome 0, 0, 0, 1 0 0, 1 1.

1712
01:40:21,100 --> 01:40:23,800
But people do come with big claims on their resume.

1713
01:40:23,800 --> 01:40:26,800
You got to at least ask about Pointer math, if you're hiring a see

1714
01:40:26,800 --> 01:40:27,400
expert.

1715
01:40:27,600 --> 01:40:32,700
No, I mean, this is, the point is drill down questions, get to all

1716
01:40:32,700 --> 01:40:34,400
that stuff, right?

1717
01:40:34,600 --> 01:40:39,000
Like you you would be shocked how fast you can figure out that someone

1718
01:40:39,000 --> 01:40:41,500
has no idea what they're talking about when you drill down on

1719
01:40:41,500 --> 01:40:42,900
something in their resume, right?

1720
01:40:42,900 --> 01:40:47,700
Like it comes across out quickly, you know what I mean?

1721
01:40:50,300 --> 01:40:51,500
and so, it's like,

1722
01:40:53,300 --> 01:40:54,400
It's really not.

1723
01:40:54,400 --> 01:40:59,100
You don't have to ask reverse a linked list, kind of questions.

1724
01:40:59,300 --> 01:41:04,100
It's really obvious when you drill down into something that they can't

1725
01:41:04,100 --> 01:41:08,700
can or can't do this stuff because, you know, when I say drill down

1726
01:41:08,700 --> 01:41:12,400
you go all the way down to, like the code eventually, you will be

1727
01:41:12,400 --> 01:41:13,300
coding on a whiteboard.

1728
01:41:13,300 --> 01:41:14,800
When you do that style interview, right?

1729
01:41:14,800 --> 01:41:17,900
You're like, okay, like the LZ question, like, how your coding this

1730
01:41:17,900 --> 01:41:18,100
thing?

1731
01:41:18,100 --> 01:41:22,400
All right, so how did you, you know, what was the cash, you know,

1732
01:41:22,600 --> 01:41:23,500
Of that thing or whatever.

1733
01:41:23,500 --> 01:41:27,000
You know, you get all the way down to those things and it's really

1734
01:41:27,000 --> 01:41:27,400
obvious.

1735
01:41:27,400 --> 01:41:30,800
If somebody doesn't know, you know what a pointer is or something.

1736
01:41:30,800 --> 01:41:35,800
By the time, you're dealing down at those at the specifics, you know?

1737
01:41:46,400 --> 01:41:50,900
Chochmah who wouldn't know how to reverse a linked list.

1738
01:41:50,900 --> 01:41:52,800
You can do that on the spot.

1739
01:41:54,100 --> 01:41:59,800
Well again like two things about that one is I don't know.

1740
01:42:00,300 --> 01:42:03,300
Who knows why you couldn't reverse a linked list on the spot.

1741
01:42:03,300 --> 01:42:06,100
Maybe you're flustered or confused or something, right?

1742
01:42:06,100 --> 01:42:10,900
Like maybe you're bad at taking interviews, who cares, right?

1743
01:42:12,400 --> 01:42:14,000
Reversing a linked list is something you.

1744
01:42:14,000 --> 01:42:15,700
Almost never do that.

1745
01:42:15,700 --> 01:42:19,100
I can't even think of the last time I ever made code to reverse a

1746
01:42:19,100 --> 01:42:19,900
linked list.

1747
01:42:20,500 --> 01:42:21,100
It's like

1748
01:42:23,000 --> 01:42:25,900
I mean, of all the things that I type in many times and programming

1749
01:42:25,900 --> 01:42:27,200
reversing a linked list.

1750
01:42:27,600 --> 01:42:32,600
I've maybe done once if even that it's just really, it doesn't make

1751
01:42:32,600 --> 01:42:33,200
any sense.

1752
01:42:33,500 --> 01:42:38,700
Like why would that be the kind of thing you would ask when it's just

1753
01:42:38,700 --> 01:42:43,100
not relevant to programming most of the time and the only thing you're

1754
01:42:43,100 --> 01:42:46,100
going to learn from it is whether this person is not flustered that's

1755
01:42:46,100 --> 01:42:48,600
by, by having a thing thrown at them.

1756
01:42:48,600 --> 01:42:51,300
That they either have never done before, or if they've done it, it's

1757
01:42:51,300 --> 01:42:52,400
only because it was

1758
01:42:52,600 --> 01:42:55,200
Toy problem Bay chose to work on, right?

1759
01:42:57,000 --> 01:42:58,300
It just doesn't make any sense.

1760
01:42:59,100 --> 01:43:03,800
It's it's either zero information or wrong information is the only two

1761
01:43:03,800 --> 01:43:05,900
things are going to learn from that question.

1762
01:43:07,000 --> 01:43:09,600
So drill down on something that matters.

1763
01:43:09,800 --> 01:43:12,600
What has the person done get them to recreate.

1764
01:43:12,600 --> 01:43:16,400
Some of that code that they've already done on the Whiteboard for you.

1765
01:43:16,400 --> 01:43:21,300
That is way more useful and way more telling about the person and

1766
01:43:21,300 --> 01:43:25,100
their qualities as a programmer than throwing an interview.

1767
01:43:25,100 --> 01:43:26,400
Question, at them that they

1768
01:43:26,800 --> 01:43:29,900
Probably have never seen before unless they practiced for it.

1769
01:43:29,900 --> 01:43:33,000
On stupid questions, like reverse a linked list.

1770
01:43:34,700 --> 01:43:35,800
I mean, that's just

1771
01:43:38,400 --> 01:43:41,000
When was the last time you wrote code to reverse a linked list?

1772
01:43:42,200 --> 01:43:44,500
Like why did you do it?

1773
01:43:44,500 --> 01:43:45,700
What were you doing?

1774
01:43:45,700 --> 01:43:48,700
What code were you writing to reverse a linked list?

1775
01:43:49,400 --> 01:43:53,300
I mean, why did you build the linked list in reverse order in the

1776
01:43:53,300 --> 01:43:54,100
first place?

1777
01:43:55,400 --> 01:44:00,200
Like seems inefficient to me, maybe I should ask you, why you're

1778
01:44:00,200 --> 01:44:02,100
asking me to reverse a linked list does?

1779
01:44:02,200 --> 01:44:05,000
Like if an interviewer asked me to reverse a linked list, maybe I

1780
01:44:05,000 --> 01:44:05,500
would tell them.

1781
01:44:05,500 --> 01:44:06,000
Hey,

1782
01:44:07,000 --> 01:44:09,500
Why did you build the list backwards now?

1783
01:44:09,500 --> 01:44:13,100
You're touching all of those potentially unrelated cache lines?

1784
01:44:13,100 --> 01:44:14,600
That sounds like a horrible idea.

1785
01:44:37,000 --> 01:44:40,600
Often I have a hard time digging into people's past projects because

1786
01:44:40,600 --> 01:44:44,700
they throw out tons of acronyms jargon Frameworks etcetera that I'm

1787
01:44:44,700 --> 01:44:47,700
not familiar with maybe they've worked in a completely different

1788
01:44:47,700 --> 01:44:51,400
industry like medical or defense and their work context is totally

1789
01:44:51,400 --> 01:44:52,200
unfamiliar to me.

1790
01:44:52,500 --> 01:44:53,900
How do you handle that?

1791
01:44:54,300 --> 01:44:59,800
So the way that I handle that is make them, teach you that

1792
01:45:00,000 --> 01:45:00,800
Perfect.

1793
01:45:00,900 --> 01:45:03,900
If you go like, oh yeah.

1794
01:45:03,900 --> 01:45:07,000
Like so it says, here on your resume that you made like a mailing list

1795
01:45:07,000 --> 01:45:10,000
subscription thing like how, you know, tell me about that.

1796
01:45:10,000 --> 01:45:10,600
What's the deal with that?

1797
01:45:10,600 --> 01:45:12,700
Is like, oh yeah, for our website, we need to thing where you could

1798
01:45:12,700 --> 01:45:16,000
type in the mailing list and address it was described as like, okay.

1799
01:45:16,000 --> 01:45:20,600
So how did you implement, you know, the thing that stores the mailing

1800
01:45:20,600 --> 01:45:23,900
list, like, what was that and then they're like, oh, that was, you

1801
01:45:23,900 --> 01:45:26,300
know, Pro sequel.

1802
01:45:26,600 --> 01:45:29,300
I'm making up something that well, actually, that probably exists, but

1803
01:45:29,300 --> 01:45:29,800
let's say that.

1804
01:45:30,000 --> 01:45:31,300
Pro sequel doesn't exist for the sake of the argument.

1805
01:45:31,800 --> 01:45:34,400
Oh yeah, we use like a pro sequel.

1806
01:45:34,400 --> 01:45:35,400
Back end or something like that.

1807
01:45:35,400 --> 01:45:37,000
And be like oh what's Pro Sequel?

1808
01:45:37,000 --> 01:45:41,800
And the like oh it's you know, database variant by such and such a

1809
01:45:41,800 --> 01:45:45,600
company or there's like, okay, so how tell me about the deployment of

1810
01:45:45,600 --> 01:45:46,100
that system?

1811
01:45:46,100 --> 01:45:47,500
Like what does that system look like like.

1812
01:45:47,500 --> 01:45:49,800
Okay, tell me about the queries for that system.

1813
01:45:49,800 --> 01:45:51,900
How did the queries where it's like, you know, blah, blah blah blah.

1814
01:45:51,900 --> 01:45:55,500
Like make them go all the way down to like the actual code they wrote.

1815
01:45:55,500 --> 01:46:00,000
And if you don't know, the acronyms so much, the better force them to

1816
01:46:00,000 --> 01:46:03,800
Explain all the way down to the actual code.

1817
01:46:04,200 --> 01:46:07,500
One thing that they did, and if you don't know the acronyms, it

1818
01:46:07,500 --> 01:46:09,400
doesn't matter because that's even better.

1819
01:46:09,400 --> 01:46:11,500
That means they're going to have to explain all of that to you and if

1820
01:46:11,500 --> 01:46:14,400
they can't explain to you what they did, they obviously don't

1821
01:46:14,400 --> 01:46:16,300
understand it very well, right?

1822
01:46:16,600 --> 01:46:20,600
Like being able to explain what you programmed is a core job function

1823
01:46:20,600 --> 01:46:23,200
because if you're going to work with anyone else, you need to be able

1824
01:46:23,200 --> 01:46:24,600
to explain to them what's going on.

1825
01:46:24,800 --> 01:46:29,800
So if they can't tell you what it is, they did, that's a great.

1826
01:46:31,300 --> 01:46:32,300
You know, situation.

1827
01:46:34,700 --> 01:46:38,000
John McGrath I like this interview methodology maybe in a chat stream

1828
01:46:38,000 --> 01:46:40,500
one day you could mock interview someone as a demonstration.

1829
01:46:40,800 --> 01:46:42,700
Yeah I was just having that thought.

1830
01:46:42,700 --> 01:46:45,400
In fact I was going to say is anyone on stream right now that I can

1831
01:46:45,400 --> 01:46:48,900
just like conference in and I'll just interview them the way that I

1832
01:46:48,900 --> 01:46:51,300
think you're supposed to do this interview so that you can see

1833
01:47:10,700 --> 01:47:13,500
and you can't call this the case in your ettore enhanced interview

1834
01:47:13,500 --> 01:47:16,400
techniques because Chris Hacker is the person who invented it.

1835
01:47:16,400 --> 01:47:17,400
As far as I know.

1836
01:47:18,300 --> 01:47:21,400
I mean I maybe he got it from somewhere but I don't think he did.

1837
01:47:21,400 --> 01:47:24,200
I think he just came up with it because he was at Microsoft and he did

1838
01:47:24,200 --> 01:47:29,300
a bunch of interviewing and Microsoft was kind of the pioneer as far

1839
01:47:29,300 --> 01:47:33,700
as I know of the stupid interview question technique and Chris like

1840
01:47:33,700 --> 01:47:37,500
specifically did not think that was a good idea much to his credit and

1841
01:47:37,500 --> 01:47:39,900
came up with this as an alternate way to interview people and

1842
01:47:40,100 --> 01:47:41,100
It's very good.

1843
01:47:44,000 --> 01:47:44,600
All right, Sean.

1844
01:47:44,600 --> 01:47:44,900
Yeah.

1845
01:47:44,900 --> 01:47:47,400
I'll definitely I'd totally do the interview.

1846
01:47:48,300 --> 01:47:49,300
That sounds great.

1847
01:47:52,200 --> 01:47:53,400
Some other time, we'll do it.

1848
01:47:57,800 --> 01:47:59,800
and you can, you can stream

1849
01:48:00,900 --> 01:48:04,400
You can stream from your computer, your with the Whiteboard on, so

1850
01:48:04,400 --> 01:48:07,900
that when you comes time to actually scratch things out that I'm

1851
01:48:07,900 --> 01:48:11,400
asking, you can draw them on there.

1852
01:48:22,300 --> 01:48:25,500
Super jerk on this is actually already how I do interviews.

1853
01:48:25,500 --> 01:48:28,400
The problem is people tend to be totally blindsided by being asked

1854
01:48:28,400 --> 01:48:29,800
about their own experience yet.

1855
01:48:29,800 --> 01:48:32,400
One of the problems now is like people buy these books like how to

1856
01:48:32,400 --> 01:48:35,600
prepare for an interview and of course they're all to prepare you for

1857
01:48:35,600 --> 01:48:39,500
these look really crappy Google style, interview processes and so

1858
01:48:39,500 --> 01:48:43,700
they're all like practicing these stupid questions like that.

1859
01:48:43,800 --> 01:48:45,400
You know, is not at all.

1860
01:48:45,400 --> 01:48:50,000
Like if you actually end up getting a good interviewer viewer the can

1861
01:48:50,200 --> 01:48:52,400
It is now totally surprised because they're like, Oh I thought you

1862
01:48:52,400 --> 01:48:55,700
were going to ask me a dumb brain teaser question or something, right?

1863
01:48:59,300 --> 01:49:06,400
So you know like unfortunately one problem is that people aren't

1864
01:49:06,400 --> 01:49:09,000
coming prepared for a good interview.

1865
01:49:09,100 --> 01:49:12,800
They're coming prepared for a bad interview which yeah, it does make

1866
01:49:12,800 --> 01:49:16,400
it a little harder, but I still think it's like, hey, you know, if you

1867
01:49:16,400 --> 01:49:20,200
can't talk about your past experience after five or six minutes of

1868
01:49:20,200 --> 01:49:24,100
just like getting more comfortable with me, I mean that's going to be

1869
01:49:24,100 --> 01:49:25,300
a problem, right?

1870
01:49:34,300 --> 01:49:36,700
And that's another thing that I would point out is true about this

1871
01:49:36,700 --> 01:49:40,200
interview process is it's impervious to hacking, right?

1872
01:49:41,700 --> 01:49:45,300
Like one of the problems with with

1873
01:49:48,000 --> 01:49:53,800
The the random brain teaser question problem is that there's only so

1874
01:49:53,800 --> 01:49:56,400
many of those that people tend to give out and now they just got books

1875
01:49:56,400 --> 01:49:56,800
with a minute.

1876
01:49:56,800 --> 01:49:59,300
And so now people can just practice and maybe the only thing they know

1877
01:49:59,300 --> 01:50:01,900
about programming is how to answer that question, right?

1878
01:50:04,400 --> 01:50:09,300
But if you do the drill down method then the person has no idea what

1879
01:50:09,300 --> 01:50:11,900
where you're going to go with that drill down, right?

1880
01:50:12,400 --> 01:50:17,300
Because typically what you do and this is like sort of the the again

1881
01:50:17,300 --> 01:50:18,300
the Chris Hacker style.

1882
01:50:18,600 --> 01:50:22,700
Is he generally does the sort of Venn diagram approach to it, where he

1883
01:50:22,700 --> 01:50:27,700
takes something as the drill down proceeds, he finally gets to some

1884
01:50:27,700 --> 01:50:32,700
part in the drill down where he has a kind of area he wants.

1885
01:50:32,900 --> 01:50:33,200
Explore.

1886
01:50:33,200 --> 01:50:37,600
That's right nearby and he makes the candidate go there, right?

1887
01:50:37,700 --> 01:50:41,400
So it kind of like builds off of the candidates comfort and just out

1888
01:50:41,400 --> 01:50:45,800
into a little bit enough knew that the candidate has to kind of do a

1889
01:50:45,800 --> 01:50:46,800
little inventing.

1890
01:50:49,100 --> 01:50:52,900
And since there's no way to really know what that's going to be, you

1891
01:50:52,900 --> 01:50:55,400
can't really practice for it, right?

1892
01:50:56,600 --> 01:50:59,000
You know, the only thing you can really do to practice for it is to be

1893
01:50:59,000 --> 01:50:59,800
a good program.

1894
01:51:00,000 --> 01:51:01,600
And know what you did.

1895
01:51:01,600 --> 01:51:05,300
It's like be comfortable with the things that you've done and be

1896
01:51:05,300 --> 01:51:09,800
prepared to provide Insight in those areas to somebody, which is

1897
01:51:09,800 --> 01:51:12,100
exactly what you actually is.

1898
01:51:12,100 --> 01:51:15,200
Exactly the experience, we are hiring you for, right?

1899
01:51:15,200 --> 01:51:19,300
So it's the only way you could hack it is by being better.

1900
01:51:19,300 --> 01:51:22,400
At the actual thing, we actually wanted you to be right?

1901
01:51:23,000 --> 01:51:26,300
Because nobody expects you to come to a job with experience.

1902
01:51:26,300 --> 01:51:29,800
You didn't say you had right and nobody expects you to

1903
01:51:30,000 --> 01:51:33,000
Come to a job, being able to solve random brain teasers.

1904
01:51:33,200 --> 01:51:37,900
So, you know, the the other things, that the things that are

1905
01:51:37,900 --> 01:51:40,000
encouraged by the other interview process are basic.

1906
01:51:40,000 --> 01:51:42,300
Just burning the candidates time on stuff.

1907
01:51:42,300 --> 01:51:45,900
We don't actually care if you can do when you actually show up here to

1908
01:51:45,900 --> 01:51:47,000
work if we hire you.

1909
01:51:47,700 --> 01:51:50,300
Whereas anything you might do that would get you better at

1910
01:51:50,300 --> 01:51:53,800
interviewing on Chris's process is actually just making you a better

1911
01:51:53,800 --> 01:51:57,000
programmer and making you more experienced at the things that you

1912
01:51:57,000 --> 01:51:57,800
actually claimed.

1913
01:51:57,800 --> 01:51:58,900
You were on your resume.

1914
01:52:00,700 --> 01:52:02,600
Which is all win-win for the most part.

1915
01:52:04,000 --> 01:52:04,500
So,

1916
01:52:08,600 --> 01:52:08,900
All right.

1917
01:52:08,900 --> 01:52:09,700
Now I really got to go.

1918
01:52:09,700 --> 01:52:10,800
It's almost 7:00.

1919
01:52:15,200 --> 01:52:18,000
Okay, and I got to reboot the machine.

1920
01:52:18,000 --> 01:52:21,200
So I'm going to close this stuff down and we're going to reboot so I

1921
01:52:21,200 --> 01:52:24,300
can get, I can get some better.

1922
01:52:25,900 --> 01:52:27,800
It's like the Wacom tablet back online.

1923
01:52:28,900 --> 01:52:29,300
All right.

1924
01:52:29,300 --> 01:52:30,300
Thank you, everyone for joining me.

1925
01:52:30,300 --> 01:52:32,300
For those sort of handmade he rots in a pleasure coding with you.

1926
01:52:32,300 --> 01:52:36,000
As always, if you would like to follow along at home, you can always

1927
01:52:36,000 --> 01:52:37,800
pre-order the game on handmade hero dot-org.

1928
01:52:37,800 --> 01:52:41,000
It comes to the source code, so you can do your own experiments with

1929
01:52:41,000 --> 01:52:42,000
it and learn from it.

1930
01:52:42,100 --> 01:52:44,600
We also have forms that you can go to ask questions, we have a patreon

1931
01:52:44,600 --> 01:52:47,200
page and go to if you want support the video series, there's a

1932
01:52:47,200 --> 01:52:50,300
schedule bot that tweets the schedule at you and episode guide you can

1933
01:52:50,300 --> 01:52:55,000
use to catch up on old episodes and of course a little button that

1934
01:52:55,000 --> 01:52:57,300
tells you the next time we're going to be live.

1935
01:52:57,300 --> 01:52:58,600
If you refresh the page it'll just

1936
01:52:58,700 --> 01:53:01,500
Get down to the next showing.

1937
01:53:02,400 --> 01:53:04,600
That is about it for today.

1938
01:53:04,600 --> 01:53:07,400
I will be back here tomorrow for the last dream of the week.

1939
01:53:07,800 --> 01:53:10,300
Until then have fun programming everyone.

1940
01:53:10,300 --> 01:53:12,100
And I will see you guys on the internet.

1941
01:53:12,800 --> 01:53:13,500
Take it easy.

