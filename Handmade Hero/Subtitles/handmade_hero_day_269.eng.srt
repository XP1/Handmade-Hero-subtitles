1
00:00:01,700 --> 00:00:04,000
Hello, everyone, and welcome to handmade hero.

2
00:00:04,000 --> 00:00:07,000
The show we could have complete game live on stream.

3
00:00:08,200 --> 00:00:09,000
Yesterday.

4
00:00:09,000 --> 00:00:14,100
We did some cleaning up of the way, we were dealing with our menus in

5
00:00:14,100 --> 00:00:15,000
our debug system.

6
00:00:15,900 --> 00:00:22,000
And today I think we want to kind of finish polishing the like

7
00:00:22,000 --> 00:00:24,300
presentation of them and they use of them.

8
00:00:24,300 --> 00:00:27,600
Potentially, I'm not 100% certain.

9
00:00:27,600 --> 00:00:30,700
What I want to do today, I haven't really decided

10
00:00:31,200 --> 00:00:36,100
But I would like to, you know, kind of put that stuff to rest and so I

11
00:00:36,100 --> 00:00:38,800
want to at least go through and take a look and see if there's any

12
00:00:38,800 --> 00:00:42,000
other little dangly things that are problematic.

13
00:00:43,800 --> 00:00:44,700
So

14
00:00:47,200 --> 00:00:48,400
Let's do that.

15
00:00:50,300 --> 00:00:51,400
Do do, do do.

16
00:00:55,800 --> 00:00:57,600
Oh, and today is day 269.

17
00:00:57,600 --> 00:01:02,100
So if you want to follow along at home, you are going to want a 268

18
00:01:02,100 --> 00:01:02,800
source code.

19
00:01:02,800 --> 00:01:05,700
That is what I am starting with today.

20
00:01:06,100 --> 00:01:10,200
So, here is where we're at on this.

21
00:01:10,200 --> 00:01:16,100
So you can kind of see all of our stuff rendering and all of our debug

22
00:01:16,100 --> 00:01:18,100
you, I kind of working the way that it does.

23
00:01:19,100 --> 00:01:23,600
And so what I was sort of talking about work at, you know, the thing

24
00:01:23,600 --> 00:01:25,400
that I was mentioning the other day was our

25
00:01:25,600 --> 00:01:29,300
Rather yesterday was, I don't know exactly what we might want to do

26
00:01:29,300 --> 00:01:31,900
with, you know, with some of this sort of stuff, right?

27
00:01:31,900 --> 00:01:36,300
We have the ability to break things out at the moment, I don't know.

28
00:01:36,300 --> 00:01:44,400
For some reason, we don't seem to be able to clone stuff that isn't a

29
00:01:44,400 --> 00:01:49,500
group and I'm not super sure why that is true like we should be able

30
00:01:49,500 --> 00:01:52,400
to grab one of these things and clone out.

31
00:01:52,400 --> 00:01:55,400
I think I'm not 100% certain about some of that stuff.

32
00:01:55,500 --> 00:01:55,600
Tough.

33
00:01:55,600 --> 00:01:58,700
So, you know, like if we wanted to grab things from different places

34
00:01:58,700 --> 00:02:01,700
and put them into something, I think that actually should have worked

35
00:02:01,700 --> 00:02:04,000
or should be feasible if that makes sense.

36
00:02:04,000 --> 00:02:07,800
But it doesn't appear to be so that might be something to look at as

37
00:02:07,800 --> 00:02:07,900
well.

38
00:02:07,900 --> 00:02:13,200
Anyway, most of the stuff that we wanted to have happen was happening

39
00:02:13,200 --> 00:02:17,100
so you know we can we can sort of push a little bit harder on this

40
00:02:17,100 --> 00:02:17,500
potentially.

41
00:02:17,500 --> 00:02:19,900
Now, maybe clean up some of the way that this, these interactions

42
00:02:19,900 --> 00:02:20,300
happen.

43
00:02:20,300 --> 00:02:25,500
Like this stuff works pretty well at the moment, but like this little

44
00:02:25,600 --> 00:02:29,500
Weird way that you drag things around is kind of a little odd and it's

45
00:02:29,500 --> 00:02:34,200
also kind of annoying that this stuff is not collapsible in a more

46
00:02:34,200 --> 00:02:37,400
complete way, like, it would probably be better.

47
00:02:37,400 --> 00:02:41,800
If all of this stuff was tucked inside a, a big menu that could expand

48
00:02:41,800 --> 00:02:42,500
and collapse.

49
00:02:43,400 --> 00:02:48,400
Which by the way, it basically already is right, we just never exposed

50
00:02:48,400 --> 00:02:50,800
it as something that could expand and collapse.

51
00:02:51,000 --> 00:02:54,400
And so, maybe what we should do is is start with that because I would

52
00:02:54,400 --> 00:02:55,400
like it so that when we're

53
00:02:55,500 --> 00:02:59,200
running the game, you know, maybe we just get a line up here that's

54
00:02:59,200 --> 00:02:59,800
like a

55
00:03:00,000 --> 00:03:03,500
I can't spot but I don't want like tons of stuff here when we're not

56
00:03:03,500 --> 00:03:10,700
actually looking at debug data so that might be a reasonable thing to

57
00:03:10,700 --> 00:03:12,400
start with if that makes sense.

58
00:03:13,500 --> 00:03:16,700
So let's take a look at at that.

59
00:03:19,300 --> 00:03:22,200
Not sure how I want to really approach this but we'll find out.

60
00:03:22,800 --> 00:03:24,700
So, here we go.

61
00:03:24,700 --> 00:03:29,800
Loading our project in for a coder and building and then

62
00:03:30,000 --> 00:03:33,100
Then I am going to go ahead and switch to the tea bag system.

63
00:03:33,700 --> 00:03:37,900
And when we draw the main menu, you'll recall, or I hope you will

64
00:03:37,900 --> 00:03:38,600
recall.

65
00:03:38,800 --> 00:03:40,000
Oh, wait, it's not called that anymore.

66
00:03:42,200 --> 00:03:43,000
What happens is?

67
00:03:43,000 --> 00:03:47,100
We sort of have this idea that we can call one of these three things

68
00:03:47,400 --> 00:03:51,400
and which, you know, those, the separate like movable pieces that we

69
00:03:51,400 --> 00:03:54,400
had out there, we see, two tree and each one of those trees like

70
00:03:54,400 --> 00:03:56,700
basically creates a layout and then draw some stuff.

71
00:03:57,000 --> 00:03:59,800
And you can see that what we do here is we actually

72
00:04:00,000 --> 00:04:04,600
Take a look this group and we don't call draw tree link on that we go

73
00:04:04,600 --> 00:04:05,600
through its children.

74
00:04:06,000 --> 00:04:08,900
And what I'm thinking is that probably, what all we would really need

75
00:04:08,900 --> 00:04:11,000
to do is just stop doing that.

76
00:04:11,000 --> 00:04:12,400
Iteration now that we unify.

77
00:04:12,400 --> 00:04:15,200
Remember, yesterday, we unify the conservative groups and links now

78
00:04:15,200 --> 00:04:18,100
that we've done that, I think we can literally just pass a group here

79
00:04:18,100 --> 00:04:22,000
instead, and what we should get is we should get the root menu showing

80
00:04:22,000 --> 00:04:24,500
up as an actual item, right?

81
00:04:25,600 --> 00:04:27,100
Which is exactly what we want.

82
00:04:27,100 --> 00:04:31,100
And then you can kind of see here that that root menu is now

83
00:04:31,100 --> 00:04:34,100
collapsible in its entirety, which is more what I wanted.

84
00:04:34,200 --> 00:04:37,000
So, when I want this thing to go away, right?

85
00:04:37,000 --> 00:04:42,900
I can kind of do that more specifically and then, if I want something

86
00:04:43,300 --> 00:04:47,300
in here to kind of be a separate menu, then I can also obviously make

87
00:04:47,300 --> 00:04:48,400
that happen as well.

88
00:04:49,500 --> 00:04:53,700
And and you know, we can place these in places if we want to leave

89
00:04:53,700 --> 00:04:55,000
them up, that's fine.

90
00:04:55,600 --> 00:04:58,700
But you know, we don't have to have a bunch of things running down the

91
00:04:58,700 --> 00:04:59,200
side.

92
00:04:59,400 --> 00:05:03,900
So I think that's strictly better just to begin with one thing that I

93
00:05:03,900 --> 00:05:08,300
am a little bit concerned about is that this thing is not a sizable

94
00:05:08,300 --> 00:05:08,800
like this.

95
00:05:08,800 --> 00:05:13,900
This Frame metering bit here and so we may want to make that thing.

96
00:05:13,900 --> 00:05:18,500
Be a sizable region that just starts out at this particular with and

97
00:05:18,500 --> 00:05:21,600
so that can be, you know, controlled a little bit more specifically

98
00:05:22,400 --> 00:05:24,100
and that'd be pretty easy to do as well.

99
00:05:24,100 --> 00:05:25,000
Obviously, with the way.

100
00:05:25,200 --> 00:05:27,200
That we've written the the UI system.

101
00:05:28,600 --> 00:05:33,000
That would be pretty easy because we've got, we've got this Frame

102
00:05:33,000 --> 00:05:34,900
slider here and there's the dimensions of it.

103
00:05:34,900 --> 00:05:39,200
If we wanted it to have more specific viewing thing that would occur

104
00:05:39,200 --> 00:05:39,800
with it.

105
00:05:40,100 --> 00:05:45,100
Then all we would really have to do I think is take this part

106
00:05:45,100 --> 00:05:45,400
actually.

107
00:05:45,400 --> 00:05:49,400
You know what, we could use this part here is a little bit more

108
00:05:49,400 --> 00:05:50,000
straightforward.

109
00:05:50,000 --> 00:05:50,900
We're here.

110
00:05:51,600 --> 00:05:52,200
Where is it?

111
00:05:52,500 --> 00:05:53,000
There it is.

112
00:05:55,500 --> 00:05:59,800
so, all we really have to do is say, well, okay, we've got

113
00:06:01,000 --> 00:06:03,100
We've got a dimension thing here.

114
00:06:03,100 --> 00:06:04,900
We don't probably need anything else.

115
00:06:05,100 --> 00:06:09,300
So if we just want to dimension thing, we can grab out one of those

116
00:06:09,300 --> 00:06:12,700
from this think it's called, what is it called?

117
00:06:12,700 --> 00:06:13,600
An inline block?

118
00:06:13,600 --> 00:06:14,000
Yeah.

119
00:06:14,500 --> 00:06:18,700
If we want to grab out, one of these inline blocks, the inline blocks

120
00:06:18,700 --> 00:06:20,500
have just a dim inside them.

121
00:06:20,700 --> 00:06:23,400
So what we can do here is just say, like, okay, we've got the Inland

122
00:06:23,600 --> 00:06:24,700
inline-block Tim.

123
00:06:25,500 --> 00:06:28,100
So our Dimensions that were talking about

124
00:06:30,500 --> 00:06:31,300
Are these?

125
00:06:33,800 --> 00:06:38,300
And and then we can have that sort of do whatever it's going to do.

126
00:06:38,800 --> 00:06:43,700
So we'll grab out one of those will say in the event that the thing is

127
00:06:43,700 --> 00:06:49,200
uninitialized, which is this case here will keep the same thing we

128
00:06:49,200 --> 00:06:49,700
were doing.

129
00:06:49,700 --> 00:06:53,100
So it'll work the way that it used to but now it will

130
00:06:55,700 --> 00:07:02,700
It'll be sizable and and you know the user can can play with how big

131
00:07:02,700 --> 00:07:06,000
they want that frame control to be if they want to be smaller or

132
00:07:06,000 --> 00:07:09,300
whatever, so let's see.

133
00:07:10,300 --> 00:07:14,300
Now if I launch this and I mean there's really no reason not to make

134
00:07:14,300 --> 00:07:17,300
things sizable, so it just seemed like the right thing to do so now,

135
00:07:17,300 --> 00:07:22,600
if I launch this in theory, 08, forgot.

136
00:07:22,600 --> 00:07:24,500
I have to actually say that.

137
00:07:24,700 --> 00:07:27,900
The sizable thing, otherwise it won't ever become sizable.

138
00:07:30,000 --> 00:07:31,400
Make elements sizable.

139
00:07:33,900 --> 00:07:34,400
There we go.

140
00:07:36,400 --> 00:07:40,900
So now that I have told it to that it's sizable we should get the

141
00:07:40,900 --> 00:07:47,400
little stretchable stretchable nub and now we can you know, control

142
00:07:47,400 --> 00:07:48,200
the size of this thing.

143
00:07:48,200 --> 00:07:50,900
So if we want it to to be sort of

144
00:07:51,900 --> 00:07:53,600
You know more diminutive if necessary.

145
00:07:53,600 --> 00:07:56,800
Course it becomes hard to click on any of these but you know I mean

146
00:07:56,800 --> 00:08:01,100
you still can it's just a lot harder when you shrink it down a bit and

147
00:08:01,100 --> 00:08:04,200
so I don't know if we want to do something like if we if it shrinks

148
00:08:04,200 --> 00:08:09,500
down to a certain size that will only draw the most recent couple

149
00:08:09,500 --> 00:08:10,400
frames in here.

150
00:08:10,400 --> 00:08:11,600
You know, or something like that.

151
00:08:11,900 --> 00:08:14,600
There's obviously a bunch of things we could do if we wanted to make

152
00:08:14,600 --> 00:08:17,600
that a little bit different but for now I think that's fine.

153
00:08:17,800 --> 00:08:19,000
The other thing too is we really?

154
00:08:19,300 --> 00:08:21,500
Yeah you know you don't really need to see

155
00:08:21,700 --> 00:08:25,300
Quite that many frames of scroll back potentially to say the least.

156
00:08:25,300 --> 00:08:26,000
But anyway,

157
00:08:27,000 --> 00:08:31,600
po point being all of that looks fine now and and so all of this

158
00:08:31,600 --> 00:08:33,400
appears to be working pretty reasonably.

159
00:08:34,900 --> 00:08:35,400
Okay.

160
00:08:35,600 --> 00:08:40,100
So another thing that I'd like to do actually while we're at that is

161
00:08:40,200 --> 00:08:42,100
inside our profiler view here.

162
00:08:42,900 --> 00:08:47,400
I would like to make these draw one level down again, which they

163
00:08:47,400 --> 00:08:48,600
weren't doing before.

164
00:08:49,800 --> 00:08:53,800
So I want to, I want to just play with that just for one second.

165
00:08:55,900 --> 00:08:58,600
Again, in things like this for, I'm just kind of trying to finish

166
00:08:58,600 --> 00:08:59,100
stuff up.

167
00:08:59,100 --> 00:08:59,800
We can have to jump.

168
00:09:00,000 --> 00:09:03,200
A bit because as I see things, I'm like, oh, maybe I'll go do this and

169
00:09:03,200 --> 00:09:05,400
so it's, I don't have like a super concrete plan of.

170
00:09:05,700 --> 00:09:08,000
I want this, this and this I'm just kind of seeing things like, oh, we

171
00:09:08,000 --> 00:09:08,600
should clean that up.

172
00:09:08,600 --> 00:09:12,300
We should touch this up, just just enough polish to make sure that

173
00:09:12,300 --> 00:09:14,400
things are going to be nice and usable.

174
00:09:15,100 --> 00:09:18,800
So let's say that we're here in draw a profile bars.

175
00:09:20,200 --> 00:09:22,100
You can see it we do wrecked up.

176
00:09:22,100 --> 00:09:25,200
Oops, we do wrecked outlines here.

177
00:09:25,200 --> 00:09:28,000
It looks like for coder is very unhappy about the indentation.

178
00:09:28,400 --> 00:09:31,400
I got to fix that one of these days, I have the power now to fix that

179
00:09:31,400 --> 00:09:37,400
actually because I do have the four quarters source code but I haven't

180
00:09:37,400 --> 00:09:38,300
dove into it yet.

181
00:09:38,300 --> 00:09:39,600
It's not, it doesn't comply.

182
00:09:39,600 --> 00:09:41,600
It requires Visual Studio 2015.

183
00:09:41,600 --> 00:09:44,500
I think so.

184
00:09:44,500 --> 00:09:47,200
I am, but I don't have installed on my dead machine so I could, I

185
00:09:47,200 --> 00:09:49,700
could should probably do it on this machine, long story.

186
00:09:51,600 --> 00:09:56,200
So push wrecked outline what I could do to start with just to clean up

187
00:09:56,200 --> 00:10:00,200
that view a little bit is I would like to potentially do a push

188
00:10:00,200 --> 00:10:05,200
wrecked and a push wreck outline separately because I think that might

189
00:10:05,200 --> 00:10:06,000
look a little nicer.

190
00:10:06,000 --> 00:10:12,900
So you know, if we drew a black border around things and then Drew

191
00:10:13,100 --> 00:10:15,500
solid, rectangles around everything else.

192
00:10:15,800 --> 00:10:18,200
I'm just thinking solid rectangles behind them.

193
00:10:18,300 --> 00:10:19,800
I'm just thinking that might be nice.

194
00:10:19,900 --> 00:10:23,400
Sure, I suppose I don't have to keep rebooting the game.

195
00:10:23,400 --> 00:10:25,000
I could just leave it going here but

196
00:10:26,800 --> 00:10:30,100
Here's the thread view now and you can see that the solid pieces are

197
00:10:30,100 --> 00:10:31,800
just a little bit easier to view.

198
00:10:31,800 --> 00:10:35,300
Obviously if we jump into something, that's got a little bit more to

199
00:10:35,300 --> 00:10:38,500
it and we jump into say the game update procedures.

200
00:10:38,500 --> 00:10:40,800
Here we should be able to see.

201
00:10:40,900 --> 00:10:46,100
I think a little bit more like oh that hover gets clipped.

202
00:10:49,900 --> 00:10:53,800
Interesting, we probably don't want the hover to get clipped Dewey.

203
00:10:54,900 --> 00:10:56,200
Never thought about that.

204
00:10:57,200 --> 00:10:59,900
But anyway, if we go ahead and pause here you can kind of see.

205
00:11:01,600 --> 00:11:02,900
Here's us calling

206
00:11:05,600 --> 00:11:09,900
All of the stuff inside this summer on which we should also.

207
00:11:09,900 --> 00:11:11,300
We could also print out the one we're on.

208
00:11:11,300 --> 00:11:12,400
I should make a list of these.

209
00:11:13,200 --> 00:11:15,100
Here's, this calling entities overlap.

210
00:11:16,300 --> 00:11:16,700
Yeah.

211
00:11:17,700 --> 00:11:18,300
Anyway,

212
00:11:20,800 --> 00:11:22,200
So point being that's a little bit nicer.

213
00:11:22,200 --> 00:11:27,600
But what I wanted to do after that was restore one level of recursion

214
00:11:27,800 --> 00:11:29,700
to how it was drawing.

215
00:11:29,700 --> 00:11:33,000
And so what I wanted to do is say, okay, when we do draw, a profile

216
00:11:33,000 --> 00:11:37,700
bars, I want to do like some kind of like depth remaining kind of a

217
00:11:37,700 --> 00:11:38,300
thing.

218
00:11:38,900 --> 00:11:44,100
And what I would do here is say like okay if the depth remaining is,

219
00:11:44,200 --> 00:11:46,700
you know, still positive then,

220
00:11:48,900 --> 00:11:55,300
I would like to continue drawing profile bars in like on top of this

221
00:11:55,300 --> 00:11:59,800
one that kind of go go further and so that way when we call

222
00:12:00,000 --> 00:12:03,900
Draw profile in originally and we call that drove drop profile bars

223
00:12:03,900 --> 00:12:04,300
function.

224
00:12:04,500 --> 00:12:10,900
We could say like oh you know draw it with a with an extra degree of

225
00:12:10,900 --> 00:12:11,500
depth to it.

226
00:12:11,500 --> 00:12:15,500
So so go one more pass where you were going and the reason I kind of

227
00:12:15,500 --> 00:12:20,000
wanted that was just because I think it'd be it'd be nicer for fro

228
00:12:20,000 --> 00:12:21,300
just the way that it works.

229
00:12:21,800 --> 00:12:25,500
If we have the ability to go a level deeper, I suppose, the other

230
00:12:25,500 --> 00:12:29,800
thing we would have to do is make them draw a little bit higher too.

231
00:12:30,000 --> 00:12:32,300
so, we would need to do something like

232
00:12:34,400 --> 00:12:35,900
Basic Z, right?

233
00:12:35,900 --> 00:12:40,000
And we'd say, whatever the depth remaining was as that depth remaining

234
00:12:40,000 --> 00:12:41,000
decreases.

235
00:12:42,000 --> 00:12:45,100
But we would like the Z to get higher, right?

236
00:12:45,300 --> 00:12:49,700
And so, you know, we would want to do something like okay, the base is

237
00:12:49,700 --> 00:12:55,800
e is you know that or maybe 100 minus the depth remaining times 10.

238
00:12:55,800 --> 00:12:59,700
Let's say, so just to give us like basically allocate some space in

239
00:12:59,700 --> 00:13:02,600
the Sorting to make this go where we need it to go.

240
00:13:03,000 --> 00:13:07,800
And then when we pass our Z values, here you can kind of see there's

241
00:13:07,900 --> 00:13:09,500
the Z value here.

242
00:13:09,500 --> 00:13:11,700
I don't know why we said,

243
00:13:11,800 --> 00:13:12,600
Three here.

244
00:13:13,500 --> 00:13:16,200
I think I've I was thinking that was the Z value, it's not the Z

245
00:13:16,200 --> 00:13:16,500
value.

246
00:13:17,100 --> 00:13:21,400
So anyway, I can say like here's the base is e and the wreck a last

247
00:13:21,400 --> 00:13:24,600
line should be at the base Z you know maybe plus 1.

248
00:13:26,600 --> 00:13:29,800
And then I'm hoping that'll kind of give me more of a like a good sort

249
00:13:29,800 --> 00:13:30,200
there.

250
00:13:30,500 --> 00:13:31,200
That makes sense.

251
00:13:32,900 --> 00:13:34,800
So there's our thread View.

252
00:13:36,300 --> 00:13:39,000
However, that does not seem to have worked at all.

253
00:13:47,000 --> 00:13:51,000
Yeah, well that wasn't very good.

254
00:13:53,400 --> 00:13:54,500
What is the problem here?

255
00:13:58,700 --> 00:14:01,700
The note is the one that we're on so that's all fine.

256
00:14:02,200 --> 00:14:04,000
We do a

257
00:14:08,300 --> 00:14:08,800
Wait, what?

258
00:14:08,800 --> 00:14:09,500
How does this work?

259
00:14:11,200 --> 00:14:13,400
Yeah, we do do a root node, so that's all fine.

260
00:14:14,200 --> 00:14:21,000
So when we draw these here, we are passing in a death, remaining the

261
00:14:21,000 --> 00:14:21,900
depth.

262
00:14:26,200 --> 00:14:30,100
So, as the death gets lesser, the Z values get higher, which is

263
00:14:30,100 --> 00:14:31,400
exactly what we want.

264
00:14:32,400 --> 00:14:34,700
If for some reason, I don't see any of these.

265
00:14:34,700 --> 00:14:38,400
So I'm going to double check, just to make sure, but I'm going to get

266
00:14:38,400 --> 00:14:42,700
rid of our solid fill and just to see if we draw anything at all.

267
00:14:43,500 --> 00:14:46,000
So I know whether it's a bug, I want to know whether it's a bug in the

268
00:14:46,000 --> 00:14:48,900
Z or or not.

269
00:14:50,500 --> 00:14:52,700
So I can see those those there, right?

270
00:14:52,700 --> 00:14:54,500
I can see the sub stuff.

271
00:14:55,500 --> 00:14:56,500
They're already.

272
00:14:56,600 --> 00:14:59,900
So like for example if I come in here you can see there's a bunch of

273
00:15:00,100 --> 00:15:02,300
A stuff happening in here.

274
00:15:02,600 --> 00:15:03,600
Here's an example.

275
00:15:05,800 --> 00:15:07,500
Right, here's some more examples.

276
00:15:09,400 --> 00:15:11,300
This is in begin Sim.

277
00:15:14,400 --> 00:15:16,700
We can see all sorts of stuff happening in here, I guess.

278
00:15:25,900 --> 00:15:26,300
Yeah.

279
00:15:30,800 --> 00:15:35,400
So we're obviously drawing the rectangles, the Z is just not sorting

280
00:15:35,400 --> 00:15:36,100
properly.

281
00:15:39,400 --> 00:15:43,300
And so I have to figure out why I'm not getting.

282
00:15:43,300 --> 00:15:44,900
What I would expect out of those.

283
00:15:44,900 --> 00:15:48,800
He's part of it may be, I have to I should verify that we actually use

284
00:15:48,800 --> 00:15:52,100
the Z when we do the sort keys.

285
00:15:52,100 --> 00:15:56,000
So let me actually verify that we didn't nuke that, I'm assuming that

286
00:15:56,000 --> 00:15:57,300
we didn't.

287
00:15:59,000 --> 00:16:03,200
Yeah, so we still use the projected Z which is what we would expect.

288
00:16:03,600 --> 00:16:08,100
So or rather the the

289
00:16:08,800 --> 00:16:10,000
he's he

290
00:16:12,900 --> 00:16:14,300
Original pee.

291
00:16:17,200 --> 00:16:18,500
Yeah, so we okay.

292
00:16:18,500 --> 00:16:23,900
So we only use the projected Z, we don't actually use the sort.

293
00:16:23,900 --> 00:16:27,300
The the Z that's get passed in as part of the Sorting.

294
00:16:27,500 --> 00:16:32,400
So in theory, you know, this would have to include taking into

295
00:16:32,400 --> 00:16:32,800
account.

296
00:16:32,800 --> 00:16:38,800
Whatever the original p is that we passed and then maybe that would do

297
00:16:38,800 --> 00:16:39,100
what I thought.

298
00:16:39,100 --> 00:16:42,000
Well, I guess I should re-enable the call that I'm talking about.

299
00:16:42,000 --> 00:16:43,000
I want to test it.

300
00:16:55,000 --> 00:16:55,400
Okay.

301
00:16:57,500 --> 00:16:58,400
So, let's take a look.

302
00:16:59,700 --> 00:17:03,900
Okay, so that was the problem with that guy, but now at least we can

303
00:17:03,900 --> 00:17:06,599
sort of see what the difference is here.

304
00:17:10,500 --> 00:17:11,300
Let's jump in.

305
00:17:22,500 --> 00:17:26,300
And so that's just kind of a nice way to sort of see that, right?

306
00:17:26,300 --> 00:17:30,100
That's a nice way to get a little bit of that information there.

307
00:17:38,400 --> 00:17:38,800
Okay.

308
00:17:42,100 --> 00:17:42,600
Oh God.

309
00:17:43,900 --> 00:17:44,600
What have I done?

310
00:17:52,800 --> 00:17:55,100
Stop, don't draw that anymore.

311
00:17:57,600 --> 00:17:58,100
Here we go.

312
00:18:04,000 --> 00:18:06,700
And so, I suppose the frames window probably would be better that way

313
00:18:06,700 --> 00:18:07,300
as well.

314
00:18:08,600 --> 00:18:09,800
Where is the frames window?

315
00:18:10,400 --> 00:18:11,500
Here's draw frame bars.

316
00:18:18,500 --> 00:18:21,500
And so in this case again, I'll just do

317
00:18:24,000 --> 00:18:27,900
a push wrecked and leave it at that.

318
00:18:38,400 --> 00:18:40,800
So, there's our frame bars, which now you can kind of see those a

319
00:18:40,800 --> 00:18:44,500
little better as well, which is, which is nice and we can jump in on

320
00:18:44,500 --> 00:18:47,300
those and all that good stuff.

321
00:18:52,100 --> 00:18:56,500
And then it just it gets kind of, it gets kind of nasty if you try to

322
00:18:56,500 --> 00:19:00,700
get in there and actually do once you've got that many of the frame

323
00:19:00,700 --> 00:19:03,600
bars drawing but you know, that's just the way it goes sometimes.

324
00:19:03,600 --> 00:19:09,400
And I suspect that I guess I don't really know what that mostly where

325
00:19:09,400 --> 00:19:10,800
the time is actually being taken there.

326
00:19:10,800 --> 00:19:15,000
But I suspect that's mostly because we're very inefficient at sinking

327
00:19:15,000 --> 00:19:18,700
large numbers of things we're set up more for doing like like I said,

328
00:19:18,700 --> 00:19:20,100
big sort of image Blitz.

329
00:19:20,300 --> 00:19:21,600
And so if we wanted to make

330
00:19:21,700 --> 00:19:26,700
that sort of thing run quickly, we'd have to first identify whether

331
00:19:26,700 --> 00:19:27,900
there, you know,

332
00:19:29,700 --> 00:19:35,700
We'd have to verify that it was just a case of our render sinking

333
00:19:35,700 --> 00:19:36,900
being inefficient.

334
00:19:38,600 --> 00:19:39,500
And then going from there.

335
00:19:40,700 --> 00:19:46,100
But anyway, that looks pretty reasonable and so I'm okay with most of

336
00:19:46,100 --> 00:19:52,700
that, that seems seems pretty fair to me, and yeah,

337
00:19:57,700 --> 00:20:00,600
And the other thing that I guess might be nice is if this this view

338
00:20:00,600 --> 00:20:05,500
would would probably be good if it could highlight, you know, the one

339
00:20:05,500 --> 00:20:07,900
that we were on as well, would be pretty nice.

340
00:20:08,300 --> 00:20:13,100
So in addition I feel like getting a wrecked outline here that sort of

341
00:20:13,800 --> 00:20:20,100
banded the the, you know, the currently viewed frame or something like

342
00:20:20,100 --> 00:20:24,400
that would probably be a big help to figure out where we were.

343
00:20:24,800 --> 00:20:27,000
And so when were drawing this,

344
00:20:27,100 --> 00:20:28,900
You can see the frame indices here.

345
00:20:31,500 --> 00:20:34,500
What I'm going to say is, let's, let's go ahead and take a look.

346
00:20:35,200 --> 00:20:36,700
Where is the frame?

347
00:20:38,200 --> 00:20:40,100
We do have Min y Max.

348
00:20:40,100 --> 00:20:43,100
Why, and where is our X and Y are.

349
00:20:43,100 --> 00:20:43,400
Okay.

350
00:20:43,400 --> 00:20:47,100
So here's our addicts and then the bar with, right?

351
00:20:47,300 --> 00:20:52,400
And so if we wanted to hear, we could say, you know, if this Frame

352
00:20:52,400 --> 00:20:57,800
index is the one that we were doing before.

353
00:20:58,000 --> 00:20:59,600
So if this Frame index,

354
00:21:00,300 --> 00:21:03,100
I mean, this is the one we're we're viewing.

355
00:21:04,500 --> 00:21:11,200
If this Frame index equals the debug States viewing ordinal.

356
00:21:15,800 --> 00:21:22,200
Then I'm going to draw it specially and so that's obviously, you know,

357
00:21:22,300 --> 00:21:27,600
this is just the profile wrecked Min Y and the profile wrecked Max.

358
00:21:27,600 --> 00:21:28,000
Why?

359
00:21:30,800 --> 00:21:37,300
And in here, I'm going to probably just outline it like so.

360
00:21:41,400 --> 00:21:43,300
And I want to make sure it's on top of everything.

361
00:21:43,900 --> 00:21:49,500
And so I'm just going to say that it's going to be outlined in like a

362
00:21:49,500 --> 00:21:50,400
yellow there.

363
00:21:50,800 --> 00:21:55,300
And what I think I want to do here is I think I want to do an ad

364
00:21:55,300 --> 00:22:00,500
radius to where I just expanded a little so that it so that it won't

365
00:22:00,500 --> 00:22:04,900
overwrite so that the one that reviewing doesn't get overwritten at

366
00:22:04,900 --> 00:22:08,100
all and it kind of just blocks out the other people.

367
00:22:08,100 --> 00:22:10,500
That would be, I think the best way to go.

368
00:22:11,600 --> 00:22:13,500
For as far as visibility is concerned.

369
00:22:15,500 --> 00:22:21,600
All right, so as we kind of play now we can sort of see that guy

370
00:22:21,600 --> 00:22:22,200
there.

371
00:22:22,700 --> 00:22:24,300
You know what we all could also do?

372
00:22:24,300 --> 00:22:29,500
I suppose is maybe this is a little bit better actually, even than

373
00:22:29,500 --> 00:22:30,300
what I was thinking.

374
00:22:30,300 --> 00:22:36,400
Maybe instead of that, we just do like more like, you know, if

375
00:22:38,600 --> 00:22:43,100
if Raymond x equals debug State viewing frame ordinal,

376
00:22:45,200 --> 00:22:50,000
Then maybe we make this have a highlight.

377
00:22:54,000 --> 00:22:55,600
For now I don't know what we're going to do with that.

378
00:22:55,600 --> 00:22:58,500
Exactly, we could also expose do it this way.

379
00:23:01,800 --> 00:23:05,100
But what I'm thinking is like, so in here, we have the color we can

380
00:23:05,100 --> 00:23:06,600
make the colored dimmer.

381
00:23:07,500 --> 00:23:15,200
For example, like we could say like hi dim equals, you know, if the

382
00:23:15,200 --> 00:23:20,000
Highlight is on its 1.0 otherwise it's it's you know, slightly dimmer

383
00:23:20,000 --> 00:23:21,200
or I don't know, something like that.

384
00:23:21,600 --> 00:23:26,700
And so I can just take that color and I can just darken it, right?

385
00:23:28,200 --> 00:23:29,400
If we're not on the highlight.

386
00:23:29,400 --> 00:23:32,500
And so, then you can kind of see when we pause, you can see that this

387
00:23:32,500 --> 00:23:36,200
one's brighter, it's probably not enough brighter necessarily.

388
00:23:36,900 --> 00:23:41,700
So we might want to make this be a little bit more obvious like that.

389
00:23:42,100 --> 00:23:46,400
And then you can see the one specifically that we're on any given

390
00:23:46,400 --> 00:23:46,800
time.

391
00:23:46,800 --> 00:23:50,100
And then when we pause, you know, we can kind of go and you can see,

392
00:23:52,200 --> 00:23:53,100
you can see that.

393
00:23:55,400 --> 00:23:57,300
Activity there, right?

394
00:23:59,500 --> 00:23:59,800
That seems.

395
00:24:00,000 --> 00:24:02,300
Animal probably.

396
00:24:02,300 --> 00:24:05,300
It would be nice if you could just click on here to set the frame as

397
00:24:05,300 --> 00:24:05,800
well.

398
00:24:07,200 --> 00:24:09,800
So it's kind of unclear to me that we actually needed these to be two

399
00:24:09,800 --> 00:24:11,000
separate displays.

400
00:24:11,000 --> 00:24:13,800
They probably could have been the same display, but again, I don't

401
00:24:13,800 --> 00:24:16,500
really want to get any more bogged down in all the we could we could

402
00:24:16,500 --> 00:24:20,000
do arbitrarily large numbers of awesome things.

403
00:24:20,000 --> 00:24:24,800
I think at this point and hopefully you guys can kind of see how to do

404
00:24:24,800 --> 00:24:25,000
them.

405
00:24:25,000 --> 00:24:28,000
So, if you want to explore that, I'll let you know, other people.

406
00:24:28,000 --> 00:24:29,400
Maybe take the lead on that.

407
00:24:29,400 --> 00:24:29,800
So

408
00:24:30,000 --> 00:24:31,900
I'll go focus on some other things but point being.

409
00:24:32,900 --> 00:24:36,900
Now we can sort of see which one is the active frame in this profile

410
00:24:36,900 --> 00:24:37,700
group as well.

411
00:24:39,700 --> 00:24:41,800
So I think that's pretty good.

412
00:24:41,800 --> 00:24:45,900
And the only thing that I'm concerned about now, is this thing gets

413
00:24:45,900 --> 00:24:48,700
clipped because it gets drawn while we're inside the clipping mode.

414
00:24:49,000 --> 00:24:52,300
I feel like those tooltips in general since we use them in Cumberland

415
00:24:52,300 --> 00:24:52,700
places.

416
00:24:53,000 --> 00:24:56,900
I think now would be a good time to maybe make that be a systemic

417
00:24:56,900 --> 00:25:00,800
thing that's going on, so that we can

418
00:25:03,600 --> 00:25:04,100
You know.

419
00:25:06,500 --> 00:25:09,400
I guess I want to make that be like a utility that anyone can

420
00:25:09,400 --> 00:25:10,200
participate in.

421
00:25:10,400 --> 00:25:13,200
So basically any one of these, you know, when you Mouse over it can

422
00:25:13,200 --> 00:25:16,800
just say here's my, like hover tip that I'm trying to display and it

423
00:25:16,800 --> 00:25:18,600
doesn't have to be specific.

424
00:25:20,300 --> 00:25:21,200
to like, you know,

425
00:25:25,000 --> 00:25:28,100
It doesn't have to be something that's implemented per control, like

426
00:25:28,100 --> 00:25:28,800
it is right now.

427
00:25:29,400 --> 00:25:31,500
And so, the other thing that I might want to do is like this sort of

428
00:25:31,500 --> 00:25:33,800
stuff information here, like this is some heads up information.

429
00:25:33,800 --> 00:25:34,900
Like, how many frames?

430
00:25:35,100 --> 00:25:36,700
How many milliseconds, the frame took.

431
00:25:37,900 --> 00:25:40,100
I think that might be a nice thing to just print out up here.

432
00:25:40,100 --> 00:25:44,300
So we might want to do also is have a way of changing what that route

433
00:25:44,300 --> 00:25:48,200
printout is from from time to time as well.

434
00:25:49,200 --> 00:25:54,000
And so what I'm going to do, let's take these in sort of serious here.

435
00:25:55,200 --> 00:25:57,100
if I'm going to,

436
00:26:02,400 --> 00:26:06,400
If I'm going to make those tooltips, these sort of more systemic then

437
00:26:06,400 --> 00:26:13,200
what I need to do here is sort of have some way of getting out to I

438
00:26:13,200 --> 00:26:15,700
guess the you probably put it in the UI system.

439
00:26:16,100 --> 00:26:23,000
Something that's like you know internal void add tool tip or something

440
00:26:23,900 --> 00:26:24,600
like this.

441
00:26:27,300 --> 00:26:34,100
Not know why that's confused about indentation and the tooltips.

442
00:26:37,300 --> 00:26:38,400
Are currently.

443
00:26:40,600 --> 00:26:42,700
Where is that at this is debug.

444
00:26:42,700 --> 00:26:47,400
Th the tooltip stuff is typically just done ad hoc like in draw

445
00:26:47,400 --> 00:26:48,500
profile bars.

446
00:26:50,300 --> 00:26:54,000
So it's basically just this stuff like you see here.

447
00:26:55,200 --> 00:26:58,200
And so what I want to do is I want to basically take this stuff and

448
00:26:58,200 --> 00:26:59,500
bring it back over here.

449
00:27:01,000 --> 00:27:06,100
And so you're going to take the debug State and you're going to take

450
00:27:06,700 --> 00:27:09,800
what the string is that you're trying to to print out.

451
00:27:10,200 --> 00:27:14,300
And then we're going to make sure that this stuff just all works

452
00:27:14,600 --> 00:27:15,700
fairly seamlessly.

453
00:27:17,600 --> 00:27:20,400
So, okay, so that's that.

454
00:27:22,900 --> 00:27:28,700
And this then becomes more like add tooltip.

455
00:27:29,300 --> 00:27:32,700
And we just say, like, here's the two bucks date and here's the text

456
00:27:32,700 --> 00:27:39,100
buffer, this stuff can go away and then Mouse Tech stack.

457
00:27:41,900 --> 00:27:47,000
I think this this mouse Tech stack stuff actually wants to be set

458
00:27:47,000 --> 00:27:49,100
probably at debug start up now.

459
00:27:49,600 --> 00:27:51,800
So where we do like debug start

460
00:27:55,100 --> 00:27:55,500
Inside.

461
00:27:55,500 --> 00:27:59,600
Debug start is actually where we would make this happen, so that Mouse

462
00:27:59,600 --> 00:28:00,700
text stack.

463
00:28:00,700 --> 00:28:04,200
Why is actually going to be set here.

464
00:28:04,800 --> 00:28:07,500
I also don't know what that did.

465
00:28:10,800 --> 00:28:17,100
I also well okay I'm going to leave that like that for a second.

466
00:28:17,800 --> 00:28:23,500
I also wanted to see text out at because text out at, I don't actually

467
00:28:23,500 --> 00:28:26,300
know I guess that's actually in here.

468
00:28:26,500 --> 00:28:32,100
I don't actually know what text out at does with its Z.

469
00:28:35,300 --> 00:28:35,600
Right?

470
00:28:35,600 --> 00:28:41,600
Cuz it does, it does a key that doesn't have any Z value and so when

471
00:28:41,600 --> 00:28:46,100
it actually puts these things, when it actually sinks these things in

472
00:28:47,700 --> 00:28:52,000
You can kind of see that it's actually, it has a z value here that we

473
00:28:52,000 --> 00:28:56,100
could have been using for sorting this whole time, but that we aren't.

474
00:28:56,700 --> 00:28:59,700
And it seems like we probably should, you know what I'm saying?

475
00:29:08,100 --> 00:29:11,700
Yeah, so I think what we would like to do is we'd like to say that

476
00:29:11,700 --> 00:29:17,500
hey, there's also probably a z value here and that c value.

477
00:29:17,500 --> 00:29:20,300
By default doesn't actually affect anything, but if you want your

478
00:29:20,300 --> 00:29:22,600
stuff sorted, you can have it.

479
00:29:26,000 --> 00:29:27,400
That seems reasonable to me.

480
00:29:29,300 --> 00:29:31,400
Okay, so let's see here.

481
00:29:34,400 --> 00:29:35,200
This stuff.

482
00:29:35,200 --> 00:29:39,000
I feel like that's something that probably should just be known.

483
00:29:39,000 --> 00:29:42,000
I don't feel like the mouse key is something that should be all that

484
00:29:42,000 --> 00:29:43,800
mysterious to anyone.

485
00:29:44,300 --> 00:29:47,300
So I feel like that's probably something that's in the debug State.

486
00:29:48,400 --> 00:29:53,400
We certainly know the last Mouse p&i, presumably, we would want to

487
00:29:53,400 --> 00:29:55,100
know the mouse.

488
00:29:57,200 --> 00:29:58,400
The tech stack X.

489
00:29:58,800 --> 00:29:59,800
The text Doc, why?

490
00:30:00,600 --> 00:30:02,800
I feel like that's just something we would want to know here.

491
00:30:03,100 --> 00:30:08,700
So in general this would probably be more like hey there's a tech

492
00:30:08,700 --> 00:30:09,300
stack.

493
00:30:09,400 --> 00:30:16,200
Why in fact I think really this is just a mouse like text probably we

494
00:30:16,200 --> 00:30:20,000
could actually just make this a mouse layout even to completely honest

495
00:30:20,000 --> 00:30:23,800
with you in fact there's no reason not to do that.

496
00:30:23,800 --> 00:30:28,000
So I feel like probably what we actually want to do is this

497
00:30:29,700 --> 00:30:30,400
Right?

498
00:30:30,400 --> 00:30:30,900
And we do it.

499
00:30:30,900 --> 00:30:32,200
Begin and end layout.

500
00:30:32,300 --> 00:30:35,300
And that way, you could even use like indentation, and you could even

501
00:30:35,300 --> 00:30:39,600
put any anything you can put in the regular course of events.

502
00:30:39,600 --> 00:30:42,900
You could put here, that seems like probably a better idea.

503
00:30:43,000 --> 00:30:45,900
So I'm just going to go ahead and try that and see how that works.

504
00:30:48,100 --> 00:30:51,300
Because that seems kind of reasonable to me.

505
00:30:51,400 --> 00:30:51,900
Yeah.

506
00:30:53,200 --> 00:30:55,500
So I'm going to get rid of these things, I'm going to say, there's a

507
00:30:55,500 --> 00:30:56,700
mass text layout.

508
00:30:57,500 --> 00:31:00,500
And then here, what I'm going to do is say, well, okay, the way that

509
00:31:00,500 --> 00:31:02,200
we would be doing this

510
00:31:05,000 --> 00:31:08,200
when like, I'm going to do one of these basic text elements

511
00:31:13,900 --> 00:31:15,600
So what are these basic text elements?

512
00:31:15,900 --> 00:31:16,700
I don't know.

513
00:31:16,700 --> 00:31:22,500
So, with interactions if I don't want to actually include this in the

514
00:31:22,500 --> 00:31:27,400
intro, in the set of things that can be interacted with if that makes

515
00:31:27,400 --> 00:31:27,900
sense.

516
00:31:28,300 --> 00:31:35,500
So I don't actually want to do the default interaction stuff and the

517
00:31:35,500 --> 00:31:39,200
default interaction stuff is

518
00:31:43,100 --> 00:31:44,700
It's probably somewhat avoidable.

519
00:31:50,800 --> 00:31:53,800
Because since that's set on each individual element as we go, you

520
00:31:53,800 --> 00:31:58,400
know, I should be able to say, I don't actually want that thing.

521
00:31:59,900 --> 00:32:02,800
But I need to kind of untangle a little bit of this first, which is

522
00:32:02,800 --> 00:32:07,600
probably good anyway, so yeah.

523
00:32:08,500 --> 00:32:11,400
So I think that's good and this will also cause us to line ourselves

524
00:32:11,400 --> 00:32:16,700
up properly so I think yeah, I think this is all good.

525
00:32:16,900 --> 00:32:19,700
So what I'm going to do is I'm going to go ahead and again I'm going

526
00:32:19,700 --> 00:32:23,000
to pretend we're just laying out a menu essentially at this point but

527
00:32:23,000 --> 00:32:24,900
it's actually going to be the text that goes on the mouse.

528
00:32:25,200 --> 00:32:28,400
So what I'm going to do is say okay that we're going to begin layout

529
00:32:29,700 --> 00:32:31,500
We're going to use the mouse text layout here.

530
00:32:33,900 --> 00:32:34,800
To store this.

531
00:32:35,000 --> 00:32:39,300
We've got this begin layout and the begin layout needs to know some

532
00:32:39,300 --> 00:32:40,100
information.

533
00:32:41,800 --> 00:32:43,700
It's got to have the debug State itself.

534
00:32:45,300 --> 00:32:48,900
It's got to know the mouse pee and it's going to the upper left

535
00:32:48,900 --> 00:32:51,600
corner, which in this case is also the mass be right.

536
00:32:51,900 --> 00:32:53,100
So we're going to do that.

537
00:32:54,000 --> 00:32:57,100
And then in here, when I lay things out the add tool tip, I'm just

538
00:32:57,100 --> 00:32:59,900
going to F0 out for a second and get the

539
00:33:00,000 --> 00:33:02,100
To start compiling and then we'll focus on that.

540
00:33:02,800 --> 00:33:06,100
Again, this doesn't have to do that anymore at all.

541
00:33:08,000 --> 00:33:09,400
Mouse Tech stack.

542
00:33:09,400 --> 00:33:10,300
Why?

543
00:33:12,600 --> 00:33:14,800
Again, this is just going to be an ad tooltip call.

544
00:33:25,300 --> 00:33:29,100
And finally, so the mouse p is not known here.

545
00:33:29,100 --> 00:33:32,100
Apparently, we do know what it is.

546
00:33:32,100 --> 00:33:35,400
I believe we just haven't actually gotten it yet.

547
00:33:35,600 --> 00:33:38,000
So what I can do there is I can just defer this.

548
00:33:38,000 --> 00:33:41,600
It doesn't actually have to be done here because until people actually

549
00:33:41,600 --> 00:33:45,900
start drawing the trees, we're not going to care so we can actually

550
00:33:45,900 --> 00:33:47,600
just initialize that right here.

551
00:33:48,000 --> 00:33:50,700
Do our begin our begin layout.

552
00:33:51,600 --> 00:33:53,200
And then do our end layout.

553
00:33:58,100 --> 00:33:58,800
At the end.

554
00:34:01,100 --> 00:34:02,100
So that should be fine.

555
00:34:04,500 --> 00:34:06,800
I don't know what that's about.

556
00:34:10,900 --> 00:34:14,000
That's because, yeah, we change the sizes of some things there so

557
00:34:14,000 --> 00:34:14,699
that's not going to work.

558
00:34:16,300 --> 00:34:20,300
All right, so now when we Mouse over things, we won't actually get any

559
00:34:20,300 --> 00:34:22,699
tool tips on these guys because they've been removed.

560
00:34:22,699 --> 00:34:27,000
We're still getting it on this which means that guy I guess didn't

561
00:34:27,000 --> 00:34:30,100
actually use quite the same path I guess.

562
00:34:30,100 --> 00:34:32,500
It must have been a simpler things but I'll take a look at the draw

563
00:34:32,800 --> 00:34:36,699
frame slider here, the frame slider must have done so even print out

564
00:34:36,699 --> 00:34:37,800
so we didn't detect it.

565
00:34:37,800 --> 00:34:39,300
Yeah, it just does a text out at.

566
00:34:39,800 --> 00:34:40,300
So since that

567
00:34:40,500 --> 00:34:41,199
Use the mouse stack.

568
00:34:41,199 --> 00:34:42,699
We didn't see it, but that's okay.

569
00:34:42,699 --> 00:34:43,800
Now, we know where it is.

570
00:34:43,800 --> 00:34:46,699
We'll just go ahead and make that one go through here as well.

571
00:34:46,900 --> 00:34:50,300
So now everyone who was previously doing a tooltip, should be calling

572
00:34:50,300 --> 00:34:54,699
through the same code path, and none of them should be showing up, of

573
00:34:54,699 --> 00:34:55,500
course, especially not.

574
00:34:55,500 --> 00:35:00,300
If the texture download fails, which does none of these should be

575
00:35:00,300 --> 00:35:02,200
showing up anywhere, which is fine.

576
00:35:02,300 --> 00:35:02,600
Right?

577
00:35:02,600 --> 00:35:03,500
That's what we want.

578
00:35:04,100 --> 00:35:08,700
Okay, so, now, what I have to do is I have to go through,

579
00:35:09,900 --> 00:35:13,900
And make this ad tooltip, call actually print out the text as we

580
00:35:13,900 --> 00:35:18,200
wanted it to which is pretty straightforward, really all that.

581
00:35:18,200 --> 00:35:21,000
We're going to do here is every time we would have added a tooltip, we

582
00:35:21,000 --> 00:35:23,300
just need to add something to that layout.

583
00:35:23,400 --> 00:35:28,300
So we need to do, you know, like an element advancement and that sort

584
00:35:28,300 --> 00:35:28,800
of stuff.

585
00:35:30,000 --> 00:35:36,400
So in order to do that, I think what I want to do here is just do like

586
00:35:36,400 --> 00:35:39,300
a begin and element kind of a situation.

587
00:35:39,500 --> 00:35:45,000
We don't necessarily need to do them but it seems like we would

588
00:35:45,000 --> 00:35:48,700
probably want to at least that's my feeling.

589
00:35:49,000 --> 00:35:51,900
So I'm going to take a look at basic text element here.

590
00:35:52,300 --> 00:35:55,500
I'm going to go ahead and grab this code out and I think that's

591
00:35:55,500 --> 00:35:59,800
roughly what the tooltip code would do - a bunch of stuff.

592
00:36:00,200 --> 00:36:03,200
So we're still going to get the text size will call this.

593
00:36:03,200 --> 00:36:05,800
Text is that's what's called for looking at the text size.

594
00:36:05,800 --> 00:36:09,500
We're going to feel figure out what we want this to look like.

595
00:36:09,500 --> 00:36:11,700
We don't have it a border in this case,

596
00:36:14,600 --> 00:36:19,200
We're just sort of printing out a line of bear text so I think that's

597
00:36:19,200 --> 00:36:22,800
all we really need so we can get that we can then do our element

598
00:36:22,800 --> 00:36:23,700
layout stuff.

599
00:36:23,800 --> 00:36:32,800
And here we can do like this is a non interactable or non-interactive.

600
00:36:34,300 --> 00:36:37,000
So we want to be able to say that something is not going to have any

601
00:36:37,000 --> 00:36:37,500
interaction.

602
00:36:37,500 --> 00:36:39,500
It shouldn't interact with the mouse at all.

603
00:36:39,500 --> 00:36:43,100
It shouldn't be something that even tests against the mouse, we can

604
00:36:43,100 --> 00:36:43,900
then output it.

605
00:36:44,100 --> 00:36:48,300
Way, we were going to put it before and we don't really have the

606
00:36:48,300 --> 00:36:51,300
concept of colors for these tooltip, things at the moment.

607
00:36:51,400 --> 00:36:55,000
So we'll just put it there and we're not going to back.

608
00:36:55,000 --> 00:36:57,700
We're not going to have backdrop stuff either.

609
00:36:58,500 --> 00:37:01,600
So if I go ahead and do that that allows us to sort of just get our

610
00:37:01,600 --> 00:37:05,800
tool tip, functionality back and working the way that we wanted it to

611
00:37:06,600 --> 00:37:08,700
when we do at tooltip.

612
00:37:08,900 --> 00:37:11,200
Again, we know the layout by default.

613
00:37:11,400 --> 00:37:13,100
In that case, it's the

614
00:37:14,500 --> 00:37:18,600
The mouse text layout that we saw in the debug state, so we don't have

615
00:37:18,600 --> 00:37:23,400
to pass that in and I guess I we don't do reference either the

616
00:37:23,400 --> 00:37:26,800
non-interactive part we haven't implemented yet the Border part.

617
00:37:27,000 --> 00:37:30,200
We don't care about because we're not supporting borders in here or

618
00:37:30,200 --> 00:37:31,500
rather, not wear else for them.

619
00:37:31,800 --> 00:37:33,000
Nobody wants that.

620
00:37:33,800 --> 00:37:40,300
And so then I can just go up and make this non-interactive bit and go

621
00:37:40,300 --> 00:37:40,800
from there.

622
00:37:40,900 --> 00:37:43,500
So, when we say default interaction,

623
00:37:44,100 --> 00:37:45,500
Which is this code right here.

624
00:37:46,300 --> 00:37:50,000
If we say non-interactive, I think what I need to do there is make the

625
00:37:50,000 --> 00:37:51,300
ability to record.

626
00:37:51,300 --> 00:37:55,100
The fact that this thing is not going to have any of the interaction

627
00:37:55,100 --> 00:37:55,900
stuff happen.

628
00:37:56,400 --> 00:38:01,100
So be like element, non-interactive equals true, it'd be something

629
00:38:01,100 --> 00:38:03,800
like a flag field, which we don't really have the moment.

630
00:38:03,800 --> 00:38:06,000
I don't know that we really need it because we can just make a Boolean

631
00:38:06,000 --> 00:38:08,500
for now, but that's basically what we're talking about here.

632
00:38:09,000 --> 00:38:10,800
So if we take a look at

633
00:38:13,000 --> 00:38:15,200
At this where we're storing the stuff that's in the element.

634
00:38:15,600 --> 00:38:18,600
What I want to do here is have something that's like you know be

635
00:38:18,600 --> 00:38:22,400
finitude non-interactive when we push one of these on.

636
00:38:23,000 --> 00:38:27,200
So like when we do a begin layout, we would not to do anything but we

637
00:38:27,200 --> 00:38:29,000
would set it to True when we don't want things to be a

638
00:38:29,400 --> 00:38:30,400
non-interactive.

639
00:38:30,600 --> 00:38:34,500
The other thing I can do is I could default it to interactive like so,

640
00:38:35,000 --> 00:38:36,300
which maybe makes a little more sense.

641
00:38:36,300 --> 00:38:36,800
I don't know.

642
00:38:38,000 --> 00:38:39,200
And set it to false.

643
00:38:39,200 --> 00:38:42,400
We'll see what happens when I do the ifs in there and then that would

644
00:38:42,400 --> 00:38:42,600
look like

645
00:38:42,700 --> 00:38:43,300
Like this, right?

646
00:38:43,300 --> 00:38:44,600
We just say like, okay

647
00:38:47,600 --> 00:38:48,900
Where is that layout element?

648
00:38:48,900 --> 00:38:50,400
Begin element rectangle.

649
00:38:50,400 --> 00:38:50,800
Here it is.

650
00:38:51,400 --> 00:38:54,200
We would just say, Oh, by default, everything is assumed to be

651
00:38:54,200 --> 00:38:55,000
interactive.

652
00:38:55,000 --> 00:38:57,600
And unless told otherwise, oops,

653
00:39:00,000 --> 00:39:03,300
That won't happen is down here when we actually do stuff with the

654
00:39:03,300 --> 00:39:11,000
interactions like we do in here element type isn't isn't a rectangle.

655
00:39:11,300 --> 00:39:12,800
This is the testing right here.

656
00:39:13,200 --> 00:39:16,700
I guess you know that I guess means that if we don't ever in

657
00:39:16,800 --> 00:39:19,000
initialize the interaction it wouldn't interact.

658
00:39:19,200 --> 00:39:23,400
So maybe I thought that would be well.

659
00:39:25,200 --> 00:39:29,400
I guess now, I think about it if we just leave it uninitialized and we

660
00:39:29,400 --> 00:39:31,000
wouldn't actually actually have to do anything.

661
00:39:31,000 --> 00:39:33,300
Like if we just never say that there's interaction, that might be

662
00:39:33,300 --> 00:39:34,100
sufficient.

663
00:39:34,500 --> 00:39:35,600
So I guess I take it back.

664
00:39:35,600 --> 00:39:36,900
We don't really need anything more.

665
00:39:36,900 --> 00:39:39,500
I didn't realize it was, I thought it would just blocked it.

666
00:39:39,500 --> 00:39:42,500
So there wouldn't be anything clickable there, but I guess that's not

667
00:39:42,500 --> 00:39:43,200
what that does.

668
00:39:43,700 --> 00:39:44,300
All right.

669
00:39:47,200 --> 00:39:49,600
So, okay, so now we've got a few more things to do.

670
00:39:49,600 --> 00:39:52,700
First of all, we need to make sure our Z for this layout is high

671
00:39:52,700 --> 00:39:54,000
enough, which at the moment, right?

672
00:39:54,000 --> 00:39:55,000
You can totally see that.

673
00:39:55,000 --> 00:39:55,800
It's not.

674
00:39:56,700 --> 00:40:02,000
So when we're doing our text out at here, we presumably want this to

675
00:40:02,000 --> 00:40:03,900
be something particularly High.

676
00:40:04,400 --> 00:40:06,500
I don't know what we want it to be exactly but

677
00:40:08,400 --> 00:40:10,100
Wait, where is text out at?

678
00:40:24,800 --> 00:40:25,300
Here we go.

679
00:40:32,800 --> 00:40:35,700
And one of the things about this sorting is since it's very ad.

680
00:40:35,700 --> 00:40:39,200
Hoc, we may want to make like an enum or not an enum, but like a

681
00:40:39,200 --> 00:40:44,800
little Define that says, what our layers are so that we don't have to,

682
00:40:44,800 --> 00:40:46,000
like, constantly fuss with them.

683
00:40:48,200 --> 00:40:48,700
Okay?

684
00:40:49,500 --> 00:40:53,100
So, now, what we want to do now that we've kind of got that stuff

685
00:40:53,100 --> 00:40:55,700
straightened away and presumably the still works properly with the

686
00:40:55,700 --> 00:40:56,300
double sorting.

687
00:40:56,300 --> 00:40:56,500
Yeah.

688
00:40:56,500 --> 00:40:59,100
Like, I just want to make sure that it could still add things on so

689
00:40:59,100 --> 00:40:59,800
that's all good.

690
00:41:00,300 --> 00:41:02,000
The other thing that I want to be able to do here,

691
00:41:02,300 --> 00:41:05,300
Is I would like this to not clip.

692
00:41:05,500 --> 00:41:06,200
Right?

693
00:41:06,500 --> 00:41:10,700
So the reason that it is clipping is because at the moment we push on

694
00:41:10,700 --> 00:41:15,900
a clip direct cliprect whenever we draw one of those windows and I

695
00:41:15,900 --> 00:41:20,300
want to like sort of temporarily undo that clip rect.

696
00:41:20,600 --> 00:41:25,100
So, when we push these on, I want no clipping.

697
00:41:26,400 --> 00:41:31,400
And in order to do that, what I would need to do here is say, well,

698
00:41:31,500 --> 00:41:31,900
oops.

699
00:41:33,900 --> 00:41:36,800
Let's see, William button.

700
00:41:36,800 --> 00:41:44,300
Add tooltip, it's not here to pee clip.

701
00:41:45,700 --> 00:41:48,600
We just need to do this, right?

702
00:41:51,700 --> 00:41:56,200
So this is this stuff has to happen, where we would sort of cycle

703
00:41:56,200 --> 00:41:58,400
through the clip Rex really quickly.

704
00:41:59,500 --> 00:41:59,800
So,

705
00:42:00,000 --> 00:42:00,600
To do this.

706
00:42:00,600 --> 00:42:05,500
It's really basically the same procedure we were doing before, we

707
00:42:05,500 --> 00:42:12,500
would just say, oh hey, if you don't mind, I'd like you to use the

708
00:42:12,500 --> 00:42:13,700
default clip rect

709
00:42:17,100 --> 00:42:18,400
And then later on.

710
00:42:24,000 --> 00:42:24,800
Will restore it.

711
00:42:26,600 --> 00:42:27,100
Right.

712
00:42:27,800 --> 00:42:32,300
And so then all we have to do is, is remember when we start up in our

713
00:42:32,300 --> 00:42:39,000
debug start code, we just want to record what that default cliprect

714
00:42:39,000 --> 00:42:39,500
was.

715
00:42:43,800 --> 00:42:44,600
What I call it.

716
00:42:47,500 --> 00:42:50,600
The reason I couldn't autocomplete it because I spelled it wrong the

717
00:42:50,600 --> 00:42:52,600
first time default cliprect.

718
00:42:54,000 --> 00:42:58,000
So that way, we always know what the default cliprect actually is and

719
00:42:58,000 --> 00:43:00,100
can toggle back to it anytime we want to

720
00:43:03,900 --> 00:43:08,300
and that's makes it easy for us to decide that any particular thing

721
00:43:08,300 --> 00:43:13,000
can quickly be clipped to some other, some other thing.

722
00:43:13,600 --> 00:43:16,600
So, we don't have the render group in here, but that's okay, because

723
00:43:16,600 --> 00:43:18,400
that's part of the main debug state.

724
00:43:19,400 --> 00:43:20,200
I'm just going to grab it.

725
00:43:28,400 --> 00:43:29,100
I guess we did.

726
00:43:29,100 --> 00:43:29,900
I just missed it.

727
00:43:30,100 --> 00:43:30,500
There we go.

728
00:43:40,900 --> 00:43:46,100
And so now I think we should be good to go with these guys.

729
00:43:46,100 --> 00:43:47,400
So there we go.

730
00:43:47,400 --> 00:43:53,200
It extends outside, like I wanted and that's all good.

731
00:43:53,800 --> 00:43:56,600
So I think we're pretty set now.

732
00:43:58,300 --> 00:43:59,200
Yeah.

733
00:44:05,200 --> 00:44:05,600
oh,

734
00:44:07,300 --> 00:44:09,700
but I might not restoring that properly.

735
00:44:10,700 --> 00:44:11,600
What did I do?

736
00:44:19,800 --> 00:44:20,500
Double check.

737
00:44:26,100 --> 00:44:27,500
So I store the old clip.

738
00:44:27,500 --> 00:44:28,000
Rect

739
00:44:29,500 --> 00:44:36,600
I get out the index of what's currently the active clipping system.

740
00:44:37,700 --> 00:44:40,100
I set the new one to whatever.

741
00:44:40,100 --> 00:44:45,400
The default one was, I do my text operation and then I set

742
00:44:47,900 --> 00:44:49,200
and then I set it back.

743
00:45:03,800 --> 00:45:06,100
What did I do in correctly?

744
00:45:07,200 --> 00:45:08,600
Let's find out.

745
00:45:10,100 --> 00:45:11,500
Current clip rep.

746
00:45:11,500 --> 00:45:12,800
Oops, that's not good typing.

747
00:45:12,800 --> 00:45:15,600
All right, clip index equals

748
00:45:19,400 --> 00:45:21,700
Yeah, so we did our push Rick bands.

749
00:45:21,700 --> 00:45:24,900
Here we get this current clip rect and so we should be able to refer

750
00:45:24,900 --> 00:45:25,600
to that.

751
00:45:26,700 --> 00:45:28,000
Whatever we want.

752
00:45:29,900 --> 00:45:34,300
Oh, I'm in the wrong function.

753
00:45:36,100 --> 00:45:37,200
That would do it.

754
00:45:37,600 --> 00:45:39,000
In case you were wondering.

755
00:45:40,700 --> 00:45:42,400
I'm supposed that just says that.

756
00:45:42,400 --> 00:45:44,000
No text will ever be clipped.

757
00:45:44,000 --> 00:45:45,400
So big surprise.

758
00:45:45,500 --> 00:45:46,400
It wasn't.

759
00:45:47,400 --> 00:45:51,400
So actually, I want it in here is the place that I actually wanted to

760
00:45:51,400 --> 00:45:56,500
change the clip rect and scroll out from behind my head.

761
00:45:58,700 --> 00:46:04,200
So, actually, this is what I wanted to do, and so that's much better.

762
00:46:04,800 --> 00:46:09,600
So what I'd like to do here is say, give me the render group, so we

763
00:46:09,600 --> 00:46:15,600
can call it the way we were calling it and then I think that's about

764
00:46:15,600 --> 00:46:16,000
it.

765
00:46:24,900 --> 00:46:29,700
So now are clipping is restored to proper working order, and we're not

766
00:46:29,700 --> 00:46:32,600
clipping in here when we don't want to be, which is also nice.

767
00:46:34,000 --> 00:46:36,300
So that seems pretty nice.

768
00:46:38,500 --> 00:46:39,000
Okay.

769
00:46:42,700 --> 00:46:43,000
Yeah.

770
00:46:53,500 --> 00:46:55,000
So I think we're almost done.

771
00:46:55,000 --> 00:46:59,800
We've got about 10 minutes left if I'm not very much an error.

772
00:47:00,600 --> 00:47:04,100
And what was I going to do here?

773
00:47:04,500 --> 00:47:07,000
I need to think of what I actually was going to.

774
00:47:07,000 --> 00:47:07,600
Oh right?

775
00:47:07,600 --> 00:47:13,100
I wanted the route to print out arbitrary stuff so that we could have,

776
00:47:13,800 --> 00:47:14,900
you know, some kind of a

777
00:47:16,700 --> 00:47:20,700
And idea of what was going on, even when the debug system was in its

778
00:47:20,700 --> 00:47:24,200
fully collapsed State and not drawing anything in particular.

779
00:47:25,600 --> 00:47:32,600
So what I might want to do there is say the that piece of UI that's

780
00:47:32,600 --> 00:47:33,200
like

781
00:47:35,400 --> 00:47:39,300
Can't remember what we said, it was this, basically, this stuff here,

782
00:47:39,300 --> 00:47:41,600
where would you, you know, viewing frame time.

783
00:47:41,600 --> 00:47:43,500
And we sort of do this last frame.

784
00:47:43,500 --> 00:47:44,200
Info stuff.

785
00:47:45,600 --> 00:47:48,700
I think that what I want to do is maybe make this

786
00:47:51,000 --> 00:47:54,200
This part here be fairly straightforward.

787
00:47:54,300 --> 00:47:56,200
So I can say

788
00:48:02,200 --> 00:48:02,600
Well.

789
00:48:06,700 --> 00:48:07,800
I think you how I do this.

790
00:48:07,900 --> 00:48:12,100
I think what I probably want is just this to be an arbitrary line.

791
00:48:12,100 --> 00:48:17,100
So I think what I want to do is say, okay let's just pull that piece

792
00:48:17,200 --> 00:48:20,400
just that piece out into a thing that's like, you know,

793
00:48:28,200 --> 00:48:31,800
print frame info or something.

794
00:48:35,300 --> 00:48:35,800
Well.

795
00:48:38,100 --> 00:48:39,800
I'll be honest, you know, I think I'm just going to do it separate

796
00:48:39,800 --> 00:48:40,400
because I don't know.

797
00:48:40,400 --> 00:48:41,800
We're probably going to want them to be different.

798
00:48:41,800 --> 00:48:45,800
So we'll leave that guy as he is and I'll just I'll grab this out.

799
00:48:46,200 --> 00:48:50,800
And what I'm thinking here is that the route, you know, when we when

800
00:48:50,800 --> 00:48:57,100
we add this thing, you can see that we add a variable link here and we

801
00:48:57,100 --> 00:48:59,600
have its size is, is it for?

802
00:48:59,600 --> 00:49:03,200
And it says route and that's what gets printed right?

803
00:49:03,700 --> 00:49:07,600
But what I'd like to do instead is I'd like to make a buffer where

804
00:49:07,700 --> 00:49:09,300
And print stuff in general.

805
00:49:10,300 --> 00:49:19,200
So what I'd rather do now is say, okay, let's give it effectively a

806
00:49:19,200 --> 00:49:20,500
fake pointer.

807
00:49:23,000 --> 00:49:24,700
Let's just kind of mess with it, right?

808
00:49:24,700 --> 00:49:27,800
Let's say, hey I know you think you've got a specific pointer here.

809
00:49:28,700 --> 00:49:32,000
I'm here to tell you that sorry you're actually wrong.

810
00:49:32,700 --> 00:49:36,500
I'm going to make its length zero for now, and I'm going to make its

811
00:49:36,500 --> 00:49:37,400
pointer

812
00:49:39,500 --> 00:49:45,200
Actually point to a block of memory, we can use for whatever we want.

813
00:49:45,200 --> 00:49:47,200
So here is the debugger Arena.

814
00:49:50,300 --> 00:49:53,500
Just go ahead and give me, you know, some chunk of memory.

815
00:49:54,000 --> 00:49:57,200
That's what we're going to print out to that string, right?

816
00:50:03,700 --> 00:50:04,100
It's not.

817
00:50:04,100 --> 00:50:05,700
Is it not named length?

818
00:50:05,700 --> 00:50:10,600
What's the or is it just actually you know what?

819
00:50:10,600 --> 00:50:11,600
I think it's just

820
00:50:12,800 --> 00:50:14,200
It just works this way, right?

821
00:50:14,800 --> 00:50:15,200
Yeah.

822
00:50:16,100 --> 00:50:19,100
So now if I did a Sprint, one of these sprintf sin here.

823
00:50:22,900 --> 00:50:24,000
Where those guys are?

824
00:50:27,400 --> 00:50:28,400
One of these guys.

825
00:50:28,600 --> 00:50:31,200
So now if I was to do something in here,

826
00:50:35,100 --> 00:50:35,400
oops.

827
00:50:39,000 --> 00:50:44,500
we should be able to just printf into this thing with abandon

828
00:50:54,000 --> 00:50:59,700
I think anyway does not take three arguments, it's just that

829
00:51:00,000 --> 00:51:03,200
the thing where I have to cast this to something first,

830
00:51:07,400 --> 00:51:10,500
Because I thought it does or maybe it needs one more.

831
00:51:12,800 --> 00:51:14,000
Sighs t.i.

832
00:51:14,100 --> 00:51:14,600
Okay.

833
00:51:18,700 --> 00:51:20,300
What why do we have?

834
00:51:20,400 --> 00:51:21,900
We have to get rid of that function.

835
00:51:22,100 --> 00:51:25,800
Maybe what we're doing tomorrow is getting rid of the stupid uh

836
00:51:27,000 --> 00:51:31,800
getting rid of that stupid C runtime Library nonsense.

837
00:51:33,000 --> 00:51:35,000
It never pays through the C runtime Library.

838
00:51:35,000 --> 00:51:36,300
It's always frustrating.

839
00:51:38,400 --> 00:51:39,900
Anyway point being

840
00:51:41,900 --> 00:51:47,800
For the time being since we're stuck with it, let's find out s and

841
00:51:47,800 --> 00:51:48,600
printf.

842
00:51:49,400 --> 00:51:51,800
We've had this problem multiple times with it.

843
00:51:56,400 --> 00:52:01,900
So it does text size of text and then the formats string.

844
00:52:02,200 --> 00:52:05,100
So, what if I said size of

845
00:52:07,700 --> 00:52:09,100
Just debug stay here.

846
00:52:09,100 --> 00:52:13,500
What if I just said that it work still does not does not take three

847
00:52:13,500 --> 00:52:14,100
arguments.

848
00:52:17,600 --> 00:52:18,500
So what is it?

849
00:52:18,500 --> 00:52:19,300
It doesn't like

850
00:52:32,900 --> 00:52:34,500
so what if I just do this?

851
00:52:40,500 --> 00:52:41,500
So that works fine.

852
00:52:42,600 --> 00:52:43,800
Right that works.

853
00:52:45,400 --> 00:52:51,000
Now I want to say, hey, let's take name put that in there and now it

854
00:52:51,000 --> 00:52:51,600
doesn't work.

855
00:52:51,700 --> 00:52:57,500
So is named just something that I've forgotten that is not actually a

856
00:52:57,600 --> 00:52:58,400
care star.

857
00:53:01,400 --> 00:53:02,700
So name is a character.

858
00:53:02,700 --> 00:53:03,500
It's right there.

859
00:53:05,000 --> 00:53:06,600
So, what's the problem?

860
00:53:12,500 --> 00:53:14,000
Why won't you print to that?

861
00:53:18,600 --> 00:53:20,200
Explain yourself.

862
00:53:26,200 --> 00:53:27,300
I have no idea.

863
00:53:33,600 --> 00:53:34,900
I really don't.

864
00:53:36,900 --> 00:53:37,600
All right.

865
00:53:39,000 --> 00:53:40,500
What's going on here people?

866
00:53:54,400 --> 00:53:55,800
Tell me what the problem is.

867
00:54:05,300 --> 00:54:09,000
So we've got, which one are we doing?

868
00:54:09,000 --> 00:54:11,100
We're doing SN printfs.

869
00:54:11,100 --> 00:54:12,400
So, that's the care.

870
00:54:12,400 --> 00:54:16,000
Star buffer, the size to size of buffer, the size, T the count.

871
00:54:17,100 --> 00:54:18,200
And then the format.

872
00:54:23,100 --> 00:54:26,300
That's not how we were calling it, which is interesting.

873
00:54:31,300 --> 00:54:37,600
Okay, so and I remember this this sounds very familiar, sometimes we

874
00:54:37,600 --> 00:54:41,000
had to pass it twice and sometimes only once apparently there must be

875
00:54:41,000 --> 00:54:43,500
an overloaded function that differentiates between them.

876
00:54:50,200 --> 00:54:51,000
Unbelievable.

877
00:54:51,600 --> 00:54:52,100
All right.

878
00:54:52,100 --> 00:54:52,900
Fantastic.

879
00:55:00,600 --> 00:55:05,100
All right, so now we should actually have this thing.

880
00:55:07,700 --> 00:55:08,600
Thanks so much.

881
00:55:13,600 --> 00:55:18,200
Now, this is the most for the I just, this is why I hate using other

882
00:55:18,200 --> 00:55:18,600
code.

883
00:55:18,700 --> 00:55:22,400
It never makes any sense to me, and it's always like does not work the

884
00:55:22,400 --> 00:55:26,800
way that I would think of that it should anyway per frame Arena, space

885
00:55:27,200 --> 00:55:28,400
is what we put that in there.

886
00:55:28,400 --> 00:55:31,500
So now if I want to print out anything that I want to print out, I can

887
00:55:31,700 --> 00:55:32,200
write

888
00:55:34,000 --> 00:55:35,600
so what I'm going to do is I'm going to say,

889
00:55:37,100 --> 00:55:42,600
let's pick a number for this buffer and in fact, we can just store it

890
00:55:42,600 --> 00:55:51,800
down in here we can even say like, you know, what's the the the route

891
00:55:51,800 --> 00:55:58,100
info size and although let's be honest, it's going to be 32, there's a

892
00:55:58,100 --> 00:56:00,100
route info size and a route info.

893
00:56:00,100 --> 00:56:03,200
And so now we can just always use those.

894
00:56:03,200 --> 00:56:05,700
So we can say in here

895
00:56:07,100 --> 00:56:09,500
State Route info.

896
00:56:10,100 --> 00:56:13,600
Debug State Route, info size debug state,

897
00:56:15,100 --> 00:56:19,000
Route info size because you might as well pass it multiple times.

898
00:56:20,700 --> 00:56:22,500
And this is some stuff.

899
00:56:23,900 --> 00:56:25,500
Then we just set this thing.

900
00:56:27,800 --> 00:56:28,500
Like so.

901
00:56:37,700 --> 00:56:43,300
And now we have a printable buffer that we can just dump stuff into

902
00:56:43,300 --> 00:56:46,600
any time that we want, which is what I wanted.

903
00:56:46,600 --> 00:56:49,200
So that's it.

904
00:56:49,200 --> 00:56:54,500
That's all I was trying to get to there and now I can just add this

905
00:56:54,500 --> 00:56:59,800
code to essentially every time we do a

906
00:57:00,000 --> 00:57:00,900
On start.

907
00:57:01,000 --> 00:57:04,800
So probably somewhere around here.

908
00:57:04,800 --> 00:57:09,200
I probably would actually say right about here.

909
00:57:12,000 --> 00:57:17,100
Before we do anything else then I'll just go ahead and take that draw

910
00:57:17,100 --> 00:57:19,900
frame bit that we were doing here.

911
00:57:19,900 --> 00:57:22,900
So essentially this code and I'll just

912
00:57:24,500 --> 00:57:26,000
I'll just have that happen right here.

913
00:57:27,000 --> 00:57:27,800
And

914
00:57:30,800 --> 00:57:34,200
Then we could tweak what we want this to be for now.

915
00:57:34,200 --> 00:57:37,600
It would be the same thing as what was in the frame.

916
00:57:38,100 --> 00:57:39,600
It was in the last frame info.

917
00:57:40,100 --> 00:57:40,600
But

918
00:57:42,500 --> 00:57:44,400
You know, we can we can take it after that.

919
00:57:45,500 --> 00:57:49,700
So this is just now are essentially our menu which actually shows, you

920
00:57:49,700 --> 00:57:52,600
know, some information we actually care about which is good.

921
00:57:53,300 --> 00:57:57,800
And, and so now we can kind of make that a little bit clearer.

922
00:57:58,300 --> 00:58:00,300
So first of all, we can get rid of this.

923
00:58:07,500 --> 00:58:08,100
There we go.

924
00:58:09,600 --> 00:58:13,000
And now we just kind of got a nice little bar up there, that lets us

925
00:58:13,000 --> 00:58:17,600
know what's going down and yeah and so that should be pretty clear and

926
00:58:17,600 --> 00:58:19,400
I think we're based out of time so that's fine.

927
00:58:19,400 --> 00:58:21,200
That's a reasonable stopping point I think

928
00:58:22,900 --> 00:58:23,300
Okay.

929
00:58:25,900 --> 00:58:26,900
Time for some Q&A.

930
00:59:07,500 --> 00:59:09,500
Omar, what is the purpose of the internal syntax?

931
00:59:09,500 --> 00:59:11,100
It's just static.

932
00:59:11,800 --> 00:59:13,400
It's a pound to find to static.

933
00:59:16,800 --> 00:59:17,400
So,

934
00:59:26,200 --> 00:59:27,100
You can see right here.

935
00:59:27,100 --> 00:59:29,600
We just do like internal aesthetic.

936
00:59:29,800 --> 00:59:34,000
The reason for that is because I like tool to grep for things like

937
00:59:34,000 --> 00:59:35,300
where the global variables are.

938
00:59:35,300 --> 00:59:42,400
And you can't actually do like or where local persistent variables are

939
00:59:42,700 --> 00:59:45,600
and since static is overloaded to mean like a bunch of different

940
00:59:45,600 --> 00:59:49,100
things, I just make my own so that I can keep track of them.

941
01:00:04,900 --> 01:00:05,800
Cheaper Caleb.

942
01:00:05,800 --> 01:00:07,100
I love how the compiler tells you.

943
01:00:07,100 --> 01:00:08,100
There is a Paramus match.

944
01:00:08,100 --> 01:00:10,600
Instead of telling you a list of actual params versus the ones you

945
01:00:10,600 --> 01:00:13,900
typed, it could at least try to be helpful.

946
01:00:13,900 --> 01:00:15,100
Is this an unsolved problem?

947
01:00:15,100 --> 01:00:17,600
Whose science llvm.

948
01:00:17,600 --> 01:00:19,600
Does it correctly?

949
01:00:19,700 --> 01:00:21,500
If I remember correct, if I remember, right?

950
01:00:21,500 --> 01:00:24,000
Like says here is what you passed.

951
01:00:24,100 --> 01:00:27,000
Here's what I was trying to match and

952
01:00:31,200 --> 01:00:33,800
And I you know it lists like all the options.

953
01:00:33,900 --> 01:00:37,200
I don't know if msec does that ever.

954
01:00:38,200 --> 01:00:39,000
I'm not sure.

955
01:00:42,000 --> 01:00:43,200
I think it does that.

956
01:00:43,200 --> 01:00:46,300
I think it will do that if you have the right number of parameters,

957
01:00:46,500 --> 01:00:47,700
but not the right types.

958
01:00:47,700 --> 01:00:48,100
It'll do it.

959
01:00:48,100 --> 01:00:51,100
But not, if you have the wrong number of parameters, who knows?

960
01:00:51,100 --> 01:00:51,500
Why

961
01:00:56,200 --> 01:00:58,600
What were the abbreviations in the new menu header?

962
01:00:58,900 --> 01:01:02,400
So right now, like I don't know what will print out in here but this

963
01:01:02,400 --> 01:01:05,000
is how many milliseconds the last frame

964
01:01:07,000 --> 01:01:12,600
Took essentially, like, how long did we spend from one's called a swap

965
01:01:12,600 --> 01:01:15,500
buffers to the next called a swap buffers and since V sinks on right

966
01:01:15,500 --> 01:01:18,600
now, will stall out at 16 milliseconds.

967
01:01:18,900 --> 01:01:23,300
So we're not actually taking 16 milliseconds, which you can see in

968
01:01:23,300 --> 01:01:27,800
here like, this is just a bunch of wait time, that's not actually

969
01:01:27,800 --> 01:01:29,000
relevant to anybody.

970
01:01:29,600 --> 01:01:32,600
But you know, like, you can see it in here that's all just time.

971
01:01:32,600 --> 01:01:34,500
We're just waiting, not doing anything.

972
01:01:35,300 --> 01:01:35,800
But that's

973
01:01:36,500 --> 01:01:39,900
What we want to see, so we want to see that number always stay at 16

974
01:01:39,900 --> 01:01:40,700
milliseconds.

975
01:01:42,000 --> 01:01:46,800
If we're, if we're trying to hit 60 frames a second for 30 frames a

976
01:01:46,800 --> 01:01:48,300
second, we want see that 33.

977
01:01:50,000 --> 01:01:54,700
So then these are just some things that was like 52 events, 34 profile

978
01:01:54,700 --> 01:01:56,000
nodes and eight.

979
01:01:56,700 --> 01:02:00,300
What are those d d is what

980
01:02:12,900 --> 01:02:14,300
It's how many data blocks?

981
01:02:14,300 --> 01:02:14,800
Got sunk.

982
01:02:14,800 --> 01:02:16,000
So those are kind of irrelevant.

983
01:02:16,000 --> 01:02:18,600
Those are just like things like

984
01:02:20,800 --> 01:02:21,800
For example.

985
01:02:24,100 --> 01:02:27,900
One of these things which is a bunch of entity data, like whichever

986
01:02:27,900 --> 01:02:29,900
one we highlight, like let's say, we highlight that one.

987
01:02:57,500 --> 01:02:59,800
Colonel Dragon people have asked before what your thoughts are.

988
01:03:00,000 --> 01:03:02,500
In functional languages in general, but I'm curious what your thoughts

989
01:03:02,500 --> 01:03:04,800
are specifically on the constructs, they emphasize that other

990
01:03:04,800 --> 01:03:09,800
languages don't for example, closures and partial application, IE Foo,

991
01:03:10,000 --> 01:03:12,800
taking, X, Y, Z, being called, with Foo X Y returning.

992
01:03:12,800 --> 01:03:15,800
A closure that take Z I like them.

993
01:03:18,900 --> 01:03:22,400
I like most of the constructs of functional languages.

994
01:03:22,700 --> 01:03:25,800
The thing that I don't usually like about functional languages is that

995
01:03:25,800 --> 01:03:28,500
they're typically built to

996
01:03:31,300 --> 01:03:35,000
Too far from being able to directly do stuff on Hardware, you know.

997
01:03:37,500 --> 01:03:39,800
Like, you know, taking ml or something or things that are purely

998
01:03:39,800 --> 01:03:44,600
functional, and if you use a more modern one like maybe, oh, camel or

999
01:03:44,600 --> 01:03:45,100
something?

1000
01:03:45,100 --> 01:03:49,200
I don't really know actually to what extent do camel, has it, but more

1001
01:03:49,200 --> 01:03:53,400
modern ones that let you do everything that see can do, but that also

1002
01:03:53,400 --> 01:03:56,200
have those functional elements when you want them.

1003
01:03:56,200 --> 01:03:58,700
Can be very nice if that makes sense.

1004
01:03:59,600 --> 01:04:04,600
So I like most of those I which that C++ had more of that kind of a

1005
01:04:04,600 --> 01:04:06,600
thing in cleaner ways.

1006
01:04:07,700 --> 01:04:09,000
But, you know, it doesn't.

1007
01:04:09,500 --> 01:04:13,500
So I don't get much, I can't speak too much of that stuff in practical

1008
01:04:13,500 --> 01:04:15,900
sense because I've never spent enough time programming in a functional

1009
01:04:15,900 --> 01:04:21,100
language to go how important to me is like currying and stuff like

1010
01:04:21,100 --> 01:04:21,700
that.

1011
01:04:24,900 --> 01:04:29,000
But I like them all, they all seem like, useful tools that I would use

1012
01:04:29,700 --> 01:04:33,500
if they were implemented conveniently in C++, but they're all of them

1013
01:04:33,500 --> 01:04:38,500
are implemented if at all extremely inconveniently in C++ and they're

1014
01:04:38,500 --> 01:04:39,400
just not worth it.

1015
01:04:39,900 --> 01:04:44,100
But in a language where they were convenient and worked, well, they

1016
01:04:44,100 --> 01:04:44,700
would be cool.

1017
01:05:00,900 --> 01:05:03,000
Does the debug bit map viewer work?

1018
01:05:03,000 --> 01:05:06,600
Now, when you select an entity, I don't think we've ever actually

1019
01:05:06,600 --> 01:05:07,900
tried to fix that.

1020
01:05:11,900 --> 01:05:18,100
I'm not actually sure even what I think we may have commented out, but

1021
01:05:18,100 --> 01:05:22,600
if you want me to fix it, that's probably not particularly hard.

1022
01:05:22,900 --> 01:05:23,700
So

1023
01:05:33,200 --> 01:05:34,700
Let's see.

1024
01:05:36,900 --> 01:05:43,700
So this is probably the problem we need to make sure that it shows up

1025
01:05:43,700 --> 01:05:44,800
on top.

1026
01:05:45,300 --> 01:05:50,900
So yeah, let me see what's going on here.

1027
01:05:55,800 --> 01:05:56,300
There you go.

1028
01:06:05,400 --> 01:06:06,300
Not sure.

1029
01:06:08,500 --> 01:06:11,200
That's showing a bitmap ID, but I don't know if it's showing the

1030
01:06:11,200 --> 01:06:12,200
bitmap ID.

1031
01:06:23,200 --> 01:06:25,000
Are we actually outputting that?

1032
01:06:25,000 --> 01:06:25,600
I think.

1033
01:06:26,800 --> 01:06:29,200
What are we actually outputting there would be my other question.

1034
01:06:38,900 --> 01:06:39,900
That is in here, right?

1035
01:06:49,800 --> 01:06:52,200
yeah, so we're always out putting the Torso

1036
01:06:54,400 --> 01:06:57,800
Which is not helpful for obvious reasons.

1037
01:06:58,600 --> 01:07:04,700
So we would have to actually output this for real in order to do

1038
01:07:04,700 --> 01:07:05,700
anything useful there.

1039
01:07:06,500 --> 01:07:13,100
Now, probably the way we would want to do this is probably not the way

1040
01:07:13,100 --> 01:07:14,700
that we are doing it.

1041
01:07:15,100 --> 01:07:20,700
Probably what we would want to do is something where we actually go.

1042
01:07:20,700 --> 01:07:23,000
Like okay here

1043
01:07:23,200 --> 01:07:28,100
The Entity, debug ID thing, let's actually go When We're looping

1044
01:07:28,100 --> 01:07:31,100
through it, right?

1045
01:07:31,400 --> 01:07:36,400
And say like, okay, we're is the entity debug ID.

1046
01:07:45,200 --> 01:07:45,400
Yeah.

1047
01:07:45,400 --> 01:07:52,200
So we probably want to do like okay you know when we're here let's

1048
01:07:52,200 --> 01:07:57,700
actually check up at the head end so we'd say like okay you know,

1049
01:07:58,300 --> 01:08:07,900
here's what is debug ID is and if you know if the if we request one of

1050
01:08:07,900 --> 01:08:11,800
these things then we want to open a data block and push stuff out.

1051
01:08:12,000 --> 01:08:14,300
Now, in this case, I guess,

1052
01:08:16,200 --> 01:08:19,899
We don't actually want to use the debug data block automatic thing.

1053
01:08:22,100 --> 01:08:27,899
We actually want to do the like a begin and data block basically.

1054
01:08:28,800 --> 01:08:31,899
So we would want to do you know.

1055
01:08:35,000 --> 01:08:35,500
What are these?

1056
01:08:35,500 --> 01:08:41,500
So it doesn't have to be in the same script area so it would just be

1057
01:08:43,600 --> 01:08:44,300
Record.

1058
01:08:44,300 --> 01:08:45,600
Debug event.

1059
01:08:46,100 --> 01:08:48,700
Debug type open data block.

1060
01:08:49,899 --> 01:08:52,000
And then, oops.

1061
01:08:53,399 --> 01:08:54,200
Down the wrong one.

1062
01:08:57,500 --> 01:08:58,600
And this one would be.

1063
01:09:01,200 --> 01:09:02,200
And they block.

1064
01:09:03,000 --> 01:09:07,200
So so this would just be debug begin data.

1065
01:09:07,200 --> 01:09:11,899
Block, then we could print out, you know, whatever we wanted to print

1066
01:09:11,899 --> 01:09:12,500
out.

1067
01:09:14,700 --> 01:09:16,100
Throughout this entire process.

1068
01:09:16,399 --> 01:09:18,800
And then at the end, we would do.

1069
01:09:21,100 --> 01:09:23,800
We would do the end data block as necessary, right?

1070
01:09:23,800 --> 01:09:25,800
So we'd say where is it?

1071
01:09:36,100 --> 01:09:38,399
Is that the right place?

1072
01:09:41,000 --> 01:09:42,300
so be more like,

1073
01:09:44,100 --> 01:09:44,399
Here.

1074
01:09:54,000 --> 01:09:55,900
So yeah, something like that.

1075
01:09:57,000 --> 01:09:59,200
you know I'm saying, and

1076
01:10:04,500 --> 01:10:08,400
All of these things I guess, actually can stay exactly the same.

1077
01:10:11,100 --> 01:10:14,900
but now stuff like we had before,

1078
01:10:18,500 --> 01:10:23,300
Where we want to potentially print out different bitmaps, depending

1079
01:10:23,300 --> 01:10:25,000
on, what's going on?

1080
01:10:26,000 --> 01:10:30,200
Now, those can actually and I guess technically this probably wants to

1081
01:10:30,300 --> 01:10:31,300
be inside here.

1082
01:10:35,200 --> 01:10:35,900
See here.

1083
01:10:38,100 --> 01:10:39,800
Storage index.

1084
01:10:41,400 --> 01:10:42,100
What's the question?

1085
01:10:45,400 --> 01:10:45,900
Oh yeah.

1086
01:10:51,800 --> 01:10:56,000
So now what I need to do is basically like I want to print out this

1087
01:10:56,000 --> 01:11:00,000
one of these bitmaps and I want to be able to do it whenever we

1088
01:11:00,000 --> 01:11:00,900
actually do it.

1089
01:11:00,900 --> 01:11:04,700
So whenever we draw stuff, if we wanted to say what we were using for

1090
01:11:04,700 --> 01:11:10,100
drawing here, we could like when we do these push bitmaps or whatever.

1091
01:11:10,500 --> 01:11:16,400
So I don't know like you know let's say when we suggest it, when we do

1092
01:11:16,400 --> 01:11:21,400
a wall here you can see that we do get first bitmap from so bitmap ID.

1093
01:11:23,200 --> 01:11:23,700
You know.

1094
01:11:25,500 --> 01:11:26,300
This thing.

1095
01:11:29,900 --> 01:11:31,400
if I wanted to,

1096
01:11:35,700 --> 01:11:37,600
Make that be something that was known.

1097
01:11:37,600 --> 01:11:40,100
Now, it could be right.

1098
01:11:40,100 --> 01:11:42,400
And of course we're going to keep having.

1099
01:11:42,400 --> 01:11:44,700
We're going to have to restart eventually because as we move the debug

1100
01:11:44,700 --> 01:11:47,200
code around, it's going to it's going to stack up there, right?

1101
01:11:48,500 --> 01:11:52,400
But where's where's that at?

1102
01:11:59,000 --> 01:11:59,800
But in theory,

1103
01:12:00,100 --> 01:12:02,900
Like if we select a tree, we should get that.

1104
01:12:09,900 --> 01:12:12,300
How come that is not inside the debug block?

1105
01:12:20,800 --> 01:12:22,700
Oh right.

1106
01:12:22,700 --> 01:12:25,700
Because these don't have to be inside the debug block.

1107
01:12:26,900 --> 01:12:29,800
So I wonder, I don't know what I want to do so that's probably

1108
01:12:29,800 --> 01:12:31,900
something we should make a little cleaner to than right?

1109
01:12:31,900 --> 01:12:35,100
Because this is the first time we've really tried to do some more

1110
01:12:35,100 --> 01:12:38,900
fancy stuff with how we output stuff, it would be nice to say.

1111
01:12:39,200 --> 01:12:42,900
If you're not inside a debug lock, the debug value, just gets ignored

1112
01:12:43,800 --> 01:12:44,400
Right.

1113
01:12:52,000 --> 01:12:57,400
And actually, to be completely honest with you, I am not sure why that

1114
01:12:57,400 --> 01:12:58,400
isn't happening.

1115
01:13:06,000 --> 01:13:08,800
But for now what I could do is say, well, let's put it.

1116
01:13:10,000 --> 01:13:10,800
Let's put it in here.

1117
01:13:13,800 --> 01:13:15,000
But that's just a little cumbersome.

1118
01:13:15,000 --> 01:13:17,900
So it might be nice to figure out some way to not do that.

1119
01:13:25,200 --> 01:13:26,100
Okay.

1120
01:13:44,100 --> 01:13:45,100
so that

1121
01:13:50,200 --> 01:13:51,700
Is roughly how this would go.

1122
01:13:52,400 --> 01:13:55,700
And I'll have to see like, okay, so stairwells don't have a thing

1123
01:13:57,000 --> 01:13:58,300
familiar is do.

1124
01:14:00,500 --> 01:14:01,000
Right.

1125
01:14:05,300 --> 01:14:06,500
I hear a bitmap head.

1126
01:14:16,500 --> 01:14:19,700
And I'm not sure how useful this is because I don't think we would

1127
01:14:19,700 --> 01:14:22,000
normally really want to do this.

1128
01:14:22,700 --> 01:14:24,800
I like I'm not sure why we can't

1129
01:14:26,500 --> 01:14:26,800
Not sure.

1130
01:14:26,800 --> 01:14:26,900
Why.

1131
01:14:26,900 --> 01:14:28,300
Moving those around caught?

1132
01:14:28,300 --> 01:14:29,900
I should probably look into that.

1133
01:14:31,000 --> 01:14:32,000
Wow, what did I do?

1134
01:14:32,800 --> 01:14:33,200
Go away.

1135
01:14:33,200 --> 01:14:33,800
Okay, there we go.

1136
01:14:36,200 --> 01:14:37,500
Because I'm not sure why we wouldn't.

1137
01:14:37,500 --> 01:14:39,100
That shouldn't still work.

1138
01:14:41,500 --> 01:14:42,400
Across runs.

1139
01:14:42,600 --> 01:14:45,500
So that should probably look at what's going on there, but anyway,

1140
01:14:57,900 --> 01:14:59,600
so, there's that tree and

1141
01:15:00,100 --> 01:15:02,000
I look at the familiar.

1142
01:15:02,000 --> 01:15:03,200
I want to see what happens.

1143
01:15:03,200 --> 01:15:04,400
Can I select the familiar?

1144
01:15:04,400 --> 01:15:04,700
I guess.

1145
01:15:04,700 --> 01:15:05,200
I can't.

1146
01:15:05,200 --> 01:15:06,400
Because well, you know what I could do.

1147
01:15:07,600 --> 01:15:08,100
I can.

1148
01:15:11,800 --> 01:15:12,600
See here.

1149
01:15:12,700 --> 01:15:15,000
Where is the false hero?

1150
01:15:16,400 --> 01:15:16,900
There we go.

1151
01:15:18,800 --> 01:15:20,900
so, if I select the familiar,

1152
01:15:23,400 --> 01:15:23,900
Yeah.

1153
01:15:27,200 --> 01:15:30,300
So I guess what I could do here, I suppose one way to make this a

1154
01:15:30,300 --> 01:15:31,000
little simpler.

1155
01:15:31,000 --> 01:15:32,500
I just don't love the way.

1156
01:15:32,500 --> 01:15:35,800
Yeah, I don't love the way this is working.

1157
01:15:35,800 --> 01:15:39,100
I think we should maybe refactor this a little bit into something a

1158
01:15:39,100 --> 01:15:43,500
bit cleaner because, like, also that's going to create another debug

1159
01:15:43,500 --> 01:15:46,100
point because they're at different places in the code.

1160
01:15:46,700 --> 01:15:50,100
And so I feel like we want these to probably be by name,

1161
01:15:53,400 --> 01:15:54,200
You know what I mean?

1162
01:15:54,400 --> 01:16:00,000
Look, I feel like we actually want these instead to be like debug

1163
01:16:00,000 --> 01:16:00,700
value.

1164
01:16:00,700 --> 01:16:05,000
And then we would put here what we think the grid is for this thing

1165
01:16:07,300 --> 01:16:09,000
and like that would be

1166
01:16:13,400 --> 01:16:17,400
That would be used instead of the, the sort of weird currying bit.

1167
01:16:17,400 --> 01:16:20,800
So, for example, if I wanted to, I could say that, you know,

1168
01:16:25,000 --> 01:16:31,300
Maybe it keeps just the function name and then whatever my value name

1169
01:16:31,300 --> 01:16:32,700
is or something like that.

1170
01:16:33,200 --> 01:16:38,700
So like, you know, one way I could do it is say inside debug interface

1171
01:16:38,700 --> 01:16:45,400
.h, when, oops, when we do debug value and it does this sort of thing.

1172
01:16:45,900 --> 01:16:50,000
What I could do is say let's make one of these that's like

1173
01:17:04,800 --> 01:17:07,600
I don't know something like named debug value or debug.

1174
01:17:09,200 --> 01:17:13,400
Named value, something like that, and instead of using debug name

1175
01:17:13,400 --> 01:17:17,800
here, it would, it would just do instead of any of that would just do

1176
01:17:17,800 --> 01:17:20,300
like, you know, what's the function?

1177
01:17:20,900 --> 01:17:22,200
And then this value name,

1178
01:17:24,900 --> 01:17:25,300
You know.

1179
01:17:26,600 --> 01:17:27,500
Something like that.

1180
01:17:31,000 --> 01:17:34,600
So that way when they're creating their whatever their unique

1181
01:17:35,000 --> 01:17:39,000
signature is it's not going to move around when you recompile and it's

1182
01:17:39,000 --> 01:17:43,500
not going to be different based on which part of the code it's in.

1183
01:17:43,700 --> 01:17:49,500
So I can write to the same debug value in a couple different ways.

1184
01:17:49,500 --> 01:17:50,900
So there's the tree,

1185
01:17:53,700 --> 01:17:56,200
Turn The Familiar on, right?

1186
01:17:56,500 --> 01:17:59,400
There's the tree and there's the familiar course.

1187
01:17:59,400 --> 01:17:59,800
I'm so

1188
01:18:00,100 --> 01:18:02,900
Seeing the familiar head show up, which I'm not sure why.

1189
01:18:08,600 --> 01:18:12,100
It should be doing hero bitmaps head.

1190
01:18:14,900 --> 01:18:15,600
Why am I not?

1191
01:18:15,700 --> 01:18:16,500
Why am I still alive?

1192
01:18:16,500 --> 01:18:21,100
Still generating another 10 because I didn't call that a name debug

1193
01:18:21,100 --> 01:18:23,400
value because I'm pretty stupid.

1194
01:18:23,600 --> 01:18:24,400
So that's good.

1195
01:18:30,400 --> 01:18:32,100
That's what I actually wanted.

1196
01:18:35,200 --> 01:18:38,700
Let me see where this is actually debug event text.

1197
01:18:40,500 --> 01:18:41,700
Why are we getting?

1198
01:18:45,000 --> 01:18:45,600
That bug.

1199
01:18:45,600 --> 01:18:47,700
I'm curious to know because that shouldn't be happening.

1200
01:18:47,700 --> 01:18:53,600
I thought we fixed that possibility of having a the changeover go

1201
01:18:53,600 --> 01:18:55,300
wrong during Kool-Aid debug records.

1202
01:18:55,600 --> 01:18:59,900
Like I thought that was I thought that was handled in here where we

1203
01:18:59,900 --> 01:19:07,500
completed all the work and we did the reload after debug frame end so

1204
01:19:07,500 --> 01:19:10,300
that we should never have any events in the buffer that would be

1205
01:19:10,300 --> 01:19:11,200
problematic.

1206
01:19:20,400 --> 01:19:21,600
That's a little weird, right?

1207
01:19:26,000 --> 01:19:29,600
What are we drawing when we call debug draw element?

1208
01:19:31,300 --> 01:19:33,100
Where we getting this value from?

1209
01:19:53,400 --> 01:19:53,700
Hmm.

1210
01:19:59,400 --> 01:20:00,700
Hmm.

1211
01:20:03,300 --> 01:20:09,200
So this is in side one of our elements that we are drawing.

1212
01:20:15,900 --> 01:20:20,200
What kind of event is, it's just a random generic piece of data.

1213
01:20:27,000 --> 01:20:28,700
I guess is that even?

1214
01:20:33,600 --> 01:20:35,200
Is that even supposed to work?

1215
01:20:37,200 --> 01:20:42,600
Is that, let's see here, when we call debug event to text and we're

1216
01:20:42,600 --> 01:20:45,000
taking the events grid.

1217
01:20:45,900 --> 01:20:49,300
Is that the value that actually gets cloned or not?

1218
01:20:58,000 --> 01:20:59,600
When we store an event.

1219
01:21:00,300 --> 01:21:02,000
What actually happens to the grid.

1220
01:21:20,000 --> 01:21:22,700
so, when we do a get element from event,

1221
01:21:24,700 --> 01:21:26,800
That is where we do the push string.

1222
01:21:28,200 --> 01:21:31,300
But if you don't go through, get element from event.

1223
01:21:34,300 --> 01:21:37,800
Or the event itself because that's in the element.

1224
01:21:48,700 --> 01:21:50,400
so, I think this is just

1225
01:21:51,900 --> 01:21:53,100
An oversight, right?

1226
01:21:53,100 --> 01:21:54,400
Like this is not.

1227
01:21:58,900 --> 01:22:03,900
This is just not right because whenever we process an event we have to

1228
01:22:03,900 --> 01:22:06,300
translate it over when we do.

1229
01:22:06,300 --> 01:22:09,200
You know, when we make it into an element, we have to overwrite the

1230
01:22:09,800 --> 01:22:10,500
events.

1231
01:22:15,600 --> 01:22:18,800
We would have to overwrite the event squid or just never print out the

1232
01:22:18,800 --> 01:22:22,600
events grid and always use whatever the one is in the element, right?

1233
01:22:27,800 --> 01:22:30,400
So I'm not sure what we wanted to do there.

1234
01:22:32,800 --> 01:22:34,100
I'm not sure.

1235
01:22:46,000 --> 01:22:48,100
I mean, I guess technically, this is all fine.

1236
01:22:49,600 --> 01:22:55,500
To a certain extent, we just have to know that we don't print those

1237
01:22:55,500 --> 01:22:58,200
out and we were still printing them out for some reason.

1238
01:22:58,400 --> 01:23:01,000
So, for example, when we come in here and we're talking about this

1239
01:23:01,000 --> 01:23:05,100
event, we really need to be talking about printing that element.

1240
01:23:08,200 --> 01:23:12,100
So when we call event to text, we really need to be saying, what the

1241
01:23:12,100 --> 01:23:15,400
element is that we're printing in addition to the event, right?

1242
01:23:15,600 --> 01:23:16,900
We would need to pass that.

1243
01:23:19,700 --> 01:23:20,600
And I'm not sure.

1244
01:23:20,600 --> 01:23:22,600
So this was just, I'm not sure why that would just.

1245
01:23:22,600 --> 01:23:25,200
We never, we're never printing out many of those I guess.

1246
01:23:25,200 --> 01:23:26,700
So we never saw that happen.

1247
01:23:27,200 --> 01:23:31,600
But that's clearly wrong because you're not allowed to get that.

1248
01:23:33,400 --> 01:23:37,600
You're not allowed to access that, that's not valid at that point.

1249
01:23:37,900 --> 01:23:39,400
So I'm not sure why that was

1250
01:23:40,700 --> 01:23:41,900
Why that was ever happening?

1251
01:23:43,100 --> 01:23:43,700
But it was.

1252
01:23:54,200 --> 01:23:54,700
All right.

1253
01:23:56,100 --> 01:23:57,100
So, let's take a look here.

1254
01:23:58,300 --> 01:23:59,800
Let's have the

1255
01:24:02,200 --> 01:24:03,000
Tree there.

1256
01:24:03,500 --> 01:24:04,200
There's the the okay.

1257
01:24:04,600 --> 01:24:08,000
So now we can write to those reliably, which is fine.

1258
01:24:08,900 --> 01:24:09,800
That's all good.

1259
01:24:18,000 --> 01:24:21,400
but we'd have to make sure our selection stuff works a little bit more

1260
01:24:21,400 --> 01:24:25,400
solidly, I think, because right now, we're ignoring the selection, we

1261
01:24:25,400 --> 01:24:26,800
only use the highlighting

1262
01:24:27,800 --> 01:24:33,400
Which doesn't make much sense, but we're now back to back to.

1263
01:24:33,800 --> 01:24:34,500
Okay, there.

1264
01:24:35,200 --> 01:24:41,200
So yeah, inside the debug CPP code the for drawing the bitmap

1265
01:24:43,800 --> 01:24:46,000
Oops, map ID.

1266
01:24:52,800 --> 01:24:53,900
For drawing this stuff.

1267
01:24:54,000 --> 01:24:59,500
I think we also want in here, we do like a push wrecked on the backing

1268
01:24:59,500 --> 01:25:00,200
transform.

1269
01:25:00,200 --> 01:25:02,900
I think that's what we want to do.

1270
01:25:06,100 --> 01:25:07,400
For this guy as well.

1271
01:25:07,400 --> 01:25:10,700
So instead of no transform, I think that's supposed to be the backing

1272
01:25:10,700 --> 01:25:12,900
transform and

1273
01:25:15,100 --> 01:25:20,800
This all needs to be written to that layer, so that it's not getting

1274
01:25:20,800 --> 01:25:23,900
over written by people who are in the foreground.

1275
01:25:25,300 --> 01:25:26,600
And then, I think that's it.

1276
01:25:29,100 --> 01:25:30,000
Let's see here.

1277
01:25:37,800 --> 01:25:38,200
Yeah.

1278
01:25:40,000 --> 01:25:40,600
So, there we go.

1279
01:26:06,500 --> 01:26:07,100
Tuning basemen.

1280
01:26:07,100 --> 01:26:10,100
Are we going to make a bitmap of the memory that is used or unused?

1281
01:26:10,100 --> 01:26:13,600
And when we select a unit show, where it in the memory Arena, it is

1282
01:26:17,700 --> 01:26:22,200
I mean that would not be particularly hard to do, but I'm not sure

1283
01:26:22,200 --> 01:26:25,500
that there would be any reason to do it.

1284
01:26:27,400 --> 01:26:30,600
but you certainly could do it if you wanted to write, it's not

1285
01:26:35,400 --> 01:26:36,700
you know, it's not

1286
01:26:38,000 --> 01:26:43,200
it's not particularly well, I mean here.

1287
01:26:44,100 --> 01:26:45,800
So if you wanted to show

1288
01:26:47,800 --> 01:26:49,200
Arena's of some kind.

1289
01:26:50,600 --> 01:26:50,900
Right?

1290
01:26:50,900 --> 01:26:55,000
What you'd want to do is inside the debug interface, you'd want to be

1291
01:26:55,000 --> 01:26:56,000
able to say that.

1292
01:26:56,000 --> 01:26:59,000
One of the things that you were going to view was an arena, right?

1293
01:26:59,100 --> 01:26:59,800
So you'd want to have

1294
01:27:00,000 --> 01:27:02,000
On here that was like, debug type Arena.

1295
01:27:03,400 --> 01:27:04,000
You know what I mean?

1296
01:27:05,600 --> 01:27:10,700
And this would probably be just like, Arena occupancy, I guess, or

1297
01:27:10,700 --> 01:27:11,800
something like that.

1298
01:27:12,700 --> 01:27:15,800
And then when you go to draw, you know, where we have the same stuff

1299
01:27:15,800 --> 01:27:20,800
that we were drawing before, like frame bar graphs, and that kind of

1300
01:27:20,800 --> 01:27:21,200
stuff.

1301
01:27:21,200 --> 01:27:24,500
You'd have one in here that was like, here's the arena occupancy and I

1302
01:27:24,500 --> 01:27:29,500
gotta draw that, you know, and it would be pretty similar to this code

1303
01:27:29,500 --> 01:27:30,300
in here.

1304
01:27:30,800 --> 01:27:32,600
Probably I'm guessing.

1305
01:27:33,900 --> 01:27:34,700
What do you do?

1306
01:27:34,800 --> 01:27:36,700
You do real similar stuff.

1307
01:27:43,700 --> 01:27:45,900
You know, at this point I guess we don't have any buttons but you'd

1308
01:27:45,900 --> 01:27:47,500
probably have some there.

1309
01:27:48,700 --> 01:27:50,400
This would be like an arena

1310
01:27:53,900 --> 01:27:55,300
And Arena graph or something.

1311
01:27:57,700 --> 01:28:00,200
It stores, whatever the information is we need for that thing.

1312
01:28:02,000 --> 01:28:03,900
This stuff would be roughly the same.

1313
01:28:03,900 --> 01:28:08,200
Probably like

1314
01:28:10,000 --> 01:28:17,900
you know, basically the same thing, I don't know and

1315
01:28:19,400 --> 01:28:20,500
Rabe Boop's.

1316
01:28:22,300 --> 01:28:25,200
And then probably you do the exact same thing here where you just say

1317
01:28:25,200 --> 01:28:28,800
like, okay, I'm going to draw an arena.

1318
01:28:29,600 --> 01:28:31,700
I can probably draw in a couple different ways, we don't know what

1319
01:28:31,700 --> 01:28:34,100
those ways are yet, but I'll just make a switch statement here where

1320
01:28:34,100 --> 01:28:35,000
we can put them.

1321
01:28:35,800 --> 01:28:40,000
And so then we'd say like drawer Arena occupancy and then there'd be

1322
01:28:40,000 --> 01:28:43,700
the, you know, the exact same stuff that we were passing before.

1323
01:28:46,300 --> 01:28:47,400
So be real similar.

1324
01:28:48,500 --> 01:28:50,600
In this case, it's a little unclear.

1325
01:28:50,600 --> 01:28:54,700
Like what, how you get the arena.

1326
01:28:54,700 --> 01:28:57,800
So, I'm guessing probably the way that would work is in the debug

1327
01:28:57,800 --> 01:29:01,600
interface, when you pass the stuff in, this would you'd actually be

1328
01:29:01,600 --> 01:29:05,900
able to pass an arena pointer, right?

1329
01:29:06,000 --> 01:29:10,900
So, you know, the arena would actually go in here somewhere and it

1330
01:29:10,900 --> 01:29:12,400
would be a pointer to the arena.

1331
01:29:12,400 --> 01:29:15,500
So it would be Loops, it'd probably be

1332
01:29:16,100 --> 01:29:21,500
You know, I can just live there and you know I don't even remember

1333
01:29:21,900 --> 01:29:25,000
what we call Arenas these days just Arena.

1334
01:29:25,000 --> 01:29:26,200
It's called a memory Arena.

1335
01:29:27,200 --> 01:29:30,000
And so if you have a memory, read a pointer and blah, blah blah and

1336
01:29:30,000 --> 01:29:31,100
stuff and whatever.

1337
01:29:32,600 --> 01:29:35,500
Then you know, when you go through one of those, you can print it out

1338
01:29:35,500 --> 01:29:37,000
if there is one for it.

1339
01:29:37,000 --> 01:29:42,300
And so the Arena's are presumably stable over time, right?

1340
01:29:42,300 --> 01:29:43,600
They don't come and go.

1341
01:29:45,900 --> 01:29:48,100
So we probably don't need to make a lot of code that tries to figure

1342
01:29:48,100 --> 01:29:49,900
out where they are or what they are.

1343
01:29:50,100 --> 01:29:54,100
We can probably just say like when you draw the arena occupancy,

1344
01:30:05,600 --> 01:30:06,900
This is all the same, I guess.

1345
01:30:12,000 --> 01:30:15,700
I assume you do draw Arena occupancy, you know what we would do then

1346
01:30:15,700 --> 01:30:19,000
is we just say like okay we need to get that Arena pointer so we just

1347
01:30:19,000 --> 01:30:25,600
see, you know, we'd make sure that we could where's the root element.

1348
01:30:25,700 --> 01:30:29,000
We'd make sure that we'd say like okay, whatever one we're on right

1349
01:30:29,000 --> 01:30:29,300
now.

1350
01:30:29,300 --> 01:30:34,700
We hope that there is a stored event for it that we can look at if

1351
01:30:34,700 --> 01:30:35,500
that makes sense.

1352
01:30:37,600 --> 01:30:40,300
And and we would draw that, right?

1353
01:30:40,300 --> 01:30:41,700
So we'd say like, okay,

1354
01:30:48,000 --> 01:30:49,300
Inside this event.

1355
01:30:59,500 --> 01:31:04,100
Yeah, so inside this event, we have an arena so it'd be more like if

1356
01:31:04,100 --> 01:31:09,500
there was if we did find the event, then we have a memory Arena

1357
01:31:12,100 --> 01:31:17,600
That we can draw here and, you know, we can say like, you know,

1358
01:31:17,700 --> 01:31:20,700
there's going to be, I don't know.

1359
01:31:36,100 --> 01:31:42,100
A rectangle and the rectangle is going to be like this is the frame

1360
01:31:42,100 --> 01:31:43,100
rack, let's call it.

1361
01:31:43,800 --> 01:31:52,200
So this is going to be you know it's got the frame wrecked Min EX

1362
01:31:53,600 --> 01:31:56,700
And the frame Rex and why?

1363
01:31:58,400 --> 01:32:04,500
And the frame wrecked Max X and the frame wrecked.

1364
01:32:06,700 --> 01:32:10,900
Max Y, and, you know.

1365
01:32:10,900 --> 01:32:11,600
So okay.

1366
01:32:11,600 --> 01:32:13,500
There's like, oops.

1367
01:32:16,800 --> 01:32:19,300
I guess I don't know why I wouldn't just pass.

1368
01:32:19,900 --> 01:32:20,900
Pray, McMinn!

1369
01:32:23,400 --> 01:32:28,500
it's kind of stupid but anyway so you know maybe we start by just

1370
01:32:28,500 --> 01:32:32,200
saying, let's Draw, Something simple, so we'll say, okay, we've got

1371
01:32:34,100 --> 01:32:40,700
Like the used wrecked and the unused wrecked or something and so then

1372
01:32:40,700 --> 01:32:46,700
we've got like the two rectangles and we want to set the max X of this

1373
01:32:46,700 --> 01:32:52,300
one to the split point and the Minix of this one to the split point.

1374
01:32:52,900 --> 01:32:57,900
So we're kind of drawing two rectangles there and then you know we

1375
01:32:57,900 --> 01:32:58,600
draw

1376
01:33:01,000 --> 01:33:05,300
The two rectangles like so one of them is the used wrecked.

1377
01:33:06,300 --> 01:33:08,000
One of them is the unused wrecked.

1378
01:33:11,000 --> 01:33:20,200
Don't care about this stuff at all, and, you know, the used rectangle.

1379
01:33:20,200 --> 01:33:30,900
We draw in, you know, yellow or orange or something, I don't know.

1380
01:33:31,700 --> 01:33:35,800
And the use rectangle be drawn green because because we can,

1381
01:33:37,700 --> 01:33:38,400
Something like that.

1382
01:33:41,500 --> 01:33:43,800
Is this not a known thing?

1383
01:33:44,400 --> 01:33:45,000
Probably not.

1384
01:33:47,900 --> 01:33:51,200
Okay, so let's see.

1385
01:33:51,500 --> 01:33:54,100
The split point is not particularly complicated.

1386
01:33:54,100 --> 01:33:57,200
The split point is just a linear blend between the frame wrecked,

1387
01:33:58,500 --> 01:33:59,100
right?

1388
01:33:59,400 --> 01:34:00,800
And what do we call that?

1389
01:34:00,800 --> 01:34:03,000
We have that in our math Ops somewhere here.

1390
01:34:05,200 --> 01:34:05,600
Oops.

1391
01:34:11,200 --> 01:34:12,100
I always forget it.

1392
01:34:12,100 --> 01:34:12,800
Slurp.

1393
01:34:13,900 --> 01:34:14,400
There it is.

1394
01:34:17,800 --> 01:34:19,700
So we want to lurk between the frame.

1395
01:34:19,700 --> 01:34:23,200
Wrecked Min X, and the frame wrecked.

1396
01:34:26,800 --> 01:34:27,900
Max X.

1397
01:34:27,900 --> 01:34:32,800
And we want to do that based on the memory Arena.

1398
01:34:32,800 --> 01:34:37,300
This particular memory Arenas like used to unused if that makes sense.

1399
01:34:38,700 --> 01:34:44,200
So you know a memory Arenas, got a size and a used.

1400
01:34:44,200 --> 01:34:48,100
So we'd say like okay whatever you know.

1401
01:34:51,300 --> 01:34:53,000
Whatever and I'm using in our city for her.

1402
01:34:53,000 --> 01:34:55,200
Because maybe these would be really big values.

1403
01:34:57,100 --> 01:35:02,000
So, whatever this Arenas size is is the total amount that it could

1404
01:35:02,000 --> 01:35:08,000
take and I want to divide out how much we actually abuse so far in it

1405
01:35:08,900 --> 01:35:09,700
you know I'm saying?

1406
01:35:19,400 --> 01:35:24,500
And yeah, and I got to convert that back to a R32 eventually.

1407
01:35:26,200 --> 01:35:26,600
As well.

1408
01:35:26,600 --> 01:35:27,300
I suppose.

1409
01:35:36,700 --> 01:35:43,000
All right, so then we've got just some cleanup to do here.

1410
01:35:50,900 --> 01:35:54,100
And we got to make a storage for these in case we want everyone to

1411
01:35:54,100 --> 01:35:54,900
edit them.

1412
01:35:55,600 --> 01:35:59,300
So what I'll do here is I'm just going to copy these guys and make a

1413
01:35:59,300 --> 01:35:59,800
debug View.

1414
01:36:00,000 --> 01:36:01,100
Arena graph.

1415
01:36:01,700 --> 01:36:06,300
There is no quit the moment for it but you know, there could be

1416
01:36:06,300 --> 01:36:06,900
eventually.

1417
01:36:07,200 --> 01:36:09,700
So here's the arena graph.

1418
01:36:17,100 --> 01:36:19,000
Just have to add that in.

1419
01:36:23,400 --> 01:36:30,300
Like so and then we've got viewing Elements which is an Undeclared.

1420
01:36:30,300 --> 01:36:31,900
Identifier that's correct.

1421
01:36:31,900 --> 01:36:34,100
It is jumped me to there.

1422
01:36:35,100 --> 01:36:41,300
So viewing element is actually presumably just going to come from the

1423
01:36:41,300 --> 01:36:44,100
element that were actually on right now.

1424
01:36:44,400 --> 01:36:48,000
So this is probably just element, right?

1425
01:36:51,600 --> 01:36:54,800
So yeah, so now we have the ability to put one of those things in

1426
01:36:54,800 --> 01:36:55,000
there.

1427
01:36:55,000 --> 01:36:59,800
So maybe we start off by saying inside here, where we have, like,

1428
01:36:59,800 --> 01:37:05,500
where we put the profile, you know, I'm going to put debug data block

1429
01:37:06,500 --> 01:37:08,300
and inside here.

1430
01:37:08,300 --> 01:37:10,700
We'll just put one of these UI elements.

1431
01:37:10,700 --> 01:37:16,600
In the UI element is going to be debug Type R, Enoch b c and that's

1432
01:37:17,100 --> 01:37:18,300
the arena.

1433
01:37:19,800 --> 01:37:24,400
Or something and we've got two of these.

1434
01:37:25,700 --> 01:37:29,500
So actually, that needs to take a data member, right?

1435
01:37:29,500 --> 01:37:31,400
It's actually debug value.

1436
01:37:31,600 --> 01:37:36,300
Now that I think about it, it's actually a debug value here.

1437
01:37:36,800 --> 01:37:41,500
And these are the two Arenas that we have.

1438
01:37:42,000 --> 01:37:42,900
So,

1439
01:37:50,400 --> 01:37:53,100
I guess we actually want to come down here and make sure that

1440
01:37:53,100 --> 01:37:54,700
everything is initialized.

1441
01:37:55,100 --> 01:38:00,200
And then once it is, when we get down here then I might say here is

1442
01:38:00,200 --> 01:38:03,300
the memory after all initialization happens.

1443
01:38:03,300 --> 01:38:03,700
Oops.

1444
01:38:05,600 --> 01:38:07,900
And then I need to just output these two Arenas.

1445
01:38:07,900 --> 01:38:13,500
So we have the memory and I want to Output the translate Train Arena.

1446
01:38:13,800 --> 01:38:15,200
That's the transient Arena.

1447
01:38:15,500 --> 01:38:19,800
And I want to do the gamestate /.

1448
01:38:19,800 --> 01:38:20,400
Marina.

1449
01:38:24,700 --> 01:38:25,900
Or whatever it's called.

1450
01:38:33,800 --> 01:38:36,500
So, we've got a motor Arena and audio Arena.

1451
01:38:37,500 --> 01:38:39,100
And the transient Arena.

1452
01:38:40,100 --> 01:38:40,700
Right.

1453
01:38:51,500 --> 01:38:52,200
All right.

1454
01:38:53,600 --> 01:38:55,100
Oh, and by the way, this is what someone's talking about.

1455
01:38:55,100 --> 01:38:59,200
It does see how it shows you the possible matches or whatever so

1456
01:38:59,200 --> 01:38:59,800
that's all good.

1457
01:39:00,600 --> 01:39:05,700
Anyway so if I then go into debug interface and I add the ability to

1458
01:39:05,700 --> 01:39:11,000
print these out so something that actually knows what one of those is

1459
01:39:12,400 --> 01:39:13,600
good going here.

1460
01:39:13,600 --> 01:39:14,900
So there's a memory Arena.

1461
01:39:29,600 --> 01:39:35,900
We go value memory arena is not true.

1462
01:39:35,900 --> 01:39:36,700
It's not

1463
01:39:39,500 --> 01:39:41,600
Forgot my convention for all of this.

1464
01:39:42,400 --> 01:39:42,900
Here we go.

1465
01:39:45,900 --> 01:39:49,200
Cannot convert member Arena to memory in a star.

1466
01:39:50,100 --> 01:39:51,600
There's a reason for that.

1467
01:39:51,600 --> 01:39:55,300
It's because I didn't type it into star because I messed up.

1468
01:39:56,400 --> 01:39:59,700
So, actually, I want this to be that.

1469
01:40:01,000 --> 01:40:04,700
although, I don't know if that's actually going to work here, so

1470
01:40:07,300 --> 01:40:08,300
Hmm.

1471
01:40:08,700 --> 01:40:10,100
Yeah, that's unfortunate.

1472
01:40:10,300 --> 01:40:13,300
That basically means I need 20 most I need to use like Hungarian

1473
01:40:13,300 --> 01:40:16,500
tation because memory arena is going to have to take a pointer to it.

1474
01:40:16,600 --> 01:40:20,400
So it's basically like a memory Arena pointer if that makes sense,

1475
01:40:22,000 --> 01:40:25,800
which is kind of annoying because there's no, yeah, that's just the

1476
01:40:26,200 --> 01:40:29,100
again, the see Miss of it all being super annoying.

1477
01:40:33,200 --> 01:40:36,000
So not a huge deal but just kind of annoying because I have to do

1478
01:40:36,000 --> 01:40:36,600
typedef

1479
01:40:36,800 --> 01:40:40,000
Memory Arena, star memory Arena P.

1480
01:40:40,300 --> 01:40:41,900
Like I have to be able to do that.

1481
01:40:41,900 --> 01:40:43,700
Otherwise it's not going to know.

1482
01:40:45,800 --> 01:40:49,100
It can't do all of its automatic type stuff that we had to push

1483
01:40:49,100 --> 01:40:51,700
through the macrosystem because that's what we had to work with.

1484
01:40:53,800 --> 01:40:55,400
So yeah.

1485
01:41:03,000 --> 01:41:05,000
So, there should be one of those now.

1486
01:41:06,400 --> 01:41:08,800
Do you bug value set the event data?

1487
01:41:12,800 --> 01:41:16,800
And there should be a memory in a pea and I would think it should have

1488
01:41:16,800 --> 01:41:18,500
been able to find that.

1489
01:41:23,100 --> 01:41:24,200
Yet, I don't see it.

1490
01:41:30,300 --> 01:41:36,800
Ah, because it needs to take an address that is why and I did not take

1491
01:41:36,800 --> 01:41:37,300
an address.

1492
01:41:37,300 --> 01:41:40,200
So this should be here here and here.

1493
01:41:41,800 --> 01:41:42,600
There we go.

1494
01:41:42,600 --> 01:41:43,300
I don't know why.

1495
01:41:43,300 --> 01:41:46,000
There's a double Ampersand happening there.

1496
01:41:47,300 --> 01:41:49,400
Did I mess up something in debug value.

1497
01:41:49,400 --> 01:41:50,500
Let's double-check.

1498
01:41:54,700 --> 01:41:57,800
Where where would that be?

1499
01:42:00,200 --> 01:42:01,200
Value.

1500
01:42:06,900 --> 01:42:08,300
So, this needs to be wrapped.

1501
01:42:14,300 --> 01:42:15,300
And I think that's it.

1502
01:42:17,200 --> 01:42:21,400
So what requires an l-value.

1503
01:42:21,700 --> 01:42:22,100
Okay?

1504
01:42:22,100 --> 01:42:26,100
So it doesn't want that doesn't want to take the address of that,

1505
01:42:26,300 --> 01:42:28,400
which I can understand because

1506
01:42:30,000 --> 01:42:35,100
you're not really allowed to to take the address of the pointer in

1507
01:42:35,100 --> 01:42:35,700
that way.

1508
01:42:35,900 --> 01:42:40,400
Like we don't usually generally sinks pointers for this reason.

1509
01:42:41,000 --> 01:42:41,500
But

1510
01:42:47,500 --> 01:42:49,500
Yeah, I guess we could say.

1511
01:43:00,300 --> 01:43:01,900
This is not editable.

1512
01:43:03,000 --> 01:43:03,400
Oops.

1513
01:43:06,300 --> 01:43:09,700
We could just say leave it as is.

1514
01:43:14,600 --> 01:43:16,600
Although that's not going to work either because we do it.

1515
01:43:16,600 --> 01:43:18,500
We do dereference it up here.

1516
01:43:20,800 --> 01:43:24,200
So I'm not sure I'm really not sure of a good way to make that work.

1517
01:43:24,300 --> 01:43:25,600
I mean, I guess what I could do.

1518
01:43:25,600 --> 01:43:28,900
Since it's only one with one timer, we do it here.

1519
01:43:31,900 --> 01:43:34,300
I could do something where I say,

1520
01:43:41,100 --> 01:43:41,700
That.

1521
01:43:43,900 --> 01:43:48,100
And again, this stuff is all this is all just super annoying nonsense.

1522
01:43:48,900 --> 01:43:52,100
This is just because C++ gives a lousy language.

1523
01:43:53,000 --> 01:43:57,300
So it's not like this is actually anything that you would ordinarily

1524
01:43:57,300 --> 01:43:58,700
care about doing it.

1525
01:43:58,700 --> 01:44:02,100
Just when you try to actually do stuff that compiles out and stuff

1526
01:44:02,100 --> 01:44:06,000
like that, or that does automatic type determination, see either you

1527
01:44:06,000 --> 01:44:09,900
go into template land where nothing ever works correctly, because when

1528
01:44:09,900 --> 01:44:12,800
you get down to the last part of it, there's something you can't make

1529
01:44:12,800 --> 01:44:13,000
work.

1530
01:44:13,200 --> 01:44:18,300
Early or you go macros, which will eventually work properly, but are

1531
01:44:18,300 --> 01:44:20,400
super ugly anyway.

1532
01:44:21,400 --> 01:44:23,300
So let's see.

1533
01:44:23,400 --> 01:44:26,600
This is value memory Arena p.

1534
01:44:28,100 --> 01:44:29,900
And now we actually have the memory Rina.

1535
01:44:31,100 --> 01:44:38,100
So when we were drawing the arena occupancy, this is the default, I

1536
01:44:38,100 --> 01:44:39,800
guess, for one of these things.

1537
01:44:47,600 --> 01:44:48,400
and,

1538
01:44:51,300 --> 01:44:57,200
I guess we could even sort of take a cue from this bit right here and

1539
01:44:57,200 --> 01:44:58,400
say, like, okay,

1540
01:45:06,100 --> 01:45:06,900
Occupancy.

1541
01:45:17,900 --> 01:45:22,300
And if I run this now in theory, we should have like a memory thing

1542
01:45:23,400 --> 01:45:26,400
and it's got our Arenas in it which is fine.

1543
01:45:26,700 --> 01:45:29,900
And if I say that, I want to see the occupancy for something

1544
01:45:33,400 --> 01:45:35,400
We should be able to actually see what it is.

1545
01:45:35,400 --> 01:45:37,800
Now I probably should print out the name of these things because

1546
01:45:37,800 --> 01:45:42,200
otherwise we're not be able to see what's happening in any of them.

1547
01:45:44,700 --> 01:45:49,100
So there's that, obviously, but now we sort of have the basics of

1548
01:45:49,100 --> 01:45:52,900
drawing an arena and we could we're kind of way over time at this

1549
01:45:52,900 --> 01:45:53,500
point.

1550
01:45:54,000 --> 01:45:58,900
But this is, you know, the basics of how that would happen.

1551
01:45:59,400 --> 01:46:01,400
So, in a particular Arena,

1552
01:46:03,900 --> 01:46:06,500
Which honestly don't know that we even need to quite do it this way.

1553
01:46:06,500 --> 01:46:09,600
There's probably some other way things we could do up to think about

1554
01:46:09,600 --> 01:46:10,400
how we should do that.

1555
01:46:10,400 --> 01:46:11,700
Maybe we can do that tomorrow.

1556
01:46:11,900 --> 01:46:16,300
If this is something that interests people, but the debugger Arenas in

1557
01:46:16,300 --> 01:46:17,700
general, when we draw them,

1558
01:46:19,800 --> 01:46:24,300
I would like to be able to see what the name of that Arena was Hoops,

1559
01:46:26,600 --> 01:46:29,100
so where we were doing that.

1560
01:46:35,700 --> 01:46:36,200
Here we go.

1561
01:46:39,000 --> 01:46:43,200
So where we were doing that here, I might want to do like just a label

1562
01:46:43,200 --> 01:46:45,900
sort of a thing where we do.

1563
01:46:50,300 --> 01:46:53,100
Whatever the name of this guy is so the element.

1564
01:46:55,300 --> 01:47:00,000
Name starts at I think orser, is it get name?

1565
01:47:01,600 --> 01:47:04,000
if there was a get name or something like that,

1566
01:47:05,000 --> 01:47:06,200
Yeah, it's just get name.

1567
01:47:07,500 --> 01:47:10,300
So if you want to print out the name of this element, so we can tell

1568
01:47:10,300 --> 01:47:11,100
what it is.

1569
01:47:13,700 --> 01:47:16,600
We could do that in the same way that we were doing the other things

1570
01:47:16,600 --> 01:47:17,000
here.

1571
01:47:17,300 --> 01:47:22,500
And so if I take, for example, the Boolean button code, what I want to

1572
01:47:22,500 --> 01:47:23,300
do is make one of these.

1573
01:47:23,300 --> 01:47:27,000
That actually doesn't do anything, so there's no interaction, but it

1574
01:47:27,000 --> 01:47:28,200
can print out a label.

1575
01:47:28,300 --> 01:47:29,800
So it prints out the name.

1576
01:47:30,700 --> 01:47:32,100
There's no interaction here.

1577
01:47:32,100 --> 01:47:33,900
I don't know, do we have a null interaction?

1578
01:47:35,700 --> 01:47:36,000
No.

1579
01:47:45,700 --> 01:47:50,600
Do now and then we do the basic text element, I'm thinking more like,

1580
01:47:50,600 --> 01:47:56,500
yeah, there's none of that stuff and it's always white, like there's

1581
01:47:56,500 --> 01:47:58,700
no highlighting to it or anything.

1582
01:47:59,000 --> 01:47:59,800
So it's just

1583
01:48:00,500 --> 01:48:01,400
White all the time.

1584
01:48:06,200 --> 01:48:06,500
Yeah.

1585
01:48:08,400 --> 01:48:11,100
It's white all the time like Donald Trump's America.

1586
01:48:11,100 --> 01:48:11,400
Okay.

1587
01:48:11,400 --> 01:48:15,100
So label and an entire not found, that's because I didn't change the

1588
01:48:15,100 --> 01:48:16,500
name of this but I should have.

1589
01:48:17,400 --> 01:48:20,900
And now in theory like you can see which one of these are, there's the

1590
01:48:20,900 --> 01:48:26,700
motor Arena, there's the audio Arena, there's the transient Arena, and

1591
01:48:26,700 --> 01:48:30,100
so we would have to start doing now is like recording, what gets

1592
01:48:30,500 --> 01:48:34,600
allocated in those and actually laying them out, which we could do.

1593
01:48:34,600 --> 01:48:35,800
And maybe we'll do that tomorrow.

1594
01:48:35,800 --> 01:48:38,000
If that's something that people want to see, it's not

1595
01:48:38,300 --> 01:48:38,900
Hard.

1596
01:48:39,100 --> 01:48:39,600
Probably.

1597
01:48:39,600 --> 01:48:45,600
What we'll do is we would actually have the Arena's become their own

1598
01:48:45,600 --> 01:48:48,900
debug elements, then we just store the allocation events probably

1599
01:48:48,900 --> 01:48:53,700
inside them, I would suspect, but yeah.

1600
01:48:57,000 --> 01:49:01,000
There is a little bit of nuance to it because unlike other things,

1601
01:49:01,300 --> 01:49:08,800
these Arenas, they they have like stuff that gets pushed and popped.

1602
01:49:08,800 --> 01:49:12,600
So we would probably actually keep.

1603
01:49:12,600 --> 01:49:17,700
We wouldn't flush their stored event information over time, we would

1604
01:49:17,700 --> 01:49:19,000
probably keep it.

1605
01:49:21,600 --> 01:49:23,000
And so that would be a little bit.

1606
01:49:24,000 --> 01:49:25,100
A little bit different.

1607
01:49:26,700 --> 01:49:27,400
Thanks sense.

1608
01:50:07,600 --> 01:50:10,200
It's like there were no other questions during that time that I can

1609
01:50:10,200 --> 01:50:11,100
see.

1610
01:50:17,800 --> 01:50:18,100
Yeah.

1611
01:50:20,400 --> 01:50:20,900
All right.

1612
01:50:24,100 --> 01:50:27,800
Um so yeah, I'm going to close down for now because I want to have

1613
01:50:27,800 --> 01:50:28,300
some food.

1614
01:50:28,300 --> 01:50:33,500
I'm hungry so I'm going to stop for the day.

1615
01:50:33,800 --> 01:50:35,900
Thanks everyone for joining me for this episode of handmade.

1616
01:50:35,900 --> 01:50:36,900
He wrote some pleasure coding with you.

1617
01:50:36,900 --> 01:50:40,100
As always, if you want to follow along at home you can always

1618
01:50:40,100 --> 01:50:42,500
pre-order the game on handmade here at or it comes to the source code

1619
01:50:42,500 --> 01:50:45,100
so you can play around with it and learn from it.

1620
01:50:45,800 --> 01:50:49,100
We also have a forum so you can go to ask questions and that Forum

1621
01:50:49,100 --> 01:50:50,800
will be going down this weekend.

1622
01:50:50,800 --> 01:50:53,500
I mistakenly said it was going down last weekend, but I was then told

1623
01:50:53,500 --> 01:50:53,600
that

1624
01:50:53,700 --> 01:50:54,600
It was not last weekend.

1625
01:50:54,600 --> 01:50:55,600
It's this coming weekend.

1626
01:50:59,500 --> 01:50:59,700
This.

1627
01:51:00,000 --> 01:51:00,600
Weekend.

1628
01:51:01,600 --> 01:51:05,100
The handmade Network people are going to take it over on their server.

1629
01:51:06,300 --> 01:51:08,600
Because honestly, I don't like administering for him, so I'm happy to

1630
01:51:08,600 --> 01:51:13,300
have them go somewhere else, so that will be happening this weekend

1631
01:51:13,300 --> 01:51:15,200
and they'll be down for a while while that's happening.

1632
01:51:15,200 --> 01:51:17,300
But hopefully next week, they'll be up and back.

1633
01:51:17,800 --> 01:51:20,700
We have a patreon page transport the video series, it's always much

1634
01:51:20,700 --> 01:51:21,500
appreciated.

1635
01:51:21,600 --> 01:51:24,000
We also have a tweet bot, the tweets, the schedule at you.

1636
01:51:25,000 --> 01:51:27,500
Now, with Unix startup script magic.

1637
01:51:27,500 --> 01:51:29,300
So it actually will always come back up.

1638
01:51:29,300 --> 01:51:32,700
Even if the server gets rebooted and that's about it.

1639
01:51:32,800 --> 01:51:34,700
I'll be back here tomorrow.

1640
01:51:34,700 --> 01:51:35,200
5:00 p.m.

1641
01:51:35,200 --> 01:51:36,000
Pacific Daylight Time.

1642
01:51:36,100 --> 01:51:39,500
Time for some more, handmade hero, fun.

1643
01:51:39,900 --> 01:51:42,700
And hope to see you here, until then have fun programming.

1644
01:51:42,700 --> 01:51:44,200
I'll see you guys on the it, take it easy.

