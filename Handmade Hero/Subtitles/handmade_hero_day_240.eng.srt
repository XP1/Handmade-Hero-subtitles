1
00:00:02,200 --> 00:00:06,400
Hello everyone and welcome to handmade hero.

2
00:00:06,800 --> 00:00:10,900
This is the show where normally we could complete game from scratch

3
00:00:10,900 --> 00:00:13,500
live on stream at 5 p.m.

4
00:00:13,500 --> 00:00:15,600
but today, we're doing at 8:30 p.m.

5
00:00:15,600 --> 00:00:19,900
so, it's a weird time and I may just fall straight asleep in the

6
00:00:19,900 --> 00:00:20,400
middle of the stream.

7
00:00:20,400 --> 00:00:23,800
So, maybe like we're typing in the code, we're typing in the code word

8
00:00:23,800 --> 00:00:24,800
and then I just fell asleep.

9
00:00:25,300 --> 00:00:25,800
It could happen.

10
00:00:25,800 --> 00:00:26,400
You never know.

11
00:00:27,800 --> 00:00:30,600
So anyway, where we left?

12
00:00:30,700 --> 00:00:35,900
Things off yesterday is I talked about wanting to do a little bit of a

13
00:00:35,900 --> 00:00:41,300
modification to the way in which the renderer was sort of integrated

14
00:00:41,300 --> 00:00:46,100
into the platform code and I outlined basically what that was going to

15
00:00:46,100 --> 00:00:46,400
be.

16
00:00:46,900 --> 00:00:51,300
For those of you who may not, remember really what I wanted to do was

17
00:00:51,300 --> 00:00:55,800
make it so that the game itself doesn't call out into the opengl.

18
00:00:55,800 --> 00:00:59,700
Renderer the game just produces a buffer of instructions for the

19
00:00:59,700 --> 00:01:00,500
opengl code.

20
00:01:00,700 --> 00:01:03,300
And then the opengl code does its thing.

21
00:01:04,300 --> 00:01:05,600
That's what I wanted to do.

22
00:01:08,100 --> 00:01:10,100
And today, we're going to go ahead and do that.

23
00:01:11,400 --> 00:01:13,200
Not very complicated, right?

24
00:01:13,200 --> 00:01:15,900
It's not a particularly weird thing to want to do.

25
00:01:17,100 --> 00:01:21,400
So hopefully it's it's something that you guys will just be like.

26
00:01:21,400 --> 00:01:23,200
Oh yeah, right I see what's going on.

27
00:01:23,200 --> 00:01:23,800
No problem.

28
00:01:24,500 --> 00:01:25,800
So today is day, 2, 30?

29
00:01:25,800 --> 00:01:28,800
No, it's not days to 40.

30
00:01:30,000 --> 00:01:34,300
And so if you want to follow along at home, use the day 239, source

31
00:01:34,300 --> 00:01:34,800
code.

32
00:01:35,700 --> 00:01:39,200
And and that's where I'm, that's where I'm at.

33
00:01:40,200 --> 00:01:43,000
Okay, so let's go ahead and bring the game back up here.

34
00:01:43,700 --> 00:01:48,600
Right now, we basically have everything working through opengl but we

35
00:01:48,600 --> 00:01:52,900
don't actually have things working correctly through open jail.

36
00:01:53,600 --> 00:01:57,400
There's obviously the architectural change that I wanted to make but

37
00:01:57,400 --> 00:02:00,300
there's also the other thing I mentioned, which is our textures or not

38
00:02:00,300 --> 00:02:03,100
working properly at the moment, meaning, we don't download them in the

39
00:02:03,100 --> 00:02:04,400
way that we might want.

40
00:02:04,700 --> 00:02:08,699
So there's a bunch of opengl stuff that we want to be able to do that.

41
00:02:08,699 --> 00:02:09,800
We're not doing at the moment.

42
00:02:10,000 --> 00:02:10,500
Mint.

43
00:02:10,800 --> 00:02:13,900
And and so we have more opengl work to do.

44
00:02:14,000 --> 00:02:19,100
But before we do any more of that I wanted to take care of this aspect

45
00:02:19,100 --> 00:02:20,000
of it first,

46
00:02:21,300 --> 00:02:25,000
All right, so let's go ahead and do that.

47
00:02:27,000 --> 00:02:28,400
See how we need to do that.

48
00:02:28,700 --> 00:02:32,000
So what I want to be able to do here is I want to be able to carry a

49
00:02:32,000 --> 00:02:37,100
single render group kind of all the way through for the entirety of

50
00:02:37,100 --> 00:02:38,800
the process that needs to happen.

51
00:02:39,300 --> 00:02:42,600
And so if you take a look at what goes on here, like for example, in

52
00:02:42,600 --> 00:02:43,200
debug

53
00:02:46,100 --> 00:02:46,900
Oh, that's interesting.

54
00:02:47,500 --> 00:02:49,000
I guess I pulled that out.

55
00:02:49,100 --> 00:02:53,000
Well, you know what, good for me if you take a look at what's happens

56
00:02:53,000 --> 00:02:57,900
here in debug game frame and you can see that inside here, we actually

57
00:02:57,900 --> 00:02:59,400
do a bunch of stuff.

58
00:03:00,500 --> 00:03:04,700
With our actual rendering in the, in the debug code, right?

59
00:03:05,100 --> 00:03:10,700
And so right now, we actually create and Destroy two, different D, two

60
00:03:10,700 --> 00:03:15,200
different, render groups, essentially one that renders, the game and

61
00:03:15,200 --> 00:03:16,500
one that renders the debug group.

62
00:03:16,500 --> 00:03:19,800
Right now, they both that's all controlled inside the game.

63
00:03:20,200 --> 00:03:23,800
So what I'd like to move to is something we're all of these actually

64
00:03:23,800 --> 00:03:27,800
just take a render group in and do their rendering through the render

65
00:03:27,800 --> 00:03:30,000
group and the render group comes from the platform.

66
00:03:31,600 --> 00:03:35,100
So that, that way, I don't have this thing with the game calling out

67
00:03:35,100 --> 00:03:38,100
to opengl, which is what it's, you know, what it was doing.

68
00:03:38,700 --> 00:03:39,000
Yeah.

69
00:03:40,000 --> 00:03:42,500
All right, so let's take a look at how we might do that.

70
00:03:42,500 --> 00:03:47,400
So first of all inside handmade platform.sh, where we include our

71
00:03:47,400 --> 00:03:54,300
stuff, we would need to start having our handmade our rent, handmade

72
00:03:54,300 --> 00:03:57,600
render group stuff would have to be sort of known to the platform

73
00:03:57,600 --> 00:04:00,100
layer if that makes sense in at least some

74
00:04:00,200 --> 00:04:02,100
Some some limited capacity.

75
00:04:02,800 --> 00:04:07,700
We can start this in something in a way that's not to ownerÃ­s, right?

76
00:04:08,000 --> 00:04:12,900
We can start this by saying, well, you know, when we call through, you

77
00:04:12,900 --> 00:04:15,700
know, to the, to the game here, and we pass in, right?

78
00:04:15,700 --> 00:04:19,100
Because here's our game update and repress, the the game memory, the

79
00:04:19,100 --> 00:04:23,000
game input, and we pass this game off-screen buffer, right?

80
00:04:23,300 --> 00:04:27,200
What we can do is say, let's go ahead and take that game off stream

81
00:04:27,200 --> 00:04:30,100
buffer out of the picture, right?

82
00:04:30,200 --> 00:04:31,800
Let's, let's pull that back.

83
00:04:32,100 --> 00:04:32,800
If that makes sense.

84
00:04:37,000 --> 00:04:39,700
And this is a very simple change was going to take awhile to make

85
00:04:40,200 --> 00:04:43,500
because it happens to sort of be in everything appear to have gotten

86
00:04:43,500 --> 00:04:49,400
like, a, i got water on my glasses, let's see if I can get that off.

87
00:04:51,700 --> 00:04:54,600
I drank a little too vigorously from the water bottle.

88
00:04:54,900 --> 00:04:55,700
It would appear.

89
00:04:57,100 --> 00:05:02,300
Much better, okay, so if I want to get rid of that and replace it with

90
00:05:02,300 --> 00:05:05,700
something else, you know, and game off-screen buffer.

91
00:05:05,700 --> 00:05:09,300
Essentially is the thing that now I would be replacing, I would

92
00:05:09,300 --> 00:05:13,600
replacing that with a instead of, instead of looking like this, where

93
00:05:13,600 --> 00:05:16,600
we say what the pixels are and all that stuff, I would be replacing

94
00:05:16,600 --> 00:05:17,800
this essentially with

95
00:05:18,900 --> 00:05:21,500
That game render group, right?

96
00:05:21,500 --> 00:05:24,600
So the render group would actually be what I would be passing in.

97
00:05:25,200 --> 00:05:29,600
And so, let's just start by making that change and we'll see how it

98
00:05:29,600 --> 00:05:31,300
goes so game.

99
00:05:31,300 --> 00:05:35,100
And you can see right here, render rendering specifically will become

100
00:05:35,100 --> 00:05:35,900
a three-tier distraction.

101
00:05:35,900 --> 00:05:38,000
That's exactly what we're sort of doing that, right?

102
00:05:38,000 --> 00:05:40,900
We already sort of started to introduce that with the opengl side of

103
00:05:40,900 --> 00:05:41,300
things.

104
00:05:41,500 --> 00:05:44,700
So this to do is actually exactly what we're doing right now.

105
00:05:45,800 --> 00:05:47,600
So let's just take this one step at a time.

106
00:05:47,600 --> 00:05:48,100
Here's game.

107
00:05:48,100 --> 00:05:49,100
Off-screen buffer.

108
00:05:49,400 --> 00:05:51,900
I'm going to go down here and I'm going to replace that.

109
00:05:51,900 --> 00:05:54,800
And I'm just going to say that we're going to pass render group.

110
00:05:57,600 --> 00:05:58,900
and so, this right here,

111
00:06:03,900 --> 00:06:06,400
The render group itself is exactly what we're passing.

112
00:06:06,400 --> 00:06:07,700
So we're passing this thing in.

113
00:06:08,200 --> 00:06:08,600
Okay?

114
00:06:09,400 --> 00:06:10,900
So let's go ahead and do that.

115
00:06:11,900 --> 00:06:13,600
And now we can sort of see that.

116
00:06:13,600 --> 00:06:16,100
Well, the buffer actually we should probably not call Buffer.

117
00:06:16,100 --> 00:06:17,100
Let's call it render group.

118
00:06:18,500 --> 00:06:23,100
So, so now we have this sort of stuff where we've got the, you know,

119
00:06:23,100 --> 00:06:25,400
widths and Heights in those sort of things that are being dealt with

120
00:06:25,400 --> 00:06:26,000
in here.

121
00:06:26,800 --> 00:06:30,100
And I want to just get rid of those, for the time being I'm going to,

122
00:06:30,100 --> 00:06:31,300
I'm going to get rid of the test drive.

123
00:06:31,800 --> 00:06:34,400
We're drop by 4 size because I don't really care about that.

124
00:06:34,400 --> 00:06:36,200
The moment, we can always add that back in.

125
00:06:36,200 --> 00:06:38,900
We're doing more in stuff later and we don't have to care now about

126
00:06:38,900 --> 00:06:41,600
any of this stuff, either write all of this stuff.

127
00:06:41,700 --> 00:06:42,500
Go away as well.

128
00:06:43,900 --> 00:06:48,000
All right, we don't need to do our render group allocation, either

129
00:06:48,600 --> 00:06:52,500
that can now, again, move outside to win32 handmade.

130
00:06:52,700 --> 00:06:59,300
So, when we do update and render in here, right?

131
00:06:59,400 --> 00:07:03,400
When we do game update and render, we can do the allocate render group

132
00:07:03,400 --> 00:07:05,200
stuff at that point, right?

133
00:07:05,200 --> 00:07:10,400
So we can say, all right, let's go ahead and take this out and we'll,

134
00:07:10,400 --> 00:07:12,200
you know, we'll put in our sort of

135
00:07:13,700 --> 00:07:14,200
Just up there.

136
00:07:14,200 --> 00:07:16,900
So maybe we'd put that, I'm not sure exactly where we'd want to put

137
00:07:16,900 --> 00:07:17,400
that.

138
00:07:17,500 --> 00:07:20,200
Maybe we'd put that in here perhaps.

139
00:07:20,400 --> 00:07:23,600
I'm not 100% certain where we would want to put it.

140
00:07:23,600 --> 00:07:24,000
Exactly.

141
00:07:24,000 --> 00:07:27,500
But it would it would come out somewhere here, I guess, to be honest,

142
00:07:27,600 --> 00:07:31,600
you know, maybe since we have two, we're going to have to do routing

143
00:07:31,600 --> 00:07:33,500
for like the assets and stuff like that.

144
00:07:33,900 --> 00:07:34,200
Really?

145
00:07:34,200 --> 00:07:38,600
What we probably will have to do is make it so that the game can give

146
00:07:38,600 --> 00:07:41,700
us back kids sort of

147
00:07:44,200 --> 00:07:44,600
Well.

148
00:07:46,100 --> 00:07:51,200
I guess, what I mean is, we are going to need some way for the game to

149
00:07:51,200 --> 00:07:55,100
participate in this process, in a way that isn't quite fully.

150
00:07:56,400 --> 00:07:59,400
Not owning the render group because we don't want to move all of this

151
00:07:59,400 --> 00:07:59,900
stuff out.

152
00:07:59,900 --> 00:08:03,100
We only want just a render group so it's going to take us a little

153
00:08:03,100 --> 00:08:08,300
while to again to massage it into a place where these two pieces are

154
00:08:08,300 --> 00:08:09,300
no longer.

155
00:08:10,500 --> 00:08:13,800
You know are essentially abstracted away, right?

156
00:08:14,700 --> 00:08:15,200
Because

157
00:08:15,900 --> 00:08:19,900
Asset part where we call into the render group, that part is sort of

158
00:08:19,900 --> 00:08:22,800
going to have to call through to something.

159
00:08:24,300 --> 00:08:27,700
And as I'm saying it, I feel like maybe that means we should name this

160
00:08:27,700 --> 00:08:31,900
something different, if that makes sense.

161
00:08:32,200 --> 00:08:36,500
Like we could this we might be able to make this easier on ourselves

162
00:08:36,700 --> 00:08:41,100
by saying that really this just the push buffer, part is going to be

163
00:08:41,100 --> 00:08:42,900
out here if that makes sense.

164
00:08:43,299 --> 00:08:49,100
And the render group just takes that push buffer when it is actually

165
00:08:49,100 --> 00:08:51,000
going to start rendering, right?

166
00:08:51,000 --> 00:08:52,300
So it's more like this.

167
00:08:55,900 --> 00:08:59,400
that seems like a saner because I don't want to have to get the

168
00:09:00,000 --> 00:09:00,600
Stuff.

169
00:09:00,700 --> 00:09:04,200
I don't want to have to pull all that out that seems like it's just

170
00:09:04,200 --> 00:09:06,700
going to be a huge pain and it does there's no benefit to it.

171
00:09:06,700 --> 00:09:08,700
It would actually just make things worse, I think.

172
00:09:09,200 --> 00:09:12,400
And so, I think what I really want to do here is actually have a thing

173
00:09:12,400 --> 00:09:18,600
called a like platform or game, push buffer or game render buffer,

174
00:09:19,000 --> 00:09:19,800
something like that.

175
00:09:20,300 --> 00:09:29,800
Game render commands, I don't know, commands commands.

176
00:09:30,000 --> 00:09:31,100
Something like that.

177
00:09:31,100 --> 00:09:31,800
Let's say.

178
00:09:33,600 --> 00:09:38,100
And so then up here, where we're talking about the game output, buffer

179
00:09:38,100 --> 00:09:40,600
stuff the game off stream, buffer stuff, right?

180
00:09:41,600 --> 00:09:44,900
What I could do is say, like, okay, we've got a game render commands

181
00:09:44,900 --> 00:09:47,800
thing and that can still have the width and the height, then it

182
00:09:47,800 --> 00:09:48,500
potentially.

183
00:09:48,900 --> 00:09:53,400
But then it's going to have the part here for the render group where

184
00:09:53,400 --> 00:09:58,100
it had like this stuff where the push buffer information was so all of

185
00:09:58,100 --> 00:10:02,700
the stuff that was for the push buffer, that all comes over here.

186
00:10:03,800 --> 00:10:07,400
But everything else can stay on the other side, right?

187
00:10:07,400 --> 00:10:09,300
In the game where it probably belongs.

188
00:10:12,000 --> 00:10:13,600
And that seems like a better idea to me.

189
00:10:15,300 --> 00:10:15,700
Right.

190
00:10:16,700 --> 00:10:18,700
So there's our game render commands.

191
00:10:18,700 --> 00:10:22,400
That seems like a better way to go there, so I'm going to leave it

192
00:10:22,400 --> 00:10:23,300
like that.

193
00:10:23,500 --> 00:10:25,800
And then here will create one of those.

194
00:10:25,800 --> 00:10:29,500
So we have one of these game render commands things, right?

195
00:10:33,600 --> 00:10:36,800
And this will just be like allocate render commands and it just

196
00:10:36,800 --> 00:10:39,200
doesn't need most of this stuff, right?

197
00:10:39,200 --> 00:10:44,000
So it doesn't need any of this stuff and really I guess when we do

198
00:10:44,000 --> 00:10:46,600
allocate render commands probably this should be something that's in

199
00:10:46,600 --> 00:10:48,200
the platform layer itself.

200
00:10:48,300 --> 00:10:50,400
So maybe that's even something that's

201
00:10:52,200 --> 00:10:57,000
That might even be something that we kind of want to handle

202
00:10:57,000 --> 00:10:59,200
separately, so it may be like that.

203
00:10:59,200 --> 00:11:03,100
It's actually like, okay, we get render commands and we just do

204
00:11:03,100 --> 00:11:06,500
something like, okay, we have a render commands, we say initialise

205
00:11:06,700 --> 00:11:12,300
render commands, and we just say, like, okay that's, that's going to

206
00:11:12,300 --> 00:11:16,600
take, however, big the render commands are and I did and well, that's

207
00:11:16,600 --> 00:11:18,700
probably, that's probably it.

208
00:11:19,000 --> 00:11:20,600
So be something like this.

209
00:11:22,600 --> 00:11:24,600
Where we'd say, like initialise these guys?

210
00:11:30,100 --> 00:11:33,600
And we're going to need some memory, so we'd have something like you

211
00:11:33,600 --> 00:11:41,300
know, render command sighs or maybe push buffer size.

212
00:11:43,800 --> 00:11:44,500
and,

213
00:11:45,800 --> 00:11:52,800
Push buffer, and that would do something like this would be a virtual

214
00:11:52,800 --> 00:11:53,600
Alec here.

215
00:11:54,500 --> 00:11:56,900
And I do this push buffer size,

216
00:12:00,300 --> 00:12:00,900
Right?

217
00:12:01,000 --> 00:12:04,400
And that would just be something where we pass the stuff that we know

218
00:12:04,400 --> 00:12:05,700
that we actually need.

219
00:12:05,800 --> 00:12:08,200
For example, here's the game off-screen, buffer stuff.

220
00:12:08,500 --> 00:12:11,900
And so maybe we pass these guys as well, right.

221
00:12:11,900 --> 00:12:19,500
So in here, we have these and so now we know that this thing can be

222
00:12:19,500 --> 00:12:23,300
initialized in a particular Way by feed forwarding, you know, feeding

223
00:12:23,300 --> 00:12:26,400
forward, the information that we have there and maybe that's just the

224
00:12:26,400 --> 00:12:28,300
thing right here.

225
00:12:28,600 --> 00:12:30,000
That's like a nice little in line.

226
00:12:30,800 --> 00:12:35,100
Any any platform layer who wants to implement this can do?

227
00:12:36,200 --> 00:12:40,300
Okay, so there's the end, I guess we sort of said here.

228
00:12:42,000 --> 00:12:45,500
If this has to be you 32, so I guess we're talking about something

229
00:12:45,500 --> 00:12:46,000
smaller.

230
00:12:46,000 --> 00:12:48,800
It's got to be what we smaller, which, I guess makes sense.

231
00:12:49,300 --> 00:12:49,500
All right.

232
00:12:49,500 --> 00:12:55,000
So anyway, so there's our push buffer here is our width and height?

233
00:12:55,900 --> 00:12:57,300
I don't know why those are ants.

234
00:13:00,900 --> 00:13:03,300
So, let's put that in there, and then we've got render commands.

235
00:13:04,900 --> 00:13:06,900
That is the output of this thing.

236
00:13:07,900 --> 00:13:08,800
So, let's see here.

237
00:13:08,800 --> 00:13:11,200
And you know what, we could do to, we could do it like this.

238
00:13:13,400 --> 00:13:14,500
Because again, it's an inline.

239
00:13:14,500 --> 00:13:15,800
So it shouldn't really be a problem.

240
00:13:15,800 --> 00:13:17,200
It could should be able to

241
00:13:19,500 --> 00:13:20,200
Do it this way.

242
00:13:21,100 --> 00:13:23,700
Now, there is, I guess there is one sort of nastiest there which is

243
00:13:23,700 --> 00:13:27,300
that if we're doing all this in see than the inline part wouldn't

244
00:13:27,300 --> 00:13:29,200
work, right?

245
00:13:32,600 --> 00:13:36,500
So, I have to think about what I want to do about that.

246
00:13:39,300 --> 00:13:40,700
I could make it a pound of fine.

247
00:13:41,300 --> 00:13:44,600
Basically, what I need to do, just to you, if Case, you're not quite

248
00:13:44,600 --> 00:13:49,000
on board with that is in render group, we have the allocate call,

249
00:13:49,000 --> 00:13:49,500
right?

250
00:13:51,200 --> 00:13:53,900
And the allocate call kind of does its thing here, right?

251
00:13:53,900 --> 00:13:58,900
Where it, you know, it initialize all is all this stuff and we need

252
00:13:58,900 --> 00:14:00,400
that stuff to happen, right?

253
00:14:00,400 --> 00:14:03,400
We want all of this stuff to, we want to be able to do all these

254
00:14:03,400 --> 00:14:03,900
things.

255
00:14:04,800 --> 00:14:08,800
And so I want, you know, this, let's see.

256
00:14:09,500 --> 00:14:14,200
I want all of this stuff to happen there.

257
00:14:14,300 --> 00:14:17,000
Let's see clear render values.

258
00:14:25,300 --> 00:14:28,700
So, yeah, clear render values would need to set these things.

259
00:14:28,700 --> 00:14:29,500
Like the push.

260
00:14:29,500 --> 00:14:32,800
Buffer size, push, buffer, base, push, buffer element count, sword

261
00:14:32,800 --> 00:14:33,100
entry.

262
00:14:33,100 --> 00:14:35,900
So it would need to set all of this stuff, right?

263
00:14:37,100 --> 00:14:41,200
So basically, this is what I'm talking about, something that handles

264
00:14:41,200 --> 00:14:42,500
all of this stuff for us.

265
00:14:42,800 --> 00:14:45,100
So it's like there's the push buffer element count.

266
00:14:45,100 --> 00:14:50,400
There's a sort of Entry at here is the size is zero and all that stuff

267
00:14:50,400 --> 00:14:50,700
is there?

268
00:14:50,700 --> 00:14:54,900
So basically all of these things and I guess, you know, in some sense

269
00:15:01,000 --> 00:15:03,200
Yeah sometimes I'm going to have to kind of pull some of that out a

270
00:15:03,200 --> 00:15:03,900
little bit.

271
00:15:04,300 --> 00:15:07,200
Also if we want to keep the ground chunk thing happening which at this

272
00:15:07,200 --> 00:15:09,600
point the ground chunks have been so annoying.

273
00:15:09,600 --> 00:15:13,000
The entire time that I feel like at this point we probably just want

274
00:15:13,000 --> 00:15:16,100
to say not bother with them because like I said, I don't actually

275
00:15:16,100 --> 00:15:17,000
think we need them for anything.

276
00:15:21,000 --> 00:15:22,100
But that's sort of a separate issue.

277
00:15:23,000 --> 00:15:26,300
Anyway, so we want something like this and we have to be able to

278
00:15:26,300 --> 00:15:27,000
initialize the things.

279
00:15:27,000 --> 00:15:30,500
We don't need this part obviously, so we really only need this part

280
00:15:30,500 --> 00:15:34,200
where we say, okay, the push buffer base is whatever is happening in

281
00:15:34,200 --> 00:15:34,700
here.

282
00:15:36,800 --> 00:15:40,100
The max push buffer size is whatever gets passed in is the buffer

283
00:15:40,100 --> 00:15:42,900
size, we've got the width and height.

284
00:15:47,400 --> 00:15:54,200
Like so we've got the, let's see what else we got element count and

285
00:15:54,200 --> 00:15:55,000
the sword entry at.

286
00:15:55,000 --> 00:15:57,100
So all of this, this is pretty much it.

287
00:15:59,600 --> 00:16:04,200
That's all we need to do to initialize one of these one of these guys

288
00:16:04,500 --> 00:16:07,700
right and there really isn't anything else that's necessary.

289
00:16:08,300 --> 00:16:15,300
So if we assume that this was a pound of fine, I guess we could just

290
00:16:15,300 --> 00:16:20,100
make it a pound to find that someone uses to make sure that they

291
00:16:20,100 --> 00:16:21,500
initialize one of these correctly.

292
00:16:21,600 --> 00:16:23,500
It would look like this.

293
00:16:26,700 --> 00:16:31,200
With height, Max put buffer size.

294
00:16:32,400 --> 00:16:33,400
Push buffer.

295
00:16:39,200 --> 00:16:41,900
The push before base the element count.

296
00:16:43,100 --> 00:16:45,400
And the sword entry at.

297
00:16:49,500 --> 00:16:54,800
So we could do something like this where we basically say Okay oops I

298
00:16:54,800 --> 00:16:58,500
should put keep that in there, you know render.

299
00:16:59,700 --> 00:17:02,500
Command struct something like this.

300
00:17:11,099 --> 00:17:13,400
And that's just an easier way for them to make sure they get the

301
00:17:13,400 --> 00:17:15,900
parameters in the right order and stuff like that, right?

302
00:17:17,599 --> 00:17:18,500
Does that make sense?

303
00:17:19,000 --> 00:17:23,599
So now you can do like, okay, you know, I want initialize one of

304
00:17:23,599 --> 00:17:24,200
these.

305
00:17:24,700 --> 00:17:27,900
I've got render commands equals render command struct and now I can

306
00:17:27,900 --> 00:17:33,000
pass how big I wanted to size to be and I can pass to push buffer that

307
00:17:33,000 --> 00:17:36,800
I had and I can pass the width and height and I know that the macro

308
00:17:36,800 --> 00:17:40,500
will like do the right thing there and won't mess everything up.

309
00:17:44,500 --> 00:17:47,900
So now it's time through, we would generate one of these render

310
00:17:47,900 --> 00:17:48,800
commands things.

311
00:17:49,100 --> 00:17:54,000
Then when we do game update and render, we just pass that render

312
00:17:54,000 --> 00:17:55,100
command buffer in.

313
00:17:56,200 --> 00:17:59,700
And then what we can do by the exact same token is as we come down

314
00:17:59,700 --> 00:17:59,800
here.

315
00:18:00,000 --> 00:18:03,900
Our and before that we're actually going to render when we call debug

316
00:18:03,900 --> 00:18:06,500
frame and instead of passing the buffer we just passed the render

317
00:18:06,500 --> 00:18:07,500
commands again.

318
00:18:08,800 --> 00:18:13,300
And then when we get down to the very end, before we start with the

319
00:18:13,300 --> 00:18:15,800
stuff that would be happening with the V blank and all that stuff,

320
00:18:15,900 --> 00:18:16,500
right?

321
00:18:18,500 --> 00:18:23,000
We now have we would have after everyone was finished, both the debug

322
00:18:23,000 --> 00:18:27,600
code and the game code would have stuffed all of their things that

323
00:18:27,600 --> 00:18:29,800
they wanted to render into the push buffer.

324
00:18:30,000 --> 00:18:34,700
/ for the render commands, we would then be able to say, okay now that

325
00:18:34,700 --> 00:18:41,400
you did all that stuff, just go ahead and go ahead and render all

326
00:18:41,400 --> 00:18:42,200
that, right?

327
00:18:42,200 --> 00:18:49,300
So when we do our display but display buffer in window here, instead

328
00:18:49,300 --> 00:18:53,500
of us having to, you know instead of us having to do like the global

329
00:18:53,500 --> 00:18:56,100
back bumper thing where we have a particular back, buffer or whatever

330
00:18:56,100 --> 00:18:59,700
is happening, there are 132 display buffer and window could actually

331
00:18:59,700 --> 00:18:59,900
just

332
00:19:00,000 --> 00:19:03,600
Take whatever the render commands are that are supposed to be

333
00:19:03,600 --> 00:19:08,400
happening now, and then win32 display buffer and window could be

334
00:19:08,400 --> 00:19:11,600
responsible for basically taking care of that process.

335
00:19:11,900 --> 00:19:14,200
So, it would take the game render commands.

336
00:19:14,200 --> 00:19:15,500
Here here are the commands,

337
00:19:16,500 --> 00:19:17,300
Like so.

338
00:19:18,700 --> 00:19:21,000
And then we could go ahead and have

339
00:19:27,900 --> 00:19:30,700
we can go and we can go ahead and have that.

340
00:19:31,700 --> 00:19:33,000
Do the rendering right here.

341
00:19:33,400 --> 00:19:37,400
So, what it could do is it could say like, oh, okay, you know, if I am

342
00:19:37,400 --> 00:19:38,800
in Hardware, right?

343
00:19:38,800 --> 00:19:39,900
If I'm in Hardware

344
00:19:47,500 --> 00:19:49,600
Then here I'm going to call the opengl renderer.

345
00:19:49,600 --> 00:19:52,500
And so now we're basically taking this part here where we had the.

346
00:19:52,500 --> 00:19:55,700
We had this stuff right here.

347
00:19:55,700 --> 00:19:59,600
We're taking this this stuff and removing it back out to where we were

348
00:19:59,600 --> 00:20:01,900
before this, this, this part right here, right?

349
00:20:01,900 --> 00:20:03,800
Okay.

350
00:20:03,800 --> 00:20:06,600
So what I want to do is say all right if we're going to do the

351
00:20:06,600 --> 00:20:11,600
rendering cure, then we have to do our sword entries thing.

352
00:20:11,600 --> 00:20:16,000
We kind of want to do all at the end and so I don't know what the best

353
00:20:16,000 --> 00:20:17,400
way is to make sure that

354
00:20:17,500 --> 00:20:17,900
Triggers.

355
00:20:17,900 --> 00:20:20,600
But, you know, let's just say that would that's going to be in part of

356
00:20:20,600 --> 00:20:22,000
the, the multiple tier thing.

357
00:20:22,200 --> 00:20:27,100
So we would sort our commands, no question, right?

358
00:20:27,100 --> 00:20:27,800
That's going to happen.

359
00:20:27,800 --> 00:20:31,800
So we do our sort our commands, and we have to be able to supply some

360
00:20:31,800 --> 00:20:32,500
temp memory here.

361
00:20:32,500 --> 00:20:33,400
That's not a problem.

362
00:20:33,400 --> 00:20:36,200
Obviously, we'd have plenty of room for temp memory.

363
00:20:36,200 --> 00:20:38,600
So we just have to make sure that we actually have that.

364
00:20:38,600 --> 00:20:41,400
That in fact, we could actually include the temp memory in the

365
00:20:41,400 --> 00:20:41,800
command.

366
00:20:41,800 --> 00:20:44,500
So instead of having that be an allocation, we could have that

367
00:20:44,500 --> 00:20:45,500
actually being something.

368
00:20:45,500 --> 00:20:47,300
That's just we just have 10 men.

369
00:20:47,500 --> 00:20:48,900
Marie that's in the command structure.

370
00:20:49,600 --> 00:20:52,600
So we just like we sort all the entries together.

371
00:20:53,800 --> 00:20:56,700
And then, in here, we would go ahead and do our actual rendering.

372
00:20:56,700 --> 00:20:59,800
So we have like render to open jail and tiled, render group to Output.

373
00:21:00,500 --> 00:21:05,000
Those two things are the two things that we would do in exactly as we

374
00:21:05,000 --> 00:21:06,200
did them here, only.

375
00:21:06,200 --> 00:21:08,700
Now, we don't have to call any kind of a platform thing.

376
00:21:08,700 --> 00:21:12,700
We just have the ability to call the two different render paths that

377
00:21:12,700 --> 00:21:13,300
we have.

378
00:21:14,900 --> 00:21:20,100
Okay, so that's the first thing that we would start to do now.

379
00:21:20,700 --> 00:21:23,500
I want to kind of say again, because I mentioned the three-tiered

380
00:21:23,500 --> 00:21:25,000
architecture thing Way Way Back.

381
00:21:25,000 --> 00:21:26,900
200 days ago, right?

382
00:21:26,900 --> 00:21:28,200
200 hours of programming.

383
00:21:28,200 --> 00:21:30,000
So what is that in work?

384
00:21:30,000 --> 00:21:33,000
Time 40 into, that is what five.

385
00:21:33,000 --> 00:21:40,600
So, five weeks ago in, programmer time, I mentioned this, where we

386
00:21:40,600 --> 00:21:43,600
were going to have a three-tiered architecture, this is where the

387
00:21:43,600 --> 00:21:44,600
third tier comes in.

388
00:21:44,700 --> 00:21:45,100
Right.

389
00:21:45,100 --> 00:21:48,600
So you can kind of see, we've got platform code and we have game code

390
00:21:48,600 --> 00:21:53,000
that tear in the middle is the renderer and it's the opengl part that

391
00:21:53,000 --> 00:21:56,100
renders opengl or the part that renders in software.

392
00:21:56,100 --> 00:21:59,400
You can see, it starting to split out into the into that third.

393
00:21:59,400 --> 00:22:02,000
Tier, everything else stays in one place to the other.

394
00:22:02,000 --> 00:22:07,400
But just that resolution of the render of the render instructions is

395
00:22:07,400 --> 00:22:10,400
in that third tier, which allows you to kind of switch it.

396
00:22:10,400 --> 00:22:13,100
And this is also where you can see how you might Implement.

397
00:22:13,100 --> 00:22:14,300
If you want to implement a

398
00:22:14,700 --> 00:22:16,800
Kind of renderer like DirectX or something.

399
00:22:17,300 --> 00:22:19,400
This is where that would be, right?

400
00:22:19,500 --> 00:22:21,900
You just have a switch statement here of like, which render?

401
00:22:21,900 --> 00:22:24,800
I want to call and you'd call whichever one you wanted.

402
00:22:27,100 --> 00:22:28,300
Hopefully, that makes some sense.

403
00:22:34,400 --> 00:22:37,900
All right, so we know, we have to sort, we know, we have to do our,

404
00:22:38,100 --> 00:22:40,400
you know, all of our sort of stuff here.

405
00:22:41,000 --> 00:22:44,000
So I'm going to go ahead and first of all, cut this part out.

406
00:22:44,100 --> 00:22:46,900
So here is the tiled render group to Output, that's going to do it

407
00:22:46,900 --> 00:22:47,800
styled rendering.

408
00:22:48,200 --> 00:22:52,500
And so then I would have this part where we do our stretch TI B to the

409
00:22:52,500 --> 00:22:54,000
window that would happen here.

410
00:22:54,600 --> 00:22:57,400
And then the in hardware part, I've got render to open gel.

411
00:22:57,400 --> 00:22:59,000
Obviously going on there.

412
00:22:59,600 --> 00:23:01,200
That's this part.

413
00:23:03,000 --> 00:23:04,600
We don't really need this code anymore.

414
00:23:04,600 --> 00:23:05,600
We can pretty much get rid of it.

415
00:23:05,600 --> 00:23:08,600
This was just the stuff that kind of does the blit, right?

416
00:23:09,300 --> 00:23:11,600
And I don't know that we super care about that.

417
00:23:11,700 --> 00:23:15,300
We could if we wanted to still do this part, I guess.

418
00:23:16,800 --> 00:23:19,100
I mean, we, you know, we can certainly just save it just because why

419
00:23:19,100 --> 00:23:19,500
not?

420
00:23:19,500 --> 00:23:20,100
I suppose.

421
00:23:20,600 --> 00:23:22,500
And this would be some alternate path.

422
00:23:22,600 --> 00:23:25,600
So, you basically say like, okay, we do to bring your group to output

423
00:23:25,600 --> 00:23:29,000
and then there's another if statement here, which is like, how did you

424
00:23:29,000 --> 00:23:32,000
actually want to display the software renderer

425
00:23:32,200 --> 00:23:32,600
Oops.

426
00:23:34,000 --> 00:23:37,000
Did you want to display the software renderer threw up in jail or not?

427
00:23:39,000 --> 00:23:46,300
This is like, you know, b32 display via Hardware.

428
00:23:50,600 --> 00:23:51,000
So,

429
00:23:53,500 --> 00:23:55,100
And so, this code here.

430
00:23:58,300 --> 00:23:59,800
Where did my swap buffers go there?

431
00:24:03,700 --> 00:24:04,800
I can stay as well.

432
00:24:04,800 --> 00:24:06,800
And so really, this is what we're looking at.

433
00:24:07,300 --> 00:24:11,500
So we've got our Hardware path where we rendered open gel and we do

434
00:24:11,500 --> 00:24:12,300
our swap buffers.

435
00:24:12,300 --> 00:24:14,600
We've got our software under path, where we call the software

436
00:24:14,600 --> 00:24:19,200
underwriter, and then display it either in Hardware, or via, you know,

437
00:24:19,200 --> 00:24:22,800
some kind of a stretch split and letting Windows figure out how it's

438
00:24:22,800 --> 00:24:26,100
going to get down to the hardware right now to our problem with that

439
00:24:26,100 --> 00:24:26,700
point.

440
00:24:27,100 --> 00:24:31,200
And so that's really all I'm talking about.

441
00:24:31,600 --> 00:24:32,200
So, as

442
00:24:32,300 --> 00:24:34,200
And see this is like a very very simple thing.

443
00:24:34,200 --> 00:24:38,400
So really it's just going to take us a bunch of code sort of cleaning

444
00:24:38,800 --> 00:24:42,100
around all the edges now to get this to compile and run properly but

445
00:24:42,100 --> 00:24:44,100
that's really all we're talking about here.

446
00:24:47,000 --> 00:24:47,600
That's it.

447
00:24:48,600 --> 00:24:53,000
That's the only real substantive change that I actually wanted to

448
00:24:53,000 --> 00:24:53,400
make.

449
00:24:54,300 --> 00:24:56,700
So, okay, that's where we're at.

450
00:24:57,400 --> 00:24:59,000
So we have our game render commands.

451
00:24:59,300 --> 00:25:00,900
And when we call rendered opengl,

452
00:25:01,800 --> 00:25:04,800
Let's try to make that function work properly here.

453
00:25:05,600 --> 00:25:06,900
You know what I could also do?

454
00:25:06,900 --> 00:25:13,800
I can have this be an inline here which is like inline void, display

455
00:25:15,700 --> 00:25:19,000
bitmap via opengl or something, I can sense.

456
00:25:19,000 --> 00:25:20,400
This is all open, Jill code.

457
00:25:20,400 --> 00:25:22,500
I could clearly right.

458
00:25:22,600 --> 00:25:23,600
Make all of this.

459
00:25:24,900 --> 00:25:25,700
Being there.

460
00:25:25,700 --> 00:25:27,300
And so this is a little bit more readable.

461
00:25:27,300 --> 00:25:33,500
Now that we just have, you know, display bitmap by opengl and we pass

462
00:25:33,500 --> 00:25:35,600
whatever we need to pass their right.

463
00:25:35,600 --> 00:25:37,800
That's not too bad but anyway.

464
00:25:37,800 --> 00:25:42,900
So if I have game render commands here and I want to do the opengl

465
00:25:42,900 --> 00:25:43,700
renderer to Output.

466
00:25:43,700 --> 00:25:47,400
Now, we're no longer taking any of this stuff, right?

467
00:25:48,100 --> 00:25:53,200
We're just taking the commands and then we need some way of making

468
00:25:53,200 --> 00:25:54,000
this stuff work.

469
00:25:54,200 --> 00:25:55,900
So here is our commands.

470
00:25:55,900 --> 00:25:58,700
Now has the width and height in it, which, you know, obviously was

471
00:25:58,700 --> 00:25:59,200
good.

472
00:25:59,200 --> 00:26:02,000
That's the thing that we wanted to be able to do so, we have that in

473
00:26:02,000 --> 00:26:02,300
there.

474
00:26:03,900 --> 00:26:06,700
And now we go through and we look at what else we've got.

475
00:26:06,700 --> 00:26:07,600
We need to push buffer.

476
00:26:07,600 --> 00:26:10,300
Element fact, let's just look at all the things that render group that

477
00:26:10,300 --> 00:26:14,500
uses from render group and it looks like basically we have them.

478
00:26:14,500 --> 00:26:18,300
All right, so all we have to do is just straight-up replacement.

479
00:26:18,500 --> 00:26:21,600
We take whatever the commands were and that's where all of our stuff

480
00:26:21,600 --> 00:26:23,900
is coming from as you can see.

481
00:26:24,600 --> 00:26:29,300
So really, that's all there is to it pretty much period.

482
00:26:29,300 --> 00:26:32,200
So we've got command sword entry at commands.

483
00:26:32,200 --> 00:26:33,000
There we go.

484
00:26:33,700 --> 00:26:35,600
And let me see what else we got here.

485
00:26:36,900 --> 00:26:38,300
Can I look at the?

486
00:26:38,300 --> 00:26:39,500
Where's the platform?

487
00:26:39,600 --> 00:26:40,300
Where's there it is.

488
00:26:41,200 --> 00:26:42,500
I just want to see what's going on here.

489
00:26:42,900 --> 00:26:47,600
So yeah, in here display bitmap by opengl.

490
00:26:47,600 --> 00:26:48,700
What have we got?

491
00:26:48,700 --> 00:26:51,100
This guy is doing window with window height.

492
00:26:51,100 --> 00:26:55,600
So that's doing a blind out to the whole screen, so maybe we don't

493
00:26:55,600 --> 00:26:56,300
want to do that.

494
00:26:56,300 --> 00:26:58,900
Maybe we want to do this since we're displaying the buffer.

495
00:26:58,900 --> 00:26:59,800
Maybe we do it this way.

496
00:27:01,000 --> 00:27:02,600
The future will do it a little differently.

497
00:27:03,100 --> 00:27:04,400
Well well you know I'll leave it.

498
00:27:06,800 --> 00:27:07,500
Yeah, I don't know.

499
00:27:07,800 --> 00:27:10,200
This is something we're going to want to change a little bit later as

500
00:27:10,200 --> 00:27:10,900
I guess the only thing.

501
00:27:10,900 --> 00:27:13,600
So we want something that looks like this a little bit more.

502
00:27:16,200 --> 00:27:16,700
There we go.

503
00:27:16,700 --> 00:27:18,800
And so, this is basically just going to take one of those.

504
00:27:19,100 --> 00:27:26,900
The one of the buffers like, we had in in here, which is to say, it's

505
00:27:26,900 --> 00:27:29,500
like the global back buffer, whatever.

506
00:27:29,500 --> 00:27:32,500
It's this thing went 3-2 off-screen buffer, right?

507
00:27:33,200 --> 00:27:37,600
So what did the wind 3232 off-screen buffer have in it?

508
00:27:38,200 --> 00:27:41,600
It's just got width height, pitch, B, 4 pixel and memory.

509
00:27:42,100 --> 00:27:45,100
So I think we probably just want this.

510
00:27:45,700 --> 00:27:51,100
We probably just want to say hey here's a bitmap coming from open

511
00:27:51,100 --> 00:27:51,700
Jill.

512
00:27:52,900 --> 00:27:58,900
I'm sorry coming from like a software software renderer whatever could

513
00:27:58,900 --> 00:28:02,200
you please render it and then we just go ahead and say, OK.

514
00:28:02,200 --> 00:28:08,400
There's the the height width height and the memory again, width and

515
00:28:08,400 --> 00:28:13,400
height and that stuff just freely much is all we need.

516
00:28:13,800 --> 00:28:16,500
Now, there is one part that's a little weird, which is that the pitch

517
00:28:17,100 --> 00:28:20,800
pretty much has to be the height and the width times 32.

518
00:28:21,100 --> 00:28:22,600
So we could also say here that

519
00:28:22,700 --> 00:28:26,800
Or at the pitch equals the width times for because we only support

520
00:28:26,800 --> 00:28:28,400
that right now in the opengl path.

521
00:28:28,400 --> 00:28:32,800
Here we didn't, we don't support multiple pitches so that's just a

522
00:28:32,800 --> 00:28:35,800
restriction and we might as well sorted so people who maybe who use it

523
00:28:35,800 --> 00:28:37,100
won't get super confused.

524
00:28:38,000 --> 00:28:41,300
So we also have this screen space thing that we did before

525
00:28:43,600 --> 00:28:46,900
which we could if we wanted to we could now leverage this code that we

526
00:28:46,900 --> 00:28:47,800
had previously.

527
00:28:47,800 --> 00:28:50,700
So here is our screen space texture stuff.

528
00:28:50,700 --> 00:28:57,600
We could just have a thing that's like inline void set or opengl set

529
00:28:57,600 --> 00:28:58,500
screen space.

530
00:28:59,700 --> 00:29:03,000
And that could do the code that could do this code right here.

531
00:29:03,500 --> 00:29:07,600
And so we could just make this opengl set screen space.

532
00:29:09,000 --> 00:29:13,500
And and it would just do that stuff automatically.

533
00:29:14,200 --> 00:29:17,100
And as you can see, we kind of need the, the width height and I guess

534
00:29:17,300 --> 00:29:20,200
that sets free in space, could also do our viewport call for us if we

535
00:29:20,200 --> 00:29:23,300
wanted to probably.

536
00:29:24,600 --> 00:29:27,100
Well, maybe that's not true.

537
00:29:27,200 --> 00:29:29,800
So let's just say that it takes a width and height and we'll leave the

538
00:29:29,800 --> 00:29:32,600
viewport thing a sub because like I said, we're going to probably want

539
00:29:32,900 --> 00:29:34,800
to do something with that, a little later on.

540
00:29:36,100 --> 00:29:37,800
All right, so I'm going to make these

541
00:29:38,500 --> 00:29:42,000
Be the only two parameters to it and so that'll set up our matrices

542
00:29:42,000 --> 00:29:42,500
for us.

543
00:29:42,900 --> 00:29:46,900
That means we can call opengl screen space in both places.

544
00:29:53,800 --> 00:29:58,300
Like so, and I'm going to make this opengl display bitmap.

545
00:30:03,500 --> 00:30:09,000
Yeah, so this goes away and that's all good there and then this lower

546
00:30:09,000 --> 00:30:13,400
triangle GL triangles bit with a color that's just an opengl rectangle

547
00:30:13,400 --> 00:30:14,000
call now.

548
00:30:14,500 --> 00:30:19,900
So this whole thing we can also do by just saying like a minty Max

549
00:30:19,900 --> 00:30:23,200
Speed color, that's an open to the rectangle would get rid of all this

550
00:30:23,300 --> 00:30:24,600
and that's done as well.

551
00:30:24,900 --> 00:30:30,000
So this all gets much much more simplified and and that's nice right?

552
00:30:31,900 --> 00:30:34,400
And then our opengl screen space called here.

553
00:30:35,400 --> 00:30:37,200
We need the commands with the height.

554
00:30:37,200 --> 00:30:42,400
So this stuff passes through lookin pretty reasonable, right?

555
00:30:42,500 --> 00:30:44,500
So now we kind of have our opengl stuff.

556
00:30:44,500 --> 00:30:45,800
Starting to take shape.

557
00:30:45,800 --> 00:30:47,100
You can see how that works.

558
00:30:47,100 --> 00:30:49,700
There's nothing particularly fancy going on here, again.

559
00:30:49,700 --> 00:30:50,900
The texter loading stuff.

560
00:30:50,900 --> 00:30:54,600
Still not right at all but we're kind of converging on something

561
00:30:54,600 --> 00:30:59,200
that's fairly clean and you can see what it does is nothing weird

562
00:30:59,200 --> 00:31:00,200
going on there, right?

563
00:31:00,300 --> 00:31:00,700
Right.

564
00:31:01,300 --> 00:31:03,000
So that seems reasonable.

565
00:31:03,000 --> 00:31:05,300
Let's bounce back here.

566
00:31:05,500 --> 00:31:07,000
Go to Global back buffer.

567
00:31:08,600 --> 00:31:13,400
All right, so win32 display buffer and window.

568
00:31:13,400 --> 00:31:17,900
Now when we get a WM paint message is just not going to work, right?

569
00:31:20,500 --> 00:31:24,500
So I feel like when we get W and paint messages, we're probably just

570
00:31:24,500 --> 00:31:28,500
going to have to ignore them because we won't really be able to do

571
00:31:28,500 --> 00:31:29,300
anything sensible.

572
00:31:29,300 --> 00:31:32,700
There are opengl state will not necessarily be set up for anything.

573
00:31:33,000 --> 00:31:34,600
We won't necessarily even have a back buffer.

574
00:31:34,600 --> 00:31:39,200
Now, we could save a back buffer in opengl for the same case.

575
00:31:39,200 --> 00:31:42,100
But that's something that we definitely don't want to worry about now

576
00:31:42,100 --> 00:31:43,200
if ever.

577
00:31:43,700 --> 00:31:48,100
So for the time being, I'm going to say let's get rid of this and

578
00:31:48,100 --> 00:31:49,500
we'll deal with that.

579
00:31:49,700 --> 00:31:52,800
Some point in the future if we ever even care about it at all.

580
00:31:53,600 --> 00:31:56,500
So here is our win32 display buffer in window.

581
00:31:56,500 --> 00:31:58,400
Call again, where we were working on things.

582
00:31:58,400 --> 00:32:00,100
Again, it has to do, it sort entries.

583
00:32:00,300 --> 00:32:04,600
This is the real third tier coming into play here in a big way because

584
00:32:04,600 --> 00:32:10,300
this is actually a platform nonspecific, but in the third tier

585
00:32:10,800 --> 00:32:11,600
operation.

586
00:32:11,600 --> 00:32:13,200
So that's like handmade.

587
00:32:14,100 --> 00:32:17,300
And you know, we almost might want to rename these a little bit like,

588
00:32:17,300 --> 00:32:18,500
but handmade.

589
00:32:19,600 --> 00:32:23,100
You know, this is just the renderer specifically.

590
00:32:23,100 --> 00:32:28,000
So it's like handmade, you know, render shared or something like that.

591
00:32:28,000 --> 00:32:29,900
Would be what this this actually does.

592
00:32:29,900 --> 00:32:31,700
The Sorting entries part of things.

593
00:32:31,700 --> 00:32:36,500
So if I do handmade render dot CPP here, perhaps again, I'm not really

594
00:32:36,500 --> 00:32:39,200
sure what we want to call it, but this would be like the utility

595
00:32:39,200 --> 00:32:42,100
functions for renderers, right?

596
00:32:42,100 --> 00:32:47,200
And so that sort entry call which were currently doing over here in

597
00:32:47,200 --> 00:32:49,500
the render group that thing has.

598
00:32:49,700 --> 00:32:52,800
Be outside and it has to be.

599
00:32:52,900 --> 00:32:58,200
So all of these sorting things that has to be guess this is where we

600
00:32:58,200 --> 00:32:59,800
merge sort and swap.

601
00:33:01,300 --> 00:33:02,100
That's it.

602
00:33:02,400 --> 00:33:07,300
Yeah, that has to be something that's out here in handmade render and

603
00:33:07,300 --> 00:33:11,100
that can be accessed by anyone who might want to use it right.

604
00:33:12,800 --> 00:33:13,300
Okay.

605
00:33:13,700 --> 00:33:15,900
So much like opengl is used in here.

606
00:33:15,900 --> 00:33:19,500
So now we've got our handmade render dot CPP is used in here.

607
00:33:20,800 --> 00:33:23,200
And again, strictly flowing in that direction.

608
00:33:23,900 --> 00:33:25,100
So that's all fine.

609
00:33:25,300 --> 00:33:26,500
No big deal there.

610
00:33:27,400 --> 00:33:31,100
And so then we've got, we're a little bit closer, right?

611
00:33:31,100 --> 00:33:32,300
We're a little bit closer to working.

612
00:33:32,900 --> 00:33:36,000
Okay, so in with 32 handmade, I'm going to go back to where I was

613
00:33:36,000 --> 00:33:37,300
there just a minute ago.

614
00:33:38,200 --> 00:33:42,900
And so we've got our sort entries, that's just a render call that

615
00:33:42,900 --> 00:33:44,600
perhaps things we come in here.

616
00:33:44,600 --> 00:33:49,300
We can either call render to open gel with the commands that we're

617
00:33:49,300 --> 00:33:50,500
doing and

618
00:33:50,500 --> 00:33:52,500
I don't think we need anything else for that.

619
00:33:52,600 --> 00:33:55,300
We might want to pass the window with and window height.

620
00:33:55,500 --> 00:33:58,600
Like I was saying before that sort of something we probably want to

621
00:33:58,600 --> 00:33:59,700
address eventually.

622
00:34:00,200 --> 00:34:01,400
So I'm going to put that in there.

623
00:34:02,900 --> 00:34:05,600
Even though right now we're not quite using, it will see a little

624
00:34:05,600 --> 00:34:07,200
later on that.

625
00:34:07,200 --> 00:34:09,400
That's actually something we're probably going to want.

626
00:34:09,800 --> 00:34:13,500
Just in case our display, our window with is not the same as our

627
00:34:13,500 --> 00:34:14,000
render.

628
00:34:14,400 --> 00:34:17,900
We may want to put like black bars, you know, like or or change asset

629
00:34:17,900 --> 00:34:19,000
Ratio or crop.

630
00:34:19,100 --> 00:34:19,800
There's a bunch of things.

631
00:34:19,800 --> 00:34:20,699
We might want to do there.

632
00:34:20,699 --> 00:34:25,800
So the render commands and the window with thing may, you know?

633
00:34:25,800 --> 00:34:29,100
Like I said, we may just want that to be a separate thing.

634
00:34:29,100 --> 00:34:32,500
So we're going to do window with and window height here, which are not

635
00:34:32,500 --> 00:34:32,600
the same

636
00:34:32,800 --> 00:34:33,100
Name.

637
00:34:35,199 --> 00:34:39,900
And this, this would be equivalently true for this guy, where it would

638
00:34:39,900 --> 00:34:43,600
have the window width and the window height and, you know, can choose

639
00:34:43,600 --> 00:34:46,100
to use this if it's so desires.

640
00:34:46,100 --> 00:34:49,300
So, so there's what we're dealing with now.

641
00:34:49,400 --> 00:34:53,000
We've got our display buffer and window this passes it to opengl.

642
00:34:53,800 --> 00:34:57,100
And so now, here, where we've got tiled render group to output, and

643
00:34:57,100 --> 00:35:02,200
we've got render queue and, and all this stuff.

644
00:35:02,500 --> 00:35:04,500
So, the render queue now,

645
00:35:04,600 --> 00:35:11,200
Is is actually, oh, well, this is actually going to be really nice.

646
00:35:11,300 --> 00:35:15,300
Now that render queue no longer probably even has to go through the

647
00:35:15,300 --> 00:35:15,800
platform.

648
00:35:15,800 --> 00:35:19,000
Like, it's entirely in the platform layer as well, which is really

649
00:35:19,000 --> 00:35:22,100
kind of nice because now it doesn't have to round trip to the game.

650
00:35:23,600 --> 00:35:26,000
So that's real nice.

651
00:35:27,500 --> 00:35:28,700
That's, that's great.

652
00:35:29,400 --> 00:35:30,600
I didn't even think of that.

653
00:35:30,600 --> 00:35:34,400
As a as a nice reason to do this, that means that thread

654
00:35:34,600 --> 00:35:38,000
Going for handmade hero might, we might be able to keep threading out

655
00:35:38,000 --> 00:35:40,400
of the game entirely and only in the platform layer.

656
00:35:40,400 --> 00:35:44,800
If we wanted to, we may want to keep it in there for SIM for for

657
00:35:44,900 --> 00:35:46,100
accelerating simulation.

658
00:35:50,700 --> 00:35:53,200
And I guess I don't mean threading out entirely.

659
00:35:53,200 --> 00:35:55,500
I mean the low this this part of the threading.

660
00:35:56,100 --> 00:35:56,800
That's interesting.

661
00:35:57,000 --> 00:35:57,200
All right.

662
00:35:57,200 --> 00:35:58,300
Anyway, ignore that for now.

663
00:35:58,300 --> 00:35:59,300
Pretend I never say anything.

664
00:36:00,000 --> 00:36:05,000
Point being here, we've got our thread stuff, where we pass where as

665
00:36:05,000 --> 00:36:09,200
it went through to make you where we have our high priority queue low

666
00:36:09,200 --> 00:36:10,000
priority queue.

667
00:36:10,700 --> 00:36:13,800
So I'm going to go ahead and say that the plaque platform work queue.

668
00:36:15,300 --> 00:36:18,100
Here just gets passed in.

669
00:36:18,400 --> 00:36:21,900
And that way, this guy just gets it directly from here, like so.

670
00:36:25,300 --> 00:36:28,900
These are commands no longer render group, we've got our output Target

671
00:36:28,900 --> 00:36:29,400
and temporary.

672
00:36:29,400 --> 00:36:33,500
NE the output Target is going to be that Global render buffer and the

673
00:36:33,500 --> 00:36:34,200
temp Arena.

674
00:36:34,200 --> 00:36:37,500
Now we shouldn't actually need because the entries are getting sorted

675
00:36:37,500 --> 00:36:38,100
up here.

676
00:36:38,500 --> 00:36:41,700
So if I go back to my rent, handmade render group and look at toddler

677
00:36:41,700 --> 00:36:42,300
group to Output.

678
00:36:42,300 --> 00:36:45,100
I'm assuming that the temper Rina just is not necessary anymore

679
00:36:46,000 --> 00:36:48,500
because it's the sort stuff.

680
00:36:49,000 --> 00:36:50,800
It looks like it wasn't even being used anyway,

681
00:36:52,200 --> 00:36:53,400
Yeah, it was only in the sort stuff.

682
00:36:53,400 --> 00:36:54,500
Anyway, right?

683
00:36:55,200 --> 00:36:56,200
So that's all fine.

684
00:36:56,400 --> 00:36:59,400
So now we've got this function, the tiled render group to output, and

685
00:36:59,400 --> 00:37:04,000
that's obviously going to have to move out into that shared code.

686
00:37:04,900 --> 00:37:07,800
We're like sword, entries and that sort of stuff is right.

687
00:37:07,800 --> 00:37:09,000
So here's our sword entries.

688
00:37:09,300 --> 00:37:11,600
Tiled render group two outputs going to move out as well.

689
00:37:13,900 --> 00:37:14,400
Let's see.

690
00:37:16,500 --> 00:37:18,500
Renter grouped output.

691
00:37:20,200 --> 00:37:23,700
I think all of this stuff should because this is the software renderer

692
00:37:23,700 --> 00:37:24,300
right?

693
00:37:25,100 --> 00:37:28,500
Do tiled render work children trip to Output.

694
00:37:29,600 --> 00:37:33,600
Yes I think all of this stuff kind of comes out here right that all

695
00:37:33,600 --> 00:37:37,000
moves out and let's see.

696
00:37:37,000 --> 00:37:41,400
So this is all this is Sue.

697
00:37:41,400 --> 00:37:42,900
Most of the stuff comes out.

698
00:37:45,500 --> 00:37:48,800
Yeah, I assumed like, this is basically almost everything in handmade

699
00:37:48,800 --> 00:37:52,300
render group that doesn't involve building up the stuff that's getting

700
00:37:52,300 --> 00:37:55,900
pushed should come out and into the rent.

701
00:37:55,900 --> 00:37:58,800
Like, because we're basically moving the renderer out if that makes

702
00:37:58,800 --> 00:37:59,300
sense.

703
00:37:59,900 --> 00:38:05,300
But render group itself doesn't actually need to come out for any

704
00:38:05,300 --> 00:38:05,800
reason.

705
00:38:06,000 --> 00:38:08,500
So I want to be somewhat cautious here in this.

706
00:38:08,500 --> 00:38:13,300
Let's see, get camera, rectangular distance, be converted,

707
00:38:13,500 --> 00:38:15,500
Get all sorts present project.

708
00:38:15,500 --> 00:38:19,800
All of these are things which stay push direct response but bitmap get

709
00:38:19,800 --> 00:38:20,300
back to him.

710
00:38:20,300 --> 00:38:22,300
All of those stay push render element.

711
00:38:22,300 --> 00:38:23,900
Definitely stays it were to enter basis.

712
00:38:23,900 --> 00:38:27,000
Stays orthographic perspective, begin, and end render.

713
00:38:27,000 --> 00:38:28,700
All of these are still the same out here.

714
00:38:28,700 --> 00:38:33,200
Enter group clear, render values will stay but change, but I think all

715
00:38:33,200 --> 00:38:34,700
the rest this is rendering.

716
00:38:34,700 --> 00:38:36,400
So this comes out draw.

717
00:38:36,400 --> 00:38:39,500
Matt change saturation, which you don't call anymore.

718
00:38:39,500 --> 00:38:42,500
So I'm going to ask me to make that quickly and we did one time on the

719
00:38:42,500 --> 00:38:42,900
Q&A.

720
00:38:42,900 --> 00:38:43,300
I think that's

721
00:38:43,400 --> 00:38:48,400
Not even used all of this stuff to our rectangle, slowly sample,

722
00:38:48,400 --> 00:38:51,700
environment Bill, linear blend draw a rectangle on scale and Pious

723
00:38:51,700 --> 00:38:53,100
normal, and unpack four by four.

724
00:38:53,100 --> 00:38:59,800
So I think all of these guys come out, I'm going to rid of this thing.

725
00:39:00,000 --> 00:39:03,300
Or time function stuff for now, as well.

726
00:39:03,700 --> 00:39:07,000
Really want to leave this in here at the moment.

727
00:39:07,900 --> 00:39:08,300
Yeah.

728
00:39:09,100 --> 00:39:12,000
And so now like the render group thing, again is just turning into the

729
00:39:12,000 --> 00:39:12,400
thing.

730
00:39:12,400 --> 00:39:16,400
All this is supposed to be doing is managing is brokering that process

731
00:39:16,400 --> 00:39:21,800
of putting things into the command q, and also notifying the asset

732
00:39:21,800 --> 00:39:24,000
system that we need things, right?

733
00:39:24,000 --> 00:39:26,200
It's still doing that part of the process as well.

734
00:39:26,900 --> 00:39:31,600
All right, so there is handmade rendered again, that's like it's

735
00:39:31,600 --> 00:39:35,200
platform nonspecific but it's sort of a three-tiered thing, right?

736
00:39:35,200 --> 00:39:37,500
Again, like I said, this is the three-tiered architecture that is

737
00:39:37,700 --> 00:39:38,900
Thing, about way, way back.

738
00:39:38,900 --> 00:39:43,100
When finally coming into play, it looks like this, right?

739
00:39:43,200 --> 00:39:43,700
It's

740
00:39:45,700 --> 00:39:48,200
Here is the platform layer.

741
00:39:48,700 --> 00:39:49,600
Here's the game.

742
00:39:50,700 --> 00:39:52,100
And now here's the renderer.

743
00:39:54,300 --> 00:39:57,800
And the renderer is kind of like the split thing that has some

744
00:39:57,800 --> 00:40:00,300
platform-specific code in some non platform-specific code.

745
00:40:00,300 --> 00:40:03,700
Like it may have like an opengl specific thing and that it's also got

746
00:40:03,700 --> 00:40:07,600
some nonstick stuff and you can think of this stuff as really being

747
00:40:07,600 --> 00:40:09,000
part of the game code if you want.

748
00:40:09,000 --> 00:40:11,500
Because it is platform, not sick but I choose to think of it as like

749
00:40:11,500 --> 00:40:14,900
sort of, this is a hybrid layer that has platform specific and

750
00:40:14,900 --> 00:40:15,700
nonspecific.

751
00:40:15,800 --> 00:40:21,400
So this is like purely non, right?

752
00:40:22,000 --> 00:40:23,900
This is purely.

753
00:40:24,800 --> 00:40:25,700
Platform.

754
00:40:27,300 --> 00:40:28,700
And this is like a hybrid.

755
00:40:30,500 --> 00:40:30,900
Right.

756
00:40:31,500 --> 00:40:34,500
And that's just what I mean when I keep referring to a three-tiered

757
00:40:34,500 --> 00:40:35,600
architecture for that,

758
00:40:38,000 --> 00:40:39,300
That's what it, that's what I mean.

759
00:40:41,800 --> 00:40:46,900
So stretching out, I didn't fall asleep yet, so that's good.

760
00:40:48,200 --> 00:40:54,300
So yeah, so I think that's mostly what we need to do structurally and

761
00:40:54,300 --> 00:40:57,900
we just have gonna have to lot of compile error, clean up, that we're

762
00:40:57,900 --> 00:41:01,400
going to have to do to make all this work.

763
00:41:01,400 --> 00:41:03,400
But that's, you know, that's the name of the game.

764
00:41:03,400 --> 00:41:05,500
That's how you make architectural, changes.

765
00:41:05,500 --> 00:41:08,100
You have to do a lot of cleanup.

766
00:41:08,600 --> 00:41:10,300
So let's see here.

767
00:41:11,200 --> 00:41:13,400
I am going to start.

768
00:41:14,000 --> 00:41:15,200
How do I want to start?

769
00:41:15,200 --> 00:41:18,200
Well, I guess we'll just see where we're at compiler or wise and maybe

770
00:41:18,300 --> 00:41:19,800
maybe move along from there.

771
00:41:21,000 --> 00:41:23,300
All right so clear render values.

772
00:41:23,300 --> 00:41:27,800
I would like to find out who is doing clear render values and I think

773
00:41:27,800 --> 00:41:30,300
I may just get rid of that concept entirely.

774
00:41:31,300 --> 00:41:37,100
So if I look so and render does clear render values.

775
00:41:37,600 --> 00:41:40,000
How many times do we do an end render?

776
00:41:40,000 --> 00:41:42,100
That's the only place that actually does that.

777
00:41:42,100 --> 00:41:43,900
Let me take a look at who's doing that.

778
00:41:44,800 --> 00:41:50,200
So, and redditor happens, once at the end of the game, it happens once

779
00:41:50,200 --> 00:41:50,700
at the end of the

780
00:41:50,800 --> 00:41:54,500
Debug code and then it happens.

781
00:41:56,100 --> 00:41:58,100
At the Phil ground chunk work stage.

782
00:41:58,600 --> 00:41:59,800
So really we never

783
00:42:00,000 --> 00:42:02,900
Actually begin or end renders at all.

784
00:42:11,700 --> 00:42:12,000
Yes.

785
00:42:12,000 --> 00:42:12,900
Oh, that's tough.

786
00:42:14,600 --> 00:42:15,100
That's tough.

787
00:42:15,100 --> 00:42:17,400
I think, I think we just, I think we get rid of all that stuff.

788
00:42:17,400 --> 00:42:20,300
I think the beginning and render stuff, I think that all just goes

789
00:42:20,300 --> 00:42:20,700
away.

790
00:42:20,700 --> 00:42:23,600
I think we just have render group and we allocate and deallocate,

791
00:42:23,600 --> 00:42:24,800
their render group entirely.

792
00:42:25,800 --> 00:42:29,000
And so, one of the things that has to happen here is if we want to

793
00:42:29,000 --> 00:42:32,200
use, generation IDs to protect our asset loading.

794
00:42:32,400 --> 00:42:34,100
Which if you remember, that's how we protect.

795
00:42:34,100 --> 00:42:38,700
If we want threaded things to work with the asset system, we have some

796
00:42:38,700 --> 00:42:42,300
protection there to prevent things from being unloaded and stuff.

797
00:42:42,500 --> 00:42:44,200
I don't know that that's the system we want to stick with.

798
00:42:44,400 --> 00:42:47,300
The long run, but it's we should keep supporting it because it's

799
00:42:47,300 --> 00:42:48,500
something that we were doing.

800
00:42:49,200 --> 00:42:53,500
We had that notion of a, that notion of a generation ID, right?

801
00:42:53,600 --> 00:42:57,800
That now has to be something that's pushed forward via the buffer.

802
00:42:58,100 --> 00:43:00,000
So basically, inside

803
00:43:01,900 --> 00:43:05,100
Inside are handmade platform code.

804
00:43:06,500 --> 00:43:10,300
We need in here that that has to come from here.

805
00:43:10,300 --> 00:43:15,100
So that has to come generation, ID, has to come from from that.

806
00:43:15,900 --> 00:43:17,400
So, there's our generation ID,

807
00:43:19,400 --> 00:43:20,300
Generation ID.

808
00:43:21,600 --> 00:43:24,700
So that's how that that's how that has to move out.

809
00:43:24,700 --> 00:43:29,000
Just because since the render since we can't consider the assets

810
00:43:29,000 --> 00:43:32,600
unlocked until the render has completed, we need to make sure that the

811
00:43:32,600 --> 00:43:37,000
generation IDs are / sweep, which includes everyone who might render

812
00:43:37,000 --> 00:43:37,500
to it.

813
00:43:38,200 --> 00:43:42,100
So, beginning render end render now can go away as well.

814
00:43:42,100 --> 00:43:45,600
Those can have been simplified out and we don't have to worry about

815
00:43:45,600 --> 00:43:46,200
them anymore.

816
00:43:46,200 --> 00:43:48,200
So, now what we could do is say like, okay,

817
00:43:49,000 --> 00:43:50,500
when we allocate a render group,

818
00:43:52,400 --> 00:43:56,500
System here, all, we really need to do is just have begin render

819
00:43:56,500 --> 00:43:58,400
happen at the bottom, right?

820
00:44:00,600 --> 00:44:02,000
So now it just looks like this.

821
00:44:06,000 --> 00:44:07,400
Generation, I do doesn't matter.

822
00:44:08,100 --> 00:44:14,800
So it really just looks like that and render does the yeah, basically

823
00:44:14,800 --> 00:44:16,200
end render begin render.

824
00:44:16,200 --> 00:44:17,200
Those two generation ideas.

825
00:44:17,500 --> 00:44:20,800
I'm not sure why the generation is stored on the assets.

826
00:44:24,800 --> 00:44:27,400
Do you guys remember why we put it on the assets?

827
00:44:27,400 --> 00:44:29,800
Is that just because we didn't have a better place for it.

828
00:44:31,400 --> 00:44:32,100
Or what?

829
00:44:42,700 --> 00:44:43,700
You can asset lock.

830
00:44:43,700 --> 00:44:46,400
Oh, because it's neat because it needs to take the asset lock

831
00:44:47,600 --> 00:44:49,700
that looks like the primary reason.

832
00:44:50,900 --> 00:44:51,500
I guess.

833
00:45:00,900 --> 00:45:02,200
Yeah, that looks like it.

834
00:45:02,900 --> 00:45:03,500
So you know what?

835
00:45:03,500 --> 00:45:04,500
Now that I think about it.

836
00:45:04,500 --> 00:45:08,000
I suppose we don't really need to

837
00:45:12,000 --> 00:45:14,100
We don't really need to do it that way at all.

838
00:45:14,100 --> 00:45:17,600
We could simplify this a little bit more instead of having begin

839
00:45:17,600 --> 00:45:19,100
generation and generation.

840
00:45:19,300 --> 00:45:23,000
We could just have a thing where we do both begin in an generation

841
00:45:23,000 --> 00:45:23,600
together.

842
00:45:25,400 --> 00:45:28,500
Where we just have advanced generation, right?

843
00:45:28,800 --> 00:45:31,200
Because what we what happens when we come through, as we take the

844
00:45:31,200 --> 00:45:33,100
asset lock, right?

845
00:45:33,100 --> 00:45:37,600
We then say, all right, let's go ahead and like make a new generation

846
00:45:37,600 --> 00:45:38,100
here.

847
00:45:39,200 --> 00:45:42,900
That's that's in Flight, we then.

848
00:45:42,900 --> 00:45:47,100
And then later on we sort of, we sort of clean that up, but we could

849
00:45:47,100 --> 00:45:51,500
just, we could just do this like this, right?

850
00:45:51,600 --> 00:45:54,500
We could just clean up all the in-flight generations and then switch

851
00:45:54,500 --> 00:45:54,800
to the next

852
00:45:55,000 --> 00:45:55,300
One.

853
00:45:55,600 --> 00:45:59,200
And so, we just assume that there's always one in Flight generation on

854
00:45:59,200 --> 00:46:00,100
every frame, right?

855
00:46:00,100 --> 00:46:03,500
Because that's what's essentially happening for the most part.

856
00:46:07,700 --> 00:46:10,100
So even that seems like it could be simplified.

857
00:46:10,100 --> 00:46:13,100
So right here, this is really, we could just say this is Advanced

858
00:46:13,100 --> 00:46:17,900
generation for the game assets, that make sense and it returns that

859
00:46:17,900 --> 00:46:19,000
you 32.

860
00:46:19,300 --> 00:46:21,900
And that way we just do that at the top of the frame.

861
00:46:22,000 --> 00:46:25,700
And that's pretty much all there is to it.

862
00:46:25,800 --> 00:46:26,600
I think

863
00:46:29,200 --> 00:46:31,600
Yeah, that seems right to me.

864
00:46:32,300 --> 00:46:36,000
Now the only thing that I'm not sure about is how that necessarily

865
00:46:36,000 --> 00:46:38,600
gets communicated at the moment, to be honest.

866
00:46:38,600 --> 00:46:41,300
I don't even know how that was getting communicated to the debug

867
00:46:41,300 --> 00:46:45,000
system directly because the debug system makes use of it to draw fonts

868
00:46:45,000 --> 00:46:45,500
and stuff.

869
00:46:45,700 --> 00:46:49,700
So, I'm not sure how it was accessing that how was it accessing the

870
00:46:49,700 --> 00:46:50,400
assets?

871
00:46:51,500 --> 00:46:55,300
Dare I ask so allocate render group.

872
00:46:57,600 --> 00:46:58,300
Assets.

873
00:46:58,800 --> 00:47:00,100
How is it getting the assets?

874
00:47:01,400 --> 00:47:02,600
Debug start.

875
00:47:04,800 --> 00:47:06,400
So, it gets passed.

876
00:47:08,200 --> 00:47:09,900
The assets by whom.

877
00:47:15,000 --> 00:47:16,300
Debug get game assets.

878
00:47:22,900 --> 00:47:24,700
Where does that happen?

879
00:47:29,400 --> 00:47:30,000
Anyone.

880
00:47:39,800 --> 00:47:40,800
Tepig akima.

881
00:47:40,800 --> 00:47:43,600
So yeah, it just gets the game assets straight out of the thing.

882
00:47:43,600 --> 00:47:44,100
Anyway,

883
00:47:54,100 --> 00:47:55,400
So that's pretty straightforward.

884
00:47:55,800 --> 00:47:57,500
I think we could simplify this quite a bit.

885
00:47:58,000 --> 00:47:59,800
I think in here when we do Advanced generation

886
00:48:00,400 --> 00:48:02,800
I think in here, we don't really even have to do this.

887
00:48:02,800 --> 00:48:04,200
We could just say like okay,

888
00:48:06,900 --> 00:48:08,200
Advanced generation.

889
00:48:10,800 --> 00:48:12,800
Is avoid it advances the thing.

890
00:48:12,800 --> 00:48:17,000
And then what you actually do here is you say like I'm going to say

891
00:48:17,000 --> 00:48:20,700
whatever the current generation is and return that so there's like get

892
00:48:20,700 --> 00:48:21,700
current generation.

893
00:48:25,000 --> 00:48:28,300
You know I'm saying and they're like non-overlapping.

894
00:48:32,000 --> 00:48:33,300
I feel like that's a better.

895
00:48:33,700 --> 00:48:35,300
I feel like that's a better way to do it.

896
00:48:35,400 --> 00:48:40,500
I suppose, one problem with that is you can't be you can't be

897
00:48:40,500 --> 00:48:41,800
multi-threaded on that.

898
00:48:46,900 --> 00:48:47,600
Well, okay.

899
00:48:53,500 --> 00:48:57,700
Here's the what I'll say we can leave it the way it is now and not

900
00:48:57,700 --> 00:48:59,400
have to really do all that much with it.

901
00:48:59,400 --> 00:49:00,900
We can leave it doing essentially.

902
00:49:00,900 --> 00:49:06,600
This what I could do is just emulate exactly what I want by going into

903
00:49:06,800 --> 00:49:08,800
when we actually start game update and render.

904
00:49:12,600 --> 00:49:18,200
When I want to start the asset Generation stuff we can just say, all

905
00:49:18,200 --> 00:49:24,300
right, if there was a generation start the generation, otherwise make

906
00:49:24,400 --> 00:49:25,700
make a new one, right?

907
00:49:25,800 --> 00:49:28,400
So we'd say something like if a generation is in progress and the

908
00:49:28,400 --> 00:49:30,500
generation, right?

909
00:49:35,400 --> 00:49:39,400
and then in here, we just do begin generation because the problem that

910
00:49:39,400 --> 00:49:40,600
I'm having with this,

911
00:49:53,200 --> 00:49:55,000
Maybe that.

912
00:49:58,900 --> 00:50:02,400
The problem that I'm having right now, just thinking it through is

913
00:50:02,400 --> 00:50:11,000
just like the generation ID wants to apply across across the frame, it

914
00:50:11,000 --> 00:50:13,700
needs to apply like outside, right?

915
00:50:14,200 --> 00:50:17,200
And so, I'm just not sure how to do that in any way.

916
00:50:17,200 --> 00:50:22,400
That makes much sense without exporting the concept of generation of

917
00:50:22,400 --> 00:50:25,200
begin and end generation out to the platform layer.

918
00:50:27,000 --> 00:50:29,800
You know, which maybe is a what we should do.

919
00:50:31,800 --> 00:50:35,700
You know, maybe that should happen or maybe this better thing is like

920
00:50:35,700 --> 00:50:38,000
we shouldn't have really ever done this generation.

921
00:50:38,000 --> 00:50:39,400
I do stuff in the first place, right?

922
00:50:39,400 --> 00:50:44,700
I mean it could be that you know, because we did it mostly to support

923
00:50:44,700 --> 00:50:47,100
in fact entirely to support the stupid ground chunks.

924
00:50:47,800 --> 00:50:51,700
So it may be that that's just a huge pain in the butt for no apparent

925
00:50:51,700 --> 00:50:53,900
reason and if we just decide to kill the ground chunks and no one

926
00:50:53,900 --> 00:50:55,400
would care, right?

927
00:50:55,800 --> 00:50:56,500
Because

928
00:50:58,500 --> 00:50:59,600
otherwise, if we

929
00:51:00,000 --> 00:51:01,200
And support the ground chunk stuff.

930
00:51:01,200 --> 00:51:06,200
We just have one centralized time when assets are cleaned up and we

931
00:51:06,200 --> 00:51:09,400
would never have to worry about the Generation stuff at all right?

932
00:51:10,300 --> 00:51:12,700
So I don't know.

933
00:51:12,700 --> 00:51:15,500
It's six of one half-dozen other, it does kind of seem like it

934
00:51:15,500 --> 00:51:18,100
probably wants to go that way like because it just seems like adding

935
00:51:18,100 --> 00:51:20,700
all this complexity that doesn't really need to be there and I can't

936
00:51:20,700 --> 00:51:22,300
think of any reason why we actually care.

937
00:51:23,400 --> 00:51:27,500
So, but, you know, I just don't want to touch too many moving pieces

938
00:51:27,500 --> 00:51:28,100
at once.

939
00:51:29,500 --> 00:51:33,800
so maybe what we'll say is we'll just say something like if trance

940
00:51:33,800 --> 00:51:41,900
State main generation ID, you know, go ahead and let that cycle, the

941
00:51:41,900 --> 00:51:46,400
generations at that time, but I think I might say to do, we should

942
00:51:46,400 --> 00:51:47,200
probably

943
00:51:48,700 --> 00:51:56,500
Paul the Generation stuff, because if we don't use ground chunks, it's

944
00:51:56,500 --> 00:52:01,100
a huge waste of effort.

945
00:52:03,000 --> 00:52:05,400
All right, so yeah.

946
00:52:06,900 --> 00:52:07,400
Yeah.

947
00:52:09,800 --> 00:52:11,300
I'm okay with the rest of that.

948
00:52:12,800 --> 00:52:13,300
So yeah.

949
00:52:13,300 --> 00:52:17,300
So at that point, since the generation ID stuff, would now be in here?

950
00:52:17,600 --> 00:52:22,400
I guess, the command, buffer itself, doesn't actually need to have the

951
00:52:22,400 --> 00:52:23,800
Generation stuff in it.

952
00:52:24,100 --> 00:52:28,300
We can leave that stuff in the render group itself.

953
00:52:28,400 --> 00:52:31,600
It just doesn't do this stuff anymore, right?

954
00:52:32,700 --> 00:52:36,400
But it would still have in it what its generation ideas.

955
00:52:37,100 --> 00:52:42,400
So inside the render group would have that generation ID that doesn't

956
00:52:42,400 --> 00:52:43,000
have to be in here.

957
00:52:43,000 --> 00:52:43,400
Now,

958
00:52:45,400 --> 00:52:46,600
It can have that in there.

959
00:52:48,500 --> 00:52:50,200
And all we would do.

960
00:52:51,900 --> 00:52:56,600
Is inside here where you start it up, you would pass the generation ID

961
00:52:56,600 --> 00:52:57,100
in.

962
00:52:58,900 --> 00:53:01,300
Well actually no you just I guess you just get it.

963
00:53:01,300 --> 00:53:03,700
I know you pass it in right generation ID.

964
00:53:05,500 --> 00:53:08,100
And the trance State basically would pass that in here and so the

965
00:53:08,100 --> 00:53:12,700
render group would have generation ID set to whatever it needs to be

966
00:53:12,700 --> 00:53:13,300
set to.

967
00:53:14,500 --> 00:53:18,800
And that seems fine so clear undervalues, doesn't need to happen every

968
00:53:18,800 --> 00:53:19,400
anymore.

969
00:53:19,400 --> 00:53:22,200
Here is our allocate render group or allocate render group actually

970
00:53:22,200 --> 00:53:24,700
doesn't need to do any of the things that's currently doing it all

971
00:53:24,700 --> 00:53:25,300
anyway.

972
00:53:26,400 --> 00:53:29,500
So it never needs to actually take a memory Arena or anything because

973
00:53:29,500 --> 00:53:34,500
it doesn't actually have to do any memory allocation anymore, right?

974
00:53:34,900 --> 00:53:38,400
So now it's just something that holds the assets doesn't need an

975
00:53:38,400 --> 00:53:38,800
arena.

976
00:53:38,800 --> 00:53:40,400
Doesn't need to push buffer size.

977
00:53:40,400 --> 00:53:43,100
All it actually needs is the game render commands.

978
00:53:44,300 --> 00:53:46,800
Not that it's going to push to that's it.

979
00:53:47,600 --> 00:53:50,500
And so the render group basically has a thing in here which is, you

980
00:53:50,500 --> 00:53:53,900
know, game render commands commands

981
00:53:57,000 --> 00:53:58,200
And then it's like, okay, game.

982
00:53:58,700 --> 00:53:59,800
We got the camera transfer.

983
00:54:00,000 --> 00:54:00,500
Whatever.

984
00:54:01,100 --> 00:54:06,300
And yeah, missing resource count may want to flow through as well.

985
00:54:06,300 --> 00:54:10,300
We'll see about that in a second but I think everything else is pretty

986
00:54:10,300 --> 00:54:11,200
much right here.

987
00:54:11,900 --> 00:54:13,200
We come up with a five minute warning.

988
00:54:13,600 --> 00:54:17,500
I'm going to probably leave things non compiling today because I

989
00:54:17,500 --> 00:54:21,500
don't, we're right in the middle of a bunch of sort of moving things

990
00:54:21,500 --> 00:54:23,100
around, and I want to finish that.

991
00:54:23,100 --> 00:54:27,000
So, we'll do that tomorrow and and continue on with that.

992
00:54:27,000 --> 00:54:29,200
So anyway, inside allocate render group.

993
00:54:30,800 --> 00:54:33,400
We would pass in that generation ID, we'd stick it in here, and that'd

994
00:54:33,400 --> 00:54:34,000
be fine.

995
00:54:34,900 --> 00:54:37,400
And then all the rest of the stuff like sort and should have pushed by

996
00:54:37,400 --> 00:54:42,000
precise with realm account, all of that stuff goes away and we really

997
00:54:42,000 --> 00:54:43,100
are just going to be storing.

998
00:54:43,100 --> 00:54:45,900
Now instead, I guess it's a result here.

999
00:54:54,500 --> 00:54:55,300
Inside here.

1000
00:54:55,300 --> 00:55:00,800
I guess what we would probably say is that the commands get stored

1001
00:55:00,800 --> 00:55:01,800
just as a pointer

1002
00:55:03,400 --> 00:55:09,300
We don't need this and I think that's everything.

1003
00:55:10,600 --> 00:55:11,200
Right.

1004
00:55:13,600 --> 00:55:15,000
So that looks about right to me.

1005
00:55:16,500 --> 00:55:20,300
So we got out our allocate render group, we've got all the rest of the

1006
00:55:20,300 --> 00:55:22,000
stuff going answer.

1007
00:55:22,000 --> 00:55:26,800
Now I'll be to have to do, is in here where we talk about things like

1008
00:55:27,000 --> 00:55:27,600
the render group.

1009
00:55:27,600 --> 00:55:34,400
We do reference that group commands, we would take our game render

1010
00:55:34,400 --> 00:55:35,200
commands.

1011
00:55:37,100 --> 00:55:40,700
And everywhere that we were referencing pushed buffer, kinds of stuff.

1012
00:55:41,200 --> 00:55:44,500
We're now going to reference, you know,

1013
00:55:47,900 --> 00:55:49,000
That command buffer.

1014
00:55:56,900 --> 00:55:57,800
that's,

1015
00:55:59,300 --> 00:56:01,000
That's all that is.

1016
00:56:01,000 --> 00:56:01,600
I think,

1017
00:56:04,400 --> 00:56:04,900
All right.

1018
00:56:05,300 --> 00:56:08,800
So yeah so the arena doesn't happen anymore so now we do an allocate

1019
00:56:08,800 --> 00:56:11,600
render group, we're not really going to be doing that anymore.

1020
00:56:12,100 --> 00:56:16,900
This is more going to just be like it render group or begin render

1021
00:56:16,900 --> 00:56:19,300
group kind of a thing.

1022
00:56:20,600 --> 00:56:24,300
And then, I guess we'll have an end render group call as well.

1023
00:56:24,500 --> 00:56:25,300
So, our begin.

1024
00:56:25,900 --> 00:56:28,500
So our previous thing we did begin and render.

1025
00:56:29,000 --> 00:56:32,900
We're now we're just straight up doing beginning and render group,

1026
00:56:33,100 --> 00:56:33,600
right?

1027
00:56:36,200 --> 00:56:40,900
So we we don't we no longer allocate begin end, we just begin end.

1028
00:56:41,700 --> 00:56:44,500
And the only reason this is even here is I think we want to do

1029
00:56:44,500 --> 00:56:47,600
something like in the future.

1030
00:56:48,000 --> 00:56:56,800
This kind of thing, you know, render group commands, missing resource

1031
00:56:56,800 --> 00:56:58,500
cap, plus equals

1032
00:57:00,200 --> 00:57:03,900
Render group missing resource, can't something like that.

1033
00:57:03,900 --> 00:57:06,100
Probably, although, who knows, maybe don't even really need to do

1034
00:57:06,100 --> 00:57:06,600
that.

1035
00:57:07,800 --> 00:57:10,000
So the push truck doesn't happen.

1036
00:57:10,100 --> 00:57:14,200
Now, render group results.

1037
00:57:15,100 --> 00:57:18,900
Let's go ahead and make that happen.

1038
00:57:21,000 --> 00:57:21,600
There we go.

1039
00:57:23,800 --> 00:57:25,500
Inside render.

1040
00:57:30,000 --> 00:57:33,200
Let's see, that's not even a thing anymore.

1041
00:57:36,300 --> 00:57:38,100
That is commands now.

1042
00:57:42,100 --> 00:57:47,000
Allocate render group identifier and I found that's true.

1043
00:57:50,600 --> 00:57:52,800
And let's go ahead and grab that out.

1044
00:57:57,000 --> 00:58:02,600
Can render group does not need any of this does.

1045
00:58:02,600 --> 00:58:05,200
However, need two main generation, ID thing,

1046
00:58:07,200 --> 00:58:11,600
All right, this would be its own generation ID right now, so that

1047
00:58:11,600 --> 00:58:15,900
would actually be chunk generation ID.

1048
00:58:17,100 --> 00:58:18,700
You know, why am I even porting this code?

1049
00:58:20,000 --> 00:58:22,900
This ground chunks have been, nothing but Annoying the entire time and

1050
00:58:22,900 --> 00:58:24,400
I don't even want them in the game.

1051
00:58:25,500 --> 00:58:26,700
I feel like these are just

1052
00:58:28,500 --> 00:58:29,600
I do not like,

1053
00:58:30,800 --> 00:58:33,700
Do does not want ground chunk.

1054
00:58:37,500 --> 00:58:40,300
Of course, probably do that.

1055
00:58:40,400 --> 00:58:40,900
At least.

1056
00:58:41,800 --> 00:58:42,100
All right.

1057
00:58:42,100 --> 00:58:44,800
So main generation ID, right?

1058
00:58:44,800 --> 00:58:46,400
We don't actually know what that is yet.

1059
00:58:46,400 --> 00:58:47,500
That's okay.

1060
00:58:48,500 --> 00:58:53,000
Let's go ahead and do the transient oriented State and we need our

1061
00:58:54,000 --> 00:58:55,300
main generation ID.

1062
00:58:59,000 --> 00:59:04,300
There and that should do it.

1063
00:59:04,300 --> 00:59:05,000
I think.

1064
00:59:07,100 --> 00:59:07,400
Yeah.

1065
00:59:12,300 --> 00:59:14,200
All right, looks like we're just about time.

1066
00:59:15,400 --> 00:59:15,800
Okay.

1067
00:59:15,800 --> 00:59:18,500
Trender group not found.

1068
00:59:18,600 --> 00:59:19,600
That's fine.

1069
00:59:26,100 --> 00:59:29,200
I don't really want to have to change everyone from to put a fan.

1070
00:59:29,200 --> 00:59:30,900
So I'm just going to sort of substitute that in here.

1071
00:59:30,900 --> 00:59:36,200
So we do render group render group equals begin render group, there's

1072
00:59:36,200 --> 00:59:38,400
the Train Arena.

1073
00:59:38,400 --> 00:59:42,900
And in the end the those two basically can go entirely away and then

1074
00:59:42,900 --> 00:59:45,700
we just passed that main generation ID in here.

1075
00:59:48,700 --> 00:59:49,800
Sorry, begin render group.

1076
00:59:54,000 --> 00:59:54,500
Okay.

1077
00:59:55,900 --> 00:59:57,000
And.

1078
00:59:57,500 --> 00:59:59,200
And what else does it need?

1079
00:59:59,200 --> 00:59:59,600
Oh, it needs the

1080
01:00:00,200 --> 01:00:02,000
It needs render commands, right?

1081
01:00:02,900 --> 01:00:03,300
Oops.

1082
01:00:07,700 --> 01:00:08,900
Let's see.

1083
01:00:09,000 --> 01:00:10,800
Oh and they go in the opposite order as well.

1084
01:00:13,900 --> 01:00:19,000
So now we've got the begin rendering now we already do that.

1085
01:00:19,000 --> 01:00:26,700
So end render is just and rendered group now and and temporary memory

1086
01:00:26,700 --> 01:00:27,800
render memory.

1087
01:00:27,800 --> 01:00:32,100
I don't know that anyone's actually using any memory inside this area

1088
01:00:32,100 --> 01:00:33,500
anymore anyway.

1089
01:00:36,300 --> 01:00:39,500
So I think that might go away as well.

1090
01:00:40,800 --> 01:00:45,100
I mean, I guess we might want to leave the Train Arena doing that but

1091
01:00:45,100 --> 01:00:49,200
we can probably get rid of that boxing if that makes sense.

1092
01:00:51,500 --> 01:00:53,400
So that's probably just a waste of time now.

1093
01:00:54,300 --> 01:00:56,700
Anyway, so we got draw buffer.

1094
01:00:58,400 --> 01:01:00,800
so, all of these things that take the draw, buffer,

1095
01:01:04,000 --> 01:01:07,400
I guess they're probably just taking those two so they have like a

1096
01:01:07,400 --> 01:01:08,400
width and height to them.

1097
01:01:08,400 --> 01:01:11,900
I'm guessing not really, I don't guess, I don't really know why they

1098
01:01:11,900 --> 01:01:12,400
take the draw.

1099
01:01:12,400 --> 01:01:13,000
Buffer.

1100
01:01:13,900 --> 01:01:17,400
In fact, is there some way we can find out why they take the drug

1101
01:01:17,400 --> 01:01:17,900
buffer?

1102
01:01:18,500 --> 01:01:20,600
What does updated render title screen?

1103
01:01:20,600 --> 01:01:21,600
Need that for

1104
01:01:29,800 --> 01:01:34,000
Yes, it's just using that to set the perspective, so it doesn't really

1105
01:01:34,000 --> 01:01:35,100
need the draw buffer.

1106
01:01:35,100 --> 01:01:40,000
What it really needs to know is just what the render output size is

1107
01:01:40,200 --> 01:01:42,600
for the screen, right?

1108
01:01:42,900 --> 01:01:47,400
And so, that's actually something that we want to probably be doing in

1109
01:01:47,400 --> 01:01:49,900
a different way for the moment.

1110
01:01:49,900 --> 01:01:54,200
You know, we can just do that with the render commands.

1111
01:01:55,500 --> 01:01:59,600
Because it's got the width and the height in it, so we can if we want

1112
01:01:59,600 --> 01:02:03,600
to do like loaded bitmap draw buffer.

1113
01:02:08,700 --> 01:02:16,700
To Casey eliminate these entirely and this could just be passing that

1114
01:02:16,700 --> 01:02:17,300
through.

1115
01:02:17,500 --> 01:02:22,200
But what we can do is just make that be something that's actually a

1116
01:02:22,200 --> 01:02:24,300
little more understood through the system.

1117
01:02:24,500 --> 01:02:29,300
What do you know, what a like Target area is that it's rendering to so

1118
01:02:29,300 --> 01:02:31,100
draw, buffer could really go away.

1119
01:02:31,100 --> 01:02:34,300
And no one would miss it in the slightest.

1120
01:02:36,200 --> 01:02:39,600
So that's probably something we should change that instead of being a

1121
01:02:39,600 --> 01:02:43,600
draw buffer to just being ass like a screen spec like here is the

1122
01:02:43,600 --> 01:02:47,700
specification for the output area that I actually want you to do.

1123
01:02:47,700 --> 01:02:50,000
So render to Output actually now.

1124
01:02:50,000 --> 01:02:51,400
No longer has to happen.

1125
01:02:51,400 --> 01:02:57,700
All resources present is something we may want to have happen outside

1126
01:02:57,700 --> 01:02:59,900
and that's why I said we may want to

1127
01:03:00,000 --> 01:03:00,900
That in there.

1128
01:03:02,300 --> 01:03:07,500
Again, I'm going to just put that in here as a little like to do.

1129
01:03:07,500 --> 01:03:15,600
Casey, do we want to check for resources like before probably?

1130
01:03:18,000 --> 01:03:22,400
So yeah, so then we've got our our debug stuff here at this again is

1131
01:03:22,400 --> 01:03:27,800
going to be a begin render group like much like before and in our

1132
01:03:27,800 --> 01:03:31,400
debug State whereas our debug states, there it is.

1133
01:03:31,600 --> 01:03:35,400
Render group that can actually destroy the render group no real reason

1134
01:03:35,400 --> 01:03:36,000
not to.

1135
01:03:36,800 --> 01:03:39,700
So that can do a begin render group here.

1136
01:03:39,700 --> 01:03:42,900
But that only happens when we're not on ischl eyes, so that actually

1137
01:03:42,900 --> 01:03:43,900
needs to happen.

1138
01:03:46,100 --> 01:03:46,700
Right here.

1139
01:03:48,100 --> 01:03:48,600
Right?

1140
01:03:49,700 --> 01:03:52,800
So when we do our render group for begin render, that's going to

1141
01:03:52,800 --> 01:03:53,600
happen right here.

1142
01:03:53,600 --> 01:03:56,200
And in fact, I guess now with that means I guess I don't know.

1143
01:03:56,200 --> 01:03:59,000
Do we probably don't even need to save this, do we?

1144
01:04:00,200 --> 01:04:01,000
Maybe we do.

1145
01:04:02,100 --> 01:04:04,300
Well yeah, I guess we access it from there.

1146
01:04:04,900 --> 01:04:07,500
So if we do debug render group, we do begin render group.

1147
01:04:07,600 --> 01:04:13,200
We have the assets because we can get the assets, right?

1148
01:04:13,500 --> 01:04:14,900
That's what we were doing here.

1149
01:04:16,100 --> 01:04:18,100
So we could do a beginner render group.

1150
01:04:18,300 --> 01:04:21,000
We don't need any of the Arena's anymore, which is really nice.

1151
01:04:21,200 --> 01:04:22,800
So, those aren't getting polluted at all.

1152
01:04:23,300 --> 01:04:29,900
And then we can still use that main generation ID, I guess we could

1153
01:04:29,900 --> 01:04:31,800
also just bump

1154
01:04:31,900 --> 01:04:34,100
Generation it probably.

1155
01:04:37,400 --> 01:04:38,000
No, we can't.

1156
01:04:38,000 --> 01:04:39,800
It's got to stay locked till after the render.

1157
01:04:40,300 --> 01:04:44,800
So, inside this begin render group here, we need to pass the same one.

1158
01:04:44,800 --> 01:04:49,500
So, when we do the assets here, where we doing that,

1159
01:04:51,300 --> 01:04:55,700
Debug get assets, get set.

1160
01:04:58,800 --> 01:05:02,100
When we do our debug get game assets, it essentially needs it needs to

1161
01:05:02,100 --> 01:05:05,300
do this same exact process, right?

1162
01:05:06,900 --> 01:05:11,900
So in here we need to do like debug get main generation ID.

1163
01:05:14,100 --> 01:05:18,200
And hopefully, like I said, I would really prefer if we could

1164
01:05:18,200 --> 01:05:19,400
eliminate that look.

1165
01:05:19,400 --> 01:05:22,100
I don't like the fact that we still have to do that generation.

1166
01:05:22,200 --> 01:05:23,400
I don't think it's something.

1167
01:05:23,400 --> 01:05:29,500
We probably want to keep just based on it's like what I perceive its

1168
01:05:29,500 --> 01:05:33,000
main value to be versus how complicated it makes things.

1169
01:05:33,300 --> 01:05:35,200
It just doesn't seem like a good trade-off.

1170
01:05:35,900 --> 01:05:38,500
So I kind of feel like that's something that we would want to get rid

1171
01:05:38,500 --> 01:05:38,700
of

1172
01:05:40,000 --> 01:05:43,800
So there's the results and this would be exactly the same as it was

1173
01:05:43,800 --> 01:05:44,400
before.

1174
01:05:52,800 --> 01:05:59,300
Yeah, to do Casey, really want to get rid.

1175
01:06:01,000 --> 01:06:02,500
The name generation ID.

1176
01:06:06,000 --> 01:06:07,600
Yeah, oops.

1177
01:06:10,700 --> 01:06:14,800
So let's see, can I cover from render group to render group?

1178
01:06:16,500 --> 01:06:17,300
That's true.

1179
01:06:18,600 --> 01:06:19,900
Should probably stop soon huh.

1180
01:06:20,300 --> 01:06:23,000
I hate what I'm in the middle of reorganizing code and I have stopped.

1181
01:06:23,000 --> 01:06:26,500
That's the probably worst part about handmade hero.

1182
01:06:26,500 --> 01:06:31,000
You gotta say what you gonna do, man, what you going to do?

1183
01:06:31,700 --> 01:06:33,100
So, render group,

1184
01:06:34,700 --> 01:06:37,100
Just needs to be flattened out a little here.

1185
01:06:37,600 --> 01:06:40,200
Know why these guys never yeah.

1186
01:06:42,600 --> 01:06:46,300
Quite did it got a pointer to the render group snapped but they

1187
01:06:46,300 --> 01:06:47,800
didn't, whatever reason.

1188
01:06:50,200 --> 01:06:50,800
There we go.

1189
01:06:57,200 --> 01:06:58,900
Actually, that one already has a renter if Y.

1190
01:06:58,900 --> 01:07:00,000
Is it still dereferencing?

1191
01:07:00,000 --> 01:07:01,100
It does.

1192
01:07:01,100 --> 01:07:03,800
Anyone know can't we just do that?

1193
01:07:06,400 --> 01:07:08,300
Where is our memory?

1194
01:07:08,400 --> 01:07:13,800
Oh, assets, get passed into the debug start, so that's unfortunate

1195
01:07:14,300 --> 01:07:16,500
that basically means that we'd probably have to do this here.

1196
01:07:16,500 --> 01:07:19,800
So generation ID

1197
01:07:26,200 --> 01:07:27,700
so, when we call debug start,

1198
01:07:29,700 --> 01:07:31,000
Right would save me.

1199
01:07:31,600 --> 01:07:33,000
Well actually, I guess we just do it right here.

1200
01:07:37,900 --> 01:07:39,000
Okay, so begin render.

1201
01:07:39,000 --> 01:07:44,500
Group function is not take three arguments.

1202
01:07:46,700 --> 01:07:47,500
That is true.

1203
01:07:48,300 --> 01:07:54,400
And so now, we need to also pass in the, the render commands, right?

1204
01:07:56,400 --> 01:07:59,500
Let's get what we called that in the platform thing.

1205
01:07:59,500 --> 01:08:01,600
It's game render commands.

1206
01:08:02,300 --> 01:08:05,000
So, we've got our game render commands commands.

1207
01:08:05,800 --> 01:08:11,100
And when we call into here, we need to pass those commands in

1208
01:08:14,800 --> 01:08:16,700
and,

1209
01:08:18,600 --> 01:08:20,100
That such the typo.

1210
01:08:21,500 --> 01:08:22,800
Push font.

1211
01:08:24,399 --> 01:08:29,300
All of these are obviously render group things.

1212
01:08:29,700 --> 01:08:33,500
Don't know why, that's not just using the regular asset call, but no,

1213
01:08:33,600 --> 01:08:35,100
no bother no worries.

1214
01:08:36,500 --> 01:08:39,800
And then, let's see, we've got our debug State render group here.

1215
01:08:41,100 --> 01:08:43,100
That's the same thing we were having before.

1216
01:08:44,800 --> 01:08:47,100
Let's see what else we've got on Project.

1217
01:08:51,700 --> 01:08:57,500
Render to Output doesn't exist anymore and render does, there it is.

1218
01:09:01,700 --> 01:09:02,399
And there we go.

1219
01:09:02,399 --> 01:09:03,800
So here's our, debug start.

1220
01:09:03,800 --> 01:09:08,399
Call our debug start called debug State assets.

1221
01:09:08,899 --> 01:09:10,700
It's going to have to pass the commands.

1222
01:09:11,300 --> 01:09:17,800
So now we've got render commands in there and so debug game frame and

1223
01:09:17,800 --> 01:09:20,399
needs to take that as well, right?

1224
01:09:20,800 --> 01:09:27,800
So, debug game frame, and in the platform layer, where's that guy at

1225
01:09:28,399 --> 01:09:29,600
process State?

1226
01:09:30,700 --> 01:09:31,300
Let's see.

1227
01:09:31,800 --> 01:09:33,000
We've got debug.

1228
01:09:33,100 --> 01:09:36,000
Yeah, let's see.

1229
01:09:37,100 --> 01:09:38,399
Where is it?

1230
01:09:39,000 --> 01:09:40,300
Where did it go?

1231
01:09:41,300 --> 01:09:44,300
Where is my debug game frame end?

1232
01:09:47,500 --> 01:09:48,399
How is that?

1233
01:09:52,500 --> 01:09:53,700
Where's that defined?

1234
01:09:56,500 --> 01:10:00,500
This is one of those cases too old to remember this, many code bases

1235
01:10:00,500 --> 01:10:01,100
at once.

1236
01:10:05,600 --> 01:10:07,500
Because shouldn't that be in the platform layer?

1237
01:10:07,500 --> 01:10:10,700
It's called from the platform layer, isn't it?

1238
01:10:12,800 --> 01:10:13,900
I thought we did.

1239
01:10:19,100 --> 01:10:23,000
Oh, I know where it is, right?

1240
01:10:23,300 --> 01:10:23,900
It's right here.

1241
01:10:25,400 --> 01:10:27,500
We pulled the debug stuff out into a separate place.

1242
01:10:27,500 --> 01:10:28,200
That's fine.

1243
01:10:28,600 --> 01:10:29,600
I'm fine with that.

1244
01:10:30,200 --> 01:10:32,500
So it doesn't need the game off-screen buffer anymore.

1245
01:10:34,200 --> 01:10:37,500
It just needs the render commands, right?

1246
01:10:37,500 --> 01:10:40,300
So game render commands commands,

1247
01:10:42,100 --> 01:10:42,600
Go.

1248
01:10:47,500 --> 01:10:50,700
And so now we just say, Okay, render commands and same thing here,

1249
01:10:50,700 --> 01:10:54,900
render commands come in here, I don't know why deep what does debug

1250
01:10:54,900 --> 01:10:55,300
end?

1251
01:10:55,300 --> 01:10:58,900
What does debug I've actually do with the draw buffer, raw buffer,

1252
01:11:01,400 --> 01:11:02,800
Absolutely nothing.

1253
01:11:12,800 --> 01:11:17,100
All right, so this is actually just render commands within height.

1254
01:11:19,000 --> 01:11:19,600
And done.

1255
01:11:21,000 --> 01:11:27,600
All right, Sue somewhat, surprisingly, we can now stop and go to Q&A,

1256
01:11:27,600 --> 01:11:34,300
but surprisingly, that's actually all of the game.

1257
01:11:35,000 --> 01:11:37,800
Structural stuff, the game now, compiles.

1258
01:11:38,100 --> 01:11:41,800
So we're only dealing with the other part here, which is better than I

1259
01:11:41,800 --> 01:11:43,000
would have expected.

1260
01:11:43,600 --> 01:11:45,000
That didn't take too long.

1261
01:11:45,500 --> 01:11:47,900
So that's not bad because I ended up deciding to make a lot more

1262
01:11:47,900 --> 01:11:50,100
changes than I was originally going to because I kind of wanted to

1263
01:11:51,000 --> 01:11:52,200
Clean all of that out.

1264
01:11:53,100 --> 01:11:56,700
So now those two systems both pile everything on to their, the render

1265
01:11:56,700 --> 01:11:59,300
commands, the render commands them comes out to the platform layer and

1266
01:11:59,300 --> 01:11:59,800
then we can do it.

1267
01:12:00,000 --> 01:12:00,800
We want with it.

1268
01:12:01,600 --> 01:12:05,400
So we now just have to go back and finish up this part here, right?

1269
01:12:05,800 --> 01:12:06,400
So,

1270
01:12:08,700 --> 01:12:10,200
yeah, I mean basically like

1271
01:12:12,400 --> 01:12:14,600
But that doesn't actually have to happen anymore.

1272
01:12:14,600 --> 01:12:15,100
Either does it.

1273
01:12:15,300 --> 01:12:19,500
So anyway, inside here, oh, hey, look.

1274
01:12:19,500 --> 01:12:20,400
And we just need the 10 memory.

1275
01:12:20,400 --> 01:12:22,700
So this is going to be pretty if it's really tempting to just finish

1276
01:12:22,700 --> 01:12:23,700
this, but I'm going to not.

1277
01:12:23,700 --> 01:12:25,600
So, we'll save it for tomorrow.

1278
01:12:25,600 --> 01:12:29,800
I'm going to go ahead and, and, and go to the Q&A.

1279
01:12:29,800 --> 01:12:34,100
So, if you have a question about what we're doing here, please go

1280
01:12:34,100 --> 01:12:39,000
ahead and put it into the chat with Q: front of it, so I can see it.

1281
01:13:10,800 --> 01:13:14,700
Martin's, so no more hot reloading for renderer code.

1282
01:13:15,600 --> 01:13:16,300
So,

1283
01:13:18,700 --> 01:13:22,400
We can, if we want to I guess it's the way I would say it.

1284
01:13:24,900 --> 01:13:28,200
If we get to the point where we want to play with that a little bit,

1285
01:13:28,300 --> 01:13:32,400
then we certainly can the only cost to us is we just have to make

1286
01:13:32,400 --> 01:13:38,400
pointers in other words this stuff here, like handmade opengl and

1287
01:13:38,400 --> 01:13:38,900
that's tough.

1288
01:13:39,100 --> 01:13:44,700
If we want to we can just actually put that in the game code and and

1289
01:13:45,200 --> 01:13:48,800
give a pointer back to the platform Library so that's totally fine.

1290
01:13:55,600 --> 01:13:58,300
For the moment there won't be though until we decide to actually make

1291
01:13:58,300 --> 01:13:59,300
them call through a pointer.

1292
01:14:02,700 --> 01:14:05,100
Let's see, did you see handmade Quake?

1293
01:14:05,100 --> 01:14:07,500
Can you confirm whether it's of handmade quality?

1294
01:14:07,800 --> 01:14:13,000
I am aware of hammock wake, but I have not seen it myself, so I can't

1295
01:14:13,000 --> 01:14:16,500
confirm or anything else about it.

1296
01:14:18,500 --> 01:14:19,100
Sheba Caleb.

1297
01:14:19,100 --> 01:14:21,100
Casey you seem to have a grudge for the ground chunks.

1298
01:14:21,100 --> 01:14:22,600
Do you really hate them that much?

1299
01:14:23,700 --> 01:14:24,100
Yeah.

1300
01:14:24,100 --> 01:14:29,300
Because basically, they make they force a lot of multi-threading

1301
01:14:29,300 --> 01:14:34,400
issues that we wouldn't otherwise have to deal with and so that's fine

1302
01:14:35,200 --> 01:14:39,000
if you're getting something of value out of it, like if I really

1303
01:14:39,000 --> 01:14:42,500
wanted the ability to do compositing in the background going through

1304
01:14:42,500 --> 01:14:45,100
the same render path and all that stuff, right?

1305
01:14:45,400 --> 01:14:47,700
If I really wanted to be able to do that, then great.

1306
01:14:48,900 --> 01:14:51,200
But I don't really care.

1307
01:14:51,700 --> 01:14:54,300
I don't even think I really want the ground chunks anymore.

1308
01:14:54,300 --> 01:14:57,400
Like after, like I said on the other stream, I don't think the game is

1309
01:14:57,400 --> 01:14:58,300
actually to use them.

1310
01:15:00,800 --> 01:15:04,700
So I think it's just a lot of extra complexity that isn't doing us any

1311
01:15:04,700 --> 01:15:09,300
good and we could keep dealing with it just as an exercise because

1312
01:15:09,300 --> 01:15:11,700
hey, it's an educational stream and so why not.

1313
01:15:12,500 --> 01:15:14,800
But on the other hand, it's like, is that really the most productive

1314
01:15:14,800 --> 01:15:17,300
use of time and we sort of seen how we do it.

1315
01:15:17,300 --> 01:15:20,300
It would be more of that and we'd have to like keep thinking about it

1316
01:15:20,300 --> 01:15:23,300
and maybe maybe we can clean it up more and make it less of a problem.

1317
01:15:24,200 --> 01:15:27,200
And that's maybe interesting challenge but otherwise it's like, well

1318
01:15:27,200 --> 01:15:30,000
couldn't we just spend our time doing that.

1319
01:15:30,500 --> 01:15:33,100
Spend that time if we were going to spend it on something that was

1320
01:15:33,100 --> 01:15:37,200
more useful to the game solving that complexity, right?

1321
01:15:37,500 --> 01:15:37,900
So

1322
01:15:47,200 --> 01:15:48,500
Gun games, less of a question.

1323
01:15:48,500 --> 01:15:49,600
Where the thanks for doing this.

1324
01:15:49,600 --> 01:15:51,700
You've inspired me to pick up C and C will tell us again after quite a

1325
01:15:51,700 --> 01:15:52,300
long break.

1326
01:15:52,300 --> 01:15:54,800
So thanks, very glad to hear that.

1327
01:15:54,800 --> 01:15:55,600
I hope it goes.

1328
01:15:55,600 --> 01:15:58,900
Well, long Boolean, what was your original goal at the ground chunks?

1329
01:15:58,900 --> 01:16:00,000
And how has that changed?

1330
01:16:00,000 --> 01:16:03,500
Also, if you remove them, what will you replace them with?

1331
01:16:04,100 --> 01:16:06,400
So originally I was

1332
01:16:08,200 --> 01:16:15,200
Thinking that the outside of the game like in the Overworld area was

1333
01:16:15,200 --> 01:16:17,200
going to be more free form.

1334
01:16:18,700 --> 01:16:22,300
but the design of the game is such that I don't want it that way

1335
01:16:22,300 --> 01:16:27,900
anymore, like the outside needs to be like, kind of tile like like it

1336
01:16:27,900 --> 01:16:28,900
needs to be

1337
01:16:32,200 --> 01:16:34,100
it needs to not be fluid.

1338
01:16:34,700 --> 01:16:39,200
It things need to be more like a tile map for the game design.

1339
01:16:39,300 --> 01:16:44,900
Like not talking about the engine but the actual game design needs to

1340
01:16:44,900 --> 01:16:45,900
be more tile like.

1341
01:16:45,900 --> 01:16:48,800
And so I think the art has to back that up, which means that the

1342
01:16:48,800 --> 01:16:53,500
splatty ground chunk thing is maybe not really a very good idea.

1343
01:16:54,500 --> 01:16:59,500
The other thing would be even if it was a good idea, we probably could

1344
01:16:59,500 --> 01:17:01,600
just do it at runtime anyway because

1345
01:17:01,800 --> 01:17:04,300
Hardware rendering path is going to have plenty of extra horsepower.

1346
01:17:04,300 --> 01:17:05,400
Even the software any path.

1347
01:17:05,400 --> 01:17:08,800
Could probably do it at runtime with culling so I don't know.

1348
01:17:09,200 --> 01:17:11,000
So, I think the ground chunks are just a bad idea.

1349
01:17:17,800 --> 01:17:18,400
Chrome Dragon.

1350
01:17:18,400 --> 01:17:21,700
You may want to include a note in today's zip file about how it won't

1351
01:17:21,700 --> 01:17:22,500
compile.

1352
01:17:23,600 --> 01:17:24,700
You know, we could do

1353
01:17:33,800 --> 01:17:35,800
Is there an exit command for batch files?

1354
01:17:36,100 --> 01:17:36,500
Yes.

1355
01:18:09,100 --> 01:18:09,900
How's that look?

1356
01:18:16,000 --> 01:18:17,500
Slayer, why are you wearing earbuds?

1357
01:18:17,500 --> 01:18:19,900
Are you listening to something that is actually the microphone?

1358
01:18:21,300 --> 01:18:25,200
That is the the headset that I'm talking to you through, you would not

1359
01:18:25,200 --> 01:18:27,100
be able to hear me if I was not wearing them.

1360
01:18:28,400 --> 01:18:30,900
Canoe close, would you at some point compiled, a list of stuff?

1361
01:18:30,900 --> 01:18:32,000
Programmers should know.

1362
01:18:32,400 --> 01:18:35,700
I'd like some beginner level pointers like this are algorithms

1363
01:18:35,800 --> 01:18:36,500
algorithm types.

1364
01:18:36,500 --> 01:18:41,600
You should know sorting being one type and such, I mean, I think

1365
01:18:41,600 --> 01:18:43,000
that's a great idea.

1366
01:18:43,500 --> 01:18:45,100
Do I have time to do that?

1367
01:18:45,100 --> 01:18:46,900
No, because that's a fairly involved Endeavor.

1368
01:18:46,900 --> 01:18:50,100
There's a lot of stuff that programmers should know.

1369
01:18:51,200 --> 01:18:53,700
So is that a good idea?

1370
01:18:53,700 --> 01:18:54,200
Yes.

1371
01:18:54,200 --> 01:18:55,500
It is a very good idea.

1372
01:18:55,500 --> 01:18:56,600
Will I be doing it?

1373
01:18:56,700 --> 01:18:57,400
Unfortunately?

1374
01:18:57,400 --> 01:18:58,000
Probably not.

1375
01:18:58,200 --> 01:18:59,700
At least not for several years.

1376
01:18:59,700 --> 01:19:02,100
Maybe someone else will have time to do it.

1377
01:19:02,800 --> 01:19:04,600
It would be a nice resource for sure.

1378
01:19:23,200 --> 01:19:27,500
Any other Q: are we done?

1379
01:19:40,600 --> 01:19:41,500
Looks like we done.

1380
01:19:51,500 --> 01:19:54,300
All right, we gonna wrap it up.

1381
01:19:57,600 --> 01:19:59,100
We gon wrap it up.

1382
01:19:59,800 --> 01:20:00,800
Save

1383
01:20:11,500 --> 01:20:14,900
All right, good to go.

1384
01:20:15,900 --> 01:20:18,300
Thank you for joining me for another episode of handmade hero.

1385
01:20:18,400 --> 01:20:19,900
It has been a pleasure coding with you.

1386
01:20:19,900 --> 01:20:24,800
As always, if you would like to keep up-to-date on handmade hero and

1387
01:20:24,800 --> 01:20:26,500
play around with it at home, you could always pre-order the game.

1388
01:20:26,500 --> 01:20:30,500
It comes with a source code, I updated every night so you can be

1389
01:20:30,900 --> 01:20:35,400
playing with the very latest and greatest handmade code base which

1390
01:20:35,400 --> 01:20:36,300
tomorrow

1391
01:20:37,400 --> 01:20:41,700
Hopefully we will finish with the render reorganization there and be

1392
01:20:41,700 --> 01:20:45,000
moving on to something else.

1393
01:20:45,200 --> 01:20:50,700
I'm guessing, probably, we will have to move on to texture downloading

1394
01:20:50,700 --> 01:20:55,300
stuff so that's probably what we'll do until then you can always check

1395
01:20:55,300 --> 01:20:57,000
out the forums where you can ask questions.

1396
01:20:57,400 --> 01:20:58,600
Check out our patreon page.

1397
01:20:58,600 --> 01:20:59,900
Want sport the video series.

1398
01:21:00,000 --> 01:21:00,200
Art.

1399
01:21:00,200 --> 01:21:03,000
We fought so that you can find out when there is going to be live.

1400
01:21:03,300 --> 01:21:05,200
It will be live tomorrow, 5:00 p.m.

1401
01:21:05,200 --> 01:21:08,900
Pacific Standard Time, spoiler alert, but if you want to keep up to

1402
01:21:08,900 --> 01:21:11,200
date with a definitely type of tweetbot, because in case I reschedule

1403
01:21:11,200 --> 01:21:12,600
streams or stuff, that's always replace.

1404
01:21:12,600 --> 01:21:16,100
That's accurate until then have fun coding everyone.

1405
01:21:16,100 --> 01:21:18,100
And I will see you guys on the internet.

1406
01:21:18,100 --> 01:21:18,700
Take it easy.

