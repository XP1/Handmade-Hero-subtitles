1
00:00:01,200 --> 00:00:03,700
Okay, hello everyone, and welcome to handmade hero.

2
00:00:03,700 --> 00:00:06,700
The show Rico to complete game live on Twitch know, libraries.

3
00:00:07,000 --> 00:00:07,600
No engines.

4
00:00:07,600 --> 00:00:08,300
It's just us.

5
00:00:09,000 --> 00:00:10,300
And our little typing fingers.

6
00:00:10,300 --> 00:00:14,500
We have come to the point in the code where it's time to do a sound

7
00:00:14,500 --> 00:00:15,200
mixer.

8
00:00:15,400 --> 00:00:19,900
And as I explained yesterday, in excruciating detail, sound is kind of

9
00:00:19,900 --> 00:00:24,000
a weird beast, but most of the things that we want to do in terms of

10
00:00:24,000 --> 00:00:27,400
mixing sound for games are actually fairly simple and straightforward

11
00:00:27,500 --> 00:00:30,000
and so, this should not be terribly.

12
00:00:30,200 --> 00:00:31,400
Challenging endeavor.

13
00:00:34,500 --> 00:00:39,600
So what I think we will do today is Right a very basic sound mixer to

14
00:00:39,600 --> 00:00:42,300
start with and just get that working properly and work out what we

15
00:00:42,300 --> 00:00:45,500
would like the interface to that, sound mixer to be and then what we

16
00:00:45,500 --> 00:00:49,600
will do, probably next week is maybe drop it down into Cindy and make

17
00:00:49,600 --> 00:00:51,500
a few concessions to how it works.

18
00:00:51,800 --> 00:00:54,300
So that we can make sure that we operate properly wide.

19
00:00:54,300 --> 00:00:57,100
We don't really have to go nuts, optimizing it or anything like this,

20
00:00:57,600 --> 00:01:00,600
but just wanted to kind of do a little work there.

21
00:01:00,600 --> 00:01:03,400
Just we can see if there's any conceits we have to make in the API to

22
00:01:03,400 --> 00:01:04,000
make sure.

23
00:01:04,300 --> 00:01:06,900
That, that sort of stuff works smoothly.

24
00:01:07,400 --> 00:01:10,700
So we're going to be coding today, a bunch of code.

25
00:01:10,700 --> 00:01:13,500
So, if you would like to follow along at home, it is day 140, make

26
00:01:13,500 --> 00:01:17,100
sure you unpack day, 139 source, code out of the zip.

27
00:01:17,100 --> 00:01:20,600
If you preorder the game on handmade hero and downloaded that source

28
00:01:20,600 --> 00:01:23,200
file, you want, you want that code to start with?

29
00:01:23,200 --> 00:01:25,500
Because that is what I am starting with today.

30
00:01:26,400 --> 00:01:26,800
Okay?

31
00:01:26,800 --> 00:01:32,100
So if you remember where we left off, we had loaded that yesterday was

32
00:01:32,100 --> 00:01:33,400
just a day where I explained everything.

33
00:01:33,400 --> 00:01:34,100
But the day before that

34
00:01:34,200 --> 00:01:38,600
we had loaded sound files, we loaded wav files, and we have it so that

35
00:01:38,600 --> 00:01:42,100
we can play back any one of them that we chose, I left it in here,

36
00:01:42,100 --> 00:01:48,600
where it's playing back, you know, a like what was I going to say?

37
00:01:48,800 --> 00:01:52,900
We left it playing back, am a piano sample and one of the things that

38
00:01:52,900 --> 00:01:55,700
we have set up right now which, you know, maybe isn't a good idea.

39
00:01:55,700 --> 00:01:58,700
But the way that we had our platform code set up is if we miss our

40
00:01:58,700 --> 00:02:00,600
frame rate, we get tearing in the audio.

41
00:02:00,600 --> 00:02:01,600
So for example,

42
00:02:04,800 --> 00:02:07,900
Can you hear that little like skipping, right?

43
00:02:08,600 --> 00:02:12,400
Whereas if you you know, if we're running that's in debug mode so we

44
00:02:12,400 --> 00:02:13,200
don't make our frame rate.

45
00:02:13,200 --> 00:02:16,900
If we're running an optimized, we don't get that right.

46
00:02:16,900 --> 00:02:17,500
It's smooth.

47
00:02:17,500 --> 00:02:20,500
And again, that's just because we don't actually try to do anything to

48
00:02:21,100 --> 00:02:22,500
prevent that sort of stuff from happening.

49
00:02:22,500 --> 00:02:24,900
We assume we always said our frame rate and we're only outputting it

50
00:02:24,900 --> 00:02:29,500
as many audio samples as would be necessary to cover that Gap, right?

51
00:02:31,200 --> 00:02:34,100
So going from there,

52
00:02:34,500 --> 00:02:37,400
let's take, let's take a minute to think about what we're doing here.

53
00:02:37,400 --> 00:02:40,300
What we wanted, what we want to do and you can already see that.

54
00:02:40,300 --> 00:02:43,600
We've like I said, got one in here where we've got our game output

55
00:02:43,600 --> 00:02:44,600
sound here.

56
00:02:46,100 --> 00:02:50,800
What we want to do is we want to take this little Loop here, which is

57
00:02:50,800 --> 00:02:51,500
all it's doing.

58
00:02:51,500 --> 00:02:53,300
Is copying looped.

59
00:02:53,600 --> 00:02:55,300
The sound that we loaded the sound samples.

60
00:02:55,300 --> 00:02:59,100
We loaded is copping those into our sample out area here.

61
00:03:04,100 --> 00:03:10,700
And what we want to do is take this and convert this to something that

62
00:03:10,700 --> 00:03:14,400
can play an arbitrary number of sounds at an arbitrary arbitrary

63
00:03:14,400 --> 00:03:19,000
times, and have it all getting mixed down in some kind of satisfying

64
00:03:19,000 --> 00:03:19,500
way, right?

65
00:03:19,500 --> 00:03:23,300
So that we can have as many Sounds playing as we want and not have to

66
00:03:23,300 --> 00:03:24,300
worry about it, right?

67
00:03:24,500 --> 00:03:26,100
So that's our goal.

68
00:03:26,500 --> 00:03:29,800
And in order to do that, right, the way we have it set up right now.

69
00:03:30,000 --> 00:03:33,100
Actually you can see is we have a separate call for get some samples.

70
00:03:33,100 --> 00:03:35,700
And the reason that we have a separate call for that is because we

71
00:03:35,700 --> 00:03:39,500
thought we, may want to call it sort of separately from the way the

72
00:03:39,500 --> 00:03:41,100
rest of the stuff in the game state was working.

73
00:03:41,700 --> 00:03:44,400
So, I don't know if we want to make this something that can be called

74
00:03:44,400 --> 00:03:50,700
on separate threads or not, I'm not sure about that but in order to in

75
00:03:50,700 --> 00:03:52,900
order to do that there were a couple things that we might want to

76
00:03:52,900 --> 00:03:56,500
think about in terms of locking that sort of stuff so rather than go

77
00:03:56,500 --> 00:03:57,200
down that route.

78
00:03:57,200 --> 00:03:59,500
First I'm first going to write it just assuming.

79
00:04:00,000 --> 00:04:02,900
That whenever we produce the sound samples for the game, that is

80
00:04:02,900 --> 00:04:04,600
synchronous with the rest of the game.

81
00:04:04,800 --> 00:04:08,800
So in other words, the game, you know, other than our background tasks

82
00:04:08,800 --> 00:04:13,000
that we have running like building tiled things and whatever, other

83
00:04:13,000 --> 00:04:15,200
than those, we are not calling game.

84
00:04:15,200 --> 00:04:18,800
Get sound samples on a separate thread, it's just running in sync with

85
00:04:18,800 --> 00:04:22,000
the game for now, and we might change that in the future, but for now

86
00:04:22,000 --> 00:04:23,700
we're just going to assume that that's true.

87
00:04:24,500 --> 00:04:29,600
So, what I want to do, first of all, is I want to go ahead and have

88
00:04:29,600 --> 00:04:29,800
some

89
00:04:29,900 --> 00:04:33,600
Um, idea of what sounds are actually playing, right?

90
00:04:33,800 --> 00:04:39,700
So in handmade dot h, here in sort of the, this is probably going to

91
00:04:39,700 --> 00:04:40,600
be in the game State.

92
00:04:40,600 --> 00:04:44,800
I would assume we want to have some idea of all the sounds that are

93
00:04:44,800 --> 00:04:46,700
actually playing at the current time.

94
00:04:49,000 --> 00:04:49,300
Right.

95
00:04:49,300 --> 00:04:50,200
Just something like this.

96
00:04:51,800 --> 00:04:54,800
And so probably, I don't know, I mean, there's a lot of different ways

97
00:04:54,800 --> 00:04:58,000
that we could represent that maybe a linked list is something that

98
00:04:58,000 --> 00:04:59,800
seems pretty reasonable, right?

99
00:04:59,800 --> 00:05:03,300
We just throw things on the linked list and we just assume that

100
00:05:03,300 --> 00:05:04,500
everything in the link.

101
00:05:04,500 --> 00:05:06,000
This is playing we could do that.

102
00:05:06,100 --> 00:05:09,500
Another thing we could do is just have an array of a certain number of

103
00:05:09,500 --> 00:05:13,400
slots and we just say that we always play Only, You know, the number

104
00:05:13,400 --> 00:05:15,900
of sounds that are in the slots and so if you try to play something

105
00:05:15,900 --> 00:05:19,600
and there's you know, or and the slots are full, we just don't play

106
00:05:19,600 --> 00:05:21,200
it, you know, some kind of a thing like that.

107
00:05:21,900 --> 00:05:22,600
I don't really know.

108
00:05:23,000 --> 00:05:26,800
So for starters I think what I'll probably do is I will probably go

109
00:05:26,800 --> 00:05:31,100
ahead and make it be linked list space just for the moment because

110
00:05:31,100 --> 00:05:35,100
that seems like that seems like the most straightforward thing.

111
00:05:35,300 --> 00:05:39,300
So I'm just going to have a thing like playing sound like so on and

112
00:05:39,300 --> 00:05:42,100
it's just going to have a way to change itself, and then I'm just

113
00:05:42,100 --> 00:05:43,200
going to have a pointer down here.

114
00:05:43,200 --> 00:05:45,900
That's like, you know, playing sounds right?

115
00:05:45,900 --> 00:05:46,500
That's it.

116
00:05:47,900 --> 00:05:50,500
Or I guess I'll call that first playing sound right.

117
00:05:51,900 --> 00:05:56,100
And in this playing sound instruction here, this this playing

118
00:05:56,100 --> 00:05:56,800
SoundLink.

119
00:05:57,400 --> 00:05:59,800
What I want to do is I want to use its

120
00:06:00,000 --> 00:06:03,300
See the same sort of thing that we use for the renderer for now which

121
00:06:03,300 --> 00:06:06,500
is it's going to keep in it one of those sound IDs right?

122
00:06:06,500 --> 00:06:10,400
You remember we had this this concept here of representing things by

123
00:06:10,400 --> 00:06:13,000
d's and the reason we did that was so that we could have things that

124
00:06:13,000 --> 00:06:16,900
got loaded streamed in and out and we could still talk about the one

125
00:06:16,900 --> 00:06:17,700
that we wanted to talk about.

126
00:06:17,700 --> 00:06:18,100
Right?

127
00:06:18,100 --> 00:06:21,800
So I want to have a particular sound ID and I want to say that like

128
00:06:21,800 --> 00:06:23,900
this is the ID that's playing, okay?

129
00:06:24,100 --> 00:06:28,000
And then furthermore, what I need to know is I want to know some

130
00:06:28,000 --> 00:06:28,800
information about it.

131
00:06:28,800 --> 00:06:30,000
So for example, I might want

132
00:06:30,000 --> 00:06:32,500
I want to know what it's volume is, right?

133
00:06:32,500 --> 00:06:34,400
I might want to know like a number between zero and one.

134
00:06:34,400 --> 00:06:36,900
That's like how loud this thing is 0 being silent.

135
00:06:36,900 --> 00:06:39,700
And one being the full volume sound was recorded at originally

136
00:06:43,400 --> 00:06:44,700
So I'll throw that in there.

137
00:06:46,700 --> 00:06:49,400
Another thing we might want to do is since we're stereo.

138
00:06:49,800 --> 00:06:53,600
We could technically say that we have like two volumes like a left and

139
00:06:53,600 --> 00:06:54,200
a right volume.

140
00:06:54,200 --> 00:06:56,900
So this is what you know the you know what channel it goes into

141
00:06:56,900 --> 00:06:59,900
something like that, that seems reasonable as well.

142
00:07:00,700 --> 00:07:03,600
So I want to know that information and I also need to know.

143
00:07:03,600 --> 00:07:03,900
Right?

144
00:07:03,900 --> 00:07:08,100
If you go and look inside this thing, I need to know where I am in the

145
00:07:08,100 --> 00:07:08,500
sound.

146
00:07:08,500 --> 00:07:12,200
So as that sound plays over time, I need to know how many samples of

147
00:07:12,200 --> 00:07:15,400
the sound I've consumed so that I know when I'm

148
00:07:15,600 --> 00:07:19,500
No writing sound when I'm sort of gathering sound from that sample.

149
00:07:19,500 --> 00:07:23,200
I need to know how many samples I've already played, so that I don't

150
00:07:23,200 --> 00:07:24,200
play them again, right?

151
00:07:24,200 --> 00:07:26,700
When I'm when I'm copying these out into the output buffer, I need to

152
00:07:26,700 --> 00:07:31,400
know, sort of a play cursor inside that sound, if you will.

153
00:07:31,400 --> 00:07:32,000
Right.

154
00:07:32,200 --> 00:07:34,800
So I'm going to say, we have another one here, which is like samples

155
00:07:34,800 --> 00:07:38,400
consumed or something, right, or our samples played, something like

156
00:07:38,400 --> 00:07:38,800
that.

157
00:07:39,200 --> 00:07:39,600
Okay?

158
00:07:40,600 --> 00:07:42,500
And I think that's probably enough to get us started.

159
00:07:42,500 --> 00:07:45,300
Here, I'll go write the loop and see if that makes sense.

160
00:07:45,600 --> 00:07:48,200
But that seems like roughly what I want, you know, something where we

161
00:07:48,200 --> 00:07:52,700
just have this, and we just go through them and we, and we, you know,

162
00:07:52,700 --> 00:07:54,200
play them as we go, right?

163
00:07:54,400 --> 00:07:54,900
Okay.

164
00:07:55,200 --> 00:08:00,800
So in this Loop, what I would want to do is I want to say, okay,

165
00:08:02,400 --> 00:08:04,600
I've got these playing sounds, right.

166
00:08:05,100 --> 00:08:09,900
So here's my playing sound, I'm going to grab out from the game State,

167
00:08:10,800 --> 00:08:11,700
you know, whatever.

168
00:08:11,700 --> 00:08:15,500
The first one of those is, so let me grab out the first playing sound,

169
00:08:16,800 --> 00:08:18,300
go ahead and check that, are we here?

170
00:08:19,100 --> 00:08:21,900
And assuming that, that's valid.

171
00:08:22,000 --> 00:08:23,300
I'm going to go ahead and operate on it.

172
00:08:23,300 --> 00:08:26,100
And every time I operate on, I'm just going to move to the next one in

173
00:08:26,100 --> 00:08:26,500
the list.

174
00:08:26,500 --> 00:08:30,300
So inside here, we will operate on all of the playing sounds every

175
00:08:30,300 --> 00:08:31,300
time we want to produce our

176
00:08:31,500 --> 00:08:32,000
Examples.

177
00:08:36,100 --> 00:08:38,000
and, you know, now I think about too

178
00:08:39,200 --> 00:08:42,200
Another thing we might want to do just thinking about it a little bit

179
00:08:42,200 --> 00:08:42,900
more carefully.

180
00:08:43,200 --> 00:08:47,700
We might also want to queue things up in terms of samples ahead of

181
00:08:47,700 --> 00:08:48,100
time.

182
00:08:48,600 --> 00:08:50,700
So we may want to be able to set samples play too.

183
00:08:50,700 --> 00:08:52,600
Like a negative number right?

184
00:08:53,600 --> 00:08:56,800
Where we could kind of say like okay we want to delay, we don't want

185
00:08:56,800 --> 00:08:59,900
to play this sound for like, you know, half a second or

186
00:09:00,100 --> 00:09:03,100
I don't know if he really want to allow this and if we did allow it, I

187
00:09:03,100 --> 00:09:03,500
don't know that.

188
00:09:03,500 --> 00:09:07,200
We want to allow it at this level, but point being, we could allow you

189
00:09:07,200 --> 00:09:10,300
to set that to be a negative number so that it's essentially weights

190
00:09:10,400 --> 00:09:13,900
and then plays it a little bit later on if that makes sense.

191
00:09:17,400 --> 00:09:17,900
Okay.

192
00:09:20,100 --> 00:09:24,600
So assuming that we wanted to do it that way, what I then want to do,

193
00:09:24,600 --> 00:09:27,600
is I want to essentially do exactly this, this same Loop that we're

194
00:09:27,600 --> 00:09:28,300
doing here.

195
00:09:28,600 --> 00:09:31,700
So for every sample, that's in the sample buffer that we're trying to

196
00:09:31,700 --> 00:09:36,000
Output, I want to go ahead and output the sound but what I want to do,

197
00:09:36,700 --> 00:09:41,000
as you can see in here, we've got our original Loop is just copying

198
00:09:41,200 --> 00:09:45,000
16-bit sample data right into 16-bit output data.

199
00:09:45,600 --> 00:09:49,600
And this is not a particularly attractive option for us here.

200
00:09:49,800 --> 00:09:52,900
Because if you think about what's going to happen there as we're

201
00:09:52,900 --> 00:09:57,800
accumulating values into their, we might get a lot more, clipping the

202
00:09:57,800 --> 00:10:02,900
necessary if we were actually to just use 16-bit values as our

203
00:10:02,900 --> 00:10:03,800
intermediate buffer.

204
00:10:03,800 --> 00:10:07,800
So let me just quickly pop over here and explain this one part.

205
00:10:08,000 --> 00:10:11,100
It won't take very long, but let me just give you a little bit idea

206
00:10:11,100 --> 00:10:12,100
here, right?

207
00:10:12,500 --> 00:10:15,200
So if we are in 16-bit, right?

208
00:10:15,200 --> 00:10:19,000
So this is plus 32k, this is - 32k, right?

209
00:10:20,800 --> 00:10:26,900
If we are going to do everything in 16-bit then if I have to sounds

210
00:10:26,900 --> 00:10:29,600
like the first sound looks like this, right?

211
00:10:30,200 --> 00:10:33,200
And then I have another sound that, you know, looks like that.

212
00:10:33,300 --> 00:10:34,800
Let's say, right.

213
00:10:35,400 --> 00:10:38,800
Well, when I add these two sounds together, it's going to clip because

214
00:10:38,800 --> 00:10:40,500
putting this on top of this one, you know.

215
00:10:40,500 --> 00:10:42,900
Well, this one already toured Eclipse, let me draw some a little bit

216
00:10:42,900 --> 00:10:43,500
more piecemeal.

217
00:10:44,600 --> 00:10:47,800
There we go, putting this on top of this one right there, right?

218
00:10:47,800 --> 00:10:49,400
Is going to clip, that's going to end up out here.

219
00:10:50,000 --> 00:10:54,000
But if I then add a third sound and that third sound looks like this,

220
00:10:54,500 --> 00:10:55,200
right?

221
00:10:55,500 --> 00:10:58,300
Adding this sound onto the two of them means that it would bring it

222
00:10:58,300 --> 00:10:59,600
back down into range.

223
00:11:00,200 --> 00:11:03,900
So actually, I didn't have to clip playing these three sounds.

224
00:11:03,900 --> 00:11:06,500
I could have played them all together because this one cancels out

225
00:11:06,500 --> 00:11:07,700
some of the effects of these two.

226
00:11:07,700 --> 00:11:09,700
And brings me back into representable number.

227
00:11:10,500 --> 00:11:15,300
So typically, when you're going to do sound like this, you at least

228
00:11:15,300 --> 00:11:15,800
want to do.

229
00:11:15,800 --> 00:11:19,800
If you have 16-bit sound, you're going to want to do in a 32-bit

230
00:11:19,800 --> 00:11:21,100
space, right?

231
00:11:21,700 --> 00:11:25,700
So what we will probably do here is just use floats because that will

232
00:11:25,700 --> 00:11:29,900
allow us to also do our modulation and then, you know, are rounding

233
00:11:29,900 --> 00:11:32,300
and all that other stuff will work out magically.

234
00:11:32,600 --> 00:11:35,900
So, what I would want to do is I think convert from 16-bit to float.

235
00:11:36,000 --> 00:11:40,200
Do the mixing then convert from float back to 16 just at the

236
00:11:40,400 --> 00:11:42,600
That the head and tail end, right?

237
00:11:43,200 --> 00:11:48,100
So what I want to do here is say that I've got a sound buffer, right?

238
00:11:48,200 --> 00:11:54,000
This is the, this is like the real real buffer likes like so on.

239
00:11:54,800 --> 00:11:57,000
And this is probably per channel, right?

240
00:11:57,000 --> 00:11:59,800
So I've got, you know, I've got two different channels.

241
00:12:00,000 --> 00:12:00,400
Here.

242
00:12:00,600 --> 00:12:01,800
And yeah.

243
00:12:05,400 --> 00:12:09,100
I want to be able to write to both of these channels.

244
00:12:09,200 --> 00:12:12,800
Maybe I'll actually do this real Channel 0.

245
00:12:13,400 --> 00:12:16,400
I'll be something and real Channel 1, right?

246
00:12:16,400 --> 00:12:18,000
And we'll set those to something in a minute.

247
00:12:18,500 --> 00:12:21,500
So what I want to do is when I come in here, I want to do is

248
00:12:21,500 --> 00:12:24,300
essentially the equivalent of what was going on here, by stepping

249
00:12:24,300 --> 00:12:25,100
through the samples.

250
00:12:25,400 --> 00:12:29,200
But this time I want to actually do it in float space, right?

251
00:12:30,200 --> 00:12:35,000
So what I want to do is I want to take the sort of the the

252
00:12:35,300 --> 00:12:36,400
Last year, right?

253
00:12:36,900 --> 00:12:39,800
Best zero and desk one.

254
00:12:41,200 --> 00:12:44,700
Which are going to be these real Channel values, which are the

255
00:12:44,700 --> 00:12:47,000
floating Point representations of our mixing buffer.

256
00:12:48,100 --> 00:12:53,100
And what I want to do is I want to take each individual sample, out of

257
00:12:53,100 --> 00:12:56,700
the, the loaded sound, whatever this sound is, which I guess.

258
00:12:56,800 --> 00:12:59,300
Also I'm going to have to go ahead and actually call here.

259
00:12:59,700 --> 00:13:02,500
So let me go ahead and grab out that code.

260
00:13:03,200 --> 00:13:04,100
Where is it?

261
00:13:04,400 --> 00:13:07,200
It's not load sound, it's get sounds.

262
00:13:07,200 --> 00:13:09,600
We don't actually even have one of those yet, so we're gonna have to

263
00:13:09,600 --> 00:13:10,200
make that as well.

264
00:13:10,200 --> 00:13:10,600
So here's the

265
00:13:10,800 --> 00:13:18,500
Sound, good sound, get sound sound, ID, sounds, I d.value, right?

266
00:13:19,500 --> 00:13:20,200
So there we go.

267
00:13:22,000 --> 00:13:25,200
So, what I want to do here is say OK, for this playing sound first, I

268
00:13:25,200 --> 00:13:27,100
need to get the loaded sound, right?

269
00:13:27,800 --> 00:13:31,700
So we'll go ahead and get that will get that from the assets, which I

270
00:13:31,700 --> 00:13:32,800
guess is just in.

271
00:13:33,800 --> 00:13:35,500
We've got that transient State there.

272
00:13:35,500 --> 00:13:37,900
So, transient State, trance state

273
00:13:39,600 --> 00:13:42,000
Equals transient State.

274
00:13:42,900 --> 00:13:43,300
Oops.

275
00:13:45,300 --> 00:13:46,300
Transit storage.

276
00:13:49,600 --> 00:13:52,200
And the trance state has the Assets in it.

277
00:13:52,200 --> 00:13:54,400
So all we should have to do is just say there's the assets.

278
00:13:54,400 --> 00:13:58,300
We want, the sound ID is whatever the playing sound says that is

279
00:13:58,300 --> 00:14:01,800
playing and then we can just see if we got it back, right?

280
00:14:01,800 --> 00:14:04,300
If we didn't get the sound back then, we don't have to worry about

281
00:14:04,300 --> 00:14:06,700
putting because we don't have the data, so that's fine.

282
00:14:09,600 --> 00:14:10,800
And maybe.

283
00:14:12,500 --> 00:14:13,900
I should put in here as well.

284
00:14:15,300 --> 00:14:15,900
A couple things.

285
00:14:15,900 --> 00:14:19,200
First of all probably want to actually call load sound on it right.

286
00:14:19,300 --> 00:14:20,000
Probably want to tell it.

287
00:14:20,000 --> 00:14:22,700
Hey that sound I need that sound.

288
00:14:22,900 --> 00:14:26,400
You should probably go ahead and fetch it as soon as possible but the

289
00:14:26,400 --> 00:14:30,600
other thing we probably want to do is we probably want to say since we

290
00:14:30,600 --> 00:14:38,900
missed some samples here, maybe set a volume fade in eventually to

291
00:14:38,900 --> 00:14:41,400
prevent it from popping when it actually does happen.

292
00:14:41,800 --> 00:14:48,700
Right or delay it until oh you know what?

293
00:14:48,700 --> 00:14:51,900
And that's probably that's actually a good idea.

294
00:14:51,900 --> 00:14:56,000
Maybe we just delay the sound to it actually is loaded and in fact

295
00:14:56,000 --> 00:14:57,200
that's what already happen.

296
00:14:57,200 --> 00:14:59,500
If I just don't increment that okay.

297
00:14:59,500 --> 00:14:59,800
Yeah yeah.

298
00:15:00,200 --> 00:15:02,200
We're gonna, we're just gonna leave it because that's what will

299
00:15:02,200 --> 00:15:03,100
actually happen.

300
00:15:03,300 --> 00:15:07,100
If samples played isn't incrementing, if we just never move it

301
00:15:07,100 --> 00:15:09,000
forwards, then we won't miss anything.

302
00:15:09,000 --> 00:15:10,800
So so that's actually totally fine.

303
00:15:11,600 --> 00:15:14,300
Okay, so in loaded sound, we go ahead and get the sound.

304
00:15:14,300 --> 00:15:19,800
If we've got it, we go ahead here and and start looping through the,

305
00:15:19,800 --> 00:15:20,900
the sample count.

306
00:15:22,800 --> 00:15:28,700
And and then we need to actually do sort of a the actual some here,

307
00:15:28,700 --> 00:15:29,200
right?

308
00:15:29,300 --> 00:15:34,600
So what I want to do is I want to some like I was saying sounds just

309
00:15:34,600 --> 00:15:35,500
all add together.

310
00:15:35,600 --> 00:15:39,400
So what I want to do is I want to some whatever the sample value is at

311
00:15:39,400 --> 00:15:43,600
this particular location in floating point, I want to sum that.

312
00:15:43,600 --> 00:15:47,300
And first I want to multiply it though before I some it by whatever

313
00:15:47,300 --> 00:15:50,500
the volume is for this particular channel, right?

314
00:15:50,800 --> 00:15:52,400
So I want to go ahead and say

315
00:15:52,800 --> 00:15:55,800
You know, that whatever the volume is, maybe I'll pull those out into

316
00:15:55,800 --> 00:15:58,800
temporary, so that it's obvious, probably, what's going on as well.

317
00:15:59,400 --> 00:16:08,300
So, volume 0 volume, one will just be playing sound volume 0 and

318
00:16:08,300 --> 00:16:09,000
volume 1.

319
00:16:09,500 --> 00:16:10,100
So there you go.

320
00:16:10,700 --> 00:16:14,900
And in here we will just do that summation, right?

321
00:16:14,900 --> 00:16:17,900
And so all we really need to do to do that is to get out, whatever the

322
00:16:17,900 --> 00:16:21,700
sample value is and to get out the sample value, without worrying

323
00:16:21,700 --> 00:16:22,400
about the edge conditioner.

324
00:16:22,500 --> 00:16:24,300
Additions which we're going to have to worry about in a second.

325
00:16:24,300 --> 00:16:26,700
But without worrying about the edge conditions, all we would have to

326
00:16:26,700 --> 00:16:28,100
do to get that sample.

327
00:16:28,100 --> 00:16:32,900
Value out is just figure out where in the sound, the loaded sound

328
00:16:33,000 --> 00:16:35,000
samples, we actually are right.

329
00:16:39,400 --> 00:16:42,200
Okay, so let's see here.

330
00:16:43,200 --> 00:16:48,000
What we have in handmade assets is right here.

331
00:16:48,000 --> 00:16:54,000
So there's our loading sound samples, zero sample index, that would

332
00:16:54,000 --> 00:16:55,000
grab it out.

333
00:16:55,000 --> 00:17:00,700
And of course, we know also that we have an offset, which is samples

334
00:17:00,700 --> 00:17:02,300
played, right?

335
00:17:02,900 --> 00:17:04,300
So we're going to have to add that in there.

336
00:17:04,300 --> 00:17:08,500
So I guess we should also, we should probably account for that as

337
00:17:08,500 --> 00:17:08,700
well.

338
00:17:10,500 --> 00:17:15,500
In fact, what I probably should do is just say Okay loop from samples,

339
00:17:15,500 --> 00:17:19,099
played two samples, played plus sample, count, something like that.

340
00:17:19,599 --> 00:17:22,200
And that way, the sample index just is the right Index.

341
00:17:22,500 --> 00:17:23,000
Right.

342
00:17:24,300 --> 00:17:24,800
So, yeah.

343
00:17:25,099 --> 00:17:28,800
And I'll put a little to do in here for handling stereo to do Casey

344
00:17:29,000 --> 00:17:30,400
handle stereo.

345
00:17:32,800 --> 00:17:34,800
And we can take care of that in a second.

346
00:17:35,500 --> 00:17:39,100
So that's really most of what we're talking about here.

347
00:17:39,100 --> 00:17:42,900
We do have to do one of the thing which is that at the beginning,

348
00:17:43,100 --> 00:17:43,700
right?

349
00:17:44,400 --> 00:17:48,900
We are going to have to clear this out because if we're summing into,

350
00:17:48,900 --> 00:17:53,200
if our idea is to Loop over all the sounds and some into the

351
00:17:53,200 --> 00:17:56,500
destination, then we either have two choices one, we could special

352
00:17:56,500 --> 00:17:58,000
case the first sound and have it.

353
00:17:58,000 --> 00:17:59,800
Just copy instead of some

354
00:18:00,100 --> 00:18:03,600
Which maybe we want to do for performance reasons.

355
00:18:03,800 --> 00:18:06,600
But at first just to get things working, we're going to take a

356
00:18:06,600 --> 00:18:10,000
slightly simpler approach, which is just every sound gets handled

357
00:18:10,000 --> 00:18:11,000
exactly the same.

358
00:18:11,700 --> 00:18:16,400
And in in, you know, at the very first at the outset, before we do

359
00:18:16,400 --> 00:18:20,800
anything else, we're just going to go ahead and clear those those

360
00:18:20,800 --> 00:18:22,100
channels, the real zero.

361
00:18:22,100 --> 00:18:27,300
Real one channels will clear those 20 first so that our son will start

362
00:18:27,300 --> 00:18:29,900
out at zero without us having to special case anything.

363
00:18:30,000 --> 00:18:32,000
Thing in particular, right?

364
00:18:32,900 --> 00:18:34,100
Okay, so we're getting there.

365
00:18:35,700 --> 00:18:38,800
Now, at the end, we still have to do this Loop that we were doing

366
00:18:38,800 --> 00:18:40,300
before, right?

367
00:18:40,700 --> 00:18:45,300
And what we need to do here is again, we need to sort of switch things

368
00:18:45,300 --> 00:18:45,800
up.

369
00:18:45,900 --> 00:18:49,700
We need to switch, what what are meaning of source and death is here.

370
00:18:49,700 --> 00:18:52,000
So, we're writing into the destination, we write in.

371
00:18:52,000 --> 00:18:53,000
We sum all the sounds.

372
00:18:53,000 --> 00:18:56,600
So, now we have the sum of all the sounds sitting in these real

373
00:18:56,600 --> 00:18:57,200
Channel buffers.

374
00:18:57,300 --> 00:18:59,700
What we need to now do is Loop over those.

375
00:19:00,100 --> 00:19:04,900
And read out of them to get the actual resulting, some values.

376
00:19:05,800 --> 00:19:12,300
And then we need to actually write to the output buffer, whatever the

377
00:19:12,300 --> 00:19:15,600
actual values are converted to 16 bit, right?

378
00:19:15,800 --> 00:19:20,600
So we need to basically, you know, convert these to, in 16s by taking

379
00:19:20,600 --> 00:19:23,100
whatever should be in, you know, whatever.

380
00:19:23,100 --> 00:19:26,000
We find in that in that channel and and rounding it.

381
00:19:26,000 --> 00:19:27,300
Right, something like this.

382
00:19:28,700 --> 00:19:29,800
Hopefully, that makes some sense.

383
00:19:29,900 --> 00:19:30,800
All right.

384
00:19:31,500 --> 00:19:32,200
Let's do Source.

385
00:19:32,200 --> 00:19:34,400
1 + 3, .5 F there we go.

386
00:19:35,600 --> 00:19:38,600
So now what we're doing is like running into the Left Channel, we grab

387
00:19:38,600 --> 00:19:42,300
whatever's in the source, zero buffer and we round it, right?

388
00:19:43,000 --> 00:19:44,400
Because this is going to do a truncation.

389
00:19:44,400 --> 00:19:49,000
Then the same thing is true for the the right channel, you know, round

390
00:19:49,000 --> 00:19:49,300
it.

391
00:19:50,400 --> 00:19:52,800
And that's really that's really all we're talking about.

392
00:19:52,800 --> 00:19:54,400
I got Advance these guys as well.

393
00:19:56,300 --> 00:19:57,300
So that's that's it.

394
00:19:57,300 --> 00:19:58,400
And this just down Converse.

395
00:19:58,400 --> 00:19:59,800
This goes ahead and takes the

396
00:20:00,000 --> 00:20:04,100
But the some floating point that we have there and turns it into 16

397
00:20:04,100 --> 00:20:07,200
bit output for the channel, which is what we were expecting.

398
00:20:07,200 --> 00:20:10,500
I'm going to go ahead and get rid of that test sample index because we

399
00:20:10,500 --> 00:20:12,100
don't actually need any of this fact.

400
00:20:12,100 --> 00:20:16,300
We don't need any of that anymore because we're actually trying to

401
00:20:16,300 --> 00:20:17,700
replace that with stuff now.

402
00:20:18,200 --> 00:20:18,700
Okay.

403
00:20:20,300 --> 00:20:23,500
And so now we need to do kind of the rest of the stuff here.

404
00:20:25,700 --> 00:20:26,500
and we have,

405
00:20:28,400 --> 00:20:31,500
again, we've got some important stuff to do here because this will

406
00:20:31,500 --> 00:20:34,100
basically just run out to the end of the sample and then crash, right?

407
00:20:34,100 --> 00:20:37,400
So we need to do some stuff that actually bounce the region that were

408
00:20:37,600 --> 00:20:40,700
working over as well, but I'm just writing out the entire routine as

409
00:20:40,700 --> 00:20:41,700
an example first.

410
00:20:42,500 --> 00:20:44,500
So, in the trance state, right?

411
00:20:44,500 --> 00:20:48,300
We have the ability to grab memory from the transient Arena.

412
00:20:48,600 --> 00:20:51,900
So if we want to we can certainly just do this with temporary memory

413
00:20:52,300 --> 00:20:53,800
you know which is what we want.

414
00:20:53,900 --> 00:20:55,800
So I'm going to go ahead and do that.

415
00:20:56,000 --> 00:20:58,000
If you remember, we had a way of doing this.

416
00:20:58,200 --> 00:20:59,800
this, we could basically just say I

417
00:21:00,000 --> 00:21:01,400
Temporary memory here.

418
00:21:01,500 --> 00:21:03,100
So I'm going to do that, right?

419
00:21:03,100 --> 00:21:07,900
This is our mixer memory so I'm just going to say, hey man, I'm going

420
00:21:07,900 --> 00:21:11,000
to, I'm going to take some memory, just for a second from the Tran

421
00:21:11,000 --> 00:21:17,200
Arena like so and then I'm going to and then I'm going to end that I'm

422
00:21:17,200 --> 00:21:20,500
going to use the end temporary memory to give it back just as soon as

423
00:21:20,500 --> 00:21:22,400
we're actually done mixing, right?

424
00:21:22,800 --> 00:21:25,600
So again that's basically just a stack allocation kind of a thing only

425
00:21:25,600 --> 00:21:29,800
instead of it coming from the stack, it's just coming from our

426
00:21:30,000 --> 00:21:33,300
Block of memory in the same sort of way that it would come from a

427
00:21:33,300 --> 00:21:34,200
stack, right?

428
00:21:35,100 --> 00:21:42,400
So I'm going to do a push array here to get a Channel of reels, and

429
00:21:42,400 --> 00:21:45,000
that is going to come again from that tran Arena.

430
00:21:47,600 --> 00:21:51,600
So and when I go ahead and push that on, I'm going to need however

431
00:21:51,600 --> 00:21:53,700
many there are four for the samples.

432
00:21:53,900 --> 00:21:54,200
Right.

433
00:21:54,200 --> 00:21:57,900
Like so so this is just going to give us those two arrays that we need

434
00:21:57,900 --> 00:21:58,500
to work in.

435
00:21:59,300 --> 00:22:06,800
So then we go here we will clear out the mixer channels.

436
00:22:08,500 --> 00:22:15,900
Then we go ahead and some all sounds, and then we have our convert to

437
00:22:15,900 --> 00:22:16,700
16 bit.

438
00:22:19,700 --> 00:22:20,400
Very simple.

439
00:22:22,000 --> 00:22:25,400
So that is actually the entirety of the mixer for the most part and

440
00:22:25,400 --> 00:22:28,000
now we just have to go deal with a few friend of Kate's, finicky

441
00:22:28,000 --> 00:22:29,300
things, right?

442
00:22:30,300 --> 00:22:34,200
What we need to deal with, first of all, is the concept that the

443
00:22:34,200 --> 00:22:37,800
sounds are, you know, are finite in duration.

444
00:22:38,200 --> 00:22:39,900
So, when we come into this Loop, right?

445
00:22:39,900 --> 00:22:41,900
If you think about what's going to happen, we've got the loaded sound.

446
00:22:41,900 --> 00:22:43,600
It has a particular sample count.

447
00:22:43,600 --> 00:22:47,800
When this sample index gets past that sample account when it gets

448
00:22:48,200 --> 00:22:49,400
Beyond it, we

449
00:22:49,600 --> 00:22:50,400
It read from any more.

450
00:22:50,400 --> 00:22:51,300
We'd crash, right?

451
00:22:51,300 --> 00:22:53,800
Well we wouldn't crash we'd read into some other memory because we've

452
00:22:53,800 --> 00:22:55,200
kind of allocated these in a block.

453
00:22:57,300 --> 00:22:58,800
But we don't want that to happen, right?

454
00:22:58,900 --> 00:23:02,800
That's going to start playing garbage into our Sound Stream and so it

455
00:23:02,800 --> 00:23:06,200
well, it won't crash, it'll certainly sound awful and that's if not as

456
00:23:06,200 --> 00:23:07,500
bad at least pretty bad.

457
00:23:08,100 --> 00:23:11,700
So what we want to do here is we want to have some notion of whether

458
00:23:11,700 --> 00:23:15,200
or not this sound is at its end or not, right?

459
00:23:15,800 --> 00:23:19,100
And so, what I want to do is come up with a notion cure, that's like,

460
00:23:19,500 --> 00:23:23,900
you know, maybe something where we talked about the samples to mix,

461
00:23:24,500 --> 00:23:27,000
okay, and we'll start out assuming

462
00:23:27,200 --> 00:23:31,200
That the number of samples that we want to mix, you know is is however

463
00:23:31,200 --> 00:23:35,600
many samples are actually in the the output buffer.

464
00:23:36,400 --> 00:23:40,600
But we can then say, well I'm also pull this out here.

465
00:23:42,200 --> 00:23:45,200
Samples remaining and sound right?

466
00:23:45,200 --> 00:23:46,700
Well, how many are remaining in the sound?

467
00:23:46,700 --> 00:23:51,000
Well the number of samples played in The Sound is where it's at.

468
00:23:51,000 --> 00:23:53,700
And the sample count is the total that it has.

469
00:23:53,900 --> 00:23:56,900
So if I subtract those two, I can say here's how many samples are

470
00:23:57,000 --> 00:23:58,200
Remaining, right?

471
00:23:58,800 --> 00:23:59,800
So then when I can do it,

472
00:24:00,000 --> 00:24:04,700
If the samples to mix is actually greater than the total number of

473
00:24:04,700 --> 00:24:06,900
samples that I have right.

474
00:24:07,500 --> 00:24:10,700
Then I want to mix less right.

475
00:24:10,800 --> 00:24:13,800
I want to mix just the number that we actually have.

476
00:24:14,200 --> 00:24:14,700
Okay?

477
00:24:15,600 --> 00:24:19,800
And so, when I do that, then this Loop here, instead of running over

478
00:24:19,800 --> 00:24:24,100
sample count, can just do samples to mix and that will allow me to

479
00:24:24,100 --> 00:24:26,400
avoid any possibility of over running the buffer.

480
00:24:26,400 --> 00:24:29,600
Now, that does put us into an odd situation, right?

481
00:24:30,000 --> 00:24:30,400
SLI.

482
00:24:30,900 --> 00:24:33,200
Because then we're going to come down here and we're going to say oh

483
00:24:33,200 --> 00:24:36,700
that playing sound well, we've got how many samples were played.

484
00:24:36,700 --> 00:24:40,100
We're going to advance it right by however many we mixed.

485
00:24:40,500 --> 00:24:44,400
And now what might happen is we might be at the end of the sound,

486
00:24:44,400 --> 00:24:44,500
right?

487
00:24:44,500 --> 00:24:48,300
We might have mixed right up to the end of that sound, and if that's

488
00:24:48,300 --> 00:24:49,100
the case,

489
00:24:50,700 --> 00:24:55,300
Then we want to get rid of this sound, right?

490
00:24:55,300 --> 00:24:57,200
We want the sound to go away.

491
00:24:59,700 --> 00:25:03,200
You know, it's not it's not useful anymore, right?

492
00:25:03,200 --> 00:25:07,700
It's not it's not going to, there's no point in leaving it in the list

493
00:25:07,900 --> 00:25:09,100
when it's not actually contribute.

494
00:25:09,100 --> 00:25:11,700
Anything that would just create our list, you know, make our listeners

495
00:25:11,700 --> 00:25:15,000
proliferate and just get bigger and bigger and bigger and bigger

496
00:25:15,000 --> 00:25:15,400
forever.

497
00:25:15,400 --> 00:25:17,700
And that's really not helping anybody, right?

498
00:25:19,200 --> 00:25:22,100
So what we want to do here is we want to have a notion that at some

499
00:25:22,100 --> 00:25:23,900
point, the sound can get killed.

500
00:25:24,500 --> 00:25:25,900
And this is that point, right?

501
00:25:25,900 --> 00:25:29,400
This is the point where the sound gets killed and so in order to

502
00:25:29,500 --> 00:25:32,700
You that what I want to be able to do is remove it from the list here

503
00:25:32,800 --> 00:25:35,900
and maybe put it onto a free list so that we can just use it again

504
00:25:36,400 --> 00:25:39,400
when we, when the time comes right, when the time comes to play

505
00:25:39,400 --> 00:25:41,900
another sound, we'll just reuse that bit of memory.

506
00:25:41,900 --> 00:25:45,800
So we'd have something like first free playing sound, right?

507
00:25:49,700 --> 00:25:50,600
Something like that.

508
00:25:51,400 --> 00:25:53,300
So that would be ideal, right?

509
00:25:53,600 --> 00:25:56,900
And so what we'd want to do here is say, okay, when we get down to

510
00:25:56,900 --> 00:26:01,700
here, we have playing sound and it has you know a next pointer, right?

511
00:26:01,700 --> 00:26:04,800
So the next pointer, if we're going to free the sound, what we want to

512
00:26:04,800 --> 00:26:07,000
do is take that first free playing sound.

513
00:26:07,000 --> 00:26:08,200
It's in the game State.

514
00:26:08,200 --> 00:26:10,900
We want that, you know, we just want to basically chain this on here,

515
00:26:10,900 --> 00:26:11,400
right?

516
00:26:11,400 --> 00:26:13,000
That's the easy way to change that on.

517
00:26:13,000 --> 00:26:17,100
WE based say, okay now this is the new first free sound and its next

518
00:26:17,100 --> 00:26:18,700
point is going to be whatever was in there before.

519
00:26:18,700 --> 00:26:19,300
So we're base just

520
00:26:19,500 --> 00:26:22,200
Sing it onto the top of that free list, right?

521
00:26:22,200 --> 00:26:26,300
So it'll get recycled the problem with this is, if you notice what's

522
00:26:26,300 --> 00:26:30,800
going to happen up here, when we come to the end of our Loop and try

523
00:26:30,800 --> 00:26:34,500
to go to the next one playing sound, has now been taken out of the

524
00:26:34,500 --> 00:26:34,700
list.

525
00:26:34,700 --> 00:26:38,600
We were trying to iterate so we can't very well use this anymore,

526
00:26:38,800 --> 00:26:39,000
right?

527
00:26:39,000 --> 00:26:42,000
We can't use this as a way to get to the next one anymore.

528
00:26:42,300 --> 00:26:46,700
So what we actually want to do is we want to snap that next pointer

529
00:26:46,900 --> 00:26:48,200
earlier, right?

530
00:26:48,200 --> 00:26:49,300
We want to stay here.

531
00:26:49,500 --> 00:26:51,300
Hear that we have a next playing sound.

532
00:26:51,300 --> 00:26:54,700
Grab, what should be the next playing sound and then we get to the end

533
00:26:54,700 --> 00:26:55,400
of the loop.

534
00:26:55,400 --> 00:26:56,400
We use that instead.

535
00:26:56,400 --> 00:26:59,000
So that way when it gets overwritten here, it's not a problem.

536
00:26:59,100 --> 00:26:59,800
And that's just a very

537
00:27:00,000 --> 00:27:02,500
Cool thing that you see in a lot of Loops where you have to remove

538
00:27:02,500 --> 00:27:04,700
stuff from the list you're iterating over.

539
00:27:04,800 --> 00:27:08,300
You typically want to do this so that you can protect yourself against

540
00:27:08,300 --> 00:27:16,100
the act of having the thing freed screwing up, your iteration, right?

541
00:27:16,100 --> 00:27:17,100
So pretty simple.

542
00:27:17,100 --> 00:27:19,700
Like I said, nothing special there but just, I don't know that we've

543
00:27:19,700 --> 00:27:21,500
ever done that on stream before.

544
00:27:21,500 --> 00:27:24,900
So I figured I'd point it out, very common thing to see happen.

545
00:27:26,600 --> 00:27:27,400
So there we go.

546
00:27:28,100 --> 00:27:29,900
That's that's what we're looking at here.

547
00:27:30,800 --> 00:27:34,600
And for the moment, I'm not actually going to allow those sound delays

548
00:27:35,000 --> 00:27:38,300
but I, you know, like I said, we left it kind of the possibility open.

549
00:27:38,500 --> 00:27:41,600
So I want to go ahead and say that we're going to assert that.

550
00:27:41,600 --> 00:27:43,600
The samples plate is always greater than equal to 0.

551
00:27:43,600 --> 00:27:45,800
So that if we do start doing delays later, we'll remember that we

552
00:27:45,800 --> 00:27:48,000
didn't actually write any adjustment code gain.

553
00:27:48,000 --> 00:27:51,500
Our mixer to actually handle that.

554
00:27:51,600 --> 00:27:54,200
So, yeah, that kind of makes no sense.

555
00:27:54,200 --> 00:27:54,700
We don't want to

556
00:27:55,900 --> 00:27:57,500
Yeah, you get the idea.

557
00:27:59,000 --> 00:28:05,000
So at this point we do have some kind of, we do have some issues that

558
00:28:05,000 --> 00:28:06,100
we kind of want to address.

559
00:28:06,100 --> 00:28:09,500
Probably, I think, I don't know if it's a good time to start

560
00:28:09,500 --> 00:28:13,000
addressing them but if you take a look at what happens here, we do

561
00:28:13,000 --> 00:28:16,100
have a little bit of an arena dichotomy in the game State.

562
00:28:16,100 --> 00:28:19,100
We have a World Arena but we haven't really addressed.

563
00:28:19,100 --> 00:28:21,400
What happens when we have things that want to live outside of the

564
00:28:21,400 --> 00:28:22,000
World Arena.

565
00:28:22,000 --> 00:28:23,600
As sounds probably do.

566
00:28:24,500 --> 00:28:25,400
There aren't very many

567
00:28:25,600 --> 00:28:28,100
Things in the permanent game state that probably do want to live

568
00:28:28,100 --> 00:28:29,100
outside of the World Arena.

569
00:28:29,100 --> 00:28:33,100
But there are some right and they're things that may persist across

570
00:28:34,500 --> 00:28:38,100
the creation or deletion of a world and although it sounds weird.

571
00:28:38,100 --> 00:28:39,700
Sounds are that kind of thing?

572
00:28:39,700 --> 00:28:41,600
So, for example, if music is playing

573
00:28:42,900 --> 00:28:46,700
When the player goes quick to main menu or something, you don't want,

574
00:28:46,700 --> 00:28:51,200
those sounds to go away, just because the world that was being played

575
00:28:51,200 --> 00:28:51,600
goes away.

576
00:28:51,600 --> 00:28:55,400
And so the world that's being played and the sounds are not really,

577
00:28:56,700 --> 00:29:00,400
you know, they're not really linked in that way.

578
00:29:00,900 --> 00:29:02,700
But we don't really have to deal with that yet.

579
00:29:02,700 --> 00:29:05,100
I just, you know, we can sort of avoid it for now because it's not

580
00:29:05,100 --> 00:29:05,700
really talking to me.

581
00:29:05,700 --> 00:29:09,300
But at some point what we do want to do is start thinking about these

582
00:29:09,300 --> 00:29:12,400
things in terms of having split that up, you know,

583
00:29:13,300 --> 00:29:18,900
As something like World Arena, you know, and and sort of meta Arena,

584
00:29:19,000 --> 00:29:19,600
right.

585
00:29:19,700 --> 00:29:22,700
Kind of the things that get allocated, which are going to just be

586
00:29:22,700 --> 00:29:26,700
flushed whenever the world gets destroyed versus things that are kind

587
00:29:26,700 --> 00:29:30,800
of semi-permanent, they exist across worlds.

588
00:29:31,300 --> 00:29:34,800
And like I said, there's not a whole lot of them but one example is

589
00:29:34,800 --> 00:29:39,800
sound and there's probably, you know, some other example somewhere

590
00:29:39,800 --> 00:29:40,700
that we will hit.

591
00:29:41,200 --> 00:29:42,400
There's not a lot of them.

592
00:29:42,500 --> 00:29:45,600
They're, you know, it's not zero is the point.

593
00:29:47,800 --> 00:29:48,300
Okay.

594
00:29:50,500 --> 00:29:54,700
so, what we want to do now is we want to go ahead and actually create

595
00:29:54,700 --> 00:29:58,400
this, this, this list here, I don't actually know if we want to

596
00:30:00,500 --> 00:30:04,300
Do one of the things first which is that I don't know that we actually

597
00:30:04,300 --> 00:30:05,100
implemented.

598
00:30:05,100 --> 00:30:07,600
The load sound stuff in the asset system.

599
00:30:07,600 --> 00:30:09,600
Like, you know, I don't know where we got on that.

600
00:30:09,600 --> 00:30:11,200
I don't really remember.

601
00:30:12,000 --> 00:30:16,100
So when you call load sound, you know what, actually happens when I

602
00:30:16,100 --> 00:30:17,300
call this, right?

603
00:30:17,700 --> 00:30:19,500
I called debug load way time on info.

604
00:30:19,500 --> 00:30:25,300
File name is info file name even ever set anywhere.

605
00:30:26,400 --> 00:30:32,100
Would be my first question and let's see.

606
00:30:32,100 --> 00:30:34,200
That's the sound info, right?

607
00:30:34,900 --> 00:30:36,600
So sound, infos.

608
00:30:36,800 --> 00:30:40,200
So I don't think we like, we haven't actually done.

609
00:30:40,200 --> 00:30:42,900
Any of this is is part of the problem, right?

610
00:30:43,100 --> 00:30:47,100
Meaning, there's there's sound infos here and the sound infos are not

611
00:30:47,100 --> 00:30:50,700
actually are not actually set to anything.

612
00:30:50,700 --> 00:30:51,300
Right.

613
00:30:51,300 --> 00:30:52,700
Am I wrong about this?

614
00:30:52,700 --> 00:30:55,600
Correct me if I'm wrong but I'm pretty sure that that's

615
00:30:56,000 --> 00:30:56,700
Way things go.

616
00:30:56,700 --> 00:31:01,200
So we had sound infos here and we're not actually setting them to

617
00:31:01,200 --> 00:31:01,800
anything.

618
00:31:02,200 --> 00:31:06,900
And so what I would like to do is is, you know, try to maybe make that

619
00:31:07,800 --> 00:31:09,700
be a little bit more concise.

620
00:31:09,700 --> 00:31:10,500
So okay.

621
00:31:11,100 --> 00:31:15,300
So let's go ahead and here and maybe we'll say, you know, we've got

622
00:31:15,300 --> 00:31:18,900
some sounds coming in here now, so I'll make this bitmaps for now.

623
00:31:18,900 --> 00:31:24,300
Note Casey get maps and no to Casey.

624
00:31:25,900 --> 00:31:29,900
Sounds and in here, we're just going to say, okay, we've got some

625
00:31:29,900 --> 00:31:31,700
sounds that I had put in there, right?

626
00:31:31,700 --> 00:31:35,200
That we had whatever they were, I don't really remember.

627
00:31:35,200 --> 00:31:36,300
So we're just going to look.

628
00:31:36,600 --> 00:31:39,800
We had a bloop, we had a drop.

629
00:31:40,600 --> 00:31:45,400
We had a Glide, we had music.

630
00:31:46,100 --> 00:31:55,100
We had pop, these are probably not the ones we will want to use in the

631
00:31:55,100 --> 00:31:55,800
final game.

632
00:31:56,500 --> 00:32:01,600
To say the least but you know that's what's in the directory, you

633
00:32:01,600 --> 00:32:03,800
know, that's just that's what's in the directory.

634
00:32:05,000 --> 00:32:08,500
It's a nice, 30 megabytes sound here.

635
00:32:09,300 --> 00:32:12,000
So yeah, so fine, that's what we've got.

636
00:32:12,000 --> 00:32:14,300
That's that's what it'll be.

637
00:32:14,800 --> 00:32:18,400
So what I want to do is I want to kind of duplicate the same exact

638
00:32:18,400 --> 00:32:24,300
thing that we were doing before as far as having these assets sound

639
00:32:24,300 --> 00:32:24,600
wise.

640
00:32:24,600 --> 00:32:25,800
So we really just want to

641
00:32:25,900 --> 00:32:31,200
To extend this to, you know, sort of talk about sounds now.

642
00:32:31,700 --> 00:32:33,700
So we have that bloop that's in there.

643
00:32:35,300 --> 00:32:38,600
And there was three, one, two, three, four of those, right?

644
00:32:38,700 --> 00:32:41,900
That's what we want to do is add, you know, do things like add sound a

645
00:32:41,900 --> 00:32:46,000
set where we have those those bloops in there.

646
00:32:46,000 --> 00:32:52,500
So there's bloop 0 0 dot wave and one, two, three, four and remember,

647
00:32:52,500 --> 00:32:55,100
this just in for people who weren't here.

648
00:32:55,100 --> 00:32:58,600
When we did all this, this is just entirely temporary code, it's

649
00:32:58,600 --> 00:32:59,800
because we have not

650
00:33:00,000 --> 00:33:04,500
Defined our asset file, our asset pack file format and directory yet.

651
00:33:04,500 --> 00:33:07,900
So we just construct it in code for the time being but all of this

652
00:33:08,100 --> 00:33:12,600
code that you see here will actually just go away and we will just be

653
00:33:12,600 --> 00:33:16,100
loading essentially this data off of the disk.

654
00:33:16,500 --> 00:33:20,500
And so, what we're doing now is just putting in a little bit of code

655
00:33:20,800 --> 00:33:22,300
that sort of simulates.

656
00:33:22,300 --> 00:33:26,700
What we expect to have tubes that I forget, s crack.

657
00:33:26,700 --> 00:33:27,500
I think I did.

658
00:33:29,600 --> 00:33:32,100
It just saying that's that's what we expect to have, so that we can

659
00:33:32,100 --> 00:33:35,000
proof it all out and be like, yes, this is what we want.

660
00:33:35,100 --> 00:33:40,100
And then when we're ready, I'll go make us a proper pack file, that

661
00:33:40,100 --> 00:33:44,400
conforms to the format that we have specified here on the stream, and

662
00:33:44,400 --> 00:33:45,800
then we can just delete this code.

663
00:33:45,800 --> 00:33:47,200
You can go away, right.

664
00:33:47,200 --> 00:33:50,900
But until then, we're going to keep doing it by hand here.

665
00:33:51,100 --> 00:33:55,000
Just so we can again not spend a bunch of time, making an asset file

666
00:33:55,000 --> 00:33:58,400
format in a pipeline and all these sorts of things that actually don't

667
00:33:58,400 --> 00:33:58,500
do.

668
00:33:58,600 --> 00:33:59,500
What we want, right?

669
00:33:59,500 --> 00:34:04,200
We want to make sure that it actually does what we want and not just

670
00:34:04,200 --> 00:34:06,700
something that we guess that we might need.

671
00:34:07,400 --> 00:34:07,900
Okay.

672
00:34:08,400 --> 00:34:08,900
Let's see.

673
00:34:08,900 --> 00:34:15,400
So pup, 00 and pop one, and this is asset music and asset pop.

674
00:34:15,699 --> 00:34:18,199
Okay, so there we go.

675
00:34:18,600 --> 00:34:21,699
There's our, you know, there's our

676
00:34:23,699 --> 00:34:28,600
Well there's our assets and so what we need to do is create the

677
00:34:28,600 --> 00:34:33,500
equivalent of a bitmap asset, we need to create the equivalent of that

678
00:34:33,600 --> 00:34:34,400
for sound.

679
00:34:34,400 --> 00:34:38,400
So in here we need to do something where we say add sound asset, it

680
00:34:38,400 --> 00:34:41,000
won't would not have an alignment, right?

681
00:34:41,699 --> 00:34:47,600
And so I think yeah, this just kind of comes in here and does a debug

682
00:34:47,600 --> 00:34:52,300
add sounded so I think and there's really nothing else to it besides

683
00:34:52,300 --> 00:34:52,900
that.

684
00:34:53,500 --> 00:34:54,199
There we go.

685
00:34:54,800 --> 00:34:59,000
And then when we have that, debug, add bitmap info, we just need an

686
00:34:59,000 --> 00:35:01,900
equivalent of that, which is like, debug add sound info.

687
00:35:03,000 --> 00:35:07,800
And so, the sound info in here is just going to basically be all of

688
00:35:07,800 --> 00:35:10,200
this stuff, but with sound replaced in it, right?

689
00:35:10,600 --> 00:35:15,400
I think that's literally all there is and no none of that, right?

690
00:35:15,800 --> 00:35:20,900
So what we do need to do here is the debug used bitmap, count.

691
00:35:20,900 --> 00:35:23,400
We need one of those for sound, so we know where we are.

692
00:35:23,500 --> 00:35:31,300
Our debug Loops debug used sound, oops, bitmap count.

693
00:35:32,100 --> 00:35:38,800
And so we want to set that debug used sound count like so, all right,

694
00:35:40,000 --> 00:35:47,600
so yeah, that should be basically everything I think.

695
00:35:50,400 --> 00:35:50,700
Oops.

696
00:35:50,700 --> 00:35:52,600
Forgot my little a Sands there.

697
00:35:53,900 --> 00:35:54,500
There we go.

698
00:35:56,000 --> 00:35:57,000
So where are we at?

699
00:35:57,200 --> 00:35:58,700
Where are we at here?

700
00:35:58,700 --> 00:35:59,800
These sample index.

701
00:36:00,000 --> 00:36:00,900
As our Unit 32.

702
00:36:00,900 --> 00:36:06,600
So I guess loaded sample account and samples played this should be.

703
00:36:06,600 --> 00:36:08,000
You want 32 as well?

704
00:36:08,000 --> 00:36:09,500
That's a little bit annoying there.

705
00:36:11,000 --> 00:36:12,600
I'm not sure we want to do that long term.

706
00:36:13,000 --> 00:36:18,100
So anyway, now I believe when we do a loud sound in theory that should

707
00:36:18,100 --> 00:36:25,400
actually happen without issue.

708
00:36:26,200 --> 00:36:29,700
So let's go ahead and see if we can make this

709
00:36:30,000 --> 00:36:32,600
New system that we've got emulate, what we started with at the

710
00:36:32,600 --> 00:36:33,600
beginning of the stream.

711
00:36:34,100 --> 00:36:36,900
Just so we know that we're on the right track before we go ahead, then

712
00:36:36,900 --> 00:36:39,400
and make a way of adding like a bunch of things to the list.

713
00:36:39,400 --> 00:36:44,100
And so, what I'm going to do is at the outset when we first start

714
00:36:45,400 --> 00:36:49,400
The game going where we did that load bitmap now.

715
00:36:49,600 --> 00:36:52,900
Right, where we where we sorry about little bit about where we did the

716
00:36:52,900 --> 00:36:54,100
load sound before.

717
00:36:54,600 --> 00:37:00,600
What I would like to do is actually allocate something, that allocate

718
00:37:00,600 --> 00:37:03,700
something that's going to be playing, right?

719
00:37:03,800 --> 00:37:06,100
So right now, I'm going to put this in the World Arena, right?

720
00:37:06,100 --> 00:37:09,600
And I'm going to say this is going to be a playing sound, and then I'm

721
00:37:09,600 --> 00:37:14,500
going to say that the first playing sound is going.

722
00:37:14,600 --> 00:37:15,700
Equal that, right?

723
00:37:15,700 --> 00:37:19,000
So I'm just basically stuffing first playing sound.

724
00:37:19,600 --> 00:37:21,000
I'm stuffing something in there.

725
00:37:22,700 --> 00:37:26,800
Again, totally temporary, not going to keep this for anything, but

726
00:37:26,900 --> 00:37:31,600
just want to see if our stuff that we just did actually works.

727
00:37:31,800 --> 00:37:35,500
I'm going to tell it to play sound ID.

728
00:37:35,500 --> 00:37:40,300
Well I guess I can actually have it be something that actually does

729
00:37:40,300 --> 00:37:41,100
the first asset.

730
00:37:41,100 --> 00:37:48,300
So in handmade asset, let's see here where we do our match asset type

731
00:37:48,300 --> 00:37:49,000
and all that stuff.

732
00:37:49,000 --> 00:37:51,000
Best match asset, all that stuff.

733
00:37:51,700 --> 00:37:52,300
So what I would like

734
00:37:52,500 --> 00:37:58,000
To do here is I'd like to do maybe that get first bitmap ID and that

735
00:37:58,000 --> 00:37:58,600
sort of stuff.

736
00:37:58,700 --> 00:37:59,500
How did we?

737
00:38:01,200 --> 00:38:04,500
So this is kind of stupid looking at.

738
00:38:04,500 --> 00:38:08,700
It will take care of that in a second.

739
00:38:08,700 --> 00:38:14,200
But so when we do our, like, get first bitmap ID, we don't really

740
00:38:14,200 --> 00:38:15,000
care.

741
00:38:15,300 --> 00:38:19,300
The asset, doesn't really care whether it's doing a bitmap or not.

742
00:38:19,800 --> 00:38:22,300
And so what we kind of want these functions to

743
00:38:22,400 --> 00:38:26,100
Be able to work whether or not they're using bitmaps or sounds, you

744
00:38:26,100 --> 00:38:26,800
know what I mean?

745
00:38:27,600 --> 00:38:32,500
And we may want to have a way of asserting that they are the correct

746
00:38:32,500 --> 00:38:35,700
things that correct types that you're asking for something like that.

747
00:38:36,100 --> 00:38:40,600
But I feel like in general, these want, to operate on, whatever,

748
00:38:40,800 --> 00:38:41,300
right?

749
00:38:43,100 --> 00:38:46,100
And so I kind of feel like what we actually want here is just things

750
00:38:46,100 --> 00:38:49,600
that get back the slot IDs, and then we'll just have little wrapper

751
00:38:49,600 --> 00:38:52,600
functions that actually wrap those into the ID, so that you get a

752
00:38:52,600 --> 00:38:55,700
little bit more, type safety out of it, through the rest of the game.

753
00:38:56,000 --> 00:38:59,800
But I feel like that's really the better thing to do there.

754
00:39:00,000 --> 00:39:06,200
All right, so what I want to do here is I want to to change this stuff

755
00:39:06,200 --> 00:39:06,700
right?

756
00:39:06,800 --> 00:39:10,600
I want to essentially say okay we've got to get first bitmap ID but

757
00:39:10,600 --> 00:39:17,400
all get first bitmap ID is is is like this get first slot ID, right?

758
00:39:17,900 --> 00:39:19,100
Assets type ID.

759
00:39:20,400 --> 00:39:26,000
It's literally just a little wrapper it's just all it does is wrap

760
00:39:26,000 --> 00:39:28,400
that up for you like that, right?

761
00:39:28,400 --> 00:39:33,500
And then this is actually get first slot ID and has absolutely nothing

762
00:39:33,800 --> 00:39:36,600
to do with with bitmaps.

763
00:39:36,600 --> 00:39:39,400
It does not care about the bitmaps at.

764
00:39:39,400 --> 00:39:40,400
All right?

765
00:39:40,500 --> 00:39:44,200
So that's that's more what I'm thinking right.

766
00:39:44,200 --> 00:39:45,000
Does that make sense?

767
00:39:45,800 --> 00:39:50,100
And so similarly get random asset, you know that stuff's would be

768
00:39:50,200 --> 00:39:51,100
Exactly the same.

769
00:39:51,700 --> 00:39:52,600
It would do.

770
00:39:52,800 --> 00:39:54,000
This would be random.

771
00:39:54,600 --> 00:39:58,200
You'll still be get bit random bitmap from and this was just kind of

772
00:39:58,200 --> 00:39:59,300
an oversight when I was doing it.

773
00:39:59,300 --> 00:40:03,100
I just wasn't thinking particularly hard about it when I did it, but

774
00:40:03,100 --> 00:40:05,500
now is a good time for us to go ahead and make sure that we don't

775
00:40:05,500 --> 00:40:07,600
continue down that path because it was a stupid path.

776
00:40:08,100 --> 00:40:08,900
So there we go.

777
00:40:09,400 --> 00:40:10,000
So we can do that.

778
00:40:10,000 --> 00:40:12,100
Get random bitmap from and then this one.

779
00:40:12,200 --> 00:40:12,500
Oops.

780
00:40:12,500 --> 00:40:13,200
And that's sorry.

781
00:40:13,200 --> 00:40:15,400
Get random slot from.

782
00:40:18,700 --> 00:40:25,500
Like so and I don't know I feel like this should be get first bitmap

783
00:40:25,500 --> 00:40:26,600
from these names.

784
00:40:26,600 --> 00:40:29,000
Are not really that good either, so that's a little bit better.

785
00:40:29,600 --> 00:40:35,600
Get first slot maybe get for random slot from that that naming looks a

786
00:40:35,600 --> 00:40:37,000
little better to me there.

787
00:40:37,700 --> 00:40:40,400
And so this will actually, again, we'll do that same exact

788
00:40:40,400 --> 00:40:45,000
transformation that we did before returning, just just the slot ID

789
00:40:45,000 --> 00:40:47,700
directly, and not think about it too hard.

790
00:40:47,900 --> 00:40:50,100
Beyond that like so.

791
00:40:50,700 --> 00:40:55,300
And so now this is random asset from and get for a slot from

792
00:40:59,300 --> 00:41:07,000
Slot slot from and then finally, we have that best match from and so

793
00:41:07,000 --> 00:41:09,500
will again copy that down for a bit Maps as well.

794
00:41:10,300 --> 00:41:19,200
Like so and there we go, best match asset from

795
00:41:21,100 --> 00:41:23,600
Best match tip map from.

796
00:41:24,800 --> 00:41:28,900
We call this kept at this this asset mashing, we just pass it, exactly

797
00:41:28,900 --> 00:41:34,200
what we have and that's all there is to it so then we go get first lot

798
00:41:34,200 --> 00:41:34,700
for everything.

799
00:41:34,700 --> 00:41:35,400
That's good.

800
00:41:35,700 --> 00:41:41,400
Get best matched asset from that, will return the slot ID as the other

801
00:41:41,400 --> 00:41:42,200
ones did.

802
00:41:42,500 --> 00:41:47,700
So there we have it and done.

803
00:41:48,500 --> 00:41:49,900
So now these

804
00:41:50,000 --> 00:41:51,900
These guys are wait.

805
00:41:51,900 --> 00:41:54,300
What are you complaining about identifiers?

806
00:41:54,300 --> 00:41:58,100
Not found yet random

807
00:42:05,000 --> 00:42:11,500
So now these guys are actually get random bitmap from, right like that

808
00:42:12,400 --> 00:42:15,800
this is get bitmap from.

809
00:42:17,200 --> 00:42:24,800
This is a syntax error but we want here is get first sound from and

810
00:42:24,800 --> 00:42:29,000
then we have best match asset so this is get best match fit map from

811
00:42:30,400 --> 00:42:31,100
Like so.

812
00:42:33,400 --> 00:42:40,700
And these are get first, bitmap ID is get first bitmap from right?

813
00:42:42,300 --> 00:42:42,700
Okay.

814
00:42:44,200 --> 00:42:46,200
So get first sound from now.

815
00:42:46,200 --> 00:42:52,000
We need our asset stuff again to to have all of these same things for

816
00:42:52,000 --> 00:42:55,100
sounds and so the reason I didn't want to duplicate all that code.

817
00:42:55,300 --> 00:42:58,800
So all I'm doing here is just changing bitmap to sound in just the

818
00:42:58,800 --> 00:42:59,600
wrapper functions.

819
00:42:59,600 --> 00:43:03,100
And that way all the rest of the code will work exactly the same way

820
00:43:03,200 --> 00:43:04,900
that it did before, right?

821
00:43:05,800 --> 00:43:07,900
So, you know, really very simple.

822
00:43:08,700 --> 00:43:10,700
Nothing particularly fancy going on there.

823
00:43:11,600 --> 00:43:12,300
There we go.

824
00:43:14,500 --> 00:43:22,800
And so on just one and so we say, get first sound from we need to

825
00:43:22,800 --> 00:43:23,500
pass.

826
00:43:24,800 --> 00:43:29,500
Oh you know what I can have to wait until we do get the transient

827
00:43:29,500 --> 00:43:32,100
State because that will have the actual Assets in it.

828
00:43:32,400 --> 00:43:33,800
So we need to actually do that here.

829
00:43:33,900 --> 00:43:37,300
So we're going to do get first sound from and when we do get for a

830
00:43:37,300 --> 00:43:39,500
sound from we are going to grab

831
00:43:44,700 --> 00:43:45,100
Jimmy.

832
00:43:47,500 --> 00:43:51,100
We are going to grab that asset ID.

833
00:43:51,100 --> 00:43:53,800
The music asset ID, right?

834
00:43:55,200 --> 00:43:57,600
Transudate assets.

835
00:43:59,500 --> 00:44:01,900
And so that should create our first playing sound.

836
00:44:01,900 --> 00:44:05,100
I think I still had the next pointer to fill out their game State

837
00:44:06,300 --> 00:44:13,000
first playing sound next equals zero and that should be basically it,

838
00:44:13,000 --> 00:44:13,600
right?

839
00:44:14,800 --> 00:44:16,000
That should create it for us.

840
00:44:16,800 --> 00:44:21,000
Let's take a look and see since we changed a lot of code there or I

841
00:44:21,000 --> 00:44:23,500
should possibly say, we added a bunch of code there.

842
00:44:24,300 --> 00:44:29,100
I want to go ahead and make sure I can verify that all of this stuff.

843
00:44:29,300 --> 00:44:31,700
Is actually doing what it's supposed to do.

844
00:44:33,800 --> 00:44:37,800
So, let's go ahead and and make sure I also want to well, will I

845
00:44:37,800 --> 00:44:38,100
guess?

846
00:44:38,100 --> 00:44:39,300
We'll check a little bit later.

847
00:44:40,200 --> 00:44:42,700
Anyway, let's take a look in the Train Arena stuff.

848
00:44:42,700 --> 00:44:45,000
To see how things are going.

849
00:44:45,600 --> 00:44:46,900
Let's go in here.

850
00:44:50,900 --> 00:44:55,300
What is the problem access violation writing location?

851
00:44:57,900 --> 00:44:58,700
Oh, my

852
00:45:00,300 --> 00:45:01,300
What have we done?

853
00:45:03,200 --> 00:45:05,100
How many assets do we actually have?

854
00:45:05,100 --> 00:45:07,900
By the way, we've got plenty right 17.

855
00:45:08,300 --> 00:45:09,400
So, what's the problem?

856
00:45:13,700 --> 00:45:14,200
It's

857
00:45:16,500 --> 00:45:17,100
there we go.

858
00:45:21,400 --> 00:45:22,400
Come in here.

859
00:45:22,700 --> 00:45:25,400
Oh, we're still in release mode.

860
00:45:25,400 --> 00:45:26,400
Hold on one second.

861
00:45:27,600 --> 00:45:28,900
I would like to step through this.

862
00:45:32,100 --> 00:45:37,700
Okay, so we allocate the assets, we come in here and set our tag

863
00:45:37,700 --> 00:45:38,400
ranges up.

864
00:45:38,400 --> 00:45:39,200
That's all good.

865
00:45:39,300 --> 00:45:41,700
Oops, I accidentally hit F5.

866
00:45:42,600 --> 00:45:44,600
U sound count is less than sound counts.

867
00:45:44,600 --> 00:45:50,600
I don't count as one add sound asset so we just set our count too low.

868
00:45:51,600 --> 00:45:54,000
Yeah, great obviously.

869
00:45:54,000 --> 00:45:56,300
That's not going to work again.

870
00:45:56,300 --> 00:45:58,600
This is all stuff that we'd really don't have to care about.

871
00:45:58,600 --> 00:46:01,600
We just have to make sure that it works on a farm produces because we

872
00:46:01,900 --> 00:46:03,600
Of this stuff will be set in code.

873
00:46:03,700 --> 00:46:07,800
This will all be set in the PAC file because we'll know exactly how

874
00:46:07,800 --> 00:46:11,000
many sounds there are in the PAC file when we packed it.

875
00:46:11,800 --> 00:46:16,700
All right, so let's see if we can look at what I wanted to look at

876
00:46:16,700 --> 00:46:17,100
now.

877
00:46:17,600 --> 00:46:22,100
So let's take a look at that game State first playing sound and see

878
00:46:22,100 --> 00:46:23,200
what it got set to.

879
00:46:24,000 --> 00:46:26,900
So it's actually got a valid ID which is good.

880
00:46:27,200 --> 00:46:31,400
Hopefully that means we actually located an actual sound slot.

881
00:46:33,900 --> 00:46:36,800
The next is no our volumes though.

882
00:46:37,000 --> 00:46:37,700
I think about it.

883
00:46:37,700 --> 00:46:41,600
Those should not be 0 because obviously if we want to hear the sound

884
00:46:41,900 --> 00:46:45,200
we would have to give it a sound that is something other than 0.

885
00:46:45,700 --> 00:46:47,900
So let's make that full volume for now.

886
00:46:48,900 --> 00:46:54,600
And then down in the rest of the code we can we can take a look at the

887
00:46:54,600 --> 00:46:58,400
mixer now that we know that something is actually going to be given to

888
00:46:58,400 --> 00:46:58,700
it.

889
00:46:59,200 --> 00:47:01,700
So let's go ahead and

890
00:47:01,900 --> 00:47:03,100
Come in here.

891
00:47:04,900 --> 00:47:05,500
There we go.

892
00:47:06,900 --> 00:47:11,800
All right, so we need to load the sound because it hasn't been loaded

893
00:47:11,800 --> 00:47:12,400
yet.

894
00:47:14,500 --> 00:47:15,300
Eventually

895
00:47:21,600 --> 00:47:22,100
We go.

896
00:47:23,000 --> 00:47:27,700
So in here we can grab out, our volumes, grab out, the destination

897
00:47:27,700 --> 00:47:31,000
channels, which presumably have been cleared.

898
00:47:31,000 --> 00:47:33,200
Let's let's actually make sure that that's actually true.

899
00:47:35,200 --> 00:47:39,600
Yeah, we're going to go in here and see how many samples we're going

900
00:47:39,600 --> 00:47:40,000
to mix.

901
00:47:40,000 --> 00:47:41,700
We're going to mix the exact number that.

902
00:47:41,700 --> 00:47:44,900
It told us to mix is that we actually got past.

903
00:47:45,200 --> 00:47:48,300
I wonder how many samples do we actually get past?

904
00:47:48,300 --> 00:47:51,500
Let's take a look at our our sound buffer.

905
00:47:53,500 --> 00:47:54,400
1920.

906
00:47:55,700 --> 00:47:56,400
All right.

907
00:47:59,400 --> 00:47:59,800
so,

908
00:48:00,000 --> 00:48:05,800
There's us accumulating into here, grabbing those sample values out

909
00:48:05,800 --> 00:48:06,900
and accumulating.

910
00:48:07,900 --> 00:48:10,600
Presumably eventually the sound actually has some sound in it and it

911
00:48:10,600 --> 00:48:13,600
will accumulate, but that looks pretty good.

912
00:48:14,400 --> 00:48:18,600
Then we're going to advance the playing sound and to keep on going,

913
00:48:18,600 --> 00:48:19,100
right?

914
00:48:20,000 --> 00:48:21,300
And that should be fine.

915
00:48:21,300 --> 00:48:23,800
We're going to go ahead and here and the output buffer.

916
00:48:23,800 --> 00:48:25,300
Okay, so that looks reasonable.

917
00:48:27,700 --> 00:48:30,700
And so let's put ourselves on something where we can hit our frame

918
00:48:30,700 --> 00:48:35,400
rate and then see if that plays back as we might expect,

919
00:48:39,300 --> 00:48:39,800
Okay.

920
00:48:45,600 --> 00:48:49,500
So now what I might do is just add something that would allow us to

921
00:48:49,600 --> 00:48:52,000
trigger those sounds easily.

922
00:48:54,600 --> 00:48:56,000
And yeah.

923
00:48:59,800 --> 00:49:05,600
For the most part, we've pretty much got the mixer all sorted.

924
00:49:06,600 --> 00:49:07,100
Okay.

925
00:49:07,800 --> 00:49:11,500
So what I want to do now is do a sort of, a simple little thing that

926
00:49:11,500 --> 00:49:14,500
allows us to to spawn a sound, right?

927
00:49:15,200 --> 00:49:18,800
And what I want to do when we, when we did our playing sound thing,

928
00:49:19,200 --> 00:49:19,700
right?

929
00:49:19,800 --> 00:49:22,900
Where we were doing these allocating these playing sounds.

930
00:49:23,100 --> 00:49:26,200
What I want to do now is I want to go ahead and move that back up

931
00:49:26,200 --> 00:49:26,500
here.

932
00:49:26,500 --> 00:49:30,900
Again like I said, we have the, you know what, we have the sub Arena

933
00:49:30,900 --> 00:49:31,700
stuff, now,

934
00:49:35,400 --> 00:49:37,100
Yeah, it's not worth thinking about.

935
00:49:37,600 --> 00:49:39,300
Well, we'll talk about this later at some point.

936
00:49:39,300 --> 00:49:42,500
We have to actually go through and talk about memory a little bit more

937
00:49:43,000 --> 00:49:46,400
than we've talked about it so far because we need to do some actual

938
00:49:46,400 --> 00:49:54,100
partitions and, or do a dynamic pull from the operating system, one of

939
00:49:54,100 --> 00:49:54,600
the other.

940
00:49:55,500 --> 00:49:58,500
And I'll probably show how to do both of those actually at some point,

941
00:49:59,300 --> 00:50:01,200
but now is not the time for that.

942
00:50:01,900 --> 00:50:03,700
What is the time for?

943
00:50:03,900 --> 00:50:04,900
However, is

944
00:50:05,100 --> 00:50:08,900
To assume that we can go ahead and abuse the World Arena entirely here

945
00:50:09,800 --> 00:50:11,000
and allocate.

946
00:50:11,000 --> 00:50:15,000
Our sounds willy-nilly from it but what I'm going to do.

947
00:50:15,200 --> 00:50:17,300
So what I'm going to do is I'm going to make it to do for that.

948
00:50:18,400 --> 00:50:20,300
And then we'll deal with it a little bit later.

949
00:50:20,300 --> 00:50:23,500
So internal void play sound.

950
00:50:26,200 --> 00:50:26,900
Here we go.

951
00:50:28,200 --> 00:50:28,700
Okay.

952
00:50:29,500 --> 00:50:33,700
So in place and what we will do is we will have it take a sound ID

953
00:50:33,700 --> 00:50:35,700
that you want to play, right?

954
00:50:36,800 --> 00:50:43,000
And it will take also, I guess the, the game state that you're trying

955
00:50:43,000 --> 00:50:48,500
to play it on and then it will go ahead and just do exactly what you

956
00:50:48,500 --> 00:50:50,200
would think it would do, right?

957
00:50:50,600 --> 00:50:52,200
It'll say that.

958
00:50:52,200 --> 00:50:54,000
We want a new playing sound.

959
00:50:56,900 --> 00:50:58,600
It will grab it.

960
00:51:00,000 --> 00:51:03,500
It will initialize it, the same way that it was being initialized

961
00:51:03,600 --> 00:51:05,400
before, right?

962
00:51:06,300 --> 00:51:11,300
And it will then put it at the top of the list, right?

963
00:51:14,400 --> 00:51:14,800
Oops.

964
00:51:18,300 --> 00:51:23,400
And so this is just going to be the sound ID and I guess at this point

965
00:51:23,400 --> 00:51:26,000
to, you know, we could well, you know what, I'm gonna bother.

966
00:51:26,000 --> 00:51:28,700
I'm just going to have this returned to playing sound handled and if

967
00:51:28,700 --> 00:51:31,400
people want to mess with the volume afterwards, they can write.

968
00:51:32,100 --> 00:51:32,700
So there we go.

969
00:51:32,700 --> 00:51:37,400
That's, you know, us playing the sound that allows us to play a bunch

970
00:51:37,400 --> 00:51:38,800
of sounds and they'll get added on there.

971
00:51:38,800 --> 00:51:41,300
The only thing that I would like to do, what do we got?

972
00:51:41,300 --> 00:51:42,600
We got five minutes left.

973
00:51:42,800 --> 00:51:45,600
The only thing that I would like to do beyond that is I only want to

974
00:51:45,600 --> 00:51:47,300
actually do this, if I

975
00:51:47,500 --> 00:51:47,800
After you.

976
00:51:47,800 --> 00:51:51,600
So I'm going to do here is say this is the first free playing sound.

977
00:51:51,600 --> 00:51:56,100
So if there's a free one, use that, if there isn't right?

978
00:51:57,100 --> 00:51:58,700
I guess I'll do it this way.

979
00:51:59,600 --> 00:52:00,300
Oh, you know what?

980
00:52:00,300 --> 00:52:01,900
No, that's not the way you would do it.

981
00:52:01,900 --> 00:52:02,500
The way you would do it.

982
00:52:02,500 --> 00:52:04,200
If you were smart, is you just go?

983
00:52:04,200 --> 00:52:08,300
If there isn't a first free playing sound, then you just go ahead and

984
00:52:08,300 --> 00:52:14,600
say game State, first free playing sound equals the push, right?

985
00:52:16,900 --> 00:52:20,900
Let's track game State, first replaying, sound next equal?

986
00:52:20,900 --> 00:52:21,400
0.

987
00:52:22,100 --> 00:52:24,800
That's all you would actually do if you were smart.

988
00:52:25,300 --> 00:52:26,100
So, then,

989
00:52:28,400 --> 00:52:29,500
We would do this.

990
00:52:32,600 --> 00:52:37,600
And now everything is nicer playing sound blowing.

991
00:52:37,600 --> 00:52:41,500
Sound blowing sound like sound.

992
00:52:42,500 --> 00:52:42,800
Thanks.

993
00:52:43,300 --> 00:52:46,200
Okay, so what we do here is we say all right if there's nothing on the

994
00:52:46,200 --> 00:52:49,300
free list just stick a new one on the free list right?

995
00:52:49,700 --> 00:52:55,300
And set the next 120 if there is then just assume from then on that we

996
00:52:55,300 --> 00:52:57,300
do have something on the free list, right?

997
00:53:03,500 --> 00:53:08,300
And, and Advance the free list to the next thing, right?

998
00:53:08,300 --> 00:53:12,800
So that that doesn't do an else tries to use this one and then I think

999
00:53:12,800 --> 00:53:13,900
we're done, right?

1000
00:53:13,900 --> 00:53:14,900
That's all we need to do.

1001
00:53:15,700 --> 00:53:18,300
Let me go ahead and compile, this looks good.

1002
00:53:19,200 --> 00:53:22,900
So what I'll do now is, I'll say, alright, when we do the trance State

1003
00:53:22,900 --> 00:53:23,200
thing.

1004
00:53:23,200 --> 00:53:28,000
Now, after we get the asset stuff initialized now, I could do a thing

1005
00:53:28,000 --> 00:53:28,100
where

1006
00:53:28,100 --> 00:53:32,800
Just say play sound, this sound and the game State, and that should

1007
00:53:32,800 --> 00:53:34,600
start our music, right?

1008
00:53:37,200 --> 00:53:37,800
For us.

1009
00:53:40,900 --> 00:53:44,800
And it does, so that's good.

1010
00:53:44,800 --> 00:53:48,800
And then, when I want to do is now to test the fact that we can mix

1011
00:53:48,800 --> 00:53:51,000
things, I'll just go ahead and say that.

1012
00:53:51,000 --> 00:53:55,400
Whenever we do that, you know, the hero thing, where it launches the

1013
00:53:55,400 --> 00:53:58,600
sword or whatever, I don't actually know, I don't remember, we had

1014
00:53:58,600 --> 00:53:59,600
some sort of janky,

1015
00:54:00,000 --> 00:54:04,400
And here, that was whatever whatever you do, this sword stuff.

1016
00:54:04,400 --> 00:54:08,400
Maybe we'll just go ahead and play some sound, right?

1017
00:54:08,700 --> 00:54:13,400
So we'll play random asset from right.

1018
00:54:15,200 --> 00:54:24,400
Get random asset from sound from so, trance State assets and our asset

1019
00:54:24,400 --> 00:54:26,900
is going to be whatever.

1020
00:54:26,900 --> 00:54:29,600
Whatever would be something that has a bunch.

1021
00:54:29,600 --> 00:54:32,300
I think, blook seems good, right?

1022
00:54:33,600 --> 00:54:34,500
That seems good to me.

1023
00:54:35,400 --> 00:54:39,600
Play sound does not take two arguments.

1024
00:54:40,800 --> 00:54:43,300
whoops, get random sound from

1025
00:54:45,400 --> 00:54:46,500
asset blue.

1026
00:54:48,200 --> 00:54:49,900
How many arguments does it take?

1027
00:54:51,900 --> 00:54:53,300
That's what I really wanted to know.

1028
00:54:56,100 --> 00:54:57,400
The random series.

1029
00:54:57,800 --> 00:54:59,300
Do we have a random series?

1030
00:55:00,100 --> 00:55:04,600
I don't actually know if we have a random series to give it is the

1031
00:55:04,600 --> 00:55:06,300
only thing, right?

1032
00:55:07,100 --> 00:55:08,700
We don't we don't even have one.

1033
00:55:09,400 --> 00:55:12,300
We haven't really done anything where we want a random series.

1034
00:55:12,300 --> 00:55:15,300
I guess I got a stick a random Series in here somewhere.

1035
00:55:15,700 --> 00:55:17,400
Random series.

1036
00:55:19,700 --> 00:55:22,900
General entropy.

1037
00:55:25,700 --> 00:55:27,200
So yeah, alright.

1038
00:55:28,400 --> 00:55:30,100
General entropy

1039
00:55:31,600 --> 00:55:32,700
We'll see that guy.

1040
00:55:35,200 --> 00:55:36,400
Let's see.

1041
00:55:36,500 --> 00:55:39,800
Random series is that not?

1042
00:55:40,200 --> 00:55:44,400
I don't remember how any of the random code Works to be completely

1043
00:55:44,400 --> 00:55:48,600
honest with you random series whereas it's down there.

1044
00:55:48,600 --> 00:55:52,300
So is it just hasn't been included in here.

1045
00:55:52,900 --> 00:55:55,000
Where is handmade random actually included?

1046
00:55:57,900 --> 00:55:58,900
Dare I ask.

1047
00:55:59,400 --> 00:56:00,000
Let's see.

1048
00:56:00,000 --> 00:56:01,200
So it's in here.

1049
00:56:03,000 --> 00:56:04,600
So I just needed to be up in here.

1050
00:56:04,900 --> 00:56:06,700
It's really all we're saying, right?

1051
00:56:08,200 --> 00:56:08,700
There we go.

1052
00:56:09,700 --> 00:56:11,100
So how do we see do?

1053
00:56:11,100 --> 00:56:16,200
We do we have a way to seed or do we not have a way to seed random

1054
00:56:16,200 --> 00:56:16,700
seed?

1055
00:56:16,700 --> 00:56:17,700
That's how we do it.

1056
00:56:18,200 --> 00:56:23,200
So we need to do random seed like, so I just need to see the sky with

1057
00:56:23,200 --> 00:56:24,100
something for now.

1058
00:56:25,500 --> 00:56:30,600
The series is now just going to be game state general entropy

1059
00:56:34,300 --> 00:56:36,100
And now we should be good to go.

1060
00:56:36,100 --> 00:56:37,900
All right, so let's see if this works at all.

1061
00:56:39,300 --> 00:56:47,600
Yeah, except we have uncovered a bug, I assume in our removal code

1062
00:56:47,600 --> 00:56:49,800
there, which is unsurprising.

1063
00:56:50,000 --> 00:56:53,800
I typed it in rather quickly and on stream, it's a little hard to pay

1064
00:56:53,800 --> 00:56:58,000
attention to things sometimes, so let's take a look, dude, I do

1065
00:56:58,000 --> 00:56:59,800
everything that I do, things correctly here.

1066
00:57:00,200 --> 00:57:02,500
In are playing sound when the sound is completed.

1067
00:57:04,600 --> 00:57:06,600
Playing sound next equals game State.

1068
00:57:06,600 --> 00:57:08,300
First three playing sound.

1069
00:57:15,500 --> 00:57:18,300
Game State first or second equals playing sound?

1070
00:57:21,500 --> 00:57:26,600
I did not I definitely did not and I can tell you what I did not do.

1071
00:57:26,600 --> 00:57:29,600
Although maybe I should give people a chance to pause if they want to

1072
00:57:29,600 --> 00:57:30,200
guess what it is.

1073
00:57:33,100 --> 00:57:35,300
And that's well.

1074
00:57:38,400 --> 00:57:39,200
I'll draw it.

1075
00:57:41,200 --> 00:57:43,500
So here's our linked list, right?

1076
00:57:44,000 --> 00:57:45,600
And again, this is the kind of thing.

1077
00:57:45,600 --> 00:57:47,700
It's hard to always remember these things on the stream.

1078
00:57:49,400 --> 00:57:50,400
So here's our linked list.

1079
00:57:51,900 --> 00:57:54,400
And that's why I instantly knew what the bug was as well because it's

1080
00:57:54,500 --> 00:57:56,500
something you would probably just know if you were paying attention,

1081
00:57:56,500 --> 00:57:58,600
or you're typing it in and not talking.

1082
00:57:58,600 --> 00:58:01,800
But point being here are is our linked list.

1083
00:58:01,900 --> 00:58:04,300
And all I did was take care of this part of it.

1084
00:58:04,300 --> 00:58:07,200
I didn't take care of the part that actually points to the new guy,

1085
00:58:07,200 --> 00:58:07,400
right?

1086
00:58:07,400 --> 00:58:11,400
So here's our sounds, if we're removing this guy, this guy's next

1087
00:58:11,400 --> 00:58:13,900
pointer, needs to hop over it, right?

1088
00:58:15,000 --> 00:58:20,100
So, you know, I need to actually keep track of something like this

1089
00:58:20,300 --> 00:58:21,500
when we're going through here.

1090
00:58:22,100 --> 00:58:29,000
That's, you know, going to be, it's playing sound sort of the like in

1091
00:58:29,000 --> 00:58:33,300
pointer, you know, who's ever pointing in here and that's going to be

1092
00:58:33,500 --> 00:58:35,100
this guy, right?

1093
00:58:36,100 --> 00:58:37,400
Because that's where we actually came from.

1094
00:58:37,400 --> 00:58:37,900
First.

1095
00:58:38,600 --> 00:58:39,700
First playing sound,

1096
00:58:41,500 --> 00:58:44,900
Then as we go through what we actually want to do and I mean I guess

1097
00:58:44,900 --> 00:58:49,300
you can even do it, we can just do it playing sound, could be playing

1098
00:58:49,300 --> 00:58:53,700
sound pointer like this and then let's do it this way.

1099
00:58:53,800 --> 00:58:59,400
So we actually take with us the address of the person who's pointing

1100
00:58:59,400 --> 00:59:00,300
to us, right?

1101
00:59:00,900 --> 00:59:06,000
And as long as what's in that address is a valid value, then we're all

1102
00:59:06,000 --> 00:59:06,900
good, right?

1103
00:59:10,100 --> 00:59:10,600
Okay.

1104
00:59:13,400 --> 00:59:19,000
So yeah, so then at that point, we can say, as we come through here

1105
00:59:19,000 --> 00:59:24,800
playing sound itself, is just going to be playing sound is just going

1106
00:59:24,800 --> 00:59:27,200
to be playing some pointer, right?

1107
00:59:28,000 --> 00:59:32,100
And then the next playing sound we actually don't want to know what

1108
00:59:32,100 --> 00:59:33,700
that's going to be necessarily anymore.

1109
00:59:33,700 --> 00:59:37,600
I mean, we do, but what we need to do, when we come down here and

1110
00:59:37,600 --> 00:59:41,300
actually Advance the new one is we have to advance playing sound

1111
00:59:41,300 --> 00:59:42,600
pointer, right?

1112
00:59:43,500 --> 00:59:45,100
And playing sound pointer.

1113
00:59:45,400 --> 00:59:50,900
We actually need to know what was the pointer that was pointing in to

1114
00:59:50,900 --> 00:59:52,600
whoever we were, right?

1115
00:59:53,500 --> 00:59:57,400
So we don't actually need to do this part anymore, if that makes

1116
00:59:57,400 --> 00:59:57,700
sense.

1117
00:59:57,700 --> 00:59:59,800
Because we're still holding that original

1118
01:00:00,200 --> 01:00:03,900
So we don't need to do it quite that way, right?

1119
01:00:03,900 --> 01:00:05,100
We can get rid of that guy.

1120
01:00:06,000 --> 01:00:08,900
So what we want to do here when we remove this dude, right?

1121
01:00:08,900 --> 01:00:10,500
And we say playing sound next right?

1122
01:00:10,500 --> 01:00:13,400
We put them on the free list like like this, right?

1123
01:00:14,100 --> 01:00:17,600
Before we do that, we need to make sure that playing sound next is

1124
01:00:17,600 --> 01:00:21,500
actually, what gets put in playing sound pointer, right?

1125
01:00:21,800 --> 01:00:24,000
So what we want to do here is say, okay.

1126
01:00:25,500 --> 01:00:27,300
Playing sound pointer, right?

1127
01:00:28,800 --> 01:00:32,800
Playing sound pointer equals playing sound next so that we can

1128
01:00:32,800 --> 01:00:35,100
actually have that guy point.

1129
01:00:35,200 --> 01:00:38,400
You know, the, the thing that was originally pointing to us is now

1130
01:00:38,400 --> 01:00:42,700
pointing to the person who is after us, right?

1131
01:00:44,300 --> 01:00:47,800
And the reason that this is a little bit tricky is because at that

1132
01:00:47,800 --> 01:00:52,000
point it, then you wouldn't actually have to do anything to add to

1133
01:00:52,000 --> 01:00:53,500
make the list Advance, right?

1134
01:00:53,500 --> 01:00:57,100
That already advances the list if that makes sense.

1135
01:00:57,700 --> 01:00:59,100
So at that point, right?

1136
01:00:59,100 --> 01:01:00,900
You would literally not have to do anything.

1137
01:01:00,900 --> 01:01:05,500
The only time you have to do something is an in fact, I guess I could.

1138
01:01:05,500 --> 01:01:08,100
If I wanted to I guess I could just put this out here and do it this

1139
01:01:08,100 --> 01:01:08,400
way.

1140
01:01:10,200 --> 01:01:11,600
So at the end, right?

1141
01:01:11,600 --> 01:01:13,300
All I would have to do is either

1142
01:01:13,800 --> 01:01:21,300
I remove the guy or I move playing sound pointer to be whatever

1143
01:01:21,300 --> 01:01:22,100
playing sounds.

1144
01:01:22,100 --> 01:01:24,000
Next field is right.

1145
01:01:29,500 --> 01:01:32,100
So that's we're stepping through because it's very complicated and I

1146
01:01:32,100 --> 01:01:35,300
understand that that's probably a little bit odd.

1147
01:01:35,500 --> 01:01:37,700
And also I have to step through it because again, on stream, it's a

1148
01:01:37,700 --> 01:01:38,300
little bit tough.

1149
01:01:38,300 --> 01:01:41,200
But let me just show you what the idea is here.

1150
01:01:41,400 --> 01:01:44,300
It actually simplifies the loop a little bit, which is ironic because

1151
01:01:44,300 --> 01:01:45,500
it's a complicated thing to do.

1152
01:01:45,500 --> 01:01:49,000
But it actually makes the loop be a little simpler anyway.

1153
01:01:49,000 --> 01:01:52,200
So what we do is before we were talking about the pointer to the

1154
01:01:52,200 --> 01:01:52,800
playing sound.

1155
01:01:52,800 --> 01:01:56,500
Now, we're talking about the pointer to a location that points to the

1156
01:01:56,500 --> 01:01:57,900
playing sound so are

1157
01:01:58,000 --> 01:02:00,800
Looking at the slot like we're looking at the place that holds the

1158
01:02:00,800 --> 01:02:01,300
pointer.

1159
01:02:02,400 --> 01:02:06,000
So we start out by taking the address of 1st playing sound, which is

1160
01:02:06,000 --> 01:02:09,100
the thing that's pointing to, you know, the first thing we're going to

1161
01:02:09,100 --> 01:02:09,800
we're going to look at.

1162
01:02:09,800 --> 01:02:10,300
Right?

1163
01:02:11,000 --> 01:02:13,800
So we coming here and we say all right let's go ahead and get the

1164
01:02:13,800 --> 01:02:16,900
playing sound out of the slop that we're currently looking at.

1165
01:02:16,900 --> 01:02:19,600
And then everything else precedes is normal, right?

1166
01:02:19,900 --> 01:02:20,300
Oops.

1167
01:02:23,900 --> 01:02:24,600
What happened there?

1168
01:02:24,700 --> 01:02:30,400
Oh, duh loaded sound is not actually a valid thing at this point.

1169
01:02:31,300 --> 01:02:34,800
So that's that's that is not going to work.

1170
01:02:34,800 --> 01:02:35,700
I take it back.

1171
01:02:38,100 --> 01:02:39,400
Sound finished.

1172
01:02:43,500 --> 01:02:43,800
Yeah.

1173
01:02:47,700 --> 01:02:48,600
They're being look good.

1174
01:02:48,700 --> 01:02:49,000
Yeah.

1175
01:02:51,200 --> 01:02:54,000
Sound finished equals false.

1176
01:02:56,400 --> 01:02:56,800
There we go.

1177
01:03:00,100 --> 01:03:04,400
Okay, so we come in here, go back to what I was trying to explain

1178
01:03:04,500 --> 01:03:05,600
ignoring that part.

1179
01:03:06,200 --> 01:03:07,000
And you know what?

1180
01:03:07,000 --> 01:03:11,900
I should probably also do for you is switch to debug built, so you can

1181
01:03:11,900 --> 01:03:14,000
see me stepping through it in a more sane way.

1182
01:03:14,600 --> 01:03:15,100
There we go.

1183
01:03:17,500 --> 01:03:22,800
So in we go, and so now at the end, if the sound was finished, we do

1184
01:03:22,800 --> 01:03:23,500
some fancy footwork.

1185
01:03:23,500 --> 01:03:27,900
If it's not all we're doing is saying well, okay, previously, we were

1186
01:03:27,900 --> 01:03:29,900
pointing at who we were remembering.

1187
01:03:30,000 --> 01:03:31,400
Whirring, who pointed to us?

1188
01:03:31,400 --> 01:03:32,700
Like the pointer that pointed to us?

1189
01:03:32,700 --> 01:03:34,200
We were remembering it, right?

1190
01:03:34,500 --> 01:03:37,400
So all we need to do to go forwards, is say, alright, whatever the

1191
01:03:37,400 --> 01:03:41,400
thing is that we're actually talking about then we just need, it's

1192
01:03:41,400 --> 01:03:42,100
next pointer.

1193
01:03:42,100 --> 01:03:43,500
Now that's the pointer.

1194
01:03:43,500 --> 01:03:46,500
That's actually going to be the thing we want to remember, right?

1195
01:03:46,900 --> 01:03:48,700
So we grab that out, right?

1196
01:03:48,700 --> 01:03:51,000
Then we come through and we keep going.

1197
01:03:51,200 --> 01:03:55,000
Now, I want to go ahead and do once we can see when the sound

1198
01:03:55,000 --> 01:03:56,600
finishes, what happens there?

1199
01:03:59,100 --> 01:04:03,800
So here's a running and there's now and we've actually finished.

1200
01:04:03,800 --> 01:04:07,000
So when a sound actually finishes, what we want to do is say alright,

1201
01:04:07,000 --> 01:04:09,200
we were tracking the person who was pointing to us.

1202
01:04:09,500 --> 01:04:12,100
So now we want them to point to whoever comes after us, right?

1203
01:04:12,100 --> 01:04:14,600
So we just replace what was ever in that pointer.

1204
01:04:14,600 --> 01:04:17,600
You're tracking with with the next person, right?

1205
01:04:18,400 --> 01:04:22,200
We then say, let's move ourselves to the free list which is the same

1206
01:04:22,200 --> 01:04:22,800
as before.

1207
01:04:23,000 --> 01:04:24,300
And then we continued on.

1208
01:04:24,500 --> 01:04:26,900
Knowing that now the thing that is going

1209
01:04:27,000 --> 01:04:31,700
He looked at in this Loop is actually already the next person, right?

1210
01:04:31,700 --> 01:04:35,400
It's are ready the next person in the list and so we continue, and

1211
01:04:35,400 --> 01:04:36,700
then that's it, right?

1212
01:04:37,700 --> 01:04:39,200
And that's, that's the end of it.

1213
01:04:39,500 --> 01:04:41,100
There really isn't much else there.

1214
01:04:41,700 --> 01:04:42,800
We said, don't think so anyway.

1215
01:04:45,500 --> 01:04:49,400
Okay, so what is going on here?

1216
01:04:49,400 --> 01:04:51,000
We have a loaded sound bug though.

1217
01:04:51,500 --> 01:04:53,700
Looks like we have a different problem.

1218
01:04:55,200 --> 01:04:56,700
if I'm not very much an error,

1219
01:05:02,900 --> 01:05:06,700
Sample index, what is loaded sound?

1220
01:05:09,800 --> 01:05:15,200
so we have another problem this time it looks like with the math, ah,

1221
01:05:16,300 --> 01:05:18,400
Nope, it's not a problem with the math.

1222
01:05:18,900 --> 01:05:21,300
It's just a problem with our play sound function.

1223
01:05:22,400 --> 01:05:25,400
Obviously, when we played the sound, I was trying to make sure we set

1224
01:05:25,400 --> 01:05:27,200
everything, but we didn't actually set.

1225
01:05:27,200 --> 01:05:31,800
Everything samples played needs to be reset to zero as well.

1226
01:05:32,200 --> 01:05:32,600
There we go.

1227
01:05:34,000 --> 01:05:34,700
All right.

1228
01:05:39,300 --> 01:05:41,300
All right, so I think we're all good now.

1229
01:05:43,100 --> 01:05:44,200
Let's take a look here.

1230
01:05:44,200 --> 01:05:45,400
If I set this back,

1231
01:05:47,800 --> 01:05:48,400
here we go.

1232
01:05:55,800 --> 01:05:58,700
Not exactly the sound that you probably want to happen when you shoot

1233
01:05:58,700 --> 01:05:59,800
in a game but

1234
01:06:00,900 --> 01:06:01,500
We're all good.

1235
01:06:01,500 --> 01:06:02,100
Now, I think.

1236
01:06:07,400 --> 01:06:10,300
And so, that's really all there is to it.

1237
01:06:10,900 --> 01:06:13,700
We've got some more stuff that we'd want to do, but that's, that's

1238
01:06:13,700 --> 01:06:15,400
basically it and I'm a little over time here.

1239
01:06:15,400 --> 01:06:17,900
So, let's go ahead and go to the Q&A.

1240
01:06:33,200 --> 01:06:36,900
yeah, and by the way, so one thing that I will mention here

1241
01:06:41,200 --> 01:06:45,400
Just in terms of full disclosure.

1242
01:06:46,000 --> 01:06:49,900
So also, I don't love Loops like this.

1243
01:06:49,900 --> 01:06:54,900
That do the singly singly linked list removal from inside the list.

1244
01:06:55,400 --> 01:06:58,800
I don't really like writing these by hand because they are a little

1245
01:06:58,800 --> 01:07:01,300
finicky and hard to understand when you write them that way.

1246
01:07:02,200 --> 01:07:04,200
So I do I usually generate them.

1247
01:07:06,900 --> 01:07:09,000
I like, you know, I think they work, okay?

1248
01:07:09,400 --> 01:07:11,500
It's just they're kind of hard to understand when you write them.

1249
01:07:11,500 --> 01:07:16,000
So I do tend to to reuse that bit of code.

1250
01:07:16,400 --> 01:07:18,000
I don't write that by hand normally

1251
01:07:20,600 --> 01:07:22,700
Doubly linked list site, often do right by hand?

1252
01:07:22,700 --> 01:07:26,500
Audrey II, do generate them, but I actually don't mind writing them by

1253
01:07:26,500 --> 01:07:26,700
hand.

1254
01:07:26,700 --> 01:07:28,800
I should say, because they're not finicky like that.

1255
01:07:33,400 --> 01:07:36,000
Is the sound buffer logarithmic or linear?

1256
01:07:36,000 --> 01:07:38,300
And do we have to account for that in building the sums for the

1257
01:07:38,300 --> 01:07:38,800
buffer?

1258
01:07:38,900 --> 01:07:45,200
So, sound buffers are linear in in, like sound, apis, they're not

1259
01:07:45,200 --> 01:07:46,000
logarithmic

1260
01:07:47,600 --> 01:07:48,300
That makes sense.

1261
01:08:04,500 --> 01:08:06,000
All games Network video.

1262
01:08:06,000 --> 01:08:08,400
Do you already have someone composing, the soundtrack actually, I

1263
01:08:08,400 --> 01:08:12,700
licensed music for the soundtrack, we met in the future.

1264
01:08:13,100 --> 01:08:19,000
It depends like what how much money the game makes in terms of like

1265
01:08:19,000 --> 01:08:20,000
sales amount?

1266
01:08:21,200 --> 01:08:28,200
I would like to be able to release the music into like with, with the

1267
01:08:28,200 --> 01:08:32,800
Game Source eventually possibly possibly into the public domain.

1268
01:08:32,800 --> 01:08:34,100
But at the very least,

1269
01:08:34,300 --> 01:08:37,700
Release it under copyright.

1270
01:08:38,300 --> 01:08:41,300
And that's not something I can do with the music that I licensed.

1271
01:08:41,600 --> 01:08:46,100
So, at some point, I may, if the game made enough money, I would try

1272
01:08:46,100 --> 01:08:52,500
to hire someone to do music that I could include basically as part of

1273
01:08:52,500 --> 01:08:54,899
the, the source code as well, right?

1274
01:08:57,100 --> 01:08:59,800
Because like the art, for example, we have the full rights to

1275
01:09:00,000 --> 01:09:05,899
So I can release the art in any way that I want to whenever I want to

1276
01:09:05,899 --> 01:09:10,200
which, you know, we may want to do some of that, right?

1277
01:09:10,700 --> 01:09:14,300
And so, you know, kind of like the code where the codes going into the

1278
01:09:14,300 --> 01:09:15,300
public domain.

1279
01:09:16,600 --> 01:09:19,899
I may want to release some of the art for people to use as well.

1280
01:09:19,899 --> 01:09:23,700
Like for example, you know maybe we take some of the art and say

1281
01:09:23,700 --> 01:09:27,000
anyone can use this in any game if they want to you know, and I don't

1282
01:09:27,000 --> 01:09:28,300
know what my plans are for that.

1283
01:09:28,399 --> 01:09:29,800
I just want to make sure you have the option.

1284
01:09:30,000 --> 01:09:30,000
Yeah.

1285
01:09:30,300 --> 01:09:34,200
And so with the music, I don't have the option of doing that because

1286
01:09:34,200 --> 01:09:36,100
of the license that it's under.

1287
01:09:36,899 --> 01:09:42,500
So we may try to rectify that in the future so that I can have full

1288
01:09:42,899 --> 01:09:48,399
ability to control what happens to it afterwards, but I don't have any

1289
01:09:48,399 --> 01:09:50,100
idea if we will have money for that or not.

1290
01:09:53,200 --> 01:09:56,100
A reminder about the parameter order in interlocked increment and the

1291
01:09:56,100 --> 01:09:57,700
bug it covers up.

1292
01:09:58,700 --> 01:10:00,600
Oh, so is this this is this.

1293
01:10:00,600 --> 01:10:06,100
The q1 I had to mean to fix this for a while and I don't know if this

1294
01:10:06,100 --> 01:10:08,000
is the one you're talking about.

1295
01:10:08,100 --> 01:10:14,500
I'm gonna go to the one that were talking about are interlocked

1296
01:10:14,500 --> 01:10:15,700
increment though.

1297
01:10:22,600 --> 01:10:23,000
Okay.

1298
01:10:23,000 --> 01:10:23,400
You know what?

1299
01:10:23,400 --> 01:10:24,600
I don't know what you're talking about.

1300
01:10:25,500 --> 01:10:27,400
Are we using interlocked increment?

1301
01:10:37,100 --> 01:10:40,400
Interlock increment Q completion count.

1302
01:10:42,300 --> 01:10:44,100
So I don't know what bug you referring to.

1303
01:10:44,100 --> 01:10:46,800
Unfortunately, you have to be more specific.

1304
01:10:46,800 --> 01:10:54,500
I was actually thinking of this one, which is that when we set, when

1305
01:10:54,500 --> 01:10:58,200
we do, the atomic compare Exchange in here,

1306
01:11:01,100 --> 01:11:03,000
I thought there was a thing.

1307
01:11:05,100 --> 01:11:05,600
Yeah.

1308
01:11:05,700 --> 01:11:12,400
So the problem is that if we can't begin this task what we want to do,

1309
01:11:12,500 --> 01:11:17,900
like if the task begin fails, we want to make sure that we set the

1310
01:11:17,900 --> 01:11:23,400
asset State back to being unloaded, right?

1311
01:11:25,200 --> 01:11:30,500
Like like that because otherwise it would go to queued but no task

1312
01:11:30,500 --> 01:11:34,100
would ever actually get assigned to it because we run out and then it

1313
01:11:34,100 --> 01:11:36,300
would just never be able to be loaded, right?

1314
01:11:36,900 --> 01:11:42,300
And so yeah, that was not obviously something we were talking about

1315
01:11:42,300 --> 01:11:47,200
today but it was a bug that we talked about on the forums and that we

1316
01:11:47,200 --> 01:11:48,100
needed to fix.

1317
01:11:49,400 --> 01:11:50,200
And so

1318
01:11:53,000 --> 01:11:54,200
I did want to put that in there.

1319
01:12:05,200 --> 01:12:08,200
When mixing in mono sound to stereo volume of each finger should be

1320
01:12:08,200 --> 01:12:10,400
50% for Center pant.

1321
01:12:12,800 --> 01:12:13,300
Why?

1322
01:12:16,200 --> 01:12:17,500
Why would that be true?

1323
01:12:22,700 --> 01:12:26,200
I guess if you want to move it, I see what you're saying because you

1324
01:12:26,200 --> 01:12:28,800
want to be able to make it go, a hundred percent into the other

1325
01:12:28,800 --> 01:12:29,300
channel.

1326
01:12:30,300 --> 01:12:31,400
I'm not sure.

1327
01:12:32,100 --> 01:12:35,300
Yeah, I guess since they add two sounds out together, I could I could

1328
01:12:35,500 --> 01:12:36,300
buy that.

1329
01:12:39,300 --> 01:12:42,100
I could I could buy that being a reasonable default, I guess.

1330
01:12:47,800 --> 01:12:48,200
You know what?

1331
01:12:48,200 --> 01:12:52,200
I don't know if I don't know, maybe maybe I'd buy that, maybe I don't.

1332
01:12:55,100 --> 01:12:58,000
Like it depends whether you want the sound to be full volume when it's

1333
01:12:58,000 --> 01:12:58,800
in the center.

1334
01:12:59,800 --> 01:13:00,400
Right.

1335
01:13:01,700 --> 01:13:03,500
So I don't really know if I buy that.

1336
01:13:03,500 --> 01:13:06,200
I think I might just prefer it to just get quieter as it comes over

1337
01:13:06,200 --> 01:13:07,900
here, right?

1338
01:13:09,000 --> 01:13:09,900
So I'm not sure.

1339
01:13:10,200 --> 01:13:14,400
I'll put it to do in there for you but I'm not necessarily sold.

1340
01:13:32,500 --> 01:13:34,400
Soy sauce, the kid, will this audio code?

1341
01:13:34,400 --> 01:13:37,100
Allow you to play the same sound simultaneously.

1342
01:13:37,800 --> 01:13:40,300
If you start the same sound before it finishes the first time.

1343
01:13:40,300 --> 01:13:43,100
So you tell me, you saw me code.

1344
01:13:43,100 --> 01:13:50,400
It soy sauce, tell me whether you think it will or not, and why?

1345
01:13:53,400 --> 01:13:56,600
TF nwe, reminder about the parameter code, the second and third

1346
01:13:56,600 --> 01:13:58,500
parameters in the compare and swap.

1347
01:14:03,000 --> 01:14:05,800
I was thinking of the wrong function, thinking,

1348
01:14:06,900 --> 01:14:09,100
Second and third parameters in the compare and swap.

1349
01:14:14,900 --> 01:14:17,300
You're talking about Atomic compare Exchange.

1350
01:14:22,900 --> 01:14:23,600
ah,

1351
01:14:26,200 --> 01:14:27,700
Yes, I see what you're saying.

1352
01:14:28,500 --> 01:14:29,400
Did we have them?

1353
01:14:29,400 --> 01:14:30,900
Did we have them in the wrong order?

1354
01:14:31,400 --> 01:14:36,100
Let's take a look and made intrinsics comic compare exchange.

1355
01:14:36,500 --> 01:14:38,700
Expected new.

1356
01:14:39,500 --> 01:14:40,500
Ah, yes.

1357
01:14:41,900 --> 01:14:43,300
They're past the wrong way.

1358
01:14:47,500 --> 01:14:50,000
How was that working though?

1359
01:14:52,600 --> 01:14:53,500
that's,

1360
01:14:54,700 --> 01:14:59,800
So, we just had some we should probably look into that.

1361
01:15:00,000 --> 01:15:03,800
Though, that seems just like we must have had another bug.

1362
01:15:06,300 --> 01:15:09,300
So, I wonder if we should try to maintain the same.

1363
01:15:11,400 --> 01:15:16,600
I'm going to go ahead and do an atomic compare exchange you in 30 to

1364
01:15:16,600 --> 01:15:21,300
search here, to see where we use, it only in those places.

1365
01:15:21,600 --> 01:15:25,900
So I'm going to try and keep it the same as Windows because because

1366
01:15:25,900 --> 01:15:27,100
Windows does it this way?

1367
01:15:27,700 --> 01:15:32,300
And that way people won't get confused including myself, because I

1368
01:15:32,300 --> 01:15:35,200
believe that this is normally the way it goes, right?

1369
01:15:35,900 --> 01:15:36,700
Let's take a look.

1370
01:15:38,300 --> 01:15:40,800
Locked compare Exchange.

1371
01:15:45,900 --> 01:15:47,000
Exchange and comprehend.

1372
01:15:47,000 --> 01:15:50,300
Yeah, so the expected it goes in the final one.

1373
01:15:51,500 --> 01:15:52,100
So yeah.

1374
01:15:52,100 --> 01:15:56,400
So that is how we would expect it to go.

1375
01:15:56,700 --> 01:15:59,000
We would expect it to go like this, right?

1376
01:16:00,200 --> 01:16:01,400
We're setting it to queued.

1377
01:16:01,400 --> 01:16:06,000
We expect it to be unloaded right comic.

1378
01:16:07,100 --> 01:16:07,500
Sitting Duck.

1379
01:16:07,500 --> 01:16:09,400
You'd like so

1380
01:16:10,800 --> 01:16:12,800
And that's what we expected to have happen.

1381
01:16:14,500 --> 01:16:17,900
But we must have had some other bug because why was that ever working

1382
01:16:17,900 --> 01:16:18,500
right?

1383
01:16:20,400 --> 01:16:21,700
In fact, I don't really know.

1384
01:16:22,800 --> 01:16:24,800
It seems like that shouldn't have worked, right?

1385
01:16:24,900 --> 01:16:30,800
Because it should never have actually done the exchange and it should.

1386
01:16:30,800 --> 01:16:34,200
Oh, but it would always return unloaded, right?

1387
01:16:34,900 --> 01:16:36,600
So yeah, so that actually would work.

1388
01:16:36,600 --> 01:16:38,900
It would always return on loading because that's always what it would

1389
01:16:38,900 --> 01:16:40,300
have been, right?

1390
01:16:41,000 --> 01:16:41,500
So yeah.

1391
01:16:55,600 --> 01:16:57,900
The audio seems to be frame rate depending at the moment, could put it

1392
01:16:57,900 --> 01:16:59,200
in a separate thread or using interrupts.

1393
01:16:59,200 --> 01:17:02,500
If you can make it not frame rate dependent using interrupts would not

1394
01:17:02,500 --> 01:17:07,500
be super possible on Windows, but you could put it in a separate

1395
01:17:07,500 --> 01:17:12,500
thread if you wanted that would help make it not frame rate dependent,

1396
01:17:12,800 --> 01:17:17,200
although you would have to do work to ensure that that thread was not

1397
01:17:17,200 --> 01:17:18,100
starved.

1398
01:17:18,800 --> 01:17:20,800
So because there's no guarantee, right?

1399
01:17:20,800 --> 01:17:23,500
That the operating system is going to actually wake that thread up in

1400
01:17:23,500 --> 01:17:24,000
time.

1401
01:17:25,000 --> 01:17:29,600
So so yes and no really what you want to do.

1402
01:17:29,600 --> 01:17:32,500
Usually and we probably will, look at this a little later on.

1403
01:17:33,700 --> 01:17:37,000
Usually, what you want to do is a, you want, always make your frame

1404
01:17:37,000 --> 01:17:42,800
rate, but what you can do is you can put more audio into the buffer

1405
01:17:42,800 --> 01:17:44,500
than is necessary to get to the next frame.

1406
01:17:44,500 --> 01:17:47,700
And then if you did make your frame rate, you just overwrite.

1407
01:17:47,700 --> 01:17:49,700
What was in the buffer with the new stuff?

1408
01:17:49,700 --> 01:17:54,500
If you didn't then you you just, you know, go out a little further and

1409
01:17:54,500 --> 01:17:57,400
the sound won't actually sound like it's skipping, right?

1410
01:17:57,400 --> 01:17:59,900
But that's not relevant.

1411
01:18:00,000 --> 01:18:03,100
He's super much of a concern at this point.

1412
01:18:03,100 --> 01:18:05,200
I mean a because we should always hit frame rate.

1413
01:18:05,200 --> 01:18:09,300
So it's going to be very rare like the shipping game should never miss

1414
01:18:09,300 --> 01:18:13,900
the frame rate that's that's just bad, but if we do want to have some

1415
01:18:13,900 --> 01:18:17,900
way to guarantee that we don't have a sandwich, we have other ways

1416
01:18:17,900 --> 01:18:22,700
that we can take a look at that down the road because, you know,

1417
01:18:22,700 --> 01:18:25,500
sometimes you might miss a single frame once in a while because like,

1418
01:18:25,500 --> 01:18:27,900
you know, Adobe Reader is running in the background and take some of

1419
01:18:27,900 --> 01:18:29,500
your time away or bad things like this.

1420
01:18:36,400 --> 01:18:41,700
Would you mind adding a sink valve compare and swap for GCC clang?

1421
01:18:42,700 --> 01:18:46,200
Know, I could totally do that, although I don't remember it off the

1422
01:18:46,200 --> 01:18:47,900
top of my head very well.

1423
01:18:48,900 --> 01:18:51,900
Do we have another compiler defined in here yet?

1424
01:18:55,700 --> 01:18:56,800
Don't really remember.

1425
01:18:57,300 --> 01:18:57,900
There it is.

1426
01:19:05,200 --> 01:19:10,300
So I also don't know what's the right barrier is, would be the other

1427
01:19:10,300 --> 01:19:10,800
thing.

1428
01:19:11,000 --> 01:19:13,400
It's some heinous as mm thing last time.

1429
01:19:13,400 --> 01:19:17,500
I remember it was like, it's like you put in a nasm instruction or

1430
01:19:17,500 --> 01:19:18,400
something like this.

1431
01:19:18,600 --> 01:19:21,800
So if you want to tell me what you want there for GCC as well, we

1432
01:19:21,800 --> 01:19:22,600
could do that.

1433
01:19:23,600 --> 01:19:25,100
But yeah, I can put that in there.

1434
01:19:25,100 --> 01:19:33,200
So if it's sync Val that compare-and-swap on llvm, this is the value.

1435
01:19:35,000 --> 01:19:36,700
So it's the other way around.

1436
01:19:37,800 --> 01:19:40,800
Are you saying that it's the other way around for GCC?

1437
01:19:49,500 --> 01:19:54,500
Anyway, take a look at that and tell me also maybe what you want there

1438
01:19:54,800 --> 01:19:55,900
if you're trying to compile.

1439
01:20:06,200 --> 01:20:06,600
Okay.

1440
01:20:06,600 --> 01:20:10,300
So you're saying azzam volatile

1441
01:20:12,500 --> 01:20:13,700
That will do the fence.

1442
01:20:15,500 --> 01:20:16,400
That looks like, what?

1443
01:20:16,400 --> 01:20:19,600
I remember roughly, I always thought this was kind of a little bit

1444
01:20:19,600 --> 01:20:20,100
crazy.

1445
01:20:22,300 --> 01:20:22,800
But yeah.

1446
01:20:27,200 --> 01:20:27,500
All right.

1447
01:20:27,500 --> 01:20:29,100
So yeah, I don't know if that helps or not.

1448
01:20:29,100 --> 01:20:35,000
We can when I when I push this code up and you guys can download it

1449
01:20:35,000 --> 01:20:36,600
and test it and see what happens.

1450
01:20:37,200 --> 01:20:40,300
Then you'll be able to say whether, you know, it actually worked or

1451
01:20:40,300 --> 01:20:40,700
not.

1452
01:20:45,600 --> 01:20:46,900
We can we can fine-tune it.

1453
01:20:48,700 --> 01:20:49,600
No more questions.

1454
01:20:50,800 --> 01:20:54,500
I'll answer the question about whether this could play sounds on top

1455
01:20:54,500 --> 01:20:55,100
of each other.

1456
01:20:57,300 --> 01:20:59,800
Let's just go ahead and do that by way of demonstration.

1457
01:21:00,900 --> 01:21:04,300
So instead of playing bloop, let's just play something very loud.

1458
01:21:04,300 --> 01:21:05,400
I'm sorry, very long.

1459
01:21:06,400 --> 01:21:06,900
Right.

1460
01:21:20,500 --> 01:21:21,200
Little sound.

1461
01:21:21,200 --> 01:21:23,700
Very good to have this many piano scores playing at once.

1462
01:21:23,700 --> 01:21:25,500
But as you can see, it totally works.

1463
01:21:51,900 --> 01:21:52,900
Kind of cacophony.

1464
01:22:02,100 --> 01:22:03,800
It's like Philip Glass or something.

1465
01:22:15,200 --> 01:22:21,200
Rabisu, the reason why it works is because, you know, if you take a

1466
01:22:21,200 --> 01:22:23,500
look at how this thing works down here, right?

1467
01:22:24,600 --> 01:22:29,000
Playing sound is a totally separate concept from the actual sounds

1468
01:22:29,000 --> 01:22:30,400
themselves, right?

1469
01:22:31,200 --> 01:22:35,900
We basically said that we have a separate list of sounds, so separate

1470
01:22:35,900 --> 01:22:36,800
list of playing sounds.

1471
01:22:36,800 --> 01:22:40,900
So we can create as many entries in that list as we want and all of

1472
01:22:40,900 --> 01:22:45,500
them could all point to the same, underlying sound buffer, right?

1473
01:22:45,800 --> 01:22:49,400
So this Loop is happening over however many playing sounds.

1474
01:22:49,400 --> 01:22:52,300
There are not however many loaded sounds.

1475
01:22:52,300 --> 01:22:53,500
There are right.

1476
01:22:54,800 --> 01:22:58,200
So we basically have a system where it's completely divided, right?

1477
01:22:58,200 --> 01:23:01,500
We've Got Loaded sounds over here and we've got playing sounds over

1478
01:23:01,500 --> 01:23:02,000
here.

1479
01:23:02,300 --> 01:23:02,800
Okay?

1480
01:23:02,900 --> 01:23:07,100
And so, if we load in a sound and we have the music in here, we can

1481
01:23:07,100 --> 01:23:09,800
just go ahead and stack up as many playing sounds.

1482
01:23:09,800 --> 01:23:14,400
As we want that all point to the same piece of music, right?

1483
01:23:14,600 --> 01:23:17,900
And each one of these because we partition the data properly.

1484
01:23:17,900 --> 01:23:22,800
So, that the sample count that had been played so far is in each of

1485
01:23:22,800 --> 01:23:24,300
these, they can each be.

1486
01:23:24,500 --> 01:23:27,100
Different position in time, right?

1487
01:23:27,200 --> 01:23:31,600
And this is a very important thing to understand, you always want to

1488
01:23:31,600 --> 01:23:37,300
separate your asset data from your instance data, right?

1489
01:23:37,600 --> 01:23:41,300
This is like an instance of a sound and this is like the definition of

1490
01:23:41,300 --> 01:23:42,900
a sound and code terms, right?

1491
01:23:42,900 --> 01:23:45,900
It's like when we Define a struct and then we have lots of objects

1492
01:23:45,900 --> 01:23:47,100
that are that type, right?

1493
01:23:47,100 --> 01:23:51,600
We say like you know, I mean even the playing sound itself, we Define

1494
01:23:51,600 --> 01:23:54,300
the struct once that's what's in there, but then

1495
01:23:54,300 --> 01:23:56,100
We make a bunch of them, right?

1496
01:23:56,100 --> 01:23:59,000
And the same thing is true for our asset system.

1497
01:23:59,100 --> 01:23:59,800
We have

1498
01:24:00,200 --> 01:24:05,800
You know, a loaded sound that we actually create but then we can play

1499
01:24:05,800 --> 01:24:09,100
it as we want to have like records that instance, it as many times as

1500
01:24:09,100 --> 01:24:09,700
we want.

1501
01:24:09,700 --> 01:24:13,300
So that we can play it, you know, on top of itself or however many

1502
01:24:13,300 --> 01:24:16,100
times we want and all that sort of thing, right?

1503
01:24:17,800 --> 01:24:18,800
Something that makes sense.

1504
01:24:27,700 --> 01:24:29,300
All right, let's close everything down.

1505
01:24:31,000 --> 01:24:32,100
I don't see any more questions.

1506
01:24:32,100 --> 01:24:33,000
So I think we're good.

1507
01:24:35,400 --> 01:24:36,400
Oh, one more Cooper.

1508
01:24:36,400 --> 01:24:39,000
Caleb, why use a linked list as opposed to another data structure?

1509
01:24:39,100 --> 01:24:42,400
Like a vector, the reason you use a linked list here is because we

1510
01:24:42,400 --> 01:24:48,400
tend to add and remove things randomly and vectors tend to be vectors.

1511
01:24:48,900 --> 01:24:51,500
You can't add and remove things from randomly without cost.

1512
01:24:51,500 --> 01:24:54,900
When you add something into a vector, you have to resize the whole

1513
01:24:54,900 --> 01:25:02,100
thing potentially or you know, whenever you get to, you know, the end

1514
01:25:02,100 --> 01:25:04,600
of it basically, whenever you fill it up, you have to resize it more.

1515
01:25:05,100 --> 01:25:08,000
And when you remove things out from it, right?

1516
01:25:08,000 --> 01:25:10,200
You would still have to do the free list, tracking.

1517
01:25:11,600 --> 01:25:13,900
Otherwise, you have to compact the whole thing down.

1518
01:25:14,500 --> 01:25:17,900
So for random removal in this case, it's much easier to just use the

1519
01:25:17,900 --> 01:25:19,100
link list in this case.

1520
01:25:19,700 --> 01:25:25,500
And part of that reason is because the we don't need random-access.

1521
01:25:25,500 --> 01:25:29,000
Like we never need to say, what's the third playing sound, right?

1522
01:25:29,300 --> 01:25:33,700
And so, when we have a situation with random addition and removal,

1523
01:25:34,900 --> 01:25:37,100
And we don't need to ever do random access.

1524
01:25:37,500 --> 01:25:39,900
That's a time when a linked list tends to be pretty handy, right?

1525
01:25:39,900 --> 01:25:41,200
Because that's exactly what it does.

1526
01:25:41,200 --> 01:25:41,600
Well,

1527
01:25:52,400 --> 01:25:56,300
But can you take the output of the sound summer mechanism and play

1528
01:25:56,300 --> 01:25:58,900
that sure if you wanted to?

1529
01:26:00,300 --> 01:26:01,900
There's no reason why you couldn't.

1530
01:26:08,300 --> 01:26:10,800
All right, I'm going to go ahead and call it.

1531
01:26:12,100 --> 01:26:13,200
It says stream has ended.

1532
01:26:13,200 --> 01:26:16,100
So, I believe the stream has, in fact, ended.

1533
01:26:16,500 --> 01:26:18,800
All right, everyone thank you very much for joining me for another

1534
01:26:18,800 --> 01:26:19,800
episode of handmade hero.

1535
01:26:19,800 --> 01:26:20,900
It's been a pleasure coding with you.

1536
01:26:20,900 --> 01:26:24,400
As always, it's nice to have sound mixing in there in zygote form but

1537
01:26:24,800 --> 01:26:27,400
you know you could you could ship a game with, that's a mixture.

1538
01:26:27,400 --> 01:26:29,600
If you really had to just doesn't have a few of the features that we

1539
01:26:29,600 --> 01:26:33,100
probably want to add like I mentioned on the previous stream that are

1540
01:26:33,100 --> 01:26:35,400
pretty basic and we should probably add them.

1541
01:26:36,600 --> 01:26:39,200
Anyway, that's what we'll do next week.

1542
01:26:39,600 --> 01:26:41,600
We'll continue down the sound mixing Road just a little bit.

1543
01:26:41,600 --> 01:26:42,800
Just put a few more features in there.

1544
01:26:42,800 --> 01:26:45,600
Maybe make make it Cindy as well.

1545
01:26:46,000 --> 01:26:47,300
So we'll go ahead and do that.

1546
01:26:47,800 --> 01:26:49,300
And I hope you'll join me for that again.

1547
01:26:49,300 --> 01:26:50,600
That'll probably start Monday.

1548
01:26:50,700 --> 01:26:54,700
I don't know what time, but check the, the tweetbot for the schedule

1549
01:26:54,700 --> 01:26:57,600
until then, if you would like to play around with the code yourself at

1550
01:26:57,600 --> 01:26:59,800
home and experiment and so on, you

1551
01:27:00,000 --> 01:27:03,000
Always get it by pre-ordering, The Game and handmade hero dot-org

1552
01:27:03,300 --> 01:27:04,600
using the little pre-order button.

1553
01:27:05,400 --> 01:27:06,400
You can go ahead and check that out.

1554
01:27:06,400 --> 01:27:08,900
I upload the source code every night after we're done coding here so

1555
01:27:08,900 --> 01:27:10,100
you can play around with it.

1556
01:27:10,600 --> 01:27:11,700
There's also a forum site.

1557
01:27:11,700 --> 01:27:14,200
You can go to ask questions, get ports to Mac and Linux and other good

1558
01:27:14,200 --> 01:27:15,100
stuff like that.

1559
01:27:15,400 --> 01:27:16,100
So check that out.

1560
01:27:16,100 --> 01:27:18,100
If you're trying to learn from the stream, it's a good resource.

1561
01:27:18,700 --> 01:27:20,600
There's also an annotated episode guide on there.

1562
01:27:20,600 --> 01:27:21,200
That's cool.

1563
01:27:22,100 --> 01:27:25,100
There's a patreon page if you want to support the video series and

1564
01:27:25,100 --> 01:27:27,600
there's also a tweetbot between the schedule to you, as I mentioned

1565
01:27:27,600 --> 01:27:29,500
before if we try to figure out what schedule going to be for the week,

1566
01:27:29,500 --> 01:27:29,900
check out that.

1567
01:27:30,000 --> 01:27:31,400
That tweetbot, it's pretty handy.

1568
01:27:31,900 --> 01:27:34,800
Alright, everyone that's it for handmade hero.

1569
01:27:35,500 --> 01:27:37,800
I hope you guys have a great weekend.

1570
01:27:38,100 --> 01:27:42,300
I know I will, because I just got a beta build of the game that I

1571
01:27:42,300 --> 01:27:44,800
haven't gotten a build of in a long, long time.

1572
01:27:44,800 --> 01:27:48,000
And I can't say what it is because it's not announced yet, but I'm

1573
01:27:48,000 --> 01:27:48,700
pretty excited.

1574
01:27:48,700 --> 01:27:50,800
So I will have a very fun weekend.

1575
01:27:51,400 --> 01:27:53,800
I don't know if you will but I hope that you find a game out there to

1576
01:27:53,800 --> 01:27:56,100
play so that you will too.

1577
01:27:56,500 --> 01:27:57,000
Alright, take it.

1578
01:27:57,000 --> 01:27:59,700
Every tease, everyone hope to see you back here Monday until then

1579
01:27:59,700 --> 01:27:59,900
have.

1580
01:28:00,000 --> 01:28:02,400
A great weekend and have fun coding.

