1
00:00:00,800 --> 00:00:01,400
There we go.

2
00:00:01,600 --> 00:00:03,200
Hello everyone and welcome to handmade.

3
00:00:03,200 --> 00:00:05,900
Here are the show Rico to complete game live on Twitch.

4
00:00:06,000 --> 00:00:08,200
We don't use any engines or any libraries here.

5
00:00:08,200 --> 00:00:13,200
There are no engines or libraries here.

6
00:00:15,700 --> 00:00:19,400
I fully expect you all to have left your engines and libraries at

7
00:00:19,400 --> 00:00:25,800
home, because if I see anyone out there on handmade hero using an

8
00:00:25,800 --> 00:00:31,800
engine or a library, there will be significant consequences.

9
00:00:31,800 --> 00:00:32,200
People.

10
00:00:32,200 --> 00:00:32,500
Okay.

11
00:00:32,500 --> 00:00:35,000
This is not fun and games.

12
00:00:35,000 --> 00:00:35,400
All right?

13
00:00:35,400 --> 00:00:39,100
It's not some big circus where you can just program anything you want

14
00:00:39,300 --> 00:00:43,700
and everyone's going to be okay with that, all right, this is serious.

15
00:00:45,400 --> 00:00:51,800
You know, this is a serious topical game about an orphanage for

16
00:00:51,800 --> 00:00:55,900
limbless children and if you cannot get on board with that, all right,

17
00:00:55,900 --> 00:00:57,400
then I just don't know what to say.

18
00:00:57,400 --> 00:01:01,400
You maybe you need a timeout but while you're taking that time out,

19
00:01:01,400 --> 00:01:04,000
what I would like you to do is think about the fact that today is day

20
00:01:04,000 --> 00:01:04,800
1 41.

21
00:01:05,099 --> 00:01:10,600
And so, if you would like to follow along with me without engines and

22
00:01:10,600 --> 00:01:14,500
libraries, you will want to unpack day 140 source code into a

23
00:01:14,500 --> 00:01:15,100
directory because

24
00:01:15,300 --> 00:01:16,500
That is the source code.

25
00:01:16,500 --> 00:01:18,200
We will be starting with today.

26
00:01:19,200 --> 00:01:20,000
That is it

27
00:01:22,000 --> 00:01:25,800
Now that we've gotten that out of the way and I hope everyone is

28
00:01:25,800 --> 00:01:27,100
behaving themselves out there.

29
00:01:28,900 --> 00:01:31,300
We need to decide what we're going to do today.

30
00:01:32,000 --> 00:01:33,600
So let's open things up here.

31
00:01:33,600 --> 00:01:39,300
If you remember, we left things off, we had made some audio mixing.

32
00:01:40,100 --> 00:01:44,700
Fundus is here, which I think we left it, where I actually launched

33
00:01:44,700 --> 00:01:47,700
the entire new musical score every time you threw, one of the Little

34
00:01:47,700 --> 00:01:51,000
Rock's out, one of those little test rocks and So eventually it just

35
00:01:51,000 --> 00:01:51,600
got absolutely

36
00:01:52,200 --> 00:01:55,200
Confidence of weird but I think we were just doing that because

37
00:01:55,200 --> 00:01:58,900
someone asked whether you could play the same sound multiple times and

38
00:01:58,900 --> 00:02:00,000
of course, the answer was yes.

39
00:02:00,000 --> 00:02:02,700
And that was the best way to demo it.

40
00:02:02,700 --> 00:02:07,200
So we've got that straightened out now so I hopefully we can, you

41
00:02:07,200 --> 00:02:09,800
know, maybe not do that anymore.

42
00:02:09,800 --> 00:02:12,500
And switch this back to something that isn't going to be too

43
00:02:12,500 --> 00:02:16,400
cacophonous, like asset Loop and here we go.

44
00:02:16,400 --> 00:02:19,000
Alright, so there we go.

45
00:02:20,700 --> 00:02:21,300
Oh good.

46
00:02:22,000 --> 00:02:25,800
So what we want to do now I think if I'm not very much an error is

47
00:02:25,800 --> 00:02:27,400
we've got like two things.

48
00:02:27,400 --> 00:02:30,600
We might want to take a look at in terms of how we are dealing with

49
00:02:30,600 --> 00:02:31,300
sound mixing.

50
00:02:31,500 --> 00:02:36,500
One of them is whether or not we want to support streaming sounds.

51
00:02:36,500 --> 00:02:40,700
And if we want to support streaming sounds, how do we do that?

52
00:02:40,900 --> 00:02:43,400
And again when I say streaming sounds I don't mean like asset

53
00:02:43,400 --> 00:02:44,600
streaming, which you've already implemented.

54
00:02:44,600 --> 00:02:49,000
I mean more like a single sound instead of being streamed in as a

55
00:02:49,000 --> 00:02:49,600
chunk.

56
00:02:50,100 --> 00:02:50,200
It

57
00:02:50,500 --> 00:02:52,000
You streamed as like one chunk.

58
00:02:52,000 --> 00:02:53,600
It can be streamed in as like many chunks.

59
00:02:53,800 --> 00:02:58,400
So you know, if you have a piece of music, that's 30 megabytes long,

60
00:02:58,400 --> 00:02:59,400
or something like this.

61
00:03:00,000 --> 00:03:01,700
Don't have to pull the whole thing in at.

62
00:03:01,700 --> 00:03:05,000
Once you can pull in little pieces of it, which maybe takes off a

63
00:03:05,000 --> 00:03:05,900
little memory pressure.

64
00:03:05,900 --> 00:03:07,700
Maybe takes off a little load pressure.

65
00:03:10,600 --> 00:03:12,500
You know, do we want to support something like that?

66
00:03:13,200 --> 00:03:14,100
And maybe we do.

67
00:03:14,500 --> 00:03:16,900
So there's that we can take a look at the other thing that we want to

68
00:03:16,900 --> 00:03:20,800
take a look at is adding a little bit more functionality to the mixer

69
00:03:21,300 --> 00:03:24,700
stuff like volume ramping over time so you can kind of fade things in

70
00:03:24,700 --> 00:03:25,700
and fade things out.

71
00:03:25,700 --> 00:03:29,100
Instead of only being able to just set one volume for things and leave

72
00:03:29,100 --> 00:03:32,600
it there and that would also give us like panning back and forth if we

73
00:03:32,600 --> 00:03:35,600
want to like move things around over time.

74
00:03:36,000 --> 00:03:39,900
So we have some stuff like that that we probably would like to have

75
00:03:39,900 --> 00:03:40,200
happen.

76
00:03:41,600 --> 00:03:45,800
And we also probably want to drop our mixer down into SSE just to make

77
00:03:45,800 --> 00:03:47,100
sure just, you know, Cindy eyes.

78
00:03:47,100 --> 00:03:50,000
It just to make sure that everything is kosher there.

79
00:03:50,000 --> 00:03:53,900
So we have a lot of things that we could look at in that respect and I

80
00:03:53,900 --> 00:03:57,100
don't know which one is necessarily the most logical.

81
00:03:57,100 --> 00:04:01,400
I think probably what we would want to do first is take a look at the

82
00:04:01,400 --> 00:04:05,000
streaming stuff, because that would affect the way this Loop kind of

83
00:04:05,000 --> 00:04:08,300
works at a higher level than the other things would like the other

84
00:04:08,300 --> 00:04:10,200
things are kind of about interpolating.

85
00:04:10,300 --> 00:04:15,000
Values inside this Loop which is not really all that relevant to

86
00:04:15,000 --> 00:04:15,700
anything meaning.

87
00:04:15,700 --> 00:04:18,200
You know, we can add interpolation in these Loops in there really

88
00:04:18,200 --> 00:04:21,399
isn't going to be a whole lot of consequence to the external code.

89
00:04:21,500 --> 00:04:25,600
But if we do want to have our sound loaded in pieces, that has a bunch

90
00:04:25,600 --> 00:04:29,700
of ramifications that we might need to think about in terms of how our

91
00:04:29,700 --> 00:04:30,800
asset handling works.

92
00:04:30,800 --> 00:04:33,300
And so we might want to, you know, we might want to look at that a

93
00:04:33,300 --> 00:04:38,200
little bit more carefully, so let's try that.

94
00:04:39,400 --> 00:04:39,900
so,

95
00:04:41,200 --> 00:04:42,700
Here is what I am thinking.

96
00:04:43,300 --> 00:04:46,000
Here is what I am thinking.

97
00:04:47,300 --> 00:04:50,800
We have our assets stuff, set up here, right?

98
00:04:51,000 --> 00:04:55,700
And when we have a loaded sound, you know, that loaded sound, we bring

99
00:04:55,700 --> 00:04:59,800
that in as part of our asset streaming system, obviously it comes from

100
00:04:59,800 --> 00:05:00,600
an asset slot.

101
00:05:00,600 --> 00:05:04,700
That's backed by one of these info things, right assets and info.

102
00:05:05,500 --> 00:05:08,900
And so as it sounds info, eventually will probably contain a little

103
00:05:08,900 --> 00:05:10,200
bit of information right now.

104
00:05:10,200 --> 00:05:10,800
It just contains

105
00:05:11,000 --> 00:05:14,500
File name because we don't have an asset file format yet.

106
00:05:14,500 --> 00:05:19,000
So we're just actually loading wav files just straight off raw

107
00:05:19,000 --> 00:05:21,100
directories on Windows, right?

108
00:05:22,400 --> 00:05:24,800
But in the future, that will probably have stuff like where what the

109
00:05:24,800 --> 00:05:27,200
offset is in the PAC file, that we're going to read out of.

110
00:05:27,200 --> 00:05:29,600
And if it's compressed or any of the other things that we might need

111
00:05:29,600 --> 00:05:31,500
to know that's going to go in there.

112
00:05:31,800 --> 00:05:37,000
And so it seems relatively cheap for us to take a look at this asset

113
00:05:37,000 --> 00:05:40,800
sound info thing here, and we could add to that

114
00:05:40,900 --> 00:05:45,000
That something that just says Hey There are some number of chunks to

115
00:05:45,000 --> 00:05:46,400
this sound, right?

116
00:05:46,400 --> 00:05:49,200
We could say that there are certain number of chunks of the sound and

117
00:05:49,200 --> 00:05:51,600
then we could load those chunks independently.

118
00:05:51,600 --> 00:05:53,100
Now, the problem with that

119
00:05:55,300 --> 00:05:56,900
that's kind of the obvious thing to do, right?

120
00:05:56,900 --> 00:05:59,900
That's kind of obvious thing to adhere the problem with that is that

121
00:06:00,000 --> 00:06:05,100
Entire asset streaming system works off of the concept that a slot is

122
00:06:05,100 --> 00:06:09,800
the fundamental thing that controls whether something is loaded or

123
00:06:09,800 --> 00:06:09,900
not.

124
00:06:09,900 --> 00:06:14,500
And so what we really don't want to do is extend that concept any

125
00:06:14,500 --> 00:06:17,500
further than we have to because if we have our whole system working so

126
00:06:17,500 --> 00:06:20,600
that we can stream assets based on whether you know, on what their

127
00:06:20,600 --> 00:06:21,400
slots at us is.

128
00:06:21,400 --> 00:06:23,900
So we can basically say oh, is this thing that I need loaded or not?

129
00:06:23,900 --> 00:06:25,800
I can look at the slot and find out, right?

130
00:06:25,800 --> 00:06:29,300
If that's the way we're doing things, then it seems like what we would

131
00:06:29,300 --> 00:06:30,000
want to do is

132
00:06:30,000 --> 00:06:35,300
Is figure out a better way to put that asset info into to put to pull

133
00:06:35,300 --> 00:06:36,900
that asset info out of step further.

134
00:06:36,900 --> 00:06:41,000
So that every chunk of a stream will sound has its own assets lat and

135
00:06:41,000 --> 00:06:43,500
then that way when we go to streaming it's just it doesn't have to

136
00:06:43,500 --> 00:06:47,000
think in any other way any different than any other of the sound

137
00:06:47,000 --> 00:06:49,400
streaming components would work, right?

138
00:06:50,700 --> 00:06:53,700
And so, let's take a quick look and see if maybe there is an easier

139
00:06:53,700 --> 00:06:56,700
way for us to do that, right?

140
00:06:57,000 --> 00:07:01,800
So if you see here, we've got our asset tagging system, right, and our

141
00:07:01,800 --> 00:07:04,600
asset tagging system would actually allow us to do this.

142
00:07:04,800 --> 00:07:08,200
If we wanted to write our asset tagging system would allow us to do

143
00:07:08,200 --> 00:07:14,900
something like just sort of having a tag that advanced through time,

144
00:07:14,900 --> 00:07:15,600
right?

145
00:07:17,600 --> 00:07:24,000
We could have a tag but the idea value was like, you know, tag sound

146
00:07:24,000 --> 00:07:25,400
section or something like this.

147
00:07:25,600 --> 00:07:27,200
And we can have values that just went like 0.

148
00:07:27,200 --> 00:07:32,400
1 2 3 4 5 6 7 whatever and then you know break it up that way and look

149
00:07:32,400 --> 00:07:33,100
into the tax.

150
00:07:33,500 --> 00:07:36,500
Now that's actually would just totally work.

151
00:07:36,600 --> 00:07:40,300
I think all you have to do is in the asset sound info.

152
00:07:40,600 --> 00:07:44,300
We could just put a little thing that said, what the maximum tag value

153
00:07:44,300 --> 00:07:47,000
was for this particular sound and then it

154
00:07:47,100 --> 00:07:49,700
Just work through the tag system, just fine, right.

155
00:07:51,400 --> 00:07:57,100
But I don't actually know that we want to, there's a consequence to

156
00:07:57,100 --> 00:08:02,300
doing that and the consequence is that will now get matched along with

157
00:08:02,300 --> 00:08:05,500
with everything else and I guess we could use waiting to avoid it.

158
00:08:05,500 --> 00:08:09,000
But what that means is that if you look here, we've got asset music

159
00:08:09,000 --> 00:08:12,400
and presumably the way that will use asset music is will have a bunch

160
00:08:12,400 --> 00:08:16,100
of tags that describe the kind of music and then we'll ask for a

161
00:08:16,100 --> 00:08:16,800
match.

162
00:08:17,100 --> 00:08:21,700
And we'll get back, you know, and a match for a particular type of

163
00:08:21,700 --> 00:08:25,400
music that is then the the music that we want to play, right?

164
00:08:25,400 --> 00:08:30,300
And so then we've got a sound ID and the sound system going to get

165
00:08:30,300 --> 00:08:31,000
that sound idea.

166
00:08:31,000 --> 00:08:35,500
It's not really going to have a way of getting back to what the tag.

167
00:08:35,500 --> 00:08:40,500
The tags are that it needs to feed through in order to rematch that

168
00:08:40,500 --> 00:08:41,900
entire sound ID, right?

169
00:08:41,900 --> 00:08:44,600
So it has consequences.

170
00:08:44,600 --> 00:08:47,100
I'm not sure that that would actually be

171
00:08:47,000 --> 00:08:48,200
All that easy to do.

172
00:08:50,400 --> 00:08:53,300
We could obviously make some changes but I don't know that.

173
00:08:53,300 --> 00:08:54,900
That's the best way to do it, right?

174
00:08:56,100 --> 00:08:59,600
So if we actually have just the sound ID and we

175
00:09:00,000 --> 00:09:05,300
Somehow get to like the next sound ID, what we could do instead and

176
00:09:05,300 --> 00:09:10,600
this again, like seems maybe like an easier way to go of it is if we

177
00:09:10,600 --> 00:09:14,000
already have going to have a loaded sound, that comes back from this,

178
00:09:14,600 --> 00:09:19,300
maybe what we could do is just introduce the concept of chaining these

179
00:09:19,300 --> 00:09:20,400
sounds together.

180
00:09:20,800 --> 00:09:24,800
So for example, is there any reason that I couldn't just say?

181
00:09:25,000 --> 00:09:27,300
There's a sound ID here, right?

182
00:09:27,300 --> 00:09:29,800
And it's going to be the next ID to play.

183
00:09:30,000 --> 00:09:35,500
I write something like this and so when I load a sound in, I'm going

184
00:09:35,500 --> 00:09:40,400
to have it right in the data, where if I get to the end of this sound,

185
00:09:40,500 --> 00:09:44,500
I'm going to want to play this other sound back-to-back like lined up

186
00:09:44,500 --> 00:09:45,800
perfectly with it.

187
00:09:45,800 --> 00:09:49,200
And then allow the streaming to proceed that Wade actually because

188
00:09:49,200 --> 00:09:53,400
that way we just pull out, one of these sound ideas from the tag match

189
00:09:53,600 --> 00:09:57,400
and we really don't have to do anything else beyond that.

190
00:09:57,400 --> 00:09:59,800
So just thinking it through out loud to myself.

191
00:10:00,000 --> 00:10:00,300
Here.

192
00:10:00,900 --> 00:10:02,600
I feel like of the options that we have.

193
00:10:02,600 --> 00:10:05,900
That one seems to be the most promising and if that sound ID with her,

194
00:10:05,900 --> 00:10:09,400
just need to set to zero, that would mean that you don't have to do

195
00:10:09,400 --> 00:10:10,100
that anymore.

196
00:10:10,200 --> 00:10:13,200
Furthermore, if you set that sound idea, I guess you could.

197
00:10:13,200 --> 00:10:16,200
Imagine setting that sound ID to yourself.

198
00:10:16,200 --> 00:10:19,300
That would be a sound that looped forever.

199
00:10:21,800 --> 00:10:23,500
We just keep playing and playing and playing.

200
00:10:23,700 --> 00:10:27,300
I don't know if we want to take advantage of that but we could write.

201
00:10:28,300 --> 00:10:33,400
So if we were going to do that, what I guess I would say is, you know,

202
00:10:33,400 --> 00:10:37,600
in this asset sound info, we just go ahead and put that in here.

203
00:10:38,000 --> 00:10:43,300
Next next idea to play and that way when we go to load, you know, that

204
00:10:43,300 --> 00:10:44,900
that sound info, we would just get it.

205
00:10:44,900 --> 00:10:48,300
And in fact, I guess, since those are lined up with slots, to be

206
00:10:48,300 --> 00:10:51,400
honest, I guess we really don't even need that because assuming,

207
00:10:51,500 --> 00:10:55,400
That we know what the sound ID actually is.

208
00:10:55,400 --> 00:10:58,600
We can always go ahead and get the next one from it too.

209
00:10:59,000 --> 00:11:02,800
So just looking at this, let's take a look at what we would do if we

210
00:11:02,800 --> 00:11:03,200
wanted to.

211
00:11:03,200 --> 00:11:04,400
Just, just leave it in there.

212
00:11:04,900 --> 00:11:07,700
So here's me getting the loaded sound out and we're playing the loaded

213
00:11:07,700 --> 00:11:08,200
sound here.

214
00:11:08,200 --> 00:11:11,300
Now, assuming that I got the loaded sound, it's a good bet that I'm

215
00:11:11,300 --> 00:11:15,900
going to want to make sure that it's next sound would also be in

216
00:11:15,900 --> 00:11:16,200
there.

217
00:11:16,500 --> 00:11:19,500
So I want to do something where I say oh you know what?

218
00:11:20,700 --> 00:11:21,400
Why don't you go?

219
00:11:21,500 --> 00:11:25,700
Go ahead and and load whatever the next sound is as well.

220
00:11:25,700 --> 00:11:27,700
So the assets lat right.

221
00:11:28,700 --> 00:11:29,600
Where's that assets?

222
00:11:29,600 --> 00:11:33,400
Lat assets lat, right?

223
00:11:34,300 --> 00:11:36,200
I want to be able to get this out, right?

224
00:11:36,200 --> 00:11:38,000
So I want to be able to do a thing.

225
00:11:38,100 --> 00:11:39,800
I'm sorry, asset sound info.

226
00:11:40,000 --> 00:11:43,600
I want to be able to do a thing where I can get back the sound info.

227
00:11:43,600 --> 00:11:46,100
That went with this loaded sound, right?

228
00:11:46,400 --> 00:11:49,700
So I'm going to go ahead and say info and what I should be able to do

229
00:11:49,700 --> 00:11:51,300
here is say something like, get

230
00:11:51,500 --> 00:11:55,700
Sound info and know that as long as I had a valid, if I was able to

231
00:11:55,700 --> 00:11:59,100
get a valid loaded sound, I'm going to be able to get a valid info as

232
00:11:59,100 --> 00:11:59,500
well.

233
00:11:59,600 --> 00:11:59,900
So when

234
00:12:00,000 --> 00:12:01,200
At that info out.

235
00:12:01,600 --> 00:12:06,300
I'm going to want to say next idea to play that should actually give

236
00:12:06,300 --> 00:12:07,300
me something right.

237
00:12:07,300 --> 00:12:08,000
Info.

238
00:12:08,600 --> 00:12:09,700
Next I need to play.

239
00:12:11,900 --> 00:12:12,500
There we go.

240
00:12:13,200 --> 00:12:17,100
And I'm just going to say cue it up because whatever it is you know

241
00:12:17,100 --> 00:12:19,300
you're going to want to play it now.

242
00:12:19,300 --> 00:12:24,900
I assume I guess I don't actually know I assume we guard 40 in here.

243
00:12:24,900 --> 00:12:26,600
Yes we always do so that's good.

244
00:12:26,700 --> 00:12:29,400
So it's always free for us to just say hello to sound.

245
00:12:30,000 --> 00:12:33,700
Even if there is no sound to load, it will just ignore our request.

246
00:12:33,900 --> 00:12:36,600
So when we do this, we now know that we will have another playing

247
00:12:36,600 --> 00:12:37,700
sound, that will come back.

248
00:12:38,400 --> 00:12:43,000
So what happens now is if we get to something where we have samples to

249
00:12:43,000 --> 00:12:46,200
mix here and we get to the end of samples to mix, which you can see us

250
00:12:46,200 --> 00:12:50,600
doing here, what I want to do is instead of just exiting out of here,

251
00:12:50,700 --> 00:12:54,700
I want to end and removing, you know, the the sound, right.

252
00:12:54,900 --> 00:12:57,600
I want to go ahead and play the next sound and what, I'll do a simpler

253
00:12:57,600 --> 00:12:58,500
version of it first.

254
00:12:58,500 --> 00:12:59,800
That will actually cause a

255
00:13:00,000 --> 00:13:01,700
Skip in between them.

256
00:13:02,700 --> 00:13:04,600
Basically, what will happen here is

257
00:13:08,400 --> 00:13:13,200
if you imagine getting to the end of the sound, the mix buffer, maybe

258
00:13:13,200 --> 00:13:15,900
a certain width, and the sound buffer is less than that.

259
00:13:16,000 --> 00:13:18,900
We would leave zeros, we wouldn't feel anything in that end of the

260
00:13:18,900 --> 00:13:20,800
sound buffer, but then the next frame, we do more.

261
00:13:20,900 --> 00:13:23,400
So I need to do something a little more complicated to make the

262
00:13:23,400 --> 00:13:24,300
playback seamless.

263
00:13:24,500 --> 00:13:29,700
So for the for the minute and I'll guess I'll do here, make playback

264
00:13:29,800 --> 00:13:33,100
seamless for the moment.

265
00:13:33,100 --> 00:13:36,300
What I'm going to do is I'm going to actually just convert this

266
00:13:36,500 --> 00:13:41,000
Click to an f and we'll do something a little more fancy in a second.

267
00:13:41,400 --> 00:13:45,500
So I'm going to say, all right, if the sound would have finished,

268
00:13:45,600 --> 00:13:46,200
right?

269
00:13:47,300 --> 00:13:50,600
Then what I want to do now, instead of just assuming that the sound is

270
00:13:50,600 --> 00:13:55,200
over, I want to see whether the next idea to play, right?

271
00:13:55,500 --> 00:13:58,400
Is actually valid or not, right?

272
00:13:58,600 --> 00:14:02,100
So I don't know if we have in hand main asset asset.

273
00:14:02,100 --> 00:14:05,700
I don't know if we have an is valid of some kind.

274
00:14:06,400 --> 00:14:07,900
Looks like we don't at the moment.

275
00:14:07,900 --> 00:14:10,300
So I'm just going to go ahead and put one in here.

276
00:14:10,300 --> 00:14:14,800
That's like, you know, bull 32 is valid and you can give it a bitmap

277
00:14:14,800 --> 00:14:15,400
ID.

278
00:14:16,000 --> 00:14:24,000
Like so and you can also give it a sound ID and oops, sound ID again.

279
00:14:24,600 --> 00:14:29,700
And what I want to do here is I want to check the value and I want to

280
00:14:29,700 --> 00:14:33,700
say if the value is not equal to 0 then it is valid, right?

281
00:14:34,900 --> 00:14:37,000
And that is, that is the entirety of it.

282
00:14:37,500 --> 00:14:41,600
So, I'm going to check to see whether this particular sound is

283
00:14:41,600 --> 00:14:42,500
actually valid.

284
00:14:42,500 --> 00:14:46,000
The next one that's supposed to be playing, if it's not, then we'd the

285
00:14:46,000 --> 00:14:51,000
sound actually is finished, but if it is, then what I would like to do

286
00:14:51,100 --> 00:14:54,500
is, you know, you can take a look and we've got this, this playing

287
00:14:54,500 --> 00:14:56,300
sound guy here, right?

288
00:14:56,500 --> 00:14:59,800
You can see that the only real thing that he has about that.

289
00:15:00,000 --> 00:15:03,400
He knows about is just the idea in the samples played, right?

290
00:15:03,400 --> 00:15:05,900
So all we really have to do to change him to play.

291
00:15:05,900 --> 00:15:10,000
Another sound, is we just go ahead and set the ID to be whatever that

292
00:15:10,000 --> 00:15:11,000
thing was, right?

293
00:15:11,000 --> 00:15:14,300
That we wanted him to play next and then reset, the samples played to

294
00:15:14,300 --> 00:15:15,100
be equal to 0.

295
00:15:15,100 --> 00:15:16,400
That's that's it right?

296
00:15:16,400 --> 00:15:22,500
There's nothing really to do about it that you know there's really

297
00:15:22,500 --> 00:15:23,900
nothing fancy about that.

298
00:15:24,200 --> 00:15:25,600
This is a prefetch here.

299
00:15:26,400 --> 00:15:28,900
I guess you know the other thing I should say this is a prefetch.

300
00:15:29,200 --> 00:15:29,900
So the other thing we might

301
00:15:30,000 --> 00:15:33,500
I want to do is actually just make it known that this is a prefetch

302
00:15:34,300 --> 00:15:34,600
meaning.

303
00:15:34,600 --> 00:15:37,900
We don't actually need the sound right here, we're just prefetching.

304
00:15:37,900 --> 00:15:41,700
We're just requesting a prefetch of the sound, so maybe what I

305
00:15:41,700 --> 00:15:44,300
actually should do, is name it that sorry.

306
00:15:44,300 --> 00:15:46,800
I just thought of that because we haven't actually talked about

307
00:15:46,800 --> 00:15:50,500
prefetching, that's just to say, hey asset system, you know, this is

308
00:15:50,500 --> 00:15:51,800
going to be coming up.

309
00:15:52,100 --> 00:15:54,800
You probably want to get on that, right?

310
00:15:55,600 --> 00:15:55,800
You know.

311
00:15:55,800 --> 00:15:58,500
Don't don't be the kind of person who just leaves it to the last

312
00:15:58,500 --> 00:15:59,100
minute.

313
00:15:59,700 --> 00:15:59,900
That

314
00:16:00,000 --> 00:16:01,500
Would be bad, right?

315
00:16:01,600 --> 00:16:04,200
And so we've got let's see.

316
00:16:04,200 --> 00:16:11,700
We've got loads sound load bitmap, so I want another thing here which

317
00:16:11,700 --> 00:16:15,400
is like prefetch sound and prefetch bitmap.

318
00:16:15,700 --> 00:16:23,500
So and really for now these are just going to be literally you know

319
00:16:23,500 --> 00:16:25,200
passing right right through.

320
00:16:25,200 --> 00:16:27,500
They're not going to do anything at all.

321
00:16:28,100 --> 00:16:29,800
But in the future we may want to

322
00:16:29,900 --> 00:16:33,400
You know, the difference between something that's saying, hey, I need

323
00:16:33,400 --> 00:16:38,100
something right away and something that's like, you know, well I'm

324
00:16:38,100 --> 00:16:40,200
letting you know that I'm probably going to need it, right?

325
00:16:40,200 --> 00:16:43,900
Because those are two different actual requests in some sense.

326
00:16:44,900 --> 00:16:46,800
Okay, so let's see here.

327
00:16:46,800 --> 00:16:49,000
Well, we've got a sound ID.

328
00:16:49,000 --> 00:16:51,700
Is that these guys need to be moved up if we're going to be talking

329
00:16:51,700 --> 00:16:52,200
about them.

330
00:16:52,200 --> 00:16:53,100
So there we go.

331
00:16:55,000 --> 00:16:58,000
And we need this actual call to get sound info, which we can put in

332
00:16:58,000 --> 00:16:59,800
here, we've got our call.

333
00:16:59,900 --> 00:17:02,200
To get sound, which is here.

334
00:17:02,200 --> 00:17:04,300
And so, our call to get sound.

335
00:17:04,300 --> 00:17:12,000
Info is going to be very similar, so get sound info here is our game

336
00:17:12,000 --> 00:17:18,200
Assets in our sound ID, like so and I am just going to go ahead and

337
00:17:18,200 --> 00:17:19,500
grab it out of the assets.

338
00:17:19,500 --> 00:17:25,800
So there's our results, return result and we can start asserting these

339
00:17:25,800 --> 00:17:26,300
as well.

340
00:17:26,300 --> 00:17:28,400
This is a place, we could put in a little assertion.

341
00:17:29,900 --> 00:17:34,900
Just to you know, check to make sure that nothing bad is happening

342
00:17:34,900 --> 00:17:35,500
right now.

343
00:17:35,600 --> 00:17:39,800
So we could say, make sure the ID value is less than or equal to the

344
00:17:39,800 --> 00:17:42,500
the assets sound count or something, right?

345
00:17:43,200 --> 00:17:46,700
Because we know that they need to be within that range.

346
00:17:47,000 --> 00:17:49,000
Okay, so here we go.

347
00:17:49,000 --> 00:17:53,200
Let's double-check these just in various secret map count.

348
00:17:53,900 --> 00:17:57,900
Like so the other thing we might want to do here is say that if it was

349
00:17:57,900 --> 00:17:59,800
0, we might

350
00:18:00,000 --> 00:18:02,500
Maybe a little bit more forthcoming about that.

351
00:18:03,200 --> 00:18:06,500
Like, you know, we might want to say like value.

352
00:18:06,500 --> 00:18:11,400
If the ID value is something, we actually grab it.

353
00:18:11,400 --> 00:18:13,700
Otherwise we don't, of course.

354
00:18:13,700 --> 00:18:15,100
That'll actually, I guess work here.

355
00:18:15,100 --> 00:18:18,300
So, the only the only one where we, the only place we actually need to

356
00:18:18,300 --> 00:18:18,500
do it.

357
00:18:18,500 --> 00:18:23,100
I guess would be in here, but maybe we just want to return the null

358
00:18:23,100 --> 00:18:23,700
sound info.

359
00:18:23,700 --> 00:18:24,200
I don't know.

360
00:18:24,500 --> 00:18:26,000
That's a tough call, I'm not sure.

361
00:18:27,000 --> 00:18:29,800
All right, so, let's see where we're at here.

362
00:18:30,000 --> 00:18:33,900
Here, when we actually, the only thing that I think we'd have to do

363
00:18:33,900 --> 00:18:38,800
here is when we actually add these sound infos, right?

364
00:18:39,100 --> 00:18:43,000
We're going to have to do a thing where we say, okay, whatever that

365
00:18:43,000 --> 00:18:45,300
next sound to play was excited to play.

366
00:18:45,700 --> 00:18:48,600
We're going to have to assume that that is a zero for now.

367
00:18:48,900 --> 00:18:49,400
Right?

368
00:18:51,400 --> 00:18:53,700
What did I do wrong there?

369
00:18:54,600 --> 00:18:55,900
Sorry its value.

370
00:18:58,200 --> 00:18:59,900
But other than that, I think we're okay.

371
00:18:59,900 --> 00:19:02,400
So let's go ahead and see how we're doing here.

372
00:19:09,000 --> 00:19:11,500
All right, so that's all good.

373
00:19:11,800 --> 00:19:16,700
So now we got to do is we have to extend our notion of sound info a

374
00:19:16,700 --> 00:19:17,900
little bit, right?

375
00:19:18,900 --> 00:19:23,800
So you know, our asset sound info thing here, we'll have to have some

376
00:19:23,800 --> 00:19:29,800
opinion of what section of this file, we're actually looking at,

377
00:19:29,800 --> 00:19:30,100
right?

378
00:19:30,100 --> 00:19:33,500
So we're talking about saying, oh, we want to read a particular sample

379
00:19:33,500 --> 00:19:37,800
count and we want a particular sample Index, right?

380
00:19:38,400 --> 00:19:43,300
Now our asset sound info would actually say, you know, here's the, the

381
00:19:43,300 --> 00:19:45,700
range that were actually talking about for loading.

382
00:19:45,900 --> 00:19:47,100
The sounds right.

383
00:19:49,300 --> 00:19:50,100
If that makes sense.

384
00:19:51,000 --> 00:19:56,300
Now, what we can do here, when we actually go to, to do our load

385
00:19:56,300 --> 00:20:01,100
sound, let's take a look at how the info works out here.

386
00:20:02,300 --> 00:20:03,700
Debug, add sound info.

387
00:20:03,700 --> 00:20:06,300
Where is where is the actual load sound work.

388
00:20:06,300 --> 00:20:06,800
There we go.

389
00:20:07,200 --> 00:20:09,300
When we load the info out of here, right?

390
00:20:09,500 --> 00:20:13,400
And we ask for that file name, what we would want to do is we'd want

391
00:20:13,400 --> 00:20:15,900
to pass, you know, the sample count.

392
00:20:16,400 --> 00:20:18,900
And that first sample end.

393
00:20:19,200 --> 00:20:20,000
Right?

394
00:20:20,000 --> 00:20:22,100
We want to pass those from the info.

395
00:20:22,600 --> 00:20:26,500
And so when we when we initialize them, what we could do, just to make

396
00:20:26,500 --> 00:20:27,400
it a little easier on ourselves.

397
00:20:27,400 --> 00:20:32,000
Now, these could all be set correctly in the future because they

398
00:20:32,000 --> 00:20:34,600
would, in fact, they wouldn't you wouldn't even need any of this

399
00:20:34,600 --> 00:20:35,300
stuff, really?

400
00:20:36,400 --> 00:20:39,400
I guess sample count will would probably be in there once we actually

401
00:20:39,400 --> 00:20:42,700
have file format because going to say like basically how big the sound

402
00:20:42,700 --> 00:20:43,900
is in the PAC file or something like this.

403
00:20:43,900 --> 00:20:46,800
So it you know, you'll have something like this in the in eventually.

404
00:20:48,100 --> 00:20:49,900
But what we're doing right now.

405
00:20:49,900 --> 00:20:54,600
I'm just going to make it so that if the sample count is set to 0,

406
00:20:55,100 --> 00:20:59,000
then I'm going to assume that it just means read the whole wave file,

407
00:20:59,100 --> 00:20:59,400
right?

408
00:20:59,400 --> 00:20:59,800
Because you

409
00:21:00,000 --> 00:21:03,100
Never actually make a sound truck that had zero in there.

410
00:21:03,500 --> 00:21:07,200
So, what I'm going to do now is say, all right, we've got that debug

411
00:21:07,400 --> 00:21:08,600
load WAV file.

412
00:21:09,800 --> 00:21:11,700
And here, we're now going to be passing it.

413
00:21:12,400 --> 00:21:17,000
A first sample index and we're going to pass it a sample count, right?

414
00:21:17,600 --> 00:21:19,800
And then when we go ahead and read these things.

415
00:21:20,600 --> 00:21:26,500
And, and I guess we'll also say window sample, count and window

416
00:21:26,500 --> 00:21:28,500
because we're kind of looking at a window into the sound.

417
00:21:28,500 --> 00:21:33,100
So maybe we'll call it that or, or section something like this.

418
00:21:34,100 --> 00:21:36,600
So, when we come in here, we've read everything.

419
00:21:37,000 --> 00:21:39,000
We do all this result stuff, right?

420
00:21:39,800 --> 00:21:41,800
And again, we don't care about this code at all.

421
00:21:41,800 --> 00:21:44,200
We really just don't care because this is not going to be code, we

422
00:21:44,200 --> 00:21:45,400
actually use at all.

423
00:21:47,100 --> 00:21:52,000
It's strictly stand-in until we have that pack file setup where we can

424
00:21:52,000 --> 00:21:53,800
just know exactly what we're reading.

425
00:21:54,500 --> 00:21:59,100
So, when we do this, this debug load at the very end, all we really

426
00:21:59,100 --> 00:22:02,800
have to do when we do, the result is, is just sort of monkey with the

427
00:22:02,800 --> 00:22:03,600
result a little bit.

428
00:22:03,600 --> 00:22:07,100
When we have this loaded sound, we can basically say that, you know,

429
00:22:07,100 --> 00:22:12,700
if the section first sample index, oops, didn't mean to make that

430
00:22:12,700 --> 00:22:13,800
still be cold window.

431
00:22:13,900 --> 00:22:14,400
There we go.

432
00:22:15,900 --> 00:22:20,100
Well, if the section for a sample index is not equal to 0, then we

433
00:22:20,100 --> 00:22:23,900
want to sort of do an advanced, I'll do a little assert here that the

434
00:22:23,900 --> 00:22:29,700
section for a sample index, you know, plus whatever the section sample

435
00:22:29,700 --> 00:22:34,200
count is less than or equal to the actual sample count of the actual

436
00:22:34,200 --> 00:22:34,800
file, right?

437
00:22:34,800 --> 00:22:37,600
Because that would be bad if we, you know, didn't do that.

438
00:22:37,900 --> 00:22:41,600
But anyway, you know, assuming that it's set properly, we're going to

439
00:22:41,600 --> 00:22:44,200
set the sample count equal to the section sample count.

440
00:22:44,200 --> 00:22:45,000
So we'll just get rid.

441
00:22:45,400 --> 00:22:48,700
Of what the old sample count was going to be just just truncate it and

442
00:22:48,700 --> 00:22:53,200
then the samples each of those both 0, you know, I guess we'll just do

443
00:22:53,200 --> 00:22:56,400
for, you know, Channel Index.

444
00:22:56,400 --> 00:22:57,000
Right?

445
00:22:57,300 --> 00:23:05,100
32 Channel, index, down equals zero Channel, index is less than result

446
00:23:05,100 --> 00:23:07,700
Channel count, plus plus Channel index.

447
00:23:07,900 --> 00:23:12,900
And for each of the channels, we will just go ahead and add whatever

448
00:23:12,900 --> 00:23:15,000
that first sample index is so, you know,

449
00:23:15,200 --> 00:23:19,100
Moving them up to where we would want them to be if we were just

450
00:23:19,100 --> 00:23:21,500
playing out a chunk of the file, right?

451
00:23:22,200 --> 00:23:23,500
So hopefully that makes sense.

452
00:23:24,100 --> 00:23:25,100
I keep forgetting a.

453
00:23:26,300 --> 00:23:28,300
I'm experimenting lately with doing this.

454
00:23:29,000 --> 00:23:30,200
I don't know how I feel about it.

455
00:23:30,200 --> 00:23:31,400
I don't know how you guys feel about it.

456
00:23:31,400 --> 00:23:33,400
I've been kind of liking it lately.

457
00:23:33,400 --> 00:23:36,700
To be honest, the terseness I think in my old age.

458
00:23:37,300 --> 00:23:41,700
So you know I basically have been saying, you know what if we just had

459
00:23:42,500 --> 00:23:43,900
things that look like this?

460
00:23:45,500 --> 00:23:47,400
I think this is the way I was doing them.

461
00:23:55,500 --> 00:23:59,800
right, this is kind of like, you know, Jeff

462
00:24:00,000 --> 00:24:07,100
Roberts, I think often does this, he has, you know, defines for things

463
00:24:07,100 --> 00:24:09,000
that are, you know, as terrorists as possible.

464
00:24:10,600 --> 00:24:13,800
And I don't know, they're so fundamental that I kind of liked it, Ivan

465
00:24:13,800 --> 00:24:17,000
was playing around with it at work and I was kind of liking it.

466
00:24:17,000 --> 00:24:17,700
So I don't know.

467
00:24:17,900 --> 00:24:21,300
I don't know how people feel about it, but but I kind of feel like it

468
00:24:21,300 --> 00:24:22,100
was kind of cool.

469
00:24:22,100 --> 00:24:22,400
I don't know.

470
00:24:22,400 --> 00:24:23,700
That was my opinion.

471
00:24:23,700 --> 00:24:26,400
Oops, I always manage to get those backwards.

472
00:24:26,600 --> 00:24:29,800
I always think of, type deaths like they were defines, you know?

473
00:24:30,000 --> 00:24:33,500
And so I get the parameters all the time confused because I think of

474
00:24:33,500 --> 00:24:38,600
them as being I'm saying what I want to Define and then I'm saying

475
00:24:38,600 --> 00:24:41,700
what it should be just like a defined would be, which is the opposite

476
00:24:41,900 --> 00:24:43,400
of what you actually want.

477
00:24:44,100 --> 00:24:46,000
But anyway, so let's take a look here.

478
00:24:46,000 --> 00:24:47,400
So we've got result sample.

479
00:24:47,400 --> 00:24:48,000
Count there.

480
00:24:48,000 --> 00:24:49,500
Looks like we need this too.

481
00:24:49,600 --> 00:24:52,100
That looks like our only actual one is results a camp.

482
00:24:52,600 --> 00:24:56,300
So now, if I run this, I'm hoping that we essentially won't.

483
00:24:57,800 --> 00:24:59,900
Yeah, we won't have any

484
00:25:01,100 --> 00:25:01,900
And that's good.

485
00:25:02,300 --> 00:25:05,200
And so now, what I'm going to do is I'm going to take that music

486
00:25:05,200 --> 00:25:06,500
asset, right?

487
00:25:06,900 --> 00:25:09,900
And I'm going to start experimenting with the music asset to put us

488
00:25:09,900 --> 00:25:13,000
into a position where we can test to see whether streaming in this

489
00:25:13,000 --> 00:25:13,300
way.

490
00:25:13,300 --> 00:25:16,300
Streaming the music in this way works, right?

491
00:25:18,000 --> 00:25:21,500
So when I do add sound asset, what I'm going to do here is I'm going

492
00:25:21,500 --> 00:25:26,400
to say, let's just take only one second of music, right?

493
00:25:27,800 --> 00:25:31,300
And.and justjust extract a chunk from it, right?

494
00:25:31,400 --> 00:25:34,600
And then add sound asset is going to obviously have these guys.

495
00:25:34,600 --> 00:25:41,200
So it'll have like, first ample index, index and Sample count, right?

496
00:25:41,400 --> 00:25:42,700
And those will default to zero.

497
00:25:42,700 --> 00:25:46,300
So that people who are just adding one, don't really have to care

498
00:25:46,300 --> 00:25:47,300
about that at all.

499
00:25:49,600 --> 00:25:54,800
Wait a minute, though, where's my info at debug sound for so it needs

500
00:25:54,800 --> 00:25:58,300
to pass it in here, right?

501
00:25:58,300 --> 00:26:02,800
So I need to pass it like this first sample, index sample count.

502
00:26:03,000 --> 00:26:03,600
There we go.

503
00:26:04,600 --> 00:26:06,600
And then this guy up here, we'll have it.

504
00:26:07,600 --> 00:26:09,200
Like so, there we go.

505
00:26:11,200 --> 00:26:15,600
So that looks reasonable to me.

506
00:26:15,600 --> 00:26:19,000
First sample into oops, Frist sample, index, always good.

507
00:26:19,200 --> 00:26:20,400
Sample count.

508
00:26:21,100 --> 00:26:26,000
And so, let's see if we can get it to just play one second and then

509
00:26:26,000 --> 00:26:26,800
stop.

510
00:26:26,900 --> 00:26:27,500
Right?

511
00:26:27,600 --> 00:26:29,000
Which is what should happen.

512
00:26:36,400 --> 00:26:39,600
Alright, I'm just gonna go on a limb here and say that that did not

513
00:26:39,600 --> 00:26:40,100
work.

514
00:26:42,400 --> 00:26:46,900
You know how I know that because the sound was still playing after a

515
00:26:46,900 --> 00:26:47,500
second.

516
00:26:48,800 --> 00:26:51,100
That's regrettable it's unfortunate.

517
00:26:51,600 --> 00:26:53,300
It's not what we wanted to have happen.

518
00:26:53,300 --> 00:26:53,900
It's true.

519
00:26:55,200 --> 00:26:59,900
So you know, probably the right thing to do at this point is just

520
00:27:00,000 --> 00:27:08,600
Give up and to stop programming, you know, forever, because really

521
00:27:08,600 --> 00:27:11,900
it's about just saying that once you've been defeated, you should

522
00:27:11,900 --> 00:27:17,000
never ever try again, or another thing we could do is externalize

523
00:27:17,000 --> 00:27:17,500
blame.

524
00:27:18,300 --> 00:27:22,800
We could say that that had something to do with the sound card or some

525
00:27:22,800 --> 00:27:26,500
kind of, really lousy compiler bug, that was messing us up.

526
00:27:26,500 --> 00:27:29,900
So, there's a lot of things we can do here to avoid having to actually

527
00:27:30,000 --> 00:27:34,900
Confront the fact that we did a lousy job and when I say we I mean me,

528
00:27:34,900 --> 00:27:36,700
but that of course, is another way to externalize.

529
00:27:36,700 --> 00:27:41,500
Blame is to widen the scope of who is responsible for the problem to

530
00:27:41,500 --> 00:27:46,700
people who really probably didn't have a whole lot to do with it at

531
00:27:46,700 --> 00:27:47,700
the end of the day.

532
00:27:48,400 --> 00:27:53,800
You know that's that's obviously you know, one technique that I highly

533
00:27:53,800 --> 00:27:54,400
recommend.

534
00:27:54,400 --> 00:27:58,400
Now let's go ahead and just say for the sake of argument that we were

535
00:27:58,400 --> 00:27:59,500
actually going to be

536
00:28:00,000 --> 00:28:04,000
Urgent so-and-so's who are going to look into the actual problem and

537
00:28:04,000 --> 00:28:04,600
solve it.

538
00:28:05,500 --> 00:28:06,200
What would we do?

539
00:28:06,200 --> 00:28:08,300
Well, we know that we're playing a little bit too much.

540
00:28:08,300 --> 00:28:11,400
So the first thing I'm going to do is I want to see that load WAV file

541
00:28:11,400 --> 00:28:14,800
call and I want to see that, it's actually processing the section.

542
00:28:14,800 --> 00:28:15,000
Okay.

543
00:28:15,000 --> 00:28:17,500
So that was my first guess that, it wasn't ever actually processing.

544
00:28:17,500 --> 00:28:18,800
The section turns out.

545
00:28:18,800 --> 00:28:19,800
That's correct.

546
00:28:19,900 --> 00:28:25,300
So basically we come back here and we see, why are we not passing

547
00:28:25,300 --> 00:28:26,000
something?

548
00:28:26,700 --> 00:28:28,300
Oh, well, this is great.

549
00:28:28,300 --> 00:28:29,800
We didn't actually use

550
00:28:29,900 --> 00:28:32,200
Use the value that I said, we were going to use.

551
00:28:32,200 --> 00:28:33,500
I said it was Sample count.

552
00:28:33,500 --> 00:28:35,800
First sample index, obviously could be 0.

553
00:28:36,400 --> 00:28:37,400
No question.

554
00:28:37,400 --> 00:28:37,600
Right?

555
00:28:37,600 --> 00:28:39,700
That's the first one, we'll always have that being zero.

556
00:28:39,700 --> 00:28:42,900
It's the sample count that I said, would be the one that we switch on.

557
00:28:43,200 --> 00:28:47,200
So that's just a case of mean not even doing what I said that I was

558
00:28:47,200 --> 00:28:47,900
going to do.

559
00:28:48,000 --> 00:28:49,600
So, let's try that again and see here.

560
00:28:49,600 --> 00:28:50,100
There we go.

561
00:28:50,100 --> 00:28:54,800
Now we're in there and, and doing a little bit more of what we said we

562
00:28:54,800 --> 00:28:55,000
would.

563
00:28:55,000 --> 00:28:56,400
So let's take a look what happens now.

564
00:29:01,100 --> 00:29:04,900
Much much better, right?

565
00:29:04,900 --> 00:29:07,600
We just get one and then it's over, right?

566
00:29:08,300 --> 00:29:09,300
So that's good.

567
00:29:09,400 --> 00:29:10,500
That's a good start.

568
00:29:10,800 --> 00:29:12,800
But we've got more work to do here, obviously.

569
00:29:15,000 --> 00:29:16,200
There is also.

570
00:29:17,900 --> 00:29:20,400
Well, alright let's let's just keep going here.

571
00:29:21,200 --> 00:29:27,500
So what we want to do here is we want to go ahead and allow ourselves

572
00:29:27,500 --> 00:29:31,300
to do add sound asset in a way that makes sense, in terms of this

573
00:29:31,300 --> 00:29:31,800
extraction.

574
00:29:31,800 --> 00:29:38,100
Now, what I think I want to do is I just want to say like One S equals

575
00:29:38,100 --> 00:29:41,100
forty, forty, eight thousand for now we'll just, you know, we don't

576
00:29:41,100 --> 00:29:46,600
even know or will say one, chunk, you know, one music chunk music

577
00:29:46,600 --> 00:29:47,100
chunk

578
00:29:47,700 --> 00:29:49,900
Girls, let's say, 10 seconds of Music.

579
00:29:50,000 --> 00:29:51,400
Something like that, right?

580
00:29:51,900 --> 00:29:54,300
And we'll say that we want to do one music junk.

581
00:29:54,300 --> 00:29:59,200
What I want to do is I want to have ad sound asset automatically sort

582
00:29:59,200 --> 00:29:59,400
of

583
00:30:00,000 --> 00:30:07,600
The work of like of tracking as we add those chunks, this is just a

584
00:30:07,600 --> 00:30:10,200
convenient feature to me, like I said, this code will be removed

585
00:30:10,200 --> 00:30:13,800
because the actual asset pack file will already have these things laid

586
00:30:13,800 --> 00:30:20,900
out for us, but we need to do something, you know, for example, index

587
00:30:21,000 --> 00:30:21,200
0.

588
00:30:21,200 --> 00:30:23,200
Now that I think about it, I guess I could just do that though.

589
00:30:23,700 --> 00:30:25,200
Yeah, nevermind, nevermind.

590
00:30:25,200 --> 00:30:27,600
I was about to say something stupid or rather.

591
00:30:27,600 --> 00:30:29,800
I already did say something stupid, and

592
00:30:30,000 --> 00:30:32,600
Now, I'm just going to have to take it back, so that's fine.

593
00:30:33,500 --> 00:30:36,300
So what we can do here is just tracking both ourselves and that's

594
00:30:36,300 --> 00:30:36,500
fine.

595
00:30:36,500 --> 00:30:41,200
So the only thing I really need, add sound asset to track for me is

596
00:30:41,200 --> 00:30:47,500
the next sound to play a bit and I guess even that I really wouldn't

597
00:30:47,500 --> 00:30:48,200
have to.

598
00:30:48,200 --> 00:30:53,800
In fact, I guess yeah we could just have it so that this thing Returns

599
00:30:54,200 --> 00:30:58,800
the sound info and that would really be it right?

600
00:30:58,800 --> 00:30:59,800
Add sound asset.

601
00:31:00,000 --> 00:31:03,700
Just return the asset like this.

602
00:31:05,100 --> 00:31:09,300
Right return asset and oops, not return.

603
00:31:09,300 --> 00:31:10,600
Assert, that would be bad.

604
00:31:11,400 --> 00:31:15,400
So what we could do here is just say asset last music equals zero

605
00:31:15,500 --> 00:31:18,300
because again, like I said, this is just code for just doing our

606
00:31:18,300 --> 00:31:18,700
testing.

607
00:31:18,700 --> 00:31:21,300
So we don't really have to care if it's sustainable or interesting or

608
00:31:21,300 --> 00:31:22,900
anything, it's just whatever.

609
00:31:22,900 --> 00:31:27,500
Makes it simple to put things into sort of the fake format for our

610
00:31:27,500 --> 00:31:28,400
testing purposes.

611
00:31:29,100 --> 00:31:33,400
So when we're done here, we can basically say all right, asset this

612
00:31:33,400 --> 00:31:34,700
music equals whatever.

613
00:31:35,200 --> 00:31:38,900
And then I can just say last music equals this music and now we know

614
00:31:39,100 --> 00:31:40,100
what the last music is.

615
00:31:40,100 --> 00:31:44,100
So what I can do is say, all right, if there was a previous music,

616
00:31:44,300 --> 00:31:49,500
then whatever its slot ID was, I just need to go ahead and get out

617
00:31:49,600 --> 00:31:52,100
that sound info, right?

618
00:31:52,400 --> 00:31:56,900
I just needed to get sound info on that slot ID, right?

619
00:31:57,600 --> 00:32:00,900
Well, I guess I can just even do it like this, right?

620
00:32:01,500 --> 00:32:04,800
So I can say sound infos of the slot.

621
00:32:05,900 --> 00:32:10,600
So whatever the last music was I want to set its next idea to play

622
00:32:10,700 --> 00:32:15,200
equal to whatever this slot index actually was right?

623
00:32:16,700 --> 00:32:24,600
So this music slot ID that right, that should do it.

624
00:32:24,600 --> 00:32:29,100
So really all we have to do here is is know how long the actual file

625
00:32:29,100 --> 00:32:30,300
is, right?

626
00:32:30,800 --> 00:32:34,800
And so if we wanted to do a few different chunks, you know, we

627
00:32:34,900 --> 00:32:37,400
Could do something like this, but I'll actually go look up.

628
00:32:37,400 --> 00:32:39,600
What the actual sample indices are.

629
00:32:40,000 --> 00:32:41,800
Let's see here, slot ID.

630
00:32:41,800 --> 00:32:42,500
There we go.

631
00:32:43,700 --> 00:32:48,500
And one of the things that we probably would have to do, is actually

632
00:32:48,500 --> 00:32:53,100
double check in here, when we do load wave, we'd want to make sure

633
00:32:53,300 --> 00:32:56,500
that the sample count itself.

634
00:32:56,500 --> 00:32:59,200
Maybe maybe instead of doing this as an assertion, we could do this as

635
00:32:59,200 --> 00:32:59,800
a truncation.

636
00:33:00,200 --> 00:33:02,800
Well no I guess we could do this in assertion, the assertion would

637
00:33:02,800 --> 00:33:06,100
probably be fine and then we'll just take care of its head end.

638
00:33:17,000 --> 00:33:19,500
Good, perfect.

639
00:33:20,500 --> 00:33:24,300
We are now streaming and music and you can hear well, you probably

640
00:33:24,300 --> 00:33:27,200
couldn't because you're in secondary compression land, but there's a

641
00:33:27,200 --> 00:33:31,400
little Clique because, like I said, we're not doing that gapless

642
00:33:31,400 --> 00:33:32,200
playback yet.

643
00:33:32,400 --> 00:33:36,800
So the, the mixer isn't actually really doing what it needs to do

644
00:33:36,800 --> 00:33:41,100
quite yet, but the streaming is working, fine, so that's good.

645
00:33:41,800 --> 00:33:44,100
So let's take a look at how many sound samples.

646
00:33:44,300 --> 00:33:47,700
This wave file actually is, so we can finish up our little loader

647
00:33:47,700 --> 00:33:50,200
thing there and make sure that it's

648
00:33:50,400 --> 00:33:50,700
Bubble.

649
00:33:51,300 --> 00:33:55,400
So I want to take a look at results, sample counts, of course, I can't

650
00:33:55,400 --> 00:34:00,900
do that because the magical compiler, never knows where any of the

651
00:34:00,900 --> 00:34:01,700
values are.

652
00:34:01,700 --> 00:34:05,200
And that's always good because, why would, you know?

653
00:34:05,200 --> 00:34:08,300
It's not like you out, put the code or anything.

654
00:34:09,199 --> 00:34:12,300
So let's go ahead and copy and paste that in.

655
00:34:12,699 --> 00:34:17,500
And so inside a handmade asset when we actually make that sort of fake

656
00:34:17,500 --> 00:34:18,199
thing here.

657
00:34:18,500 --> 00:34:20,000
What I can do is just say

658
00:34:20,300 --> 00:34:24,000
Total music sample, count equals that.

659
00:34:24,000 --> 00:34:25,100
Whatever that number is.

660
00:34:25,100 --> 00:34:26,400
That's how many they said there were.

661
00:34:27,100 --> 00:34:30,800
And so then what we can do is say, well, we want to go until then

662
00:34:30,900 --> 00:34:37,500
right and sort of the the sample count that we're going to want in

663
00:34:37,500 --> 00:34:43,800
here is going to be one music chunk, unless that's actually going to

664
00:34:43,800 --> 00:34:46,400
be greater than however, much was left.

665
00:34:46,500 --> 00:34:50,199
So I guess what we could say is do it actually this way.

666
00:34:51,400 --> 00:34:56,500
We'll say the sample count is however, much is remaining right in the

667
00:34:56,500 --> 00:34:59,800
in the file and assuming that that's less than one music.

668
00:34:59,800 --> 00:35:03,000
Chunk will use it if it's greater than musician, will just use one

669
00:35:03,000 --> 00:35:06,800
music chunk and then we move along like that, right?

670
00:35:07,100 --> 00:35:11,300
So that should get us right to the end of the file and then stop,

671
00:35:11,400 --> 00:35:12,000
right?

672
00:35:12,500 --> 00:35:14,800
So I think that's all we really want.

673
00:35:15,200 --> 00:35:16,200
That should be fine.

674
00:35:18,000 --> 00:35:18,800
Let's take a look here.

675
00:35:23,000 --> 00:35:23,400
All right.

676
00:35:23,400 --> 00:35:23,800
I forgot.

677
00:35:23,800 --> 00:35:27,700
Of course, we we don't make our framing debug mode.

678
00:35:27,700 --> 00:35:33,200
I think what we should probably do to stop having to, you know, switch

679
00:35:33,200 --> 00:35:36,000
between these two is just compiled.

680
00:35:36,300 --> 00:35:39,900
Just the blink code in the texture.

681
00:35:39,900 --> 00:35:40,900
Mapper basically.

682
00:35:41,200 --> 00:35:45,200
Just that one, we could compile that in a separate file that has

683
00:35:45,200 --> 00:35:46,400
optimizations turned on.

684
00:35:46,500 --> 00:35:47,300
So that we basically,

685
00:35:47,900 --> 00:35:52,200
get you know all the speed that we normally have but without having to

686
00:35:52,200 --> 00:35:53,900
constantly switch back to debug builds,

687
00:35:57,800 --> 00:35:59,000
Does the rest of our code?

688
00:36:00,000 --> 00:36:02,200
And plenty of runs, plenty fast.

689
00:36:02,200 --> 00:36:05,200
It's only just that Graphics intensive part.

690
00:36:10,200 --> 00:36:15,900
Yeah, so I think we're all good there.

691
00:36:15,900 --> 00:36:20,300
So let's go ahead and ping back to the mixer, and take a look at what

692
00:36:20,300 --> 00:36:21,600
we're doing with the mixer there.

693
00:36:23,000 --> 00:36:26,200
And we, maybe it might be time to pull out the mixing stuff into a

694
00:36:26,200 --> 00:36:29,000
separate file just because, you know, we can kind of button it away

695
00:36:29,000 --> 00:36:31,100
and just say, here is sound mixing just like we did with the

696
00:36:31,100 --> 00:36:31,600
rendering.

697
00:36:32,500 --> 00:36:36,100
So if we sum all the sounds here, what you'll notice is we've got that

698
00:36:36,100 --> 00:36:38,900
skip because, you know, in our little to do

699
00:36:39,100 --> 00:36:39,900
Playback seamless.

700
00:36:40,200 --> 00:36:44,100
What happens here is if we run out of samples, we just full-on stop

701
00:36:44,400 --> 00:36:48,900
the mixing process here, but we actually want to do is first allow

702
00:36:48,900 --> 00:36:51,200
ourselves to switch to another sound.

703
00:36:51,300 --> 00:36:53,800
If there was another sound that was supposed to happen after this one,

704
00:36:53,800 --> 00:36:54,300
right?

705
00:36:54,300 --> 00:36:56,400
And if there was keep on mixing, right?

706
00:36:56,400 --> 00:36:59,000
That's what we actually would want to do.

707
00:37:00,100 --> 00:37:04,100
And so, what we, what we might think of here, right?

708
00:37:04,200 --> 00:37:09,300
Is, is actually having this guy in like some kind of a loop, right?

709
00:37:09,500 --> 00:37:13,400
So I'm just sort of thinking out loud here but suppose that we go

710
00:37:13,400 --> 00:37:14,300
ahead and do this.

711
00:37:15,100 --> 00:37:16,400
We're going into this Loop.

712
00:37:16,600 --> 00:37:23,100
We want to do this Loop until we actually fail to load a sound or

713
00:37:23,100 --> 00:37:23,400
there.

714
00:37:23,400 --> 00:37:25,900
The sound is actually finished right?

715
00:37:26,900 --> 00:37:29,800
Oh and so I guess one thing we could actually say here is

716
00:37:30,800 --> 00:37:35,100
We could actually make this a while on sound finished set it to true,

717
00:37:36,200 --> 00:37:36,900
or I should say.

718
00:37:37,200 --> 00:37:43,600
While the sound is not finished, we come in here and we will do this

719
00:37:43,600 --> 00:37:49,000
until we consume all of the samples in the fill up, an entire samples

720
00:37:49,000 --> 00:37:54,700
worth of sounds, fill up an entire buffers worth of samples.

721
00:37:54,900 --> 00:37:59,500
Or, you know, we get to the end of the sound or we find that we can't

722
00:37:59,500 --> 00:37:59,800
load it.

723
00:38:00,000 --> 00:38:03,000
So we have a bunch of reasons why we might want to break out of the

724
00:38:03,000 --> 00:38:04,100
loop, right?

725
00:38:05,100 --> 00:38:08,200
So all right, so first of all, we would break out of the loop if we

726
00:38:08,200 --> 00:38:10,400
had to load the sound because that means, there's nothing for us to

727
00:38:10,400 --> 00:38:11,500
play, right?

728
00:38:11,500 --> 00:38:12,200
So that's fine.

729
00:38:15,600 --> 00:38:18,700
Let's see here, we pick out lupus or something else to play.

730
00:38:18,900 --> 00:38:20,000
We break out of the loop.

731
00:38:20,000 --> 00:38:24,600
If the sound is finished, which is, which is also fine, and then we

732
00:38:24,600 --> 00:38:26,000
would remove it, right?

733
00:38:26,900 --> 00:38:33,400
And so, we will also want to break out if we ran out of actual

734
00:38:33,400 --> 00:38:34,800
samples, right?

735
00:38:35,200 --> 00:38:39,400
So, if, if we consumed all the samples, we would break as well, right?

736
00:38:39,600 --> 00:38:40,900
It's kind of a nasty little Loop.

737
00:38:40,900 --> 00:38:42,800
There's a lot of reasons why we would exit.

738
00:38:43,400 --> 00:38:44,700
Maybe there's a better way to structure it.

739
00:38:44,700 --> 00:38:45,200
Watch think.

740
00:38:45,300 --> 00:38:46,200
At that as we go.

741
00:38:46,900 --> 00:38:49,400
So we come in here, we're loading the sound.

742
00:38:49,400 --> 00:38:54,500
We do all the stuff we want to do if we get to the only thing, that's

743
00:38:54,500 --> 00:38:55,700
a problem here is right.

744
00:38:55,700 --> 00:38:59,800
The samples to mix and samples remaining in sound this

745
00:39:00,000 --> 00:39:08,200
This stuff is needs to actually be kind of nice to now persist outside

746
00:39:08,200 --> 00:39:09,400
of the loop, right?

747
00:39:11,400 --> 00:39:15,100
I guess that might be a way that we could make this work a little bit

748
00:39:15,100 --> 00:39:16,000
cleaner as well.

749
00:39:17,500 --> 00:39:17,900
Yeah.

750
00:39:17,900 --> 00:39:22,800
But anyway, so we coming here, we know that we want to try and mix

751
00:39:22,800 --> 00:39:26,000
sound into the sound buffer to fill it completely, right?

752
00:39:26,000 --> 00:39:29,600
We know we have a certain number of samples to Output, we want to fill

753
00:39:29,600 --> 00:39:29,900
that.

754
00:39:30,000 --> 00:39:30,400
Completely.

755
00:39:30,400 --> 00:39:31,600
So we're going to start with that.

756
00:39:32,400 --> 00:39:35,600
We know how many are remaining in this sound, right?

757
00:39:36,000 --> 00:39:40,200
And so we want to do is say in here, we've kind of have like this is

758
00:39:40,200 --> 00:39:42,900
almost like a total samples to mix, right?

759
00:39:43,000 --> 00:39:50,200
And so when we come in here, we've got a samples to mix equals total

760
00:39:50,200 --> 00:39:52,200
samples to mix, right?

761
00:39:52,800 --> 00:39:57,300
And then we will sort of truncate that and then what we would do at

762
00:39:57,300 --> 00:39:59,800
the end when we sort of update.

763
00:40:00,000 --> 00:40:01,900
Our well, actually.

764
00:40:01,900 --> 00:40:02,500
Where is that?

765
00:40:02,500 --> 00:40:03,000
Oh here it is.

766
00:40:03,000 --> 00:40:06,800
Playing sound samples played right shooting.

767
00:40:08,800 --> 00:40:12,000
When we update this stuff, which I think honestly, should probably

768
00:40:12,000 --> 00:40:14,800
happen up here, right?

769
00:40:14,800 --> 00:40:19,600
Like, isn't this a little busted isn't this is this, right?

770
00:40:19,700 --> 00:40:22,400
Like, if shouldn't this check be happening,

771
00:40:24,800 --> 00:40:27,300
This this truck should be happening after we advance, right?

772
00:40:27,400 --> 00:40:30,700
We mixed all these samples, we should then right?

773
00:40:30,800 --> 00:40:32,900
I mean that was in the wrong place, it would still work because the

774
00:40:32,900 --> 00:40:36,100
next time through it would it would do its thing but that was not in

775
00:40:36,100 --> 00:40:36,600
the right place.

776
00:40:36,600 --> 00:40:37,900
So we want to actually do that check here.

777
00:40:37,900 --> 00:40:42,000
So, when we actually update the samples played, we will also now take

778
00:40:42,000 --> 00:40:44,100
the samples, the total samples to mix.

779
00:40:44,400 --> 00:40:47,000
We will subtract however many we mixed, right?

780
00:40:47,000 --> 00:40:52,800
So, this will decrement 20 and so that's actually also a thing that we

781
00:40:52,800 --> 00:40:54,500
could do there that we could also

782
00:40:54,600 --> 00:40:55,300
Break on.

783
00:40:56,000 --> 00:41:02,100
You know, we could say while total samples to mix and the sound is not

784
00:41:02,100 --> 00:41:03,200
finished right?

785
00:41:03,200 --> 00:41:07,800
Well both of those things are the case because that would also then

786
00:41:07,800 --> 00:41:10,300
allow us to just sort of do this.

787
00:41:11,800 --> 00:41:16,100
And let's see if

788
00:41:18,700 --> 00:41:20,300
it's not equal to, that's okay.

789
00:41:20,300 --> 00:41:20,900
The total set.

790
00:41:20,900 --> 00:41:23,100
So all we would have to do is just basically say.

791
00:41:23,100 --> 00:41:26,600
Yeah, assert here, that total samples to mix equal zero because we

792
00:41:26,600 --> 00:41:29,300
assert that if we didn't finish the sound right.

793
00:41:29,400 --> 00:41:32,600
If the, if we didn't finish playing the sound, we should have consumed

794
00:41:32,600 --> 00:41:33,500
all of the samples in the park.

795
00:41:33,500 --> 00:41:36,300
We should have, like, filled all of the samples of the buffer.

796
00:41:37,500 --> 00:41:38,300
So that's a little janky.

797
00:41:38,300 --> 00:41:40,000
It's hard to write complex loops on stream.

798
00:41:40,000 --> 00:41:41,500
I find and talk through them.

799
00:41:41,700 --> 00:41:45,300
So I don't know how reliable that code is going to be, but let's see.

800
00:41:48,900 --> 00:41:52,100
Oh, and the other thing that I guess we could do here to make this a

801
00:41:52,100 --> 00:41:56,200
little bit easier to hear problems, as we could reduce this down until

802
00:41:56,200 --> 00:41:58,000
like two seconds, you know?

803
00:42:07,000 --> 00:42:11,000
So, I'm still hearing a little skipping there, so I don't think we're

804
00:42:11,000 --> 00:42:14,100
quite ready yet with what we're trying to do.

805
00:42:15,100 --> 00:42:16,100
So, let's see here.

806
00:42:17,600 --> 00:42:22,300
Let's see, I might just want to set a breakpoint and check this case,

807
00:42:22,300 --> 00:42:24,800
but I want to read through this one more time because like I said,

808
00:42:25,000 --> 00:42:25,900
it's hard to write these on stream.

809
00:42:25,900 --> 00:42:27,400
I wanna make sure I actually wrote The Loop.

810
00:42:27,400 --> 00:42:28,300
I thought I did.

811
00:42:28,300 --> 00:42:31,000
And, you know, that's, that's a little bit hard to do sometimes.

812
00:42:31,400 --> 00:42:35,100
So okay, we start off with however, many samples are in The Sound

813
00:42:35,100 --> 00:42:36,300
buffer that we're trying to output.

814
00:42:36,300 --> 00:42:38,100
And we say that's a total we want to mix.

815
00:42:38,100 --> 00:42:41,600
And so as long as the sound is still playing that, we're trying to

816
00:42:42,100 --> 00:42:45,800
play and the total number of samples that we have left is, you know,

817
00:42:45,800 --> 00:42:46,800
not zero right there.

818
00:42:46,800 --> 00:42:47,300
Still

819
00:42:47,400 --> 00:42:48,100
Left.

820
00:42:48,100 --> 00:42:49,900
We're going to go ahead and try to get that sound.

821
00:42:49,900 --> 00:42:53,800
Now, if we don't get the sound, then we are going to go ahead and try

822
00:42:53,800 --> 00:42:56,400
to load it and break out because there's no way we can actually put

823
00:42:56,400 --> 00:42:57,900
anything in the buffer at that point, right?

824
00:42:57,900 --> 00:43:02,100
It's just it's a non, it's a non-starter but assuming we can we're

825
00:43:02,100 --> 00:43:03,300
going to do is get the info.

826
00:43:03,300 --> 00:43:06,300
And we're going to try to prefetch whatever comes after this sound

827
00:43:06,300 --> 00:43:09,300
because we know we're going to need it relatively soon, right?

828
00:43:10,200 --> 00:43:14,000
Well then, grab those volumes out and we'll get the destinations here.

829
00:43:14,300 --> 00:43:17,600
Well, that's that's obviously a problem there.

830
00:43:17,800 --> 00:43:20,900
These guys also need to be persist through the loop, right?

831
00:43:21,100 --> 00:43:24,800
Because, as we move those four words, we need them to.

832
00:43:24,900 --> 00:43:26,000
Yeah, we need to continue.

833
00:43:26,400 --> 00:43:27,600
So, yeah, I didn't write the loop.

834
00:43:27,600 --> 00:43:29,200
I thought I did as I surmised.

835
00:43:29,200 --> 00:43:31,500
That's how it goes sometimes on Stream.

836
00:43:32,100 --> 00:43:35,800
So anyway, we've grabbed the samples to mix and we set that equal to

837
00:43:35,800 --> 00:43:36,700
however many there were left.

838
00:43:36,700 --> 00:43:39,800
We then clip that basically, say, well, if there were

839
00:43:40,000 --> 00:43:41,200
Remaining in the sound.

840
00:43:42,600 --> 00:43:45,700
If there weren't enough in the sound itself, then we're going to need

841
00:43:45,700 --> 00:43:47,300
to stop early, right?

842
00:43:49,100 --> 00:43:52,000
We then go through, however, many sound samples.

843
00:43:52,000 --> 00:43:53,500
We said we were going to mix, we mix them in.

844
00:43:53,500 --> 00:43:55,900
We advance the to destination pointers.

845
00:43:56,100 --> 00:43:57,100
We then come back.

846
00:43:58,200 --> 00:44:01,700
And we say, all right, the number of samples we played in this

847
00:44:01,700 --> 00:44:03,700
particular sound we advance by the number, we mixed.

848
00:44:03,800 --> 00:44:06,600
The number of samples that we were trying to mix.

849
00:44:06,600 --> 00:44:10,300
We just crease that by samples to mix, and I guess we could also

850
00:44:10,300 --> 00:44:13,800
assert here, write the total samples to mix is greater than equal to

851
00:44:13,800 --> 00:44:17,800
samples to mix like that should never be the case that that it goes

852
00:44:17,800 --> 00:44:18,500
any other way.

853
00:44:19,000 --> 00:44:24,000
Um so we do that we then go ahead and delete that because we're doing

854
00:44:24,000 --> 00:44:24,500
right now.

855
00:44:24,900 --> 00:44:28,200
We then go ahead and see if we got to the end of the sound we're going

856
00:44:28,200 --> 00:44:29,200
to see if there's another one to play.

857
00:44:29,200 --> 00:44:32,000
If there was we set it and then we come back through the loop, right?

858
00:44:32,000 --> 00:44:33,300
We're not going to break out of the loop.

859
00:44:33,800 --> 00:44:36,400
If there isn't one then the sounds done and we're out of the loop.

860
00:44:36,500 --> 00:44:41,500
Like that's just a done done deal and if for some reason we did not

861
00:44:41,500 --> 00:44:44,700
consume all the samples in the sound that must mean that we filled the

862
00:44:44,700 --> 00:44:45,400
buffer completely.

863
00:44:45,400 --> 00:44:48,700
So let's assert that we actually did that and and off we go.

864
00:44:49,300 --> 00:44:52,200
All right, so I think we fixed at least one obvious bug there.

865
00:45:00,000 --> 00:45:01,500
And that sounds nice and smooth to me.

866
00:45:16,900 --> 00:45:17,400
Lovely.

867
00:45:19,500 --> 00:45:20,000
All right.

868
00:45:20,000 --> 00:45:26,200
So I guess what I would say is that seems so easy for us to support

869
00:45:26,200 --> 00:45:28,100
with the way that we've architected things.

870
00:45:28,100 --> 00:45:32,100
I feel like we just should, I don't know that we're ever going to

871
00:45:32,100 --> 00:45:33,100
actually need it.

872
00:45:33,100 --> 00:45:37,400
It may be that, you know, we've just got so much memory on most of our

873
00:45:37,400 --> 00:45:40,200
platforms that the right thing to do is to load the whole sounds at

874
00:45:40,200 --> 00:45:40,800
once anyway.

875
00:45:40,800 --> 00:45:42,600
But that's just so easy to do.

876
00:45:42,600 --> 00:45:44,800
I would say why not load music.

877
00:45:45,100 --> 00:45:48,700
10 second chunks, just in case we want to run on more memory,

878
00:45:48,700 --> 00:45:51,900
constrained platforms that will put us in a better position to do.

879
00:45:51,900 --> 00:45:55,100
So, right off the bat, if we know that all these systems are capable

880
00:45:55,300 --> 00:45:59,000
of working in very confined spaces and being able to swap things out

881
00:45:59,000 --> 00:46:01,100
as necessary, so that seems pretty good to me.

882
00:46:02,000 --> 00:46:06,300
I'm going to go ahead and say that's a useful thing to support, so

883
00:46:06,300 --> 00:46:07,100
that's good.

884
00:46:07,200 --> 00:46:11,300
We've got all that done and so maybe now I've got about 10 minutes

885
00:46:11,300 --> 00:46:12,000
left here.

886
00:46:12,300 --> 00:46:14,500
What I'd like to do is I guess just pull this.

887
00:46:15,000 --> 00:46:20,100
Audio mixer out into its own separate file and at that point, you

888
00:46:20,100 --> 00:46:23,900
know, we can start to think about do we want to go ahead and Cindy

889
00:46:23,900 --> 00:46:26,500
eyes it, do you want to start adding some of those other features that

890
00:46:26,500 --> 00:46:27,000
sort of thing?

891
00:46:27,600 --> 00:46:30,600
So I'm going to call this handmade audio dot CPP.

892
00:46:30,600 --> 00:46:35,700
For now I don't know if that's particularly good weird for it or not

893
00:46:36,000 --> 00:46:37,800
but I think that's what we're going to call it.

894
00:46:37,800 --> 00:46:38,800
So there you go.

895
00:46:39,800 --> 00:46:44,300
So I'll grab this guy up here which is our test sound wave our sine

896
00:46:44,300 --> 00:46:44,500
wave.

897
00:46:44,500 --> 00:46:44,900
Rather

898
00:46:45,200 --> 00:46:48,900
I'm just going to call this like output test sine wave or something

899
00:46:48,900 --> 00:46:49,500
like that.

900
00:46:50,300 --> 00:46:54,000
And I'm going to pound include here handmade.

901
00:46:55,000 --> 00:46:57,900
Oops handmade audio dot CPP.

902
00:46:58,500 --> 00:47:03,500
And I will also up here include a handmade audio .h.

903
00:47:06,600 --> 00:47:07,200
There we go.

904
00:47:07,900 --> 00:47:12,300
So we've got two new files there, and I'll go ahead and grab anything.

905
00:47:12,300 --> 00:47:14,600
I see here with the audio stuff.

906
00:47:14,700 --> 00:47:16,900
We've got a playing sound, right.

907
00:47:17,000 --> 00:47:20,800
That's going to go in here, I don't know that we've got really much

908
00:47:20,800 --> 00:47:21,500
else will pull.

909
00:47:21,500 --> 00:47:22,500
These guys will pull.

910
00:47:22,500 --> 00:47:27,400
These guys out potentially will take a look at that in a second.

911
00:47:32,400 --> 00:47:35,600
All right, and let's grab that mixer.

912
00:47:36,700 --> 00:47:37,100
Right.

913
00:47:39,600 --> 00:47:45,000
So here's the mixer Colonel Boyd.

914
00:47:46,400 --> 00:47:47,000
Let's see.

915
00:47:48,100 --> 00:47:53,100
Output mixed sounds, something like that.

916
00:47:54,400 --> 00:47:57,200
A Darlene 0 output, playing sounds.

917
00:47:58,100 --> 00:47:59,800
So let's grab all that up.

918
00:48:01,300 --> 00:48:02,100
Here we go.

919
00:48:04,000 --> 00:48:07,000
And see what this guy actually needs.

920
00:48:07,000 --> 00:48:12,900
It looks like he needs sort of that that sound buffer, right?

921
00:48:12,900 --> 00:48:16,900
He's going to need the sound buffer so that's like what is it game

922
00:48:16,900 --> 00:48:18,100
sound output buffer.

923
00:48:18,100 --> 00:48:22,700
So sound buffer, he is going to need is the actually need trance

924
00:48:22,700 --> 00:48:23,300
state.

925
00:48:23,400 --> 00:48:25,100
Or did you just need to know what arena?

926
00:48:25,100 --> 00:48:26,600
He is supposed to use?

927
00:48:27,300 --> 00:48:30,700
It looks like he needs the asset array and the arena.

928
00:48:31,100 --> 00:48:32,900
So I think he just needs game assets.

929
00:48:33,000 --> 00:48:33,400
He just needs

930
00:48:33,600 --> 00:48:39,400
Asset array and he needs, you know, a memory Arena, right?

931
00:48:40,800 --> 00:48:41,300
Like so

932
00:48:43,000 --> 00:48:47,000
and and this is just, this is just a temporary Arena, right?

933
00:48:47,300 --> 00:48:49,400
So that's all he really needs is a temporary Arena.

934
00:48:49,400 --> 00:48:51,100
I don't think he ever needs.

935
00:48:52,000 --> 00:48:53,300
Did you need anything else?

936
00:48:53,600 --> 00:48:55,800
No, I don't think so.

937
00:48:56,700 --> 00:48:58,100
So let's go ahead and save temper.

938
00:48:58,100 --> 00:49:01,600
Inna their temper Inna here and here.

939
00:49:01,600 --> 00:49:05,100
So he's just, you know, ya doing some very, very simple

940
00:49:05,100 --> 00:49:06,200
straightforward stuff there.

941
00:49:06,700 --> 00:49:07,100
Okay?

942
00:49:08,400 --> 00:49:14,700
So he needs the first playing sound, and let's see.

943
00:49:14,700 --> 00:49:15,900
So that's assets.

944
00:49:15,900 --> 00:49:17,400
Here assets.

945
00:49:17,400 --> 00:49:19,500
There we go.

946
00:49:21,300 --> 00:49:22,500
Still game State.

947
00:49:22,500 --> 00:49:26,400
There's the assets again, the first three playing sound.

948
00:49:26,400 --> 00:49:27,400
First we playing sound?

949
00:49:27,400 --> 00:49:32,300
Okay, so now I'm not really going to go overboard here, I'm just going

950
00:49:32,300 --> 00:49:37,600
to say that we have you no game audio or something like this game.

951
00:49:37,800 --> 00:49:39,500
Vo State, I don't know.

952
00:49:41,200 --> 00:49:45,000
But basically that game State structure, I'm just going to grab out

953
00:49:45,400 --> 00:49:50,300
these two here and put them inside this thing, right?

954
00:49:50,800 --> 00:49:55,500
And I'll just say audio State like that and then when you call this

955
00:49:55,500 --> 00:50:00,400
function output playing sounds, you know, you'll have to do something

956
00:50:00,400 --> 00:50:03,800
like this and then when it does game State, it'll just say, you know,

957
00:50:03,800 --> 00:50:05,200
audio state or whatever.

958
00:50:05,900 --> 00:50:07,500
And that'll just be a

959
00:50:07,700 --> 00:50:10,700
Way for us to keep this isolated a little bit.

960
00:50:10,700 --> 00:50:13,800
Make sure we kind of know what's going on here.

961
00:50:14,800 --> 00:50:16,400
So audio State.

962
00:50:17,100 --> 00:50:18,300
That's all we really have to do.

963
00:50:18,300 --> 00:50:22,200
Yeah, this is just a well, you know, what?

964
00:50:22,200 --> 00:50:25,200
In this play sound function, probably should go in there too, huh?

965
00:50:25,500 --> 00:50:27,000
Maybe we'll do that in a second.

966
00:50:28,400 --> 00:50:33,400
So, audio, State and audio State.

967
00:50:34,200 --> 00:50:37,000
There we are, state

968
00:50:37,800 --> 00:50:41,100
Okay, so we've now pulled it out into its own file.

969
00:50:43,800 --> 00:50:44,400
Oh well.

970
00:50:44,400 --> 00:50:45,300
And you know what?

971
00:50:45,700 --> 00:50:48,100
It's probably not going to play anything if we don't call the

972
00:50:48,100 --> 00:50:48,600
function.

973
00:50:49,300 --> 00:50:52,700
So let's go ahead and grab that and actually call it.

974
00:50:53,500 --> 00:50:58,300
So down here, what we want to do is call output playing sounds.

975
00:50:58,700 --> 00:50:59,800
We want to play that on.

976
00:51:00,100 --> 00:51:02,500
The audio State like this.

977
00:51:03,200 --> 00:51:05,100
We want to pass it to sound buffer.

978
00:51:05,100 --> 00:51:12,200
We want to pass it, the assets and the temporary Arena.

979
00:51:12,700 --> 00:51:13,300
Right?

980
00:51:15,100 --> 00:51:20,300
So that's really it I think.

981
00:51:22,700 --> 00:51:23,600
Yeah.

982
00:51:23,600 --> 00:51:25,900
So I think that should just play right.

983
00:51:30,200 --> 00:51:30,600
Yep.

984
00:51:31,800 --> 00:51:32,900
So that's all good.

985
00:51:33,400 --> 00:51:35,200
And I'm going to grab out again.

986
00:51:35,200 --> 00:51:37,100
That's that one that play sound function.

987
00:51:37,100 --> 00:51:39,300
I'm going to try and grab that guy out as well.

988
00:51:39,900 --> 00:51:44,600
Just because that seems like kind of a obvious something that would be

989
00:51:45,300 --> 00:51:47,000
in the in the audio State there.

990
00:51:47,800 --> 00:51:51,100
So really what we would need to do here, I'm going to put this in here

991
00:51:51,100 --> 00:51:56,900
for temporarily but what we would want to do is we want to figure out

992
00:51:56,900 --> 00:51:59,800
what arena these guys are coming out of and it probably

993
00:52:00,000 --> 00:52:01,800
Be the World Arena, right?

994
00:52:03,000 --> 00:52:05,000
It's probably going to be something that has to do with the audio

995
00:52:05,000 --> 00:52:05,600
State.

996
00:52:05,800 --> 00:52:10,000
What we can do, however, is we could just for now to make this

997
00:52:10,800 --> 00:52:15,000
actually code be relatively correct without actually knowing any more

998
00:52:15,000 --> 00:52:18,100
about it, we could just say that, you know, it's got an arena that

999
00:52:18,100 --> 00:52:19,000
it's gets.

1000
00:52:19,000 --> 00:52:20,300
It sounds from, right?

1001
00:52:21,200 --> 00:52:27,000
This is It's, you know, it's a sound tracking Arena basically and you

1002
00:52:27,000 --> 00:52:28,300
know, it's permanent Arena.

1003
00:52:28,300 --> 00:52:29,200
I guess you might say.

1004
00:52:29,900 --> 00:52:32,400
And so we could go ahead and say that we're it's going to get its

1005
00:52:32,400 --> 00:52:33,400
memory from there.

1006
00:52:34,000 --> 00:52:37,100
And then, you know, you pass audio state in here, right?

1007
00:52:37,100 --> 00:52:42,200
And it just always uses whatever that arena is that you initialize it

1008
00:52:42,200 --> 00:52:42,600
with.

1009
00:52:43,100 --> 00:52:46,500
And so, when it does, it's push direct, it's going to use audio State

1010
00:52:46,500 --> 00:52:49,600
Karina, which is going to be whatever Arena.

1011
00:52:49,600 --> 00:52:53,200
You told it to use when you started it, right?

1012
00:52:54,100 --> 00:52:57,400
And that way, that'll let us not have this code, won't have to care

1013
00:52:57,400 --> 00:52:57,700
anymore.

1014
00:52:57,700 --> 00:52:59,800
When we go do some a little bit of our

1015
00:53:00,100 --> 00:53:04,600
Any reshuffling when the time comes you know we'll just pass whatever

1016
00:53:04,600 --> 00:53:09,300
we want to pass to game audio State and make that work, right?

1017
00:53:10,900 --> 00:53:12,700
Okay, so let's see here.

1018
00:53:13,800 --> 00:53:18,700
So we've got our audio States stuff so we just say audio States.

1019
00:53:18,700 --> 00:53:25,400
Like so and when we do place and game State body estate,

1020
00:53:26,600 --> 00:53:29,100
And that is all we should have to do.

1021
00:53:30,100 --> 00:53:35,200
We do need one of the thing which is then, which is when we, you know,

1022
00:53:35,200 --> 00:53:38,800
start things up, we would need to sort of initialize that.

1023
00:53:39,700 --> 00:53:42,300
So, you know, somewhere in here, when we actually do our

1024
00:53:42,300 --> 00:53:47,900
initialization, I want to do something where we see we just as we're

1025
00:53:47,900 --> 00:53:48,500
now onto something.

1026
00:53:48,500 --> 00:53:49,400
Here we go.

1027
00:53:49,900 --> 00:53:55,200
Initialize, You Know, audio State, and we just say game State audio

1028
00:53:55,200 --> 00:53:56,200
State and I'll pass

1029
00:53:56,400 --> 00:53:59,800
Pass that the game State World Arena likes.

1030
00:54:01,200 --> 00:54:06,600
And so then inside handmade audio, we'd have a function here which is

1031
00:54:06,600 --> 00:54:09,500
just going to do exactly that.

1032
00:54:10,200 --> 00:54:12,400
It's going to say audio State.

1033
00:54:12,800 --> 00:54:13,300
Oops.

1034
00:54:13,800 --> 00:54:15,200
Hey, we're right at the end as well.

1035
00:54:15,700 --> 00:54:17,100
I wonder if it should just be there.

1036
00:54:17,100 --> 00:54:20,500
A reason why I said game audio's day, I'm still say audio State as

1037
00:54:20,500 --> 00:54:20,900
well.

1038
00:54:20,900 --> 00:54:21,100
Game.

1039
00:54:21,100 --> 00:54:25,300
Audio State seems like a waste of typing memory Arena.

1040
00:54:26,500 --> 00:54:31,800
Rena and so audio State Farm Arena is going to be that and then you

1041
00:54:31,800 --> 00:54:36,000
know first playing sound will be the same as first free playing sound.

1042
00:54:36,000 --> 00:54:38,900
All those will be zero and that's that.

1043
00:54:39,500 --> 00:54:42,300
So I think that's it.

1044
00:54:43,400 --> 00:54:45,000
That's everything.

1045
00:54:46,500 --> 00:54:47,800
That we need.

1046
00:54:49,300 --> 00:54:54,000
And yeah, good deal.

1047
00:54:57,200 --> 00:54:58,500
Not bad for an hour's work.

1048
00:55:01,000 --> 00:55:01,600
Excellent.

1049
00:55:02,500 --> 00:55:05,900
All right, so let's go ahead and go to the Q&A.

1050
00:55:06,900 --> 00:55:07,500
There we go.

1051
00:55:09,200 --> 00:55:13,900
If you could please prefix your questions with Q: so I can see them.

1052
00:55:13,900 --> 00:55:14,900
And please keep them.

1053
00:55:14,900 --> 00:55:18,000
The things that we talked about on the Stream.

1054
00:55:20,000 --> 00:55:23,900
On topic, please also, while we're waiting for the first set of

1055
00:55:23,900 --> 00:55:28,300
questions, coming in, I'm going to help out folks who are on Linux.

1056
00:55:28,300 --> 00:55:34,500
I think Martin's road in, and I asked, you know, what do you guys want

1057
00:55:34,500 --> 00:55:39,200
me to put in here for, for letting

1058
00:55:41,000 --> 00:55:43,300
Llvm properly handle this.

1059
00:55:43,500 --> 00:55:47,500
He was saying that that sink Val compare-and-swap doesn't want you to

1060
00:55:47,500 --> 00:55:48,500
do the long star.

1061
00:55:48,500 --> 00:55:50,900
It wants to automatically determine what the correct thing is.

1062
00:55:50,900 --> 00:55:53,900
Otherwise it was going to it was going to actually do a 64-bit swap

1063
00:55:53,900 --> 00:55:57,900
their or something like this and so this was actually the better way

1064
00:55:57,900 --> 00:55:58,300
to do it.

1065
00:55:58,300 --> 00:56:00,800
We're not actually compiling on lvm but there's a lot of people out

1066
00:56:00,800 --> 00:56:01,600
there who actually are.

1067
00:56:01,600 --> 00:56:05,100
So I try this, tell them post on the forums, whatever you need me to

1068
00:56:05,100 --> 00:56:08,300
replace the platform header stuff with for now just so they can all

1069
00:56:08,300 --> 00:56:10,600
stay a compiling until we actually go do our

1070
00:56:10,800 --> 00:56:13,200
Reports to llvm platforms.

1071
00:56:22,000 --> 00:56:25,400
I kill team 03, you should apply for a sub button.

1072
00:56:25,700 --> 00:56:29,000
Actually, we twitch already allows us to have a sub button.

1073
00:56:29,400 --> 00:56:33,300
The reason that we didn't do it was just because they had a

1074
00:56:33,300 --> 00:56:36,000
restriction in the contract about not being able to post YouTube

1075
00:56:36,300 --> 00:56:41,400
archives of our of our episodes for 24 hours and I didn't want to

1076
00:56:41,400 --> 00:56:45,200
delay that that posting so we just didn't want to do it.

1077
00:56:45,400 --> 00:56:47,900
So twitch actually offered that to us.

1078
00:56:47,900 --> 00:56:49,300
They're they're very nice people.

1079
00:56:50,000 --> 00:56:52,300
It was just a contractual thing, so that's the reason we don't have a

1080
00:56:52,300 --> 00:56:52,800
sub button.

1081
00:56:56,200 --> 00:56:57,800
Let's see here.

1082
00:57:01,500 --> 00:57:04,600
What is your favorite genre of music and do you see it influencing the

1083
00:57:04,600 --> 00:57:06,400
atmosphere of the final game?

1084
00:57:07,400 --> 00:57:11,700
So I guess that's a that's a very interesting question and I guess

1085
00:57:11,700 --> 00:57:15,400
I'll say a little bit about it it's not super on topic, I guess.

1086
00:57:15,400 --> 00:57:19,600
But since we were doing music, what I would say is

1087
00:57:21,600 --> 00:57:22,700
In general.

1088
00:57:24,200 --> 00:57:28,600
I would take, I take a lot of time to Define.

1089
00:57:29,800 --> 00:57:33,600
How things work artistically in games together, when I'm working on

1090
00:57:33,600 --> 00:57:39,900
them, in the case of handmade hero, there's a lot less of that, just

1091
00:57:39,900 --> 00:57:43,600
because of the nature of the development process, like it's an hour

1092
00:57:43,600 --> 00:57:46,900
and night, and it has to be very, it has to be very different in the

1093
00:57:46,900 --> 00:57:48,900
way that it develops as a result of that.

1094
00:57:49,100 --> 00:57:55,000
So, handmade hero is not really a game about fanatical atmosphere

1095
00:57:55,000 --> 00:57:58,700
curation which might be something that I would ordinarily do.

1096
00:57:59,700 --> 00:58:04,200
It's more about just sort of going with the flow because I feel like

1097
00:58:04,200 --> 00:58:09,400
it kind of has to be that way in order to still work in the way that

1098
00:58:09,400 --> 00:58:12,800
it is being developed is so a typical right with this one hour and I

1099
00:58:12,800 --> 00:58:16,900
thing and so no it's not.

1100
00:58:16,900 --> 00:58:19,100
My favorite genre music is not really going to influence the

1101
00:58:19,100 --> 00:58:23,100
atmosphere of the final game but that isn't to say that that couldn't

1102
00:58:23,100 --> 00:58:25,300
be true of some other game that I worked on.

1103
00:58:25,900 --> 00:58:28,800
It's just this particular game has to be more about.

1104
00:58:29,300 --> 00:58:32,800
Letting things happen, organically and less about controlling them.

1105
00:58:32,800 --> 00:58:35,500
Because just the way that it's being developed, you keyed is really no

1106
00:58:35,500 --> 00:58:36,100
way to do that.

1107
00:58:36,600 --> 00:58:39,600
It's hard enough to do those kinds of things when you're working eight

1108
00:58:39,600 --> 00:58:42,600
hours a day on something and have the ability to make those kinds of

1109
00:58:42,600 --> 00:58:43,600
specific moves.

1110
00:58:43,600 --> 00:58:47,100
But with the way that this game goes, it just has to be very organic.

1111
00:58:47,100 --> 00:58:52,800
So we will play it fairly fast and loose with a lot of things and

1112
00:58:52,800 --> 00:58:55,000
that's why I also tried to make the sort of theme of the game in

1113
00:58:55,000 --> 00:58:59,200
general to be very light-hearted because I didn't, it really wouldn't

1114
00:58:59,200 --> 00:58:59,300
be.

1115
00:58:59,300 --> 00:59:01,900
Appropriate, try and Tackle like a complex subject.

1116
00:59:02,700 --> 00:59:05,200
Given the way that the game has to kind of evolve,

1117
00:59:08,600 --> 00:59:12,300
could you sell your game to a major company for a lot of dollars?

1118
00:59:13,700 --> 00:59:16,600
No, I mean, I don't know what that means.

1119
00:59:16,600 --> 00:59:17,000
Sorry.

1120
00:59:17,600 --> 00:59:19,400
I think I missed the day, you added, the music.

1121
00:59:19,400 --> 00:59:20,600
What is the track from?

1122
00:59:20,800 --> 00:59:22,300
Will it be in the final game?

1123
00:59:22,800 --> 00:59:25,200
Know that that track will not be in the final game?

1124
00:59:25,200 --> 00:59:30,900
I mean unless you want to stick it in as an Easter egg I have a long

1125
00:59:30,900 --> 00:59:35,500
time ago, I did a piano practice blog where I would just like do ad

1126
00:59:35,500 --> 00:59:36,200
lib practice.

1127
00:59:36,200 --> 00:59:38,000
So I just sit down at the piano and play for like an hour.

1128
00:59:38,200 --> 00:59:38,700
Or whatever.

1129
00:59:39,700 --> 00:59:42,100
And then I would just take a chunk of that and upload it.

1130
00:59:42,300 --> 00:59:47,000
And so this is just I wanted a thing that I knew would be completely

1131
00:59:48,500 --> 00:59:50,400
copyright free, right?

1132
00:59:50,400 --> 00:59:51,900
Because and then well not cover fee.

1133
00:59:52,100 --> 00:59:55,700
I need something where I knew, I owns the copyright entirely and so

1134
00:59:55,700 --> 00:59:58,300
that was something that I owned the copyright entirely, too.

1135
00:59:58,300 --> 00:59:59,800
So I put it in there so I knew that

1136
01:00:00,000 --> 01:00:02,800
Just release it and not have to worry about it.

1137
01:00:08,600 --> 01:00:10,900
What is the reason you use a temporary reign in the mixer instead of a

1138
01:00:10,900 --> 01:00:11,400
normal Rina?

1139
01:00:11,500 --> 01:00:15,100
The reason is because it is, it is memory that only exists during that

1140
01:00:15,100 --> 01:00:16,600
function, right?

1141
01:00:17,800 --> 01:00:19,600
So what you can think of, right?

1142
01:00:19,600 --> 01:00:27,700
Is when you come into and this is just a artifact of the history of c

1143
01:00:27,700 --> 01:00:33,300
and of course, you know, the C++ C plus plus never really thought

1144
01:00:33,300 --> 01:00:36,100
anything through or added usable features to see.

1145
01:00:36,100 --> 01:00:38,200
So we're kind of stuck with

1146
01:00:39,300 --> 01:00:42,000
when you're, when you're writing and see your basically still writing

1147
01:00:43,600 --> 01:00:44,100
actually says,

1148
01:00:45,400 --> 01:00:48,500
when you're ready to see code, you're effectively writing in a

1149
01:00:48,500 --> 01:00:55,500
language that was absolutely breathtakingly, well done for the 1970s,

1150
01:00:55,600 --> 01:00:56,200
right?

1151
01:00:56,400 --> 01:00:59,900
So I have a tremendous amount of respect for C and what it achieved in

1152
01:00:59,900 --> 01:01:00,900
the 1970s.

1153
01:01:01,500 --> 01:01:04,800
Essentially, the C++ are screening, has never actually made any

1154
01:01:04,800 --> 01:01:06,200
meaningful improvements to it.

1155
01:01:06,300 --> 01:01:09,500
So, all of the things that you actually would want to do as a

1156
01:01:09,500 --> 01:01:15,000
production programmer that have changed since the 1970s,

1157
01:01:15,100 --> 01:01:18,100
Can't actually do right?

1158
01:01:18,100 --> 01:01:23,400
And so one of those is the fact that you don't have the ability to

1159
01:01:23,400 --> 01:01:28,300
talk about memory in a useful transient way.

1160
01:01:28,300 --> 01:01:31,400
And so, they had a thing that was allocated, which was poorly

1161
01:01:31,400 --> 01:01:34,400
supported and not really a thing that allowed you to say.

1162
01:01:34,400 --> 01:01:37,800
I need a certain amount of memory, but you couldn't actually do that

1163
01:01:37,800 --> 01:01:41,300
very reliably, with allocated on the program stock and all these other

1164
01:01:41,300 --> 01:01:41,700
sorts of things.

1165
01:01:41,700 --> 01:01:44,900
So, as a result in see, it's very, very

1166
01:01:45,100 --> 01:01:49,300
be simple for you to have temporary local variables, right?

1167
01:01:49,300 --> 01:01:52,200
Like, if you think about where this stuff lives, like, where does this

1168
01:01:52,200 --> 01:01:53,900
pointer real Channel 0?

1169
01:01:53,900 --> 01:01:56,300
Real Channel, One desk 0?

1170
01:01:56,300 --> 01:01:58,700
Where does where do these live right?

1171
01:01:58,800 --> 01:02:04,200
Well, they live on a piece of temporary memory that see itself set up

1172
01:02:04,200 --> 01:02:05,300
for you, right?

1173
01:02:05,400 --> 01:02:09,000
Because the programmers, who wrote, see knew that it was important to

1174
01:02:09,000 --> 01:02:11,200
have temporary scratch space.

1175
01:02:11,200 --> 01:02:14,400
Where functions did their work and you didn't want to have to manage

1176
01:02:14,400 --> 01:02:15,000
it all the time, too.

1177
01:02:15,200 --> 01:02:16,100
All right.

1178
01:02:16,400 --> 01:02:21,300
Well, unfortunately, that logic actually extends much further than

1179
01:02:21,300 --> 01:02:22,700
simple temporary variables.

1180
01:02:22,700 --> 01:02:29,200
And actually, most lines through a path of code can be thought of as

1181
01:02:29,200 --> 01:02:33,500
one or more overlapping temporary stacks of memory.

1182
01:02:33,800 --> 01:02:38,200
The get Unwound at different rates and I think if the people who had

1183
01:02:38,200 --> 01:02:43,200
made see, had been in their programming prying today, they would have

1184
01:02:43,200 --> 01:02:45,000
known that, and they would have had that

1185
01:02:45,100 --> 01:02:47,300
That ability in C, but they didn't.

1186
01:02:47,400 --> 01:02:52,500
And so what we have to do when we program in C, is we have to be able

1187
01:02:52,500 --> 01:02:53,500
to represent.

1188
01:02:53,500 --> 01:02:59,100
That fact that there are multiple overlapping stacks of temporary

1189
01:02:59,100 --> 01:02:59,700
memory that are

1190
01:03:00,000 --> 01:03:03,100
Used by any individual routine.

1191
01:03:03,300 --> 01:03:07,000
Some of them unwind when the routine ends, some of them unwind, when

1192
01:03:07,000 --> 01:03:11,800
The Logical operation, that this routine is a part of ends.

1193
01:03:11,800 --> 01:03:13,000
And you've seen that as well.

1194
01:03:13,000 --> 01:03:17,700
When we did our task stuff and managing those is very easy.

1195
01:03:17,700 --> 01:03:21,200
Once you create something like these little Arenas that I made.

1196
01:03:21,400 --> 01:03:23,200
But unfortunately you have to do that work yourself.

1197
01:03:23,200 --> 01:03:26,100
Because again, like I said, see belisarius too many doesn't understand

1198
01:03:26,100 --> 01:03:29,800
things like this, so they don't put in proper support.

1199
01:03:30,000 --> 01:03:31,200
In the language for them.

1200
01:03:31,600 --> 01:03:35,900
That's just the reality of having people who don't do serious

1201
01:03:35,900 --> 01:03:39,300
production programming, you know, making your language decisions or

1202
01:03:39,300 --> 01:03:40,800
maybe it's just designed by committee.

1203
01:03:40,800 --> 01:03:44,500
I don't know, I don't know why C++ doesn't understand these things,

1204
01:03:44,500 --> 01:03:45,200
but they don't.

1205
01:03:46,000 --> 01:03:48,000
So as a result, we have to do them.

1206
01:03:48,000 --> 01:03:52,600
But once we've done them, we can basically make our routines work.

1207
01:03:52,900 --> 01:03:54,500
The way I work.

1208
01:03:54,500 --> 01:03:58,100
The same with arbitrary blocks of memory that need to get on wounded

1209
01:03:58,100 --> 01:03:59,800
different rates, or that are very

1210
01:04:00,000 --> 01:04:02,700
Arjun wouldn't necessarily fit on the temporary stack or things like

1211
01:04:02,700 --> 01:04:05,400
this or where, we don't know how big they would be ahead of time.

1212
01:04:05,400 --> 01:04:06,900
Like that's a big thing, right?

1213
01:04:06,900 --> 01:04:09,400
We don't know how big this is going to be ahead of time because we

1214
01:04:09,400 --> 01:04:11,800
need some temporary memory here that's based on a thing that's

1215
01:04:11,800 --> 01:04:12,800
actually passed into us.

1216
01:04:12,800 --> 01:04:14,200
So we don't know how big that's gonna be.

1217
01:04:14,500 --> 01:04:18,300
So all of those things, we can actually do very well and do them in a

1218
01:04:18,300 --> 01:04:22,600
very convenient, sort of zero, almost zero cost way, unlike something

1219
01:04:22,600 --> 01:04:25,600
like, you know, garbage collection or things, which have a lot more

1220
01:04:25,900 --> 01:04:26,400
overhead.

1221
01:04:26,400 --> 01:04:29,000
And things to think about, we can do them very easily just by using

1222
01:04:29,000 --> 01:04:29,600
these Arenas.

1223
01:04:29,600 --> 01:04:29,800
So,

1224
01:04:29,900 --> 01:04:32,600
So the reason that we use this temporary memory here is because what

1225
01:04:32,600 --> 01:04:37,900
we need to do is we need to make floating-point mixdown buffers where

1226
01:04:37,900 --> 01:04:41,200
we can mix all of our sounds into it and then only at the very end

1227
01:04:41,400 --> 01:04:45,000
actually convert those buffers into the Final Destination buffer which

1228
01:04:45,000 --> 01:04:46,600
is a 16-bit integer buffer.

1229
01:04:47,200 --> 01:04:51,200
So what we do if actively here is we do exactly the same thing that

1230
01:04:51,200 --> 01:04:56,500
the C language is doing for us with our temporary stock variables.

1231
01:04:56,600 --> 01:04:59,000
So just like this temporary stack variable here.

1232
01:05:00,000 --> 01:05:01,900
Are effectively temporary stack variables.

1233
01:05:01,900 --> 01:05:04,100
It just happened to be huge, right?

1234
01:05:04,100 --> 01:05:06,300
They happen to be sample count times for right?

1235
01:05:06,300 --> 01:05:09,500
That's the size of this thing, big, and we have two of them.

1236
01:05:09,700 --> 01:05:13,000
So we're talking about, you know, you know, 8K or so, I don't know

1237
01:05:13,000 --> 01:05:13,600
what we're talking about.

1238
01:05:13,600 --> 01:05:14,900
We're talking about something like that.

1239
01:05:14,900 --> 01:05:15,300
Right.

1240
01:05:16,700 --> 01:05:20,500
So, we're basically just reserving 8K of space out of our memory pool.

1241
01:05:20,900 --> 01:05:23,500
We're doing all of the work that we need to do and then we're going to

1242
01:05:23,500 --> 01:05:27,800
release immediately that in there and because we don't want to spend

1243
01:05:27,800 --> 01:05:28,100
any.

1244
01:05:28,100 --> 01:05:29,800
We don't really want to spend any CPU time.

1245
01:05:29,900 --> 01:05:30,300
Do this.

1246
01:05:30,500 --> 01:05:33,200
We can use these Arenas are set up to do this very quickly.

1247
01:05:33,200 --> 01:05:37,000
All they do is just increment a value, it's just like you know a plus

1248
01:05:37,300 --> 01:05:38,400
and then a minus right?

1249
01:05:38,400 --> 01:05:41,700
It's just a very simple add and remove there's no thinking that goes

1250
01:05:41,700 --> 01:05:46,100
on it's always 100% deterministic and clean and so that is really

1251
01:05:46,100 --> 01:05:46,600
important.

1252
01:05:46,600 --> 01:05:50,000
And again you saw me do some the more extended things about this back

1253
01:05:50,000 --> 01:05:52,200
when we did the task system where I said, let's make an arena.

1254
01:05:52,200 --> 01:05:55,500
That just works this one task and that creates essentially like a

1255
01:05:55,500 --> 01:05:57,800
secondary overlapping stack, right?

1256
01:05:57,800 --> 01:05:58,500
That can operate.

1257
01:05:58,500 --> 01:05:59,800
So, typically in

1258
01:06:00,000 --> 01:06:01,100
Complex environment.

1259
01:06:01,100 --> 01:06:04,200
You often have three overlapping Stacks.

1260
01:06:04,200 --> 01:06:08,000
You have one overlapping stack for your temporary stack variables and

1261
01:06:08,000 --> 01:06:10,700
the program calls that you have one.

1262
01:06:10,700 --> 01:06:15,100
Temporary thing which is basically like for large regions of memory

1263
01:06:15,100 --> 01:06:17,700
that you need to work on temporarily which is what we're using here.

1264
01:06:17,900 --> 01:06:20,400
And then you have a final one, which is kind of like something that

1265
01:06:20,400 --> 01:06:26,600
persists for the length of an up of a logical operation, not a not a

1266
01:06:26,600 --> 01:06:28,000
function, right?

1267
01:06:28,100 --> 01:06:29,800
And that is what you saw in the task thing.

1268
01:06:30,000 --> 01:06:31,500
That's very, very common.

1269
01:06:31,700 --> 01:06:35,900
If you manage your own memory and get memory management out of the out

1270
01:06:35,900 --> 01:06:38,500
of the equation in terms of CPU cost.

1271
01:06:38,500 --> 01:06:42,100
So you literally are spending almost no time doing any memory

1272
01:06:42,100 --> 01:06:45,000
management like not doing you're not doing a locks you're not doing

1273
01:06:45,000 --> 01:06:48,600
any thinking you're not doing any free, you know, rearranging or any

1274
01:06:48,600 --> 01:06:50,900
of this stuff you're trying to get all of that out of their instincts

1275
01:06:50,900 --> 01:06:51,400
and efficient.

1276
01:06:51,500 --> 01:06:55,800
You typically have like a three overlapping stock pattern like that.

1277
01:06:56,300 --> 01:06:59,100
And so that is what you're seeing here is, you're seeing one of those

1278
01:06:59,100 --> 01:06:59,800
overlapping stack.

1279
01:07:00,600 --> 01:07:04,200
being used to get some mix bins, that we can use to put stuff into

1280
01:07:10,900 --> 01:07:13,400
We got some new blood asking about the absence of job.

1281
01:07:13,400 --> 01:07:16,300
I could you please help clean the chat by doing another Java rant.

1282
01:07:16,800 --> 01:07:20,100
I don't usually rant against Java because I'm not, you know, really a

1283
01:07:20,100 --> 01:07:20,600
job.

1284
01:07:20,700 --> 01:07:25,400
It's not like I you know I programmed in a lot of C++ heavy stuff and

1285
01:07:25,400 --> 01:07:27,700
I feel qualified about ranting about that because I know it's very

1286
01:07:27,700 --> 01:07:28,100
bad.

1287
01:07:28,400 --> 01:07:30,500
Java is just not interesting.

1288
01:07:30,500 --> 01:07:34,000
It's not that I like you know I'm going to rant against Java.

1289
01:07:34,200 --> 01:07:36,200
Java is just not a very low level language.

1290
01:07:36,200 --> 01:07:39,800
Write Java runs through a virtual machine or a jit

1291
01:07:40,800 --> 01:07:44,100
Which means you really don't have any control over, what the actual

1292
01:07:44,100 --> 01:07:45,000
computer is doing.

1293
01:07:45,000 --> 01:07:48,100
You have what you're doing is it's sort of a rubber pencil, right?

1294
01:07:48,200 --> 01:07:53,700
You're trying to tell some other person's very large sort of unwieldy

1295
01:07:53,700 --> 01:07:54,700
piece of software.

1296
01:07:55,000 --> 01:07:57,400
What do you want it to then tell the machine to do?

1297
01:07:57,400 --> 01:08:01,500
So, it's kind of like playing game of telephone, write Java is C,

1298
01:08:02,000 --> 01:08:05,400
already has a few unfortunate parts of that where you can't really

1299
01:08:05,400 --> 01:08:09,200
tell the compiler exactly what you want it to do, but you can pretty,

1300
01:08:09,200 --> 01:08:10,500
it's pretty close, right?

1301
01:08:10,600 --> 01:08:14,500
Write Java adds this really big stock in there and also it's garbage

1302
01:08:14,500 --> 01:08:15,200
collected, right?

1303
01:08:15,200 --> 01:08:16,700
Which is, which is no good at all.

1304
01:08:17,800 --> 01:08:20,399
That's just a huge waste of time and resources.

1305
01:08:21,000 --> 01:08:23,600
And so that's, you know, and I mean, maybe, you know, you can turn

1306
01:08:23,600 --> 01:08:24,899
that off to a certain extent.

1307
01:08:26,700 --> 01:08:29,200
But again, once you start turning off, all those features of java, you

1308
01:08:29,200 --> 01:08:31,700
basically end up back getting back to see and that's like, well, why

1309
01:08:31,700 --> 01:08:33,300
did you get all this encumbrance?

1310
01:08:34,800 --> 01:08:38,500
And, you know, it also it's an encumbrance that costs you something at

1311
01:08:38,500 --> 01:08:39,100
ship time too.

1312
01:08:39,100 --> 01:08:41,899
Because now you also have to ship all of this Java bulk.

1313
01:08:41,899 --> 01:08:42,899
You know, you write something in.

1314
01:08:42,899 --> 01:08:45,899
See you could ship it by itself, it's an executable just runs, right?

1315
01:08:46,700 --> 01:08:48,899
In fact, I often make things that just run.

1316
01:08:48,899 --> 01:08:50,300
They don't even have to have a redistributable.

1317
01:08:50,300 --> 01:08:52,600
It's just an X, you can just run it just works right?

1318
01:08:53,800 --> 01:08:55,100
And that's completely out of the question for

1319
01:08:55,200 --> 01:08:55,899
A Java, right?

1320
01:08:55,899 --> 01:08:59,700
I mean Java you have to at the very least bind all of this stuff into

1321
01:08:59,700 --> 01:08:59,899
your

1322
01:09:00,000 --> 01:09:04,200
Secure double that's like a Java VM or a jit compiler, or all of

1323
01:09:04,200 --> 01:09:09,000
these, like, additional sort of dependencies that that brings in for

1324
01:09:09,000 --> 01:09:12,200
you, not to mention the fact that if there's something wrong in those

1325
01:09:12,200 --> 01:09:14,300
dependencies, there's nothing you can do to fix it.

1326
01:09:14,399 --> 01:09:18,700
You just have to wait for the Java world to come and and do it, right?

1327
01:09:18,800 --> 01:09:22,800
So, you know, I really don't like things like that.

1328
01:09:22,800 --> 01:09:23,800
I don't want.

1329
01:09:24,200 --> 01:09:28,100
I don't want any additional stuff between me and the CPU, right?

1330
01:09:28,100 --> 01:09:29,800
I want just things that

1331
01:09:30,000 --> 01:09:33,000
allow me to make it easier for me to tell the CPU what to do.

1332
01:09:33,100 --> 01:09:36,600
I don't want people making decisions for me about what the CPU should

1333
01:09:36,600 --> 01:09:36,899
do.

1334
01:09:37,600 --> 01:09:39,200
That just doesn't help me write.

1335
01:09:39,200 --> 01:09:40,300
That just gets in my way.

1336
01:09:41,000 --> 01:09:44,600
And so, any of the things that Java might do for me, I can just write

1337
01:09:44,600 --> 01:09:46,500
them myself once.

1338
01:09:46,500 --> 01:09:49,600
And there's typically not that many things really that I would ever

1339
01:09:49,899 --> 01:09:53,100
want from java that I've ever seen, But if there are, you can just

1340
01:09:53,100 --> 01:09:55,500
write them yourselves once and then you're off and running a new done,

1341
01:09:55,500 --> 01:09:55,800
right?

1342
01:09:55,800 --> 01:09:56,800
You don't have to worry about it.

1343
01:09:57,800 --> 01:10:01,600
So there's really just not a lot of benefit of job.

1344
01:10:01,600 --> 01:10:04,700
I don't see the bonus of it, and I would also just add the fact that

1345
01:10:04,700 --> 01:10:06,700
if you're talking about game, programming will gain primary, just

1346
01:10:06,700 --> 01:10:09,400
isn't done in Java, justjust period, right?

1347
01:10:09,400 --> 01:10:12,600
Pretty much all games are written in C or C++, you know, there are

1348
01:10:12,600 --> 01:10:15,400
very, very few notable exceptions, you know, Minecraft is probably one

1349
01:10:15,400 --> 01:10:18,300
of the only ones that comes to mind of an actual game that anyone's

1350
01:10:18,300 --> 01:10:21,300
actually heard of that was written in Java, pretty much.

1351
01:10:21,300 --> 01:10:24,400
Every other game that you ever heard of is written in C, and that's

1352
01:10:24,400 --> 01:10:25,200
not an accident.

1353
01:10:25,200 --> 01:10:26,400
While C++ I should say.

1354
01:10:27,200 --> 01:10:28,100
That's that's not an action.

1355
01:10:28,100 --> 01:10:31,400
There's a real reason that people don't use Java for games because

1356
01:10:31,400 --> 01:10:33,200
it's just not suited, right?

1357
01:10:33,200 --> 01:10:37,800
It's not the appropriate platform for writing games.

1358
01:10:51,800 --> 01:10:52,900
Let's see here man.

1359
01:10:52,900 --> 01:10:57,200
There is a lot of questions today but not a lot of those questions are

1360
01:10:57,200 --> 01:10:58,700
actually on topic.

1361
01:11:02,100 --> 01:11:05,700
I'm just trying to scan through and see if there are any questions

1362
01:11:05,700 --> 01:11:12,300
that are actually on topic before, I just add some more off-topic.

1363
01:11:12,300 --> 01:11:13,500
If I answer some more

1364
01:11:17,700 --> 01:11:20,600
Fad gasket says, are you now streaming long?

1365
01:11:20,600 --> 01:11:21,900
Audio assets from disk tuned?

1366
01:11:21,900 --> 01:11:22,800
In late, apologies?

1367
01:11:22,800 --> 01:11:24,300
I realize it's probably already has been discussed.

1368
01:11:24,300 --> 01:11:27,900
Yes, we are now streaming long audio assets from disk, that's what we

1369
01:11:27,900 --> 01:11:28,400
did today.

1370
01:11:32,400 --> 01:11:34,400
Let's see here.

1371
01:11:38,100 --> 01:11:39,600
Yeah.

1372
01:11:50,400 --> 01:11:53,100
I can't remember, the Technics, patience tally, but one thing I think

1373
01:11:53,100 --> 01:11:56,000
we need is a fade-out when audio stops rather than a dead stop.

1374
01:11:56,000 --> 01:11:56,800
To avoid a loud.

1375
01:11:56,800 --> 01:11:59,200
Click well, yes, and no.

1376
01:11:59,200 --> 01:11:59,700
So

1377
01:12:00,000 --> 01:12:03,200
Only time that you need the fade out when audio stops is if the sound

1378
01:12:03,200 --> 01:12:07,800
assets themselves do not properly, attenuate at their edges which they

1379
01:12:07,800 --> 01:12:08,600
normally do.

1380
01:12:08,700 --> 01:12:09,300
Right?

1381
01:12:09,900 --> 01:12:13,200
And so, you know, typically you don't actually need it for that.

1382
01:12:14,700 --> 01:12:18,700
So I guess the way I would say it is typically you don't want to fade

1383
01:12:18,700 --> 01:12:23,200
out your audio when it gets to its end, the audio should be authored

1384
01:12:23,200 --> 01:12:24,900
to properly, go down.

1385
01:12:26,000 --> 01:12:28,700
So the thing that I that you're possibly talking about, I don't know

1386
01:12:28,700 --> 01:12:29,600
if that's your times want to

1387
01:12:30,000 --> 01:12:30,600
In that first.

1388
01:12:30,900 --> 01:12:33,100
But the part where you actually do need, the thing that you're talking

1389
01:12:33,100 --> 01:12:36,800
about is when you want to stop a sound prematurely, right?

1390
01:12:37,500 --> 01:12:38,700
And that's definitely true.

1391
01:12:38,800 --> 01:12:41,600
And that is what is one of the things that we would like to have

1392
01:12:41,600 --> 01:12:42,600
volume attenuation for.

1393
01:12:42,800 --> 01:12:44,300
We would also like vomit insulation.

1394
01:12:44,800 --> 01:12:49,800
So that what a sounds wants to start, you know, in the middle of it

1395
01:12:49,800 --> 01:12:51,100
potentially or things like that.

1396
01:12:51,100 --> 01:12:52,100
We want to build a ramp it in.

1397
01:12:52,400 --> 01:12:55,800
And even if those weren't true, even if we weren't trying to avoid the

1398
01:12:55,800 --> 01:12:59,000
click, it's just jarring to the user, right?

1399
01:12:59,000 --> 01:12:59,800
We don't necessarily

1400
01:12:59,900 --> 01:13:03,400
I want a sound to stop immediately like if there's full volume music

1401
01:13:03,400 --> 01:13:07,200
playing, it sounds very odd for to stop even if it wasn't a problem of

1402
01:13:07,200 --> 01:13:08,100
the of the clicking.

1403
01:13:08,100 --> 01:13:08,600
Right?

1404
01:13:08,800 --> 01:13:12,400
What we want to do is be able to attenuate it over time and so that's

1405
01:13:12,400 --> 01:13:14,700
one of the reasons that volume ramping is important and one of the

1406
01:13:14,700 --> 01:13:17,400
things that we want to do and I talked about us want to do that last

1407
01:13:17,400 --> 01:13:17,500
week.

1408
01:13:17,500 --> 01:13:22,200
So we will definitely do that this week, possibly tomorrow, possibly a

1409
01:13:22,200 --> 01:13:23,100
little later on depends.

1410
01:13:23,100 --> 01:13:28,000
But that and also like I was saying, volume attenuation.

1411
01:13:28,000 --> 01:13:29,800
Overtime is also what gives you

1412
01:13:29,900 --> 01:13:31,400
Reopening if you want it.

1413
01:13:31,700 --> 01:13:34,200
So, you know, we need it for like a number of reasons.

1414
01:13:45,200 --> 01:13:48,300
Once Upon a Time, the number of Hardware channels available on a sound

1415
01:13:48,300 --> 01:13:52,300
card was important do most game these days not care because doing

1416
01:13:52,300 --> 01:13:53,700
these things and software as fast enough.

1417
01:13:53,800 --> 01:13:59,500
Yes, that is that is exactly the case sound is now very small compared

1418
01:13:59,500 --> 01:14:01,100
to the power of the CPU.

1419
01:14:01,100 --> 01:14:06,800
And so, most of the time mixing is not really relevant in terms of

1420
01:14:06,800 --> 01:14:08,100
your performance profile.

1421
01:14:09,000 --> 01:14:11,000
I mean, you can kind of see this already, right?

1422
01:14:11,300 --> 01:14:14,900
So what you saw on the stream was

1423
01:14:16,000 --> 01:14:20,600
You know, just trying to fill the hole 1920 by 1080 screen when we

1424
01:14:20,600 --> 01:14:24,000
didn't optimize our code just doing that was too slow.

1425
01:14:24,200 --> 01:14:28,400
Right, because there's just a lot of pixels on a 1920 by 1080 screen.

1426
01:14:28,400 --> 01:14:32,100
Now we were able to optimize it and now we run really well at 1920

1427
01:14:32,100 --> 01:14:32,400
1080.

1428
01:14:32,400 --> 01:14:33,000
That's true.

1429
01:14:33,000 --> 01:14:38,100
So certainly, you know, we were able to make that work in all, but we

1430
01:14:38,100 --> 01:14:42,400
had to do some actual work to get a performant graphics system,

1431
01:14:42,600 --> 01:14:44,300
written by hand, right.

1432
01:14:45,000 --> 01:14:50,200
So you can kind of understand why using a GPU like if when, you know,

1433
01:14:50,400 --> 01:14:52,700
when you're talking to using GPU, we wrote everything in software, so

1434
01:14:52,700 --> 01:14:55,600
we render everything ourselves with the CPU, right?

1435
01:14:56,100 --> 01:14:59,800
But when you think about a GPU, you care about how powerful it is.

1436
01:15:00,000 --> 01:15:05,400
Hugh is because it's still on that cusp of not being powerful enough

1437
01:15:05,400 --> 01:15:08,400
for all of the things that you might want it to do.

1438
01:15:08,600 --> 01:15:09,300
Right?

1439
01:15:09,800 --> 01:15:12,800
It's still Graphics there, still so much.

1440
01:15:12,900 --> 01:15:15,600
Why did I accidentally hit the ramp?

1441
01:15:16,000 --> 01:15:20,900
There's still so much horsepower required to do Graphics because

1442
01:15:20,900 --> 01:15:22,300
there's just a lot more pixels than there.

1443
01:15:22,300 --> 01:15:25,100
Are sound samples to get output for any given frame.

1444
01:15:26,400 --> 01:15:29,100
You're just in this situation where you actually really do care, how

1445
01:15:29,100 --> 01:15:29,900
powerful your

1446
01:15:30,000 --> 01:15:31,900
EU is because it makes a meaningful difference.

1447
01:15:32,200 --> 01:15:35,500
Sound just is not that way sound.

1448
01:15:35,500 --> 01:15:38,700
There are only you know, eight hundred samples or something.

1449
01:15:38,700 --> 01:15:43,100
I mean just you know you do the math and you think it through, right?

1450
01:15:43,100 --> 01:15:48,300
It's like okay for a sound buffer, I've got 800 samples, maybe I've

1451
01:15:48,300 --> 01:15:52,000
got seven channels, and those things are like too long.

1452
01:15:52,000 --> 01:15:56,600
So we're talking about 11,000 B back-of-the-envelope that we're

1453
01:15:56,600 --> 01:15:58,200
working on 11,000 B.

1454
01:15:58,200 --> 01:15:59,800
I mean, think about that 11k.

1455
01:16:00,100 --> 01:16:00,900
Or 10K.

1456
01:16:01,000 --> 01:16:02,900
It's so tiny, right?

1457
01:16:02,900 --> 01:16:08,800
Compare that to 1920 by 1080 for an HDTV, write something like this

1458
01:16:09,400 --> 01:16:12,600
and and consider that you have to do.

1459
01:16:13,300 --> 01:16:18,000
You know, at least 44 bytes for color on there and you're doing 30 of

1460
01:16:18,000 --> 01:16:19,600
those whole ones.

1461
01:16:19,600 --> 01:16:23,200
A second, I mean, look at that number, right?

1462
01:16:23,600 --> 01:16:26,500
So the previous one, we were talking about something.

1463
01:16:29,200 --> 01:16:29,800
I guess I should also

1464
01:16:29,900 --> 01:16:32,500
So multiply the other one, let me let me multiply the other one out to

1465
01:16:32,500 --> 01:16:33,700
30 the second.

1466
01:16:35,000 --> 01:16:35,500
There we go.

1467
01:16:36,600 --> 01:16:37,800
So yeah, I do remember what I said.

1468
01:16:37,800 --> 01:16:39,200
Maybe 800 times.

1469
01:16:39,200 --> 01:16:41,000
30 times to, right?

1470
01:16:41,000 --> 01:16:41,600
So there you go.

1471
01:16:42,300 --> 01:16:45,200
So you look at the magnitude of the numbers involved here and I

1472
01:16:45,200 --> 01:16:45,700
apologize.

1473
01:16:45,700 --> 01:16:47,200
Like my calculator skills aren't great.

1474
01:16:47,200 --> 01:16:48,300
I may not have quite done that.

1475
01:16:48,300 --> 01:16:48,700
Exactly.

1476
01:16:48,700 --> 01:16:50,000
But I believe this is should be roughly.

1477
01:16:50,000 --> 01:16:50,600
Correct.

1478
01:16:50,900 --> 01:16:54,600
If you look at the magnitude of how much processing has to happen,

1479
01:16:54,600 --> 01:16:57,300
like how many individual things you are trying to calculate

1480
01:16:58,400 --> 01:17:01,600
They're really just is no comparison between sound and graphics.

1481
01:17:02,600 --> 01:17:07,800
And so as a result CPUs, nowadays are so overpowered for doing sound

1482
01:17:07,800 --> 01:17:11,300
stuff that it really just is not relevant.

1483
01:17:11,300 --> 01:17:15,400
You don't need a separate processor to take any of the load off

1484
01:17:15,400 --> 01:17:18,800
because it's just miniscule compared to what a graphics workload.

1485
01:17:18,800 --> 01:17:23,000
Looks like and CPUs are now capable of doing Graphics workloads, you

1486
01:17:23,000 --> 01:17:27,400
know, at those at those scales even as we as we proved on handmade

1487
01:17:27,400 --> 01:17:27,800
hero,

1488
01:17:28,800 --> 01:17:33,000
So yeah, so sound cards are just not useful and that's why they try to

1489
01:17:33,000 --> 01:17:34,300
differentiate themselves with other things.

1490
01:17:34,300 --> 01:17:38,500
Like how many speakers you know, weird configuration processing stuff?

1491
01:17:38,500 --> 01:17:39,200
I don't even know.

1492
01:17:39,200 --> 01:17:42,600
They try to add extra things to make themselves valuable because they

1493
01:17:42,600 --> 01:17:44,000
need to because there's really no need for them.

1494
01:17:44,000 --> 01:17:46,700
What is not true?

1495
01:17:46,700 --> 01:17:50,600
Is that compression is not always or decompression, I should say.

1496
01:17:50,600 --> 01:17:51,600
Isn't that always free?

1497
01:17:51,600 --> 01:17:56,600
You know if you want all of your sound files to be compressed with

1498
01:17:56,600 --> 01:17:58,600
fairly heavy weight compression such as

1499
01:17:58,800 --> 01:17:59,500
P3.

1500
01:18:00,000 --> 01:18:05,100
Bestie, sorts of things that decompression can start to get expensive.

1501
01:18:05,600 --> 01:18:09,600
And so if you're in a really rich soundscape, you know, you're talking

1502
01:18:09,600 --> 01:18:13,400
about 256 sounds or something like this all happening at once and

1503
01:18:13,400 --> 01:18:16,200
those are all getting decompressed in real time.

1504
01:18:16,300 --> 01:18:19,000
Because you want to say, memory footprint on, like a console, or who

1505
01:18:19,000 --> 01:18:20,000
knows what's happening?

1506
01:18:20,800 --> 01:18:24,000
You can start to get into cases where you do care about the CPU load

1507
01:18:24,000 --> 01:18:24,700
on decompression.

1508
01:18:24,800 --> 01:18:27,000
But that's exactly the kind of thing that sound cars don't actually

1509
01:18:27,000 --> 01:18:28,200
do, right?

1510
01:18:28,300 --> 01:18:29,900
So if you actually had sound cards,

1511
01:18:30,000 --> 01:18:33,000
That were about doing like adverb is decompression or something.

1512
01:18:33,200 --> 01:18:35,700
Then you might start to care again, how many channels they could do?

1513
01:18:36,000 --> 01:18:39,100
Because, you know, that might be actually valuable, I don't know, but,

1514
01:18:39,100 --> 01:18:41,000
but that's sort of more what it's about.

1515
01:18:41,100 --> 01:18:45,700
If you're just talking about mixing, doing it in software, is really

1516
01:18:45,700 --> 01:18:47,200
just just two simple.

1517
01:18:47,500 --> 01:18:50,100
There's no need to make that a coprocessor job.

1518
01:18:57,900 --> 01:18:59,100
See.

1519
01:19:12,400 --> 01:19:16,400
Would you ever need any kind of MP3, OGG support in handmade hero or

1520
01:19:16,400 --> 01:19:16,900
as wave?

1521
01:19:16,900 --> 01:19:18,400
Okay, for music here.

1522
01:19:20,500 --> 01:19:24,500
So I think that answer is going to come down to

1523
01:19:27,400 --> 01:19:32,200
Do we care about the game's disc footprint, right?

1524
01:19:33,100 --> 01:19:38,300
Because I think we wouldn't, we wouldn't really care about good music

1525
01:19:38,300 --> 01:19:39,000
compression.

1526
01:19:40,500 --> 01:19:43,700
Unless we cared about disc footprint and disc footprint, can be

1527
01:19:43,700 --> 01:19:45,100
relevant in two different ways, right?

1528
01:19:45,100 --> 01:19:46,800
Disk file and print can't be relevant.

1529
01:19:46,800 --> 01:19:49,900
If you just plain care about the disc footprint, right?

1530
01:19:50,000 --> 01:19:54,000
Meaning, if you just try to make your download size, smaller or patch

1531
01:19:54,000 --> 01:19:57,000
size smaller, just like if you if you just actually

1532
01:19:57,200 --> 01:20:01,300
Care about how much room the thing takes up on servers across the wire

1533
01:20:01,300 --> 01:20:04,700
and on the user's machine, you care about that music, compressions a

1534
01:20:04,700 --> 01:20:05,600
big deal, right?

1535
01:20:05,600 --> 01:20:08,400
Because it's going to give you 8 to 1 or something, probably, or

1536
01:20:08,400 --> 01:20:09,200
possibly more.

1537
01:20:10,100 --> 01:20:12,700
If you do MP3 or OG sport, depending on how much quality you want,

1538
01:20:12,700 --> 01:20:14,400
whatever right in 82.

1539
01:20:14,400 --> 01:20:16,600
One's a pretty big deal especially if you have a lot of music in the

1540
01:20:16,600 --> 01:20:16,900
game.

1541
01:20:16,900 --> 01:20:18,800
That's that's a big deal, right?

1542
01:20:20,200 --> 01:20:22,800
And the other place you care about it, is transfer time, like we're

1543
01:20:22,800 --> 01:20:25,100
doing all of our assets streaming already, right?

1544
01:20:25,100 --> 01:20:26,000
All of our bitmaps love.

1545
01:20:26,000 --> 01:20:30,400
Our sounds are all streaming in and we haven't really tried to work on

1546
01:20:30,400 --> 01:20:31,100
this end of it yet.

1547
01:20:31,100 --> 01:20:33,600
But you know, when we get towards shift time, we're going to be a

1548
01:20:33,600 --> 01:20:36,000
situation where we want to make sure that our asset streaming always

1549
01:20:36,000 --> 01:20:37,900
stays ahead of what we actually need.

1550
01:20:37,900 --> 01:20:41,100
So that you don't have dropouts where you don't have, you know, things

1551
01:20:41,100 --> 01:20:42,400
blinking away like right now, right?

1552
01:20:42,400 --> 01:20:44,500
You know, we're just in development, so it comes up and you see the

1553
01:20:44,500 --> 01:20:47,300
stuff stream in and that's fine because that's just all we're doing,

1554
01:20:47,300 --> 01:20:47,600
right?

1555
01:20:47,600 --> 01:20:48,700
We don't care about that.

1556
01:20:49,000 --> 01:20:49,300
But

1557
01:20:49,400 --> 01:20:50,600
Uno in the final shipping product.

1558
01:20:50,600 --> 01:20:51,600
We won't want that to happen.

1559
01:20:51,600 --> 01:20:53,500
That's unprofessional, we don't want that, right?

1560
01:20:53,500 --> 01:20:57,000
So what we want to do is make sure the streaming system is always

1561
01:20:57,000 --> 01:20:59,800
ahead, and if the streaming system can load less,

1562
01:21:00,000 --> 01:21:05,700
Rita like if they can get the MP3 decompression time down to less than

1563
01:21:05,700 --> 01:21:08,800
the amount of time it would take to read it off the drive in a slow

1564
01:21:08,800 --> 01:21:10,700
drive scenario potentially, right?

1565
01:21:10,800 --> 01:21:14,200
Which is entirely plausible these days given the fact that a lot of

1566
01:21:14,200 --> 01:21:18,900
people still have you know they're playing on a laptop with a 5200 RPM

1567
01:21:18,900 --> 01:21:22,700
drive like the slowest drive, you could imagine right but they've got

1568
01:21:22,700 --> 01:21:26,000
an Intel Core i7 in there or something like this, right?

1569
01:21:26,500 --> 01:21:29,800
It's entirely possible that you might be able to verbally

1570
01:21:30,000 --> 01:21:33,700
Compress them stuff in less time than it would take to load.

1571
01:21:33,700 --> 01:21:36,500
The equipment chunk off of disk.

1572
01:21:36,500 --> 01:21:39,600
And so that again, also saves you some time.

1573
01:21:39,600 --> 01:21:42,900
So, I don't know if either of those two things, if we will care about

1574
01:21:42,900 --> 01:21:43,200
them.

1575
01:21:43,500 --> 01:21:46,900
But those are the reasons that we would have to start looking into

1576
01:21:48,700 --> 01:21:51,900
music compression of some kind, right?

1577
01:21:52,200 --> 01:21:55,100
I would like to avoid it if possible because it's kind of a rat hole

1578
01:21:55,100 --> 01:21:59,000
that doesn't really have a whole lot of interesting stuff in it from

1579
01:21:59,000 --> 01:21:59,900
my perspective because I'm

1580
01:21:59,900 --> 01:22:01,200
Not really music compression guy.

1581
01:22:01,200 --> 01:22:04,600
So, the amount of insight I'm gonna be able to give to people on the

1582
01:22:04,600 --> 01:22:08,900
stream about what it means to have something out of orbis.

1583
01:22:08,900 --> 01:22:10,600
Compressed, whatever is just not going to be that great.

1584
01:22:11,000 --> 01:22:16,300
So, you know, there's that but, you know, if we did come and end up at

1585
01:22:16,300 --> 01:22:17,000
some point, we need it.

1586
01:22:17,000 --> 01:22:20,900
You know what I might do is ask somebody like like Jeff or Fabien or

1587
01:22:20,900 --> 01:22:25,100
Charles to maybe just do a guest stream where they explained, you

1588
01:22:25,100 --> 01:22:27,300
know, how to think about music compression or something like that.

1589
01:22:27,300 --> 01:22:29,900
So that it wouldn't just be a waste of everyone's time.

1590
01:22:29,900 --> 01:22:32,800
Is time like okay here we're slogging through and I'll gorebyss

1591
01:22:32,800 --> 01:22:34,600
decompressor, blah, blah blah, right?

1592
01:22:50,900 --> 01:22:55,700
Let's see what do you wish you could change the certainly on topic to

1593
01:22:55,700 --> 01:22:56,200
mrs.

1594
01:22:56,200 --> 01:23:00,400
Bennet, let's see.

1595
01:23:05,000 --> 01:23:09,200
Would a garbage collector, help us with managing the sound, buffer and

1596
01:23:09,200 --> 01:23:10,000
chunks.

1597
01:23:12,500 --> 01:23:17,100
I'm not sure what you mean by that, but assuming that you mean in the

1598
01:23:17,100 --> 01:23:22,200
asset system, the answer is no because so I think people seem to get

1599
01:23:22,200 --> 01:23:22,900
this confused a lot.

1600
01:23:22,900 --> 01:23:26,100
We've actually had a questions about this before so

1601
01:23:27,200 --> 01:23:30,600
You have to show just being virtual memory and garbage collection,

1602
01:23:31,100 --> 01:23:33,600
they're not really even related.

1603
01:23:33,600 --> 01:23:34,300
If that makes sense.

1604
01:23:34,300 --> 01:23:37,200
They're completely different things that solve completely different

1605
01:23:37,200 --> 01:23:37,900
problems.

1606
01:23:39,100 --> 01:23:46,000
So, a garbage collector is when you want to keep memory around data,

1607
01:23:46,000 --> 01:23:50,900
you know, around until nobody is knows about it anymore, right?

1608
01:23:51,000 --> 01:23:54,600
So basically a garbage collector is about who in the program can see

1609
01:23:54,600 --> 01:23:56,900
this data and might use this data and then a

1610
01:23:57,000 --> 01:23:59,800
as soon as nobody uses the data anymore, we

1611
01:24:00,000 --> 01:24:02,200
Get rid of it, that's a garbage collector, right?

1612
01:24:04,100 --> 01:24:06,000
That's why it's called the garbage collector because it's once

1613
01:24:06,000 --> 01:24:07,600
something becomes literally garbage.

1614
01:24:07,600 --> 01:24:09,600
Like you don't need this data anymore.

1615
01:24:09,900 --> 01:24:13,400
It's garbage, The Collector comes and collects it, right?

1616
01:24:14,300 --> 01:24:19,300
Virtual memory is about having more data than you can fit in your

1617
01:24:19,300 --> 01:24:22,100
working space but you want it all.

1618
01:24:22,500 --> 01:24:24,900
And so virtual memory is about saying, what a bit do.

1619
01:24:24,900 --> 01:24:26,400
I want right now?

1620
01:24:26,500 --> 01:24:29,000
Let's make sure that is resident, right?

1621
01:24:29,800 --> 01:24:33,200
And so, what we implemented in the asset system was virtual memory,

1622
01:24:33,200 --> 01:24:35,100
basically, a form of virtual memory.

1623
01:24:36,500 --> 01:24:39,300
There is no garbage in our asset system.

1624
01:24:39,500 --> 01:24:41,200
There is it's not garbage.

1625
01:24:41,500 --> 01:24:46,400
Every single sound is valid data that we want to play in the game.

1626
01:24:46,700 --> 01:24:50,200
Every single bitmap is valid data, we want to display in the game and

1627
01:24:50,200 --> 01:24:55,000
will display again and know about the entire time, what we don't have

1628
01:24:55,000 --> 01:24:59,400
the ability to do is necessarily load them all in, at the same time,

1629
01:25:00,100 --> 01:25:04,100
For two reasons, one, it be too slow, be this giant loading screen,

1630
01:25:04,200 --> 01:25:04,800
right?

1631
01:25:05,900 --> 01:25:10,800
And two it would cause us to require very large memory footprint,

1632
01:25:10,800 --> 01:25:11,300
right?

1633
01:25:12,100 --> 01:25:16,000
Or give up like like maybe our worlds would have to be smaller to fit

1634
01:25:16,500 --> 01:25:17,800
all those assets in, right?

1635
01:25:18,500 --> 01:25:21,500
And so what we want to do with the asset system is just say let's

1636
01:25:21,500 --> 01:25:26,200
create sort of a dynamic you know view into this where we're only

1637
01:25:26,200 --> 01:25:28,300
going to have the stuff in memory that we're actually using at any

1638
01:25:28,300 --> 01:25:29,700
given time and when

1639
01:25:29,800 --> 01:25:33,900
Something new has to come in, we're going to evict something old based

1640
01:25:33,900 --> 01:25:38,000
on whether or not we think it will be used again in the near term,

1641
01:25:38,000 --> 01:25:38,700
right?

1642
01:25:38,900 --> 01:25:40,300
But it is not garbage.

1643
01:25:40,400 --> 01:25:43,700
We are not throwing it away and a garbage collector would not be able

1644
01:25:43,700 --> 01:25:47,800
to help us at all here because the garbage collector is not about that

1645
01:25:47,800 --> 01:25:48,200
knowledge.

1646
01:25:48,200 --> 01:25:50,400
A garbage truck is about knowing that something will never be used

1647
01:25:50,400 --> 01:25:51,400
again and throwing it away.

1648
01:25:51,500 --> 01:25:53,600
But in our case we always know about everything.

1649
01:25:53,600 --> 01:25:57,100
Everything is possibly to use so it's not, it doesn't.

1650
01:25:57,100 --> 01:25:59,600
The algorithm does not look like a garbage collector, you know.

1651
01:25:59,800 --> 01:26:00,500
Any real way.

1652
01:26:05,700 --> 01:26:08,900
All right, I think that's about it.

1653
01:26:09,400 --> 01:26:12,800
So I think we will call it because we are out of time and most of the

1654
01:26:12,800 --> 01:26:14,400
questions did not look to be on topic.

1655
01:26:14,400 --> 01:26:17,800
So I guess I'd say is for people who have off topic questions that

1656
01:26:17,800 --> 01:26:20,500
you'd like to ask, we do off-topic questions at the beginning of the

1657
01:26:20,500 --> 01:26:21,000
Stream.

1658
01:26:22,500 --> 01:26:28,400
So if you come back tomorrow at like 4:45, let's say the stream starts

1659
01:26:28,400 --> 01:26:32,700
at 5:00 typically come back tomorrow at, 4:45, that would be the time

1660
01:26:32,700 --> 01:26:34,900
to ask you off topic questions and then I can answer what

1661
01:26:34,900 --> 01:26:38,300
Whatever questions you have, but I try to keep the on stream questions

1662
01:26:38,300 --> 01:26:40,700
to ones that actually related to the stuff that we're working on so

1663
01:26:40,700 --> 01:26:45,200
that we can not get too wildly off topic as think sometimes want to

1664
01:26:45,200 --> 01:26:45,500
be.

1665
01:26:46,500 --> 01:26:49,200
Alright, so let's go ahead and close things down here.

1666
01:26:49,800 --> 01:26:50,400
There we go.

1667
01:26:52,600 --> 01:26:55,100
Okay, thank you, everyone for joining me.

1668
01:26:55,100 --> 01:26:56,300
For another episode of handmade here.

1669
01:26:56,300 --> 01:26:59,500
It's been a pleasure coding with you, as always, if you want to follow

1670
01:26:59,500 --> 01:26:59,800
along,

1671
01:27:00,100 --> 01:27:01,500
And play around with the source code.

1672
01:27:01,500 --> 01:27:04,700
You can always do so by pre-ordering the game on handmade here at org

1673
01:27:05,400 --> 01:27:06,700
and it comes with all the source code.

1674
01:27:06,700 --> 01:27:08,800
So you'll get a little download link that you can use every night to

1675
01:27:08,800 --> 01:27:09,600
download the source code.

1676
01:27:09,600 --> 01:27:12,300
After I'm done with it then you can play with it.

1677
01:27:12,800 --> 01:27:15,300
We also if you just want to split the video series, we have a patreon

1678
01:27:15,300 --> 01:27:16,800
page, you can send subscribe to.

1679
01:27:17,000 --> 01:27:20,300
It's also very much appreciated if you would like to do that.

1680
01:27:20,700 --> 01:27:25,600
And we also have a forum site where you can go to ask questions and to

1681
01:27:25,600 --> 01:27:27,900
get ports to Mac and Linux that community members have done.

1682
01:27:27,900 --> 01:27:29,800
If you're trying to follow along and platform, it's not Windows.

1683
01:27:30,000 --> 01:27:32,400
Those until we get up to those platforms.

1684
01:27:32,400 --> 01:27:33,400
That's a good place to go.

1685
01:27:33,800 --> 01:27:37,200
We also have a tweetbot that will tweet the schedule at you and so if

1686
01:27:37,200 --> 01:27:39,900
you want to catch the stream live, that's the place to do it.

1687
01:27:41,400 --> 01:27:42,600
I think that's basically it.

1688
01:27:42,600 --> 01:27:44,600
I said everything that we need to say, don't think there are any

1689
01:27:44,600 --> 01:27:47,400
additional items so that's about it for today.

1690
01:27:47,500 --> 01:27:51,000
I will be back here tomorrow at 5 p.m., so please join me.

1691
01:27:51,000 --> 01:27:53,500
Then, if you would like to see some more audio mixing coating will,

1692
01:27:53,500 --> 01:27:54,800
probably do volume ramping.

1693
01:27:55,900 --> 01:27:59,100
And maybe look at like, panning in that sort of stuff will probably

1694
01:27:59,100 --> 01:27:59,800
start doing that tomorrow.

1695
01:28:00,000 --> 01:28:02,800
And, you know, I don't know how long that'll take maybe a day, maybe

1696
01:28:02,800 --> 01:28:03,100
two.

1697
01:28:03,100 --> 01:28:05,900
And then from there, we'll probably go into the SSC stuff.

1698
01:28:05,900 --> 01:28:08,300
Cindy is the mixer and then that's it for the mixer.

1699
01:28:08,400 --> 01:28:10,000
We can probably just put it away.

1700
01:28:10,200 --> 01:28:12,900
There are some interface things we might want to play with, in terms

1701
01:28:12,900 --> 01:28:15,400
of how you can control sounds that are playing.

1702
01:28:15,400 --> 01:28:18,500
But we'll look at that probably when we're doing the volume ramping.

1703
01:28:19,300 --> 01:28:20,300
So, that's about it.

1704
01:28:20,300 --> 01:28:21,600
Thank you very much for joining me.

1705
01:28:22,200 --> 01:28:24,900
I hope to see you here tomorrow, until then have fun coding and I'll

1706
01:28:24,900 --> 01:28:25,900
see you guys on the Internet.

1707
01:28:26,000 --> 01:28:26,600
Thanks everyone.

