1
00:00:01,800 --> 00:00:05,400
Hello, everyone, and welcome to handmade hero.

2
00:00:05,400 --> 00:00:07,700
The show Rico to complete game live on stream.

3
00:00:07,700 --> 00:00:11,400
We are in the middle of doing our Sprite sorting.

4
00:00:12,400 --> 00:00:16,200
We, you know, it's getting better.

5
00:00:16,200 --> 00:00:20,400
Certainly we, you know, we did the work to put in some graph sorting

6
00:00:21,300 --> 00:00:26,000
but we haven't quite gotten to the point where it's, you know, 100%

7
00:00:26,000 --> 00:00:26,900
what we want.

8
00:00:27,200 --> 00:00:28,900
We can certainly do a lot better than what we're doing.

9
00:00:28,900 --> 00:00:31,200
Now, we've got some kind of

10
00:00:31,400 --> 00:00:33,800
Is room for improvement where the sorts not working properly.

11
00:00:33,800 --> 00:00:41,700
And we also just slammed in a cycle, checking piece of code at the end

12
00:00:41,700 --> 00:00:47,100
of last yesterday, stream, but I didn't actually have a chance to

13
00:00:47,100 --> 00:00:47,600
debug it.

14
00:00:47,600 --> 00:00:51,700
So we don't even know if it works or what it's doing.

15
00:00:51,700 --> 00:00:52,400
We have no idea.

16
00:00:52,400 --> 00:00:55,300
Like I literally just type it in there with like we ran the program.

17
00:00:55,300 --> 00:00:56,300
It didn't crash or anything.

18
00:00:56,300 --> 00:01:00,900
I mean it wasn't like completely bogus or anything, but it certainly,

19
00:01:01,400 --> 00:01:04,000
And we don't even really know if it's, if it's were even step through

20
00:01:04,000 --> 00:01:04,599
it or anything.

21
00:01:05,700 --> 00:01:09,500
So today is day 30 8 load up day, 307 source code.

22
00:01:09,500 --> 00:01:12,900
If you want to follow along with me, that is where we are at today.

23
00:01:13,500 --> 00:01:22,200
And I will go ahead and load handmade proj and you can see where we

24
00:01:22,200 --> 00:01:24,100
left things in that is if I can type Ms.

25
00:01:24,100 --> 00:01:28,400
Dev correctly into the console window you can see where we left things

26
00:01:28,400 --> 00:01:28,900
here.

27
00:01:29,200 --> 00:01:32,100
We kind of had, I put a second room on top there.

28
00:01:32,500 --> 00:01:35,100
One thing I would potentially like to do is draw

29
00:01:35,300 --> 00:01:37,800
It alleges around those boxes inside opengl.

30
00:01:37,800 --> 00:01:40,000
I didn't want our sort to get have those in there.

31
00:01:40,000 --> 00:01:42,700
So we didn't have to worry about it at the moment, but it's hard to

32
00:01:42,700 --> 00:01:45,900
see things of the same color stacked on top of each other.

33
00:01:45,900 --> 00:01:49,500
So one thing we could do if we wanted to at least temporarily and we

34
00:01:49,500 --> 00:01:54,400
can get rid of this later is it would be nice to outline just by

35
00:01:54,400 --> 00:01:58,300
default those solid, rectangles temporarily and that's really easy for

36
00:01:58,300 --> 00:02:01,400
us to do because in the opengl renderer, when we come through here,

37
00:02:01,600 --> 00:02:05,100
when we see that, we have a rectangle, right?

38
00:02:05,200 --> 00:02:05,500
Right?

39
00:02:06,500 --> 00:02:10,900
We can do a rectangle vertices because you remember, we have the

40
00:02:10,900 --> 00:02:14,000
opengl, oops, that's not gonna do anything for us.

41
00:02:14,500 --> 00:02:18,700
Remember, we have up here, the opengl line vertices call, right?

42
00:02:19,100 --> 00:02:22,900
And we can go ahead and pass the rectangle to that.

43
00:02:26,100 --> 00:02:27,300
And that'll I put those vertices.

44
00:02:27,300 --> 00:02:30,200
So if I want to, I can do a line.

45
00:02:32,700 --> 00:02:35,700
That kind of goes around it and I can do that in whatever color.

46
00:02:37,600 --> 00:02:37,900
I don't know.

47
00:02:37,900 --> 00:02:39,400
Black seems fine for now.

48
00:02:43,900 --> 00:02:45,500
So, oops.

49
00:02:45,500 --> 00:02:46,600
That's a good type.

50
00:02:46,600 --> 00:02:47,900
Oh yeah.

51
00:02:52,400 --> 00:02:57,600
So in theory, well, in theory, I would have been able to draw a line

52
00:02:57,600 --> 00:02:57,800
there.

53
00:02:57,800 --> 00:02:58,900
What did I do?

54
00:02:59,300 --> 00:02:59,800
Open jewelry.

55
00:03:00,000 --> 00:03:02,500
Tangle texture is disabled.

56
00:03:02,600 --> 00:03:05,200
We set the color to 0001.

57
00:03:05,600 --> 00:03:11,000
We're drawing lines were passing the line vertices down that should

58
00:03:11,000 --> 00:03:12,600
have been okay, right?

59
00:03:12,700 --> 00:03:14,000
Render entry rectangle.

60
00:03:16,200 --> 00:03:25,200
I feel like that should have been fine entry, dim, and entry P.

61
00:03:25,200 --> 00:03:27,200
What are we?

62
00:03:28,400 --> 00:03:29,800
That should outline that correctly.

63
00:03:29,800 --> 00:03:31,100
Am I wrong about that?

64
00:03:33,100 --> 00:03:33,600
Oh,

65
00:03:35,800 --> 00:03:37,000
No, because we do GL.

66
00:03:37,000 --> 00:03:38,800
Begin triangles inside are open.

67
00:03:39,200 --> 00:03:40,000
Jill rectangle.

68
00:03:40,000 --> 00:03:43,200
So this would have begin and end for triangles.

69
00:03:43,800 --> 00:03:48,300
This is our g, l began, and then pair for lines.

70
00:03:48,600 --> 00:03:50,400
So I feel like that should have been fine.

71
00:03:50,500 --> 00:03:54,000
Certainly, if it works down here I would have thought because this is

72
00:03:54,000 --> 00:03:57,700
how we draw all of our bounds in the other case as well.

73
00:03:57,700 --> 00:04:00,500
So I would have thought that would have been fine but I'm not seeing

74
00:04:00,500 --> 00:04:02,500
any of those show up and I'm not exactly sure.

75
00:04:02,500 --> 00:04:05,300
Why, because they should we don't have a z-buffer turned off like

76
00:04:05,300 --> 00:04:05,500
that.

77
00:04:05,800 --> 00:04:10,000
So, if I draw them in this order, meaning, you know, I draw the

78
00:04:10,000 --> 00:04:13,800
rectangle first, and then I draw the lines, there shouldn't be any,

79
00:04:13,900 --> 00:04:16,100
you know, depth, sorting or anything like that.

80
00:04:16,100 --> 00:04:21,000
So I should always see the line show up and we kind of know that it

81
00:04:21,000 --> 00:04:21,800
does that it

82
00:04:23,800 --> 00:04:27,900
that it does do that because for example, before we were doing this

83
00:04:30,300 --> 00:04:30,900
Right?

84
00:04:30,900 --> 00:04:33,800
And we can see all of our, you know, because this is our debug overlay

85
00:04:33,800 --> 00:04:36,000
that would show us our different sorting groups, right?

86
00:04:36,100 --> 00:04:39,400
And we can see that all of our line drawing works just fine there.

87
00:04:39,700 --> 00:04:45,000
So I'm not exactly sure why we're not able to see our lines drawn in

88
00:04:45,000 --> 00:04:48,800
this case, whereas we are able to see our lines drawn in the other

89
00:04:48,800 --> 00:04:53,300
case because the only thing that's different that I know of is that

90
00:04:53,700 --> 00:04:56,700
you know, texture 2D gets disabled once down here and then off you go,

91
00:04:57,000 --> 00:05:00,000
but texture 2D is disabled inside the

92
00:05:00,100 --> 00:05:01,200
Go drawing as well.

93
00:05:01,200 --> 00:05:07,300
So I should think that we would be able to do the line vertices here

94
00:05:07,700 --> 00:05:12,400
when we do the Jill begin GL, a for Lions, just inside of it, right?

95
00:05:12,800 --> 00:05:14,400
That seems like that should be fine.

96
00:05:14,900 --> 00:05:18,600
But at the same time, I don't see it happening.

97
00:05:19,400 --> 00:05:20,800
So, that's a little bit odd.

98
00:05:20,900 --> 00:05:23,500
I've been remember we have GL 1 + GL.

99
00:05:23,500 --> 00:05:24,900
One, minus cos Alpha.

100
00:05:25,200 --> 00:05:28,600
So, as long as the source self is one, we can draw black or should be

101
00:05:28,600 --> 00:05:29,400
able to draw black.

102
00:05:29,400 --> 00:05:30,000
So the fact that

103
00:05:30,100 --> 00:05:34,900
At this is a all zeros as long as this is one that should still draw

104
00:05:34,900 --> 00:05:35,500
black in there.

105
00:05:35,500 --> 00:05:38,500
I mean, I guess I can double-check to make sure that I'm not doing

106
00:05:38,500 --> 00:05:43,600
something stupid in that case, but I wouldn't assume so yeah.

107
00:05:44,300 --> 00:05:47,500
But again, so I'm expecting to see those lines and not seeing those

108
00:05:47,500 --> 00:05:48,800
lines and I'm not sure why not.

109
00:05:49,000 --> 00:05:52,400
So, the first thing I would want to do here is I want to know whether

110
00:05:52,400 --> 00:05:55,600
there's something wrong with you know, which part of this is wrong.

111
00:05:55,600 --> 00:05:59,600
Basically, I would like to know if my

112
00:06:00,000 --> 00:06:03,100
Realign vertices or like what, you know, maybe what I'm passing it is

113
00:06:03,100 --> 00:06:04,100
wrong, or something like this.

114
00:06:04,300 --> 00:06:08,800
I should double-check what opengl rectangle is doing it, doesn't it

115
00:06:08,800 --> 00:06:12,000
just draws these directly so, you know, you can see that there's

116
00:06:12,000 --> 00:06:13,500
nothing particularly weird in there.

117
00:06:14,400 --> 00:06:17,500
So, in theory, if I just passed the Min and the max P that I was

118
00:06:17,500 --> 00:06:20,900
passing up here, it should draw to see whether that's the case.

119
00:06:20,900 --> 00:06:25,000
I just want to see whether there's anything obviously, stupid going on

120
00:06:25,000 --> 00:06:25,300
here.

121
00:06:26,000 --> 00:06:29,800
Like, if I just draw a line, you know, that

122
00:06:30,000 --> 00:06:34,200
It's kind of an obvious diagonal line, do I see it?

123
00:06:34,400 --> 00:06:37,000
You know, does that show up anywhere?

124
00:06:37,100 --> 00:06:37,600
Right?

125
00:06:38,300 --> 00:06:43,600
And so, you know, there's my line and immediately, it seems like

126
00:06:43,600 --> 00:06:49,200
something is amiss because I specifically set the color right to 0001

127
00:06:49,500 --> 00:06:52,700
and yet, it's not doing that color at all.

128
00:06:52,700 --> 00:06:57,700
So, I must be doing something relatively stupid, right and I'm not

129
00:06:57,700 --> 00:06:59,400
sure exactly what that is.

130
00:07:00,000 --> 00:07:02,300
Suppose, it could be a texture thing, but I doubt it.

131
00:07:02,500 --> 00:07:06,100
So, in here, we set the color ahead of time and then we draw the

132
00:07:06,100 --> 00:07:06,700
lines.

133
00:07:07,100 --> 00:07:09,400
Exactly the same as we're doing it here.

134
00:07:09,800 --> 00:07:13,700
So I'm trying to think if there's some other thing that I'm not doing

135
00:07:13,700 --> 00:07:15,700
that, I should be doing, but I don't think so.

136
00:07:16,400 --> 00:07:18,600
Like, it feels like that should be okay.

137
00:07:19,200 --> 00:07:25,400
But yeah, if we're drawing with GL color I don't see why that would be

138
00:07:25,400 --> 00:07:26,900
a problem.

139
00:07:27,800 --> 00:07:28,600
At all.

140
00:07:30,300 --> 00:07:31,000
Let's double-check.

141
00:07:35,200 --> 00:07:40,300
Yeah, so I wonder I'm interested to know, does this have to be inside

142
00:07:40,300 --> 00:07:40,800
the beginning?

143
00:07:40,800 --> 00:07:43,400
A, it's been a long time since I use the fixed function pipeline.

144
00:07:44,300 --> 00:07:47,800
All right, so I guess maybe the this is not a sticky color.

145
00:07:48,400 --> 00:07:51,800
And so technically maybe this has to be in here, you know I'm saying

146
00:07:51,800 --> 00:07:52,200
to you.

147
00:07:55,700 --> 00:07:58,600
So, all right, I guess that's a thing.

148
00:07:58,600 --> 00:08:00,500
Remembered about the fixed function pipeline?

149
00:08:00,500 --> 00:08:01,900
I don't actually know if that's true.

150
00:08:01,900 --> 00:08:05,900
It obviously is true on this driver, but I guess it looks like if

151
00:08:05,900 --> 00:08:08,300
you're not inside a beginning, a, you can't change the color.

152
00:08:08,300 --> 00:08:12,500
It's not sticky outside, which seems plausible.

153
00:08:13,800 --> 00:08:14,400
I don't know.

154
00:08:16,500 --> 00:08:19,400
Again, those you don't really use those when you move when you're not

155
00:08:19,400 --> 00:08:20,700
in the fixed function pipeline.

156
00:08:21,400 --> 00:08:27,000
So if we outline those, there we can kind of see that we've got some

157
00:08:27,000 --> 00:08:28,900
interesting situations happening, right?

158
00:08:29,200 --> 00:08:34,500
And so what I'm seeing is I guess, somewhat consistent, with what I

159
00:08:34,500 --> 00:08:38,400
might expect to see, given our sort, and some of the problems that we

160
00:08:38,400 --> 00:08:39,900
might have with that sort.

161
00:08:40,200 --> 00:08:44,900
And it does mean, I probably want to revisit our sort criteria

162
00:08:45,300 --> 00:08:50,700
But when you can kind of see if you just look cursorily at this is it

163
00:08:50,700 --> 00:08:52,000
does kind of look to me.

164
00:08:52,000 --> 00:08:57,000
Like Z Sprites are at least sort incorrectly amongst themselves,

165
00:08:57,000 --> 00:08:57,900
right?

166
00:08:57,900 --> 00:08:59,800
So you can see that we've got

167
00:09:00,100 --> 00:09:01,900
The room above us here.

168
00:09:02,300 --> 00:09:06,500
Those little plates that we drew, those are sorting correctly, and if

169
00:09:06,500 --> 00:09:10,400
I come up here, right, you can see those moving as I go.

170
00:09:10,400 --> 00:09:13,300
And now, I'm on that sort of that top room, right?

171
00:09:14,400 --> 00:09:17,400
And I don't see a lot of errors in those sorts.

172
00:09:17,400 --> 00:09:22,300
However, as soon as the why Sprites are introduced here, right?

173
00:09:22,300 --> 00:09:27,200
You do see you can see those kind of bugs happening as we introduce

174
00:09:27,200 --> 00:09:29,800
why Sprites that overlap the Z Sprite.

175
00:09:30,000 --> 00:09:34,700
It's which suggests to me that you know are sort algorithm may

176
00:09:34,700 --> 00:09:39,700
actually be fine and we might just have a bug in the store comparison,

177
00:09:39,900 --> 00:09:40,500
right?

178
00:09:40,500 --> 00:09:42,700
So you know that's just what I'm thinking.

179
00:09:42,700 --> 00:09:44,800
That's where my head's at going into it just to kind of give you a

180
00:09:44,800 --> 00:09:48,100
little perspective of just the feeling that I've got on it.

181
00:09:48,900 --> 00:09:51,900
Now I don't want to dive into that just yet and the reason is because

182
00:09:51,900 --> 00:09:55,200
I want to get our cycle check working we don't know if our cycle check

183
00:09:55,200 --> 00:09:57,300
us working right now and that's just a piece of information that I

184
00:09:57,300 --> 00:09:59,000
want to have, right?

185
00:09:59,100 --> 00:09:59,900
I would like to

186
00:10:00,000 --> 00:10:04,400
Know if we have a proper cycle detection.

187
00:10:04,700 --> 00:10:07,200
And one way I could do that is create a case where I know it has a

188
00:10:07,200 --> 00:10:08,900
cycle and then watch to see if it works.

189
00:10:09,300 --> 00:10:12,000
But before we do any of that, I'm just going to look at the code

190
00:10:12,100 --> 00:10:13,400
because we kind of slammed it in there.

191
00:10:13,400 --> 00:10:15,700
I don't really know if it's right, I don't even know if my algorithm

192
00:10:15,700 --> 00:10:16,100
was right.

193
00:10:16,100 --> 00:10:18,800
I just kind of did it really quickly at the end of the stream and I

194
00:10:18,800 --> 00:10:20,300
kind of want to see what's going on.

195
00:10:20,700 --> 00:10:24,400
So if you remember correctly, what we did here is we said okay you

196
00:10:24,400 --> 00:10:28,400
know we're going to Loop over all of the bounds that we have, right?

197
00:10:28,400 --> 00:10:29,800
Every everything that we saw

198
00:10:29,900 --> 00:10:30,500
Sorted on.

199
00:10:35,000 --> 00:10:40,100
And everything that we sorted on if it had a Sprite cycle, right?

200
00:10:41,100 --> 00:10:46,000
So if that was set in the flags, then we're going to draw it, but

201
00:10:46,000 --> 00:10:47,600
otherwise, we're not going to drive.

202
00:10:48,500 --> 00:10:53,000
So right now we're not drawing anything, you know, if I look at this,

203
00:10:53,000 --> 00:10:56,700
we're not we're not drawing any of those debug lines, right?

204
00:10:56,700 --> 00:10:59,600
The only thing we're drawing is the actual I mean.

205
00:10:59,800 --> 00:11:02,700
Yeah, these are debug plates where the floor would, because we didn't.

206
00:11:02,700 --> 00:11:04,400
We don't have an art pack for it yet.

207
00:11:04,900 --> 00:11:07,800
But it's not part of the sort debugging, right?

208
00:11:08,400 --> 00:11:12,700
And so the question is well you know, did the Sprite cycle just never

209
00:11:12,700 --> 00:11:16,100
get set because there weren't any Cycles or did the Sprite cycle?

210
00:11:16,100 --> 00:11:19,500
Never Get Set because we don't we didn't write the algorithm, right,

211
00:11:19,500 --> 00:11:19,700
right.

212
00:11:19,700 --> 00:11:20,000
We don't know.

213
00:11:20,000 --> 00:11:20,800
We could have bugs.

214
00:11:20,800 --> 00:11:25,300
It could be there could be a theoretical error in what I did and so we

215
00:11:25,300 --> 00:11:28,400
have to now go and see whether I've done it correctly.

216
00:11:29,300 --> 00:11:31,900
I try to make an answer, you know, try to ascertain, whether it's

217
00:11:32,400 --> 00:11:33,300
whether it's proper.

218
00:11:33,800 --> 00:11:38,300
So the way that I did that, if you remember is we have this notion of,

219
00:11:38,900 --> 00:11:42,600
you know, the walking the Sprite graph, and you can see that when we

220
00:11:42,600 --> 00:11:43,600
do walk, the Sprite graph.

221
00:11:43,600 --> 00:11:49,800
What we do is we say, well, every time we start looking at a node, we

222
00:11:50,000 --> 00:11:52,600
set the hit cycle to false.

223
00:11:52,800 --> 00:11:56,600
So there's basically a, it's not Global in terms of.

224
00:11:56,600 --> 00:11:58,900
It's not a global variable but it's Global to

225
00:11:59,000 --> 00:11:59,800
An individual.

226
00:12:00,300 --> 00:12:01,200
So we've got this.

227
00:12:01,500 --> 00:12:05,300
This thing that will be passed to all of the recursive calling here

228
00:12:05,500 --> 00:12:08,200
and it will be set to true if we ever hit a cycle.

229
00:12:08,700 --> 00:12:12,100
So we start that false and then we do our recursive from

230
00:12:16,000 --> 00:12:19,300
Is it supposed to be called from to back?

231
00:12:19,900 --> 00:12:22,800
I think it's supposed to be called recursive front to back.

232
00:12:24,400 --> 00:12:25,000
Isn't it?

233
00:12:26,800 --> 00:12:32,500
But wouldn't do we just have a complete typo that we never noticed?

234
00:12:35,800 --> 00:12:36,700
Am I Wrong?

235
00:12:37,200 --> 00:12:39,700
How come nobody has mentioned this the entire time, right?

236
00:12:41,500 --> 00:12:43,400
It's recursive front to back.

237
00:12:45,300 --> 00:12:45,900
Isn't it?

238
00:12:47,300 --> 00:12:49,600
I'm just going to say that it was supposed to be recursive front to

239
00:12:49,600 --> 00:12:51,500
back and you guys can correct me later.

240
00:12:51,500 --> 00:12:54,000
If it turns out that I had a good reason for that, but I don't think

241
00:12:54,000 --> 00:12:54,100
so.

242
00:12:54,100 --> 00:12:55,200
That just looks like a typo.

243
00:12:55,800 --> 00:12:59,200
All right, so anyway, we go into recursive front to back on a

244
00:12:59,200 --> 00:13:02,600
particular node and we check to see whether or not we've ever visited

245
00:13:02,600 --> 00:13:03,500
that node before.

246
00:13:03,800 --> 00:13:07,800
If we have visited that note before, we don't, we don't enter the if,

247
00:13:07,800 --> 00:13:08,300
right?

248
00:13:08,300 --> 00:13:11,200
So we start off by just saying, well, if we've already visited this

249
00:13:11,200 --> 00:13:12,800
guy, we don't need to visit him again.

250
00:13:14,500 --> 00:13:15,500
Well, and so, there you go.

251
00:13:15,700 --> 00:13:16,900
And so that's a bug.

252
00:13:17,200 --> 00:13:18,800
Right there, right?

253
00:13:20,800 --> 00:13:26,100
So because we will set the visited flag, we will never actually do the

254
00:13:26,100 --> 00:13:28,500
walk cycle chuck, if that makes sense.

255
00:13:29,600 --> 00:13:33,600
So, this was kind of a typo, what we want to do is this, right?

256
00:13:33,700 --> 00:13:38,600
We want to say, okay, if there was a cycle set on the guy, we're going

257
00:13:38,600 --> 00:13:41,500
to look at then, we've hit a cycle for sure.

258
00:13:42,000 --> 00:13:46,600
Now, even if we said, we already visited him that we don't want to

259
00:13:46,600 --> 00:13:46,900
not,

260
00:13:47,000 --> 00:13:47,800
not do that.

261
00:13:47,800 --> 00:13:48,200
Check.

262
00:13:48,200 --> 00:13:51,200
Because the whole point is, of course his, if we find a cycle, of

263
00:13:51,200 --> 00:13:53,200
course, he's visited, will be, chat will be set.

264
00:13:53,200 --> 00:13:55,800
That's the whole point of a cycle is that we've already visited and

265
00:13:55,800 --> 00:13:56,900
that's what that would mean.

266
00:13:56,900 --> 00:13:57,500
Right?

267
00:13:58,000 --> 00:13:59,600
So we need to set that outside.

268
00:13:59,700 --> 00:14:02,800
Then we can check to see whether or not it's been visited.

269
00:14:02,900 --> 00:14:07,500
If it hasn't been visited we can come in here and or in the the visit

270
00:14:07,500 --> 00:14:08,700
in the the the cycle.

271
00:14:09,000 --> 00:14:12,400
Go through all the edges and recursively call and then on the walk

272
00:14:12,400 --> 00:14:16,500
out, we can remove the cycle if it turns out that

273
00:14:17,100 --> 00:14:19,400
We haven't hit one on the way down.

274
00:14:20,800 --> 00:14:22,700
All right, so we definitely had a bug.

275
00:14:25,500 --> 00:14:26,400
And that's fine.

276
00:14:27,300 --> 00:14:31,800
And so, okay, so now what we can see, as we sort of come through here,

277
00:14:32,500 --> 00:14:37,400
is that we definitely did have some Cycles right like that saying

278
00:14:37,400 --> 00:14:39,400
every time something lights up on the screen.

279
00:14:39,600 --> 00:14:43,600
It's basically saying that we did have a cycle of some kind, you know

280
00:14:43,600 --> 00:14:44,100
I'm saying?

281
00:14:45,000 --> 00:14:48,200
And it's a little weird to have them but I guess it's just when you

282
00:14:48,500 --> 00:14:50,000
overlap enough stuff.

283
00:14:50,000 --> 00:14:53,100
I mean either we've got a bug which you know is always possible,

284
00:14:53,100 --> 00:14:53,300
Right?

285
00:14:53,300 --> 00:14:54,700
With something of this complexity.

286
00:14:55,300 --> 00:14:58,700
just started working with, we could easily have a book but either we

287
00:14:58,700 --> 00:14:59,700
have a bug

288
00:15:00,000 --> 00:15:07,700
Or there's just, you know, very unusual times when we when this or

289
00:15:07,700 --> 00:15:11,600
sort of starts to happen but, you know, you can kind of see that

290
00:15:11,600 --> 00:15:13,300
things get pulled into the cycle.

291
00:15:13,500 --> 00:15:14,900
Very dramatically there.

292
00:15:15,900 --> 00:15:22,300
As like all of those things are getting pulled into the cycle and yet

293
00:15:22,300 --> 00:15:26,600
it's kind of crazy because like here, nothing is in a cycle.

294
00:15:26,600 --> 00:15:29,600
Apparently, unless we've got a bug but here,

295
00:15:30,500 --> 00:15:31,500
Right in the middle.

296
00:15:31,500 --> 00:15:32,500
There there is.

297
00:15:33,400 --> 00:15:34,300
It seems unlikely.

298
00:15:34,300 --> 00:15:35,400
That that would be true.

299
00:15:35,600 --> 00:15:36,800
I feel like that just indicates.

300
00:15:36,800 --> 00:15:38,400
We probably have another bug.

301
00:15:38,400 --> 00:15:41,400
I mean, I don't know obviously until we look at into a little bit

302
00:15:41,400 --> 00:15:46,700
further but it seems a little unlikely that that I could get into, you

303
00:15:46,700 --> 00:15:52,100
know, there is a cycle and there is not a cycle, you know, is that

304
00:15:52,100 --> 00:15:55,200
really realistic and maybe it is?

305
00:15:55,200 --> 00:15:59,800
I don't know, maybe you have to overlap the bottom row before the

306
00:16:00,000 --> 00:16:02,800
You know, something that overlaps the trees and if you're not, then

307
00:16:02,800 --> 00:16:08,800
you can't and you know that's you know, it's not impossible that that

308
00:16:08,800 --> 00:16:09,500
would be true.

309
00:16:09,800 --> 00:16:13,300
It's just I feel like you know, what are the chances?

310
00:16:13,300 --> 00:16:17,200
It seems like it's probably more likely to be a bug than than that

311
00:16:17,200 --> 00:16:18,500
that's actually the truth.

312
00:16:20,400 --> 00:16:23,500
But anyway, at least now we've got that, that particular bug out of

313
00:16:23,500 --> 00:16:24,000
the way.

314
00:16:25,000 --> 00:16:26,200
And yeah.

315
00:16:26,200 --> 00:16:26,900
So there we go.

316
00:16:32,000 --> 00:16:32,400
Now.

317
00:16:34,800 --> 00:16:38,700
What I would like to start off by doing is I would like to start off

318
00:16:38,700 --> 00:16:42,600
by going back to a simpler version of what's on the screen.

319
00:16:45,900 --> 00:16:50,800
Because if you remember, we sort of have two rooms stacked on top of

320
00:16:50,800 --> 00:16:52,900
each other because we were just kind of playing with the sorts.

321
00:16:53,700 --> 00:16:56,700
So what I'd like to do is I'd like to go back to the simpler case

322
00:16:57,000 --> 00:17:04,099
where when I when I add standard room I'm just going to add one room.

323
00:17:04,099 --> 00:17:07,900
So there's only one actual, excuse me.

324
00:17:10,099 --> 00:17:14,400
There's only one actual room in this game, and I want to see what

325
00:17:14,400 --> 00:17:16,200
happens with Cycles in this case.

326
00:17:20,200 --> 00:17:20,500
Okay.

327
00:17:20,500 --> 00:17:25,800
So in this case, when we only have one room, we are getting no Cycles.

328
00:17:27,800 --> 00:17:28,600
Okay, there we go.

329
00:17:29,500 --> 00:17:32,500
So this is where it thinks there was a cycle right in between those

330
00:17:32,500 --> 00:17:32,900
two.

331
00:17:33,900 --> 00:17:38,000
Is there any place I can stand and get a cycle or is it only as IHOP?

332
00:17:39,100 --> 00:17:40,000
That's unfortunate.

333
00:17:40,100 --> 00:17:41,300
It would be nice if I could.

334
00:17:43,800 --> 00:17:45,000
Well, you know what though?

335
00:17:45,600 --> 00:17:47,700
Of course it's a little bit difficult to do.

336
00:17:47,800 --> 00:17:48,600
Oh that's interesting.

337
00:17:48,600 --> 00:17:54,000
So as my little rectangle is capable of creating these sort of Cycles

338
00:17:54,000 --> 00:17:55,300
as well, apparently

339
00:17:56,900 --> 00:17:57,500
Bizarre.

340
00:17:59,000 --> 00:17:59,900
Yeah, that just that seems

341
00:18:00,000 --> 00:18:00,700
A buggy to me.

342
00:18:00,700 --> 00:18:02,400
I'm going to have to go ahead and say that.

343
00:18:02,400 --> 00:18:06,200
I don't think it's particularly likely that the cycle check is

344
00:18:06,200 --> 00:18:08,600
operating properly, but you know, who knows.

345
00:18:08,800 --> 00:18:10,100
Famous last words, right?

346
00:18:13,900 --> 00:18:21,300
So, what I was going to say is we can I don't remember simulation.

347
00:18:21,300 --> 00:18:26,000
Yeah, simulation time step I can kind of bring that down a bit.

348
00:18:38,500 --> 00:18:39,100
All right.

349
00:18:40,200 --> 00:18:44,000
So now I'll move in extreme slow motion.

350
00:18:45,800 --> 00:18:49,000
And we should be able to see when that.

351
00:18:49,900 --> 00:18:52,800
Yes, you can kind of see that when that happens there.

352
00:18:56,000 --> 00:18:57,400
And it's really odd.

353
00:18:57,400 --> 00:19:01,600
You know, I just I just hopefully you can see why I'm a little

354
00:19:01,600 --> 00:19:06,900
incredulous about why that in particular would be.

355
00:19:08,700 --> 00:19:12,900
Somehow the important part like that creates a cycle and everything

356
00:19:12,900 --> 00:19:14,500
else wasn't creating a cycle.

357
00:19:17,100 --> 00:19:19,100
It's a big cycle to, right?

358
00:19:19,600 --> 00:19:21,500
I suppose I could pause as well.

359
00:19:21,500 --> 00:19:22,100
Right.

360
00:19:22,800 --> 00:19:23,600
We've got a pause.

361
00:19:23,600 --> 00:19:24,900
I don't really remember how it works.

362
00:19:25,100 --> 00:19:26,200
It might just be pee.

363
00:19:36,600 --> 00:19:38,600
That is less than useful people.

364
00:19:40,300 --> 00:19:41,800
That is less than useful.

365
00:19:42,200 --> 00:19:43,800
We don't draw while we're paused.

366
00:19:43,800 --> 00:19:44,700
Are you kidding me?

367
00:19:45,000 --> 00:19:46,000
Who wrote this game?

368
00:19:48,000 --> 00:19:49,200
Yeah, that's not great.

369
00:19:49,700 --> 00:19:54,800
Anyway, point being we probably want a better pause in that, you know,

370
00:19:54,800 --> 00:19:56,200
I mean, let's face it.

371
00:19:56,600 --> 00:20:00,900
That does seem likely, I feel like when we pause, we would just draw

372
00:20:00,900 --> 00:20:01,700
the old.

373
00:20:01,700 --> 00:20:06,300
Like, if we had a clue nowadays, we just draw the old render list from

374
00:20:06,300 --> 00:20:08,000
the previous time through.

375
00:20:09,600 --> 00:20:11,000
That would be smart.

376
00:20:11,100 --> 00:20:13,600
Of course, we're not apparently smart, but that's okay.

377
00:20:14,700 --> 00:20:19,600
But yeah, so point being, when I jump over here and it's only on the

378
00:20:19,600 --> 00:20:25,900
transition jump, it looks like that cycle extends through everybody,

379
00:20:25,900 --> 00:20:26,200
right?

380
00:20:26,200 --> 00:20:29,700
That that cycle extends to to like, every last

381
00:20:32,300 --> 00:20:35,400
Part of the screen, it goes all the way around and that's just really,

382
00:20:35,600 --> 00:20:36,700
that's just really bizarre.

383
00:20:39,100 --> 00:20:40,400
So let's take a look here.

384
00:20:45,400 --> 00:20:48,800
I'm going to go ahead, I kind of want to get a little bit better feel

385
00:20:48,800 --> 00:20:51,700
before I start to do some debugging on this.

386
00:20:51,700 --> 00:20:54,100
I'm just trying to get a little bit better, feel for what I believe is

387
00:20:54,100 --> 00:20:54,900
actually happening.

388
00:20:55,300 --> 00:20:56,200
Not sure.

389
00:20:56,200 --> 00:20:57,800
I'm drawing.

390
00:20:57,800 --> 00:20:59,000
The best things.

391
00:21:00,000 --> 00:21:01,700
For this yet.

392
00:21:03,600 --> 00:21:06,700
Like I'm not sure whether I should be drawing something different than

393
00:21:06,700 --> 00:21:08,100
what I'm drawing at the moment.

394
00:21:09,800 --> 00:21:13,600
You know, maybe maybe not if I could think of some better things to

395
00:21:13,600 --> 00:21:18,400
draw I would but I'm not sure I had a I know what to draw yet.

396
00:21:22,200 --> 00:21:26,400
So I'm going to try doing something here where I draw the cycle

397
00:21:26,400 --> 00:21:27,200
colors.

398
00:21:27,900 --> 00:21:30,000
A little bit more aggressively.

399
00:21:30,000 --> 00:21:34,600
In fact, you know what I might do is say I'm going to draw very light

400
00:21:35,400 --> 00:21:41,800
groups and then I'm going to increase their Alpha dramatically when

401
00:21:41,800 --> 00:21:42,900
there is a cycle.

402
00:21:44,900 --> 00:21:47,100
So I can kind of see a little bit better.

403
00:21:47,100 --> 00:21:48,400
I don't know if that'll work or not.

404
00:21:48,400 --> 00:21:49,300
Oh, and you know what?

405
00:21:49,300 --> 00:21:50,800
We're in premultiplied Alpha mode.

406
00:21:50,800 --> 00:21:51,900
So we're going to have to do

407
00:21:52,100 --> 00:21:53,800
At the end of this, we're going to have to do.

408
00:21:57,100 --> 00:21:59,400
We're going to have to be multiplied in order to get that to work out,

409
00:21:59,400 --> 00:22:00,000
obviously.

410
00:22:02,300 --> 00:22:02,800
All right.

411
00:22:07,800 --> 00:22:10,000
So that's a little confusing, right?

412
00:22:10,100 --> 00:22:13,800
Because according to that, there's the according to that, there's a

413
00:22:13,800 --> 00:22:18,400
cycle on the outside there, or at least it seems that way.

414
00:22:18,400 --> 00:22:19,900
Let me, let me double-check

415
00:22:28,200 --> 00:22:31,100
Right, I mean that looks like that, saying there's no cycle on the

416
00:22:31,100 --> 00:22:31,900
interior.

417
00:22:36,100 --> 00:22:36,300
Right.

418
00:22:36,300 --> 00:22:40,300
You can kind of see that this is all faint and that's all faint at the

419
00:22:40,300 --> 00:22:40,700
moment.

420
00:22:40,700 --> 00:22:42,900
Ah, okay, so it's my little.

421
00:22:42,900 --> 00:22:45,700
Yeah, it's my little entity selection thing that's making that happen.

422
00:22:45,700 --> 00:22:46,200
Okay?

423
00:22:46,800 --> 00:22:49,300
So, according to this, we've got a bunch of sort groups, none of those

424
00:22:49,300 --> 00:22:52,600
sort groups are actually doing anything at the moment, they're all

425
00:22:52,700 --> 00:22:55,800
like well-behaved, right?

426
00:22:56,400 --> 00:23:00,200
And then in theory, I hop up on here and I get a I got a splat

427
00:23:02,000 --> 00:23:03,600
that just blinks just me.

428
00:23:04,900 --> 00:23:08,700
Except occasionally like the one right here, blinks everybody.

429
00:23:11,700 --> 00:23:12,200
Right.

430
00:23:18,200 --> 00:23:19,100
That's what I'm seeing.

431
00:23:29,500 --> 00:23:30,300
Hmm.

432
00:23:44,400 --> 00:23:44,900
You know.

433
00:23:52,500 --> 00:23:53,100
I have a.

434
00:23:54,700 --> 00:23:55,700
Question.

435
00:23:57,500 --> 00:23:59,400
That just kind of popped into my head.

436
00:24:00,300 --> 00:24:05,200
Regarding how we're doing the Sorting in the first place.

437
00:24:06,800 --> 00:24:08,000
And it occurred to me.

438
00:24:09,700 --> 00:24:11,400
That with the actual Sprites.

439
00:24:11,400 --> 00:24:13,800
Like, you know what I'm talking about?

440
00:24:13,800 --> 00:24:14,900
Like these guys here.

441
00:24:21,500 --> 00:24:23,200
I'm kind of wondering.

442
00:24:25,500 --> 00:24:28,400
Separate from the Sorting stuff that were working on now.

443
00:24:30,700 --> 00:24:35,000
If we treat everything as a z Sprite, does it just work?

444
00:24:40,000 --> 00:24:41,000
Do you know what I'm asking?

445
00:24:42,100 --> 00:24:47,300
Like, we've been doing all of this work because we're sort of,

446
00:24:47,300 --> 00:24:50,000
thinking of like, well, there's two kinds of Sprites, there's upright

447
00:24:50,000 --> 00:24:53,400
Sprites and there's, you know, Flats rights.

448
00:24:54,700 --> 00:24:59,000
But is that really true with the actual person?

449
00:24:59,200 --> 00:24:59,800
Correct?

450
00:24:59,800 --> 00:25:01,500
Correct perspective, art.

451
00:25:01,600 --> 00:25:05,800
Like, if we just said that there's like a couple levels of Z, there's

452
00:25:05,800 --> 00:25:09,300
the ground Z, then there's the Z of the body and then there's the Z of

453
00:25:09,300 --> 00:25:14,300
the head and they're just slices this way and all Sprites are stacked,

454
00:25:14,400 --> 00:25:15,700
there's never a Sprite

455
00:25:16,800 --> 00:25:19,000
That is actually considered to be why?

456
00:25:27,500 --> 00:25:28,600
Does that just work?

457
00:25:30,200 --> 00:25:33,600
I would admit to feeling very stupid.

458
00:25:34,800 --> 00:25:37,100
if that did just work, because

459
00:25:38,300 --> 00:25:40,800
Then we've essentially built a bunch of stuff that we don't need at

460
00:25:40,800 --> 00:25:41,300
all.

461
00:25:41,300 --> 00:25:43,400
Just because we didn't quite understand.

462
00:25:44,800 --> 00:25:47,700
What the trick was for wood, could be right.

463
00:26:03,900 --> 00:26:04,700
I don't think so.

464
00:26:04,700 --> 00:26:09,200
I think we still have the problem because even if there's only even if

465
00:26:09,200 --> 00:26:13,900
you're like this, you're still going to have the why stacking problem.

466
00:26:15,100 --> 00:26:15,900
I think.

467
00:26:24,100 --> 00:26:26,300
To D's is I don't like 2D.

468
00:26:28,900 --> 00:26:29,900
That's all I have to say.

469
00:26:30,100 --> 00:26:31,900
I never think in 2D very well.

470
00:26:32,000 --> 00:26:34,100
I think it's just too much of 3D programming.

471
00:26:34,100 --> 00:26:35,900
I never have a good intuition for it.

472
00:26:36,000 --> 00:26:38,200
Like I'm sure probably what I just said, isn't true.

473
00:26:38,200 --> 00:26:39,100
Like it's probably like, nope.

474
00:26:39,100 --> 00:26:40,700
If you had Z's, it wouldn't work.

475
00:26:41,300 --> 00:26:42,800
Like you can't just sort by Z sort.

476
00:26:42,800 --> 00:26:43,100
By why?

477
00:26:43,100 --> 00:26:47,100
Because I thought we went over that like, we have that in there and

478
00:26:47,100 --> 00:26:49,100
that didn't seem to work, right?

479
00:26:49,100 --> 00:26:51,900
But now it's kind of like well, I don't really

480
00:26:52,100 --> 00:26:53,200
Know what the case was.

481
00:26:53,200 --> 00:26:55,900
I probably should have taken more careful notes on that and didn't

482
00:26:55,900 --> 00:26:59,600
like well here's why we don't think that would work.

483
00:27:00,000 --> 00:27:00,500
Right.

484
00:27:01,200 --> 00:27:04,100
But sometimes I wonder whether that was based on the fact that I was

485
00:27:04,100 --> 00:27:07,800
sort of thinking of it or looking at the screen and thinking there is

486
00:27:07,800 --> 00:27:11,200
a more dramatic sort of perspective than there.

487
00:27:11,200 --> 00:27:14,200
Actually will be in practice if that makes sense.

488
00:27:14,200 --> 00:27:14,800
But anyway,

489
00:27:16,400 --> 00:27:17,600
That's neither here nor there.

490
00:27:18,000 --> 00:27:21,600
Okay, so let let me just put that aside temporarily.

491
00:27:22,300 --> 00:27:22,900
Oh, there we go.

492
00:27:22,900 --> 00:27:23,900
There's a nice place.

493
00:27:24,700 --> 00:27:28,000
So it looks like

494
00:27:30,400 --> 00:27:33,600
Unfortunately, that's that's all that's that's only if I have my mouse

495
00:27:33,600 --> 00:27:34,500
cursor over it never mind.

496
00:27:34,500 --> 00:27:36,800
I thought I was going to get a nice place where I could stand and have

497
00:27:36,800 --> 00:27:38,500
a cycle but I guess not.

498
00:27:40,000 --> 00:27:45,800
So one thing I could do and I might do is just make it so that when we

499
00:27:45,800 --> 00:27:48,300
detect a cycle, I could stop and pause on that.

500
00:27:48,400 --> 00:27:52,000
So we could actually debug and look and see if we believe there

501
00:27:52,000 --> 00:27:56,300
actually is a cycle in this case because I don't actually know if

502
00:27:56,300 --> 00:27:57,100
there is or not.

503
00:27:57,200 --> 00:27:59,400
Now it's possible its

504
00:27:59,900 --> 00:28:05,800
Is sort of somewhat plausible to me looking at at the besides the fact

505
00:28:05,800 --> 00:28:08,200
that the ring around the screen is flashing.

506
00:28:08,500 --> 00:28:11,900
It is somewhat plausible to me that we could get during the hopping

507
00:28:11,900 --> 00:28:15,800
here, weird things happening because right now, we're kind of we're

508
00:28:15,800 --> 00:28:20,000
probably penetrating through the ground like having the, why Sprite

509
00:28:20,000 --> 00:28:22,000
sticking through the Z Sprite or something like this?

510
00:28:22,400 --> 00:28:24,100
In a way, that doesn't make a lot of sense.

511
00:28:24,500 --> 00:28:26,400
And so I could see that being the case.

512
00:28:29,400 --> 00:28:33,000
But it's that I don't really understand that.

513
00:28:35,100 --> 00:28:36,200
Flash there.

514
00:28:36,200 --> 00:28:38,600
I don't understand why we're getting that ring.

515
00:28:41,300 --> 00:28:44,000
You know how that's getting pulled in is a little bit of a mystery to

516
00:28:44,000 --> 00:28:44,100
me.

517
00:28:44,100 --> 00:28:46,600
And that's the only reason that I'm at the moment.

518
00:28:46,600 --> 00:28:50,300
A little concerned and thinking that we have a bug or something.

519
00:28:52,000 --> 00:28:53,800
I'm also wondering about those.

520
00:28:54,400 --> 00:28:58,300
It seems like these this thing creates Cycles.

521
00:28:58,300 --> 00:29:00,500
Everywhere it goes, right?

522
00:29:00,600 --> 00:29:04,100
Like I go on here, you know, here is a place where the guy standing.

523
00:29:04,300 --> 00:29:08,100
I put the thing under there and now the group definitely has a cycle.

524
00:29:10,300 --> 00:29:13,900
Now that might just be because those guys are all overlapping

525
00:29:13,900 --> 00:29:15,900
themselves and that's probably true.

526
00:29:16,300 --> 00:29:18,600
Like, you know, if I do this

527
00:29:19,600 --> 00:29:23,400
Like if you look at what that actually is, it's four rectangles that

528
00:29:23,400 --> 00:29:25,600
actually overlap each other, right?

529
00:29:26,000 --> 00:29:29,300
A little bit on the corners, so, you know, yeah.

530
00:29:29,300 --> 00:29:29,600
Okay.

531
00:29:29,600 --> 00:29:32,400
That probably is enough to create a cycle.

532
00:29:34,800 --> 00:29:37,400
So, so, maybe that that makes some sense.

533
00:29:37,400 --> 00:29:41,400
I could probably take care of that without too much trouble, right?

534
00:29:42,400 --> 00:29:42,500
Oops.

535
00:29:42,500 --> 00:29:43,600
I didn't mean to close that.

536
00:29:43,600 --> 00:29:44,400
Going to close this.

537
00:29:45,600 --> 00:29:47,600
I could probably stop that from happening.

538
00:29:48,800 --> 00:29:53,500
by when we actually do our render pushing here,

539
00:29:54,800 --> 00:29:58,300
when we push wrecked outline, for some reason, we do sort of a

540
00:29:58,800 --> 00:29:59,800
thickness of weird,

541
00:30:00,000 --> 00:30:04,200
This thing here and it seems like we should be able to make that not

542
00:30:04,200 --> 00:30:04,500
happen.

543
00:30:04,500 --> 00:30:05,200
Exactly.

544
00:30:05,700 --> 00:30:12,100
So we do our offset and we do we do our push back there, we've got our

545
00:30:12,100 --> 00:30:18,900
thickness as our Dimension and so that thickness is is going to come

546
00:30:18,900 --> 00:30:19,700
out from the center.

547
00:30:19,900 --> 00:30:24,600
So if we wanted to displace the rectangle to the side properly, you

548
00:30:24,600 --> 00:30:28,700
know, all we should, I would think have to do is put the thickness

549
00:30:29,000 --> 00:30:29,800
inside.

550
00:30:30,000 --> 00:30:31,400
Our offset, right?

551
00:30:31,400 --> 00:30:37,200
So if we just said like, you know, I want to go, you know, half

552
00:30:37,200 --> 00:30:39,000
thickness away and I guess

553
00:30:43,000 --> 00:30:45,700
Actually what I want to do is be a little more concerned about that.

554
00:30:45,900 --> 00:30:49,400
So if we take a look at what's actually happening here, so these are

555
00:30:49,400 --> 00:30:50,700
the top and bottom ones.

556
00:30:51,100 --> 00:30:56,100
And so if I want these to be completely non intersecting, I need to

557
00:30:56,100 --> 00:30:58,400
draw this today.

558
00:31:04,400 --> 00:31:05,600
I need to draw.

559
00:31:12,500 --> 00:31:14,200
So it looks like that, right?

560
00:31:15,200 --> 00:31:21,800
And so when I'm drawing the top and the bottom, I want to start inside

561
00:31:21,800 --> 00:31:22,700
a little bit, right?

562
00:31:22,700 --> 00:31:25,300
I want to start halfway.

563
00:31:29,300 --> 00:31:32,800
And now of course, if you look where this is actually a subtracted

564
00:31:32,800 --> 00:31:37,600
term, I'm going to change it to a positive term just so we can see it

565
00:31:37,600 --> 00:31:38,700
a little more clearly here.

566
00:31:44,200 --> 00:31:44,800
There we go.

567
00:31:45,800 --> 00:31:49,300
And so in this case, like we're going from that - 10:30 why deposit

568
00:31:49,300 --> 00:31:49,800
have to NY.

569
00:31:49,800 --> 00:31:53,800
And we're going to bump over half the thickness so that our top and

570
00:31:53,800 --> 00:31:56,500
our bottom should be slid into little and I just want to double-check

571
00:31:56,500 --> 00:31:57,800
to see to make sure I did that.

572
00:31:57,800 --> 00:32:01,300
Right because you're you know, just trying to remember and you can see

573
00:32:01,400 --> 00:32:04,700
now we've got well, it's kind of hard to see.

574
00:32:04,700 --> 00:32:07,100
Actually, unfortunately, so many lines, which you can see, hopefully

575
00:32:07,100 --> 00:32:12,400
there that it's bumped over correctly for the top, okay, and the bomb.

576
00:32:12,700 --> 00:32:13,900
So then what we want to do,

577
00:32:14,000 --> 00:32:17,300
Is not draw all the way over either, right?

578
00:32:17,300 --> 00:32:20,800
So the dimension of this thing, we actually want it to be - the

579
00:32:20,800 --> 00:32:25,700
thickness because we're we don't want you know, we want our thing to

580
00:32:25,700 --> 00:32:28,500
not overlap when we when we draw to the edge, right?

581
00:32:28,500 --> 00:32:30,100
So we don't want it to be the full width.

582
00:32:30,600 --> 00:32:34,200
And so now we should get it so that it's oh,

583
00:32:36,500 --> 00:32:39,500
Although this is the centered rectangle, right?

584
00:32:40,700 --> 00:32:44,400
So what we would want to do in that case is

585
00:32:48,600 --> 00:32:49,300
Right.

586
00:32:50,800 --> 00:32:53,000
I was thinking actually put the corner in there since this is a

587
00:32:53,000 --> 00:32:54,000
centered rectangle.

588
00:32:54,000 --> 00:32:55,800
I actually don't have to do the adjustment.

589
00:32:55,800 --> 00:32:59,700
I just have to make sure that we don't make it go that way.

590
00:33:00,200 --> 00:33:03,200
that with it'll, if the fact that it's centered will automatically

591
00:33:03,200 --> 00:33:03,800
make it,

592
00:33:06,600 --> 00:33:07,500
Keep its boundary.

593
00:33:08,100 --> 00:33:08,600
All right,

594
00:33:10,800 --> 00:33:12,300
so that's all good.

595
00:33:12,300 --> 00:33:17,200
And now I just have to extend the other ones out so that they will

596
00:33:17,200 --> 00:33:17,700
cover.

597
00:33:19,500 --> 00:33:20,600
The part that we're not drawing.

598
00:33:21,100 --> 00:33:24,500
So instead of just Dimension why we need to do to mention y, plus

599
00:33:24,500 --> 00:33:28,100
thickness but that's all we should actually have to do and then I

600
00:33:28,100 --> 00:33:30,000
could restore the way that this was working before.

601
00:33:30,000 --> 00:33:33,600
If I wanted to run, I can do this because it turns out of don't

602
00:33:33,600 --> 00:33:34,900
actually need to do what I was doing.

603
00:33:39,400 --> 00:33:39,900
All right.

604
00:33:41,700 --> 00:33:45,300
So now we've got it so that we're actually drawing that so that

605
00:33:45,300 --> 00:33:46,200
they're not overlapping.

606
00:33:46,200 --> 00:33:50,100
The only problem is when we do overlapping we're probably doing an

607
00:33:50,100 --> 00:33:52,500
overlapping check that accounts.

608
00:33:52,800 --> 00:33:57,800
If you have you know things that end start and end on the same line.

609
00:33:58,200 --> 00:34:02,700
And so, what I want to do here is go over to our sort and I want to

610
00:34:02,700 --> 00:34:06,500
see in rectangles intersect

611
00:34:10,699 --> 00:34:11,800
Actually, I guess it's in here.

612
00:34:15,100 --> 00:34:16,400
There's an overlap, what is it?

613
00:34:18,100 --> 00:34:19,100
That's rectangles intersect.

614
00:34:20,000 --> 00:34:23,500
So I want to look at rectangles intersect and I want to see yes you

615
00:34:23,500 --> 00:34:28,199
can see that we are using strictly inclusive intersection all the way

616
00:34:28,199 --> 00:34:32,000
around and for sorting I think we want to allow our rectangles to a

617
00:34:32,000 --> 00:34:36,000
but and not consider them intersecting for this case, right?

618
00:34:37,800 --> 00:34:44,100
So what I actually want here is I do want, I guess I should say make

619
00:34:44,100 --> 00:34:48,800
one of these rectangles intersect intersect open or something like

620
00:34:48,800 --> 00:34:50,000
this like open interval.

621
00:34:50,000 --> 00:34:55,500
So in this case, where we have less than or equal to S before I want

622
00:34:55,500 --> 00:34:59,200
to make it so that we we have one of those sides be open.

623
00:34:59,200 --> 00:35:05,700
So we can say, you know, if the max in X is less than the minindex,

624
00:35:05,700 --> 00:35:07,800
not not if it's equal to

625
00:35:07,800 --> 00:35:08,100
Two.

626
00:35:09,900 --> 00:35:11,800
Well, we draw this out for you.

627
00:35:16,900 --> 00:35:20,500
Okay so currently what are we doing in our existing rectangles

628
00:35:20,500 --> 00:35:21,900
intersect routine, right?

629
00:35:22,100 --> 00:35:24,900
We're checking to see whether the max is less than the Min.

630
00:35:24,900 --> 00:35:27,100
So you know here is a

631
00:35:29,800 --> 00:35:34,700
And what we're trying to say is, well, okay, is the maximum of be less

632
00:35:34,700 --> 00:35:37,400
than the minimum of a right?

633
00:35:38,300 --> 00:35:39,800
So you know, if

634
00:35:41,200 --> 00:35:42,300
if here was be

635
00:35:45,500 --> 00:35:49,200
We're trying to see whether my Max X is less than or equal to this

636
00:35:49,200 --> 00:35:49,500
one.

637
00:35:55,700 --> 00:35:59,300
and it looks like what we decided to do, probably, because it's the

638
00:35:59,300 --> 00:35:59,800
guess is the

639
00:36:00,000 --> 00:36:04,400
Thing to do is we decided to check to see whether it wasn't

640
00:36:04,400 --> 00:36:09,200
intersecting and then if it wasn't intersecting will not, we'll figure

641
00:36:09,200 --> 00:36:10,500
out whether it was intersecting.

642
00:36:10,500 --> 00:36:15,100
And if it's not we will not that to get the result for whether it is

643
00:36:15,100 --> 00:36:16,200
intersecting, right?

644
00:36:16,200 --> 00:36:17,600
So let's check whether the min

645
00:36:21,300 --> 00:36:24,700
Whether the Min is greater than equal to the Max and consider that

646
00:36:24,700 --> 00:36:25,700
non-intersecting, I guess.

647
00:36:27,000 --> 00:36:31,100
So what's interesting to me about that is in that case, rectangles

648
00:36:31,100 --> 00:36:34,200
that are right next to each other, in theory, shouldn't

649
00:36:35,700 --> 00:36:37,400
Should not actually have had a problem.

650
00:36:37,600 --> 00:36:40,400
Now, it could just be that we don't have the floating point, it could

651
00:36:40,400 --> 00:36:41,800
just be the floating Point math.

652
00:36:42,700 --> 00:36:46,000
For those rectangles since they're being computed as Center

653
00:36:46,000 --> 00:36:50,100
difference, rectangles, it could be that they're just overlapping just

654
00:36:50,100 --> 00:36:51,800
a little bit, right?

655
00:36:52,200 --> 00:36:55,600
And if that's the case, then you know, that's why this is doing it.

656
00:36:55,600 --> 00:36:57,700
But this is a non-inclusive one.

657
00:36:58,000 --> 00:37:01,800
It actually, if two things are right on the edge, it actually doesn't

658
00:37:01,800 --> 00:37:02,900
consider them intersecting.

659
00:37:03,100 --> 00:37:04,900
So it actually already is doing what I wanted.

660
00:37:05,200 --> 00:37:09,000
Do I think which means that if we wanted these to not be intersecting,

661
00:37:09,000 --> 00:37:12,300
we would have to make it so that they were just a little bit.

662
00:37:12,700 --> 00:37:16,000
There was like a, at least an epsilon's worth of some kind.

663
00:37:18,300 --> 00:37:19,700
To prevent them from intersecting.

664
00:37:20,000 --> 00:37:23,600
You know, it would be something where we would, let me just make sure

665
00:37:23,600 --> 00:37:24,700
that this actually works.

666
00:37:24,700 --> 00:37:26,900
So, I do we don't have some other bug here.

667
00:37:27,100 --> 00:37:29,500
It could be that that it actually is okay, and it's something else

668
00:37:29,500 --> 00:37:31,000
that's happening, but no, there you go.

669
00:37:31,300 --> 00:37:34,300
So, if I just give it a little bit of an Epsilon, you can see that.

670
00:37:34,300 --> 00:37:36,500
Now, when I move it, it doesn't create a cycle.

671
00:37:36,700 --> 00:37:39,200
So it does look like the thing that was creating the cycle.

672
00:37:39,200 --> 00:37:43,700
Was just the fact that having those outlines basically creating a loop

673
00:37:43,700 --> 00:37:47,100
around with themselves, is enough to make a cycle.

674
00:37:47,200 --> 00:37:47,600
And now,

675
00:37:47,900 --> 00:37:49,300
Are no Cycles when I do that.

676
00:37:49,300 --> 00:37:50,500
And so that's all good.

677
00:37:50,700 --> 00:37:53,700
And since that's only a debugging thing that we use that for any way,

678
00:37:53,800 --> 00:37:54,500
it seems to me.

679
00:37:54,500 --> 00:37:56,400
Like, that's fine to leave it like that.

680
00:37:57,500 --> 00:37:58,400
And, and off, we go.

681
00:38:00,700 --> 00:38:04,100
All right, but that still brings us back to the other question, which

682
00:38:04,100 --> 00:38:07,500
is, why are we getting a cycle in some of these other situations?

683
00:38:07,800 --> 00:38:15,700
And, you know, I guess, I guess when I look at what's happening on the

684
00:38:15,700 --> 00:38:20,500
screen, it does seem at least a little bit coherent in the sense,

685
00:38:20,500 --> 00:38:25,600
that, if you look at moving sort of back-and-forth here, right?

686
00:38:25,600 --> 00:38:30,000
As I am, when I, when I am down here,

687
00:38:30,800 --> 00:38:36,300
I am not part of the group that's in those top trees, but when I get

688
00:38:36,300 --> 00:38:39,100
up here, I am, right?

689
00:38:39,100 --> 00:38:43,200
So, it actually does think of that as being part, and I guess I'm not

690
00:38:43,200 --> 00:38:47,100
sure like, I'm trying, I'm trying to see what is making me part of

691
00:38:47,100 --> 00:38:47,600
that.

692
00:38:49,700 --> 00:38:51,200
I guess it's the heads.

693
00:38:51,200 --> 00:38:53,300
No, it's the Torso Sprite.

694
00:38:55,700 --> 00:38:57,700
I'm guessing it's the Torso, Sprite.

695
00:38:58,500 --> 00:38:59,900
But it's really kind of hard to.

696
00:39:00,000 --> 00:39:02,500
See ya, I guess the Tarsus, right?

697
00:39:02,700 --> 00:39:06,200
And again, it's really confusing to the eye because right now we don't

698
00:39:06,200 --> 00:39:08,200
have Sprites that have tight bounds around them.

699
00:39:08,200 --> 00:39:10,400
So that you know those those Sprites are huge.

700
00:39:10,500 --> 00:39:14,300
We also aren't taking into account access scaling, which we should

701
00:39:14,300 --> 00:39:16,000
probably do right about now.

702
00:39:16,000 --> 00:39:16,500
Anyway,

703
00:39:18,500 --> 00:39:21,200
But anyway, so the question is, why are we actually getting a cycle

704
00:39:21,200 --> 00:39:21,600
there?

705
00:39:21,900 --> 00:39:25,200
It does seem like I have maybe a little more confidence in our cycle,

706
00:39:25,200 --> 00:39:28,200
a grow them at the moment because so far, everything I've looked at

707
00:39:28,200 --> 00:39:28,600
now.

708
00:39:28,600 --> 00:39:30,300
So this is holding up to scrutiny.

709
00:39:30,500 --> 00:39:34,900
Like does actually make some sense, I'll be honest, that's a little

710
00:39:34,900 --> 00:39:35,400
weird.

711
00:39:36,600 --> 00:39:38,200
I guess that's just cause it's kind of still faint.

712
00:39:38,200 --> 00:39:38,900
You can't see it.

713
00:39:38,900 --> 00:39:41,300
I guess it's just changing color so that's okay.

714
00:39:43,100 --> 00:39:43,400
Yeah.

715
00:39:43,400 --> 00:39:47,300
So I would like to have a little more Assurance of why we're getting

716
00:39:47,300 --> 00:39:50,500
that and I'm guessing that that's just because the Sprite is

717
00:39:50,500 --> 00:39:54,100
interpenetrating, the stairs at that point, which creates the cycle

718
00:39:54,500 --> 00:39:56,200
but I'm not 100% sure.

719
00:39:57,200 --> 00:39:58,100
You know, I'm saying to you.

720
00:40:01,600 --> 00:40:04,500
So yeah, so the question now is, you know,

721
00:40:08,000 --> 00:40:09,000
couple things.

722
00:40:11,600 --> 00:40:15,400
One I'm relatively happy with this because at least at the moment,

723
00:40:15,400 --> 00:40:19,000
this is sort of doing what I wanted to do because don't forget, we're

724
00:40:19,000 --> 00:40:23,300
actually not we're probably not going to throw multiple rooms at the

725
00:40:23,300 --> 00:40:26,900
Sprites order because they're going to be sorted into separate drawing

726
00:40:26,900 --> 00:40:27,300
planes.

727
00:40:27,300 --> 00:40:31,100
Anyway, I suspect right because we've got, we've got some work to do

728
00:40:31,100 --> 00:40:31,600
there.

729
00:40:32,500 --> 00:40:35,200
It just in terms of how we want to fade them in and out, and that sort

730
00:40:35,200 --> 00:40:35,700
of thing.

731
00:40:37,000 --> 00:40:40,300
So, you know, I'm not too worried about that actually.

732
00:40:41,000 --> 00:40:45,800
But what concerns me slightly more is just there's a couple things

733
00:40:45,800 --> 00:40:49,400
with the Sprite sorting that doesn't seem to make good sense to me.

734
00:40:50,000 --> 00:40:52,700
Like, for example, if you look at what's going on now the fact that

735
00:40:52,700 --> 00:40:57,500
the head is sorting in front of this tile here doesn't make perfect

736
00:40:57,500 --> 00:40:58,600
intuitive sense to me.

737
00:41:02,700 --> 00:41:03,300
Hmm.

738
00:41:06,700 --> 00:41:08,500
Because I feel like it should be behind it.

739
00:41:10,100 --> 00:41:13,600
And to be honest, I feel like the head should actually be be behind

740
00:41:13,600 --> 00:41:16,100
all of these guys and maybe I'm wrong about that.

741
00:41:16,100 --> 00:41:17,400
Maybe we have our Z value.

742
00:41:17,400 --> 00:41:23,400
Set in a really wonky way, but you know why?

743
00:41:23,400 --> 00:41:25,700
The hero would be in front of those stairs?

744
00:41:25,700 --> 00:41:27,300
I'm not 100% sure.

745
00:41:27,600 --> 00:41:30,700
And so I would like to take a look at that because that just looks

746
00:41:30,700 --> 00:41:31,600
that looks like an error.

747
00:41:31,600 --> 00:41:35,700
Because I didn't think the head was that high up that

748
00:41:35,900 --> 00:41:39,100
It was actually floating at a level, that would be above those stairs.

749
00:41:39,400 --> 00:41:41,900
Now, this isn't actually a problem we'll have in practice because

750
00:41:41,900 --> 00:41:44,900
we're not using the X Y displacement in practice.

751
00:41:45,400 --> 00:41:48,300
And so part of the problem I suppose here is we should actually move

752
00:41:48,300 --> 00:41:49,200
those things now.

753
00:41:49,400 --> 00:41:53,400
So that they're not having that scaling happen, they're not having

754
00:41:53,400 --> 00:41:58,300
that X by saying those should all be right in line with their existing

755
00:41:58,300 --> 00:41:59,900
locations at the

756
00:42:00,000 --> 00:42:01,700
Should be Z elevated.

757
00:42:01,700 --> 00:42:07,300
I mean why elevated or moved up the screen but not to the side.

758
00:42:08,300 --> 00:42:13,200
So yeah, I guess that when I'm not sure I'll but some other things

759
00:42:13,200 --> 00:42:18,000
that I would note, it does seem hard to get this to do the wrong thing

760
00:42:18,300 --> 00:42:22,100
with the Y Sprites together and that's pretty great you know?

761
00:42:22,100 --> 00:42:23,000
I'm happy about that.

762
00:42:23,000 --> 00:42:23,600
Certainly

763
00:42:26,000 --> 00:42:29,900
Like nothing seems to be happening to weird here, and that's good.

764
00:42:29,900 --> 00:42:33,100
But the thing that does concern me a little bit.

765
00:42:33,100 --> 00:42:39,900
Is like, for example, it looks like y Sprites sort above Z Sprites, no

766
00:42:39,900 --> 00:42:42,700
matter what like these these Sprites should be huge.

767
00:42:42,800 --> 00:42:46,900
Like, these things should be out in the stratosphere and yet they

768
00:42:46,900 --> 00:42:51,700
don't seem to be right, like, this should be, this should be above any

769
00:42:51,700 --> 00:42:52,200
Sprite.

770
00:42:52,200 --> 00:42:55,300
Like there shouldn't be a way for it to sort and

771
00:42:55,700 --> 00:42:59,000
In some other way and yet somehow it's not, I don't understand that.

772
00:42:59,000 --> 00:43:00,600
So I don't understand why the debunk is that way.

773
00:43:00,800 --> 00:43:05,600
Furthermore, why is the debug text even just two lines of debug text

774
00:43:05,600 --> 00:43:07,400
itself, right?

775
00:43:08,500 --> 00:43:13,600
The drop shadow is sorting behind the actual text.

776
00:43:14,000 --> 00:43:17,300
And so, I feel like there's something wrong with our Z.

777
00:43:17,300 --> 00:43:20,700
Sorting you just in general, right?

778
00:43:20,700 --> 00:43:25,300
Like like if you even forget the part about the, why Sprites and

779
00:43:25,500 --> 00:43:27,800
The Z Sprites interacting in an odd way.

780
00:43:28,000 --> 00:43:32,000
Even if we just look at the Z Sprites by themselves, it appears that

781
00:43:32,000 --> 00:43:35,100
we've got some kind of weird sorting issue and I don't know exactly

782
00:43:35,100 --> 00:43:35,800
what it is.

783
00:43:37,200 --> 00:43:41,900
And it's especially odd, just because thinking about what we're

784
00:43:41,900 --> 00:43:47,100
seeing, when I turn on an additional room, those Z Sprites all do seem

785
00:43:47,100 --> 00:43:52,900
to sort above other Z Sprites, so it doesn't seem to always be the

786
00:43:52,900 --> 00:43:55,000
case that these rights are sorted in correctly.

787
00:43:55,500 --> 00:43:59,400
Only most of the time or I don't know.

788
00:44:02,300 --> 00:44:04,900
So that's really, really odd.

789
00:44:05,800 --> 00:44:13,300
So what I would like to do here and I don't know how feasible this is,

790
00:44:13,900 --> 00:44:17,600
but I do have 15 minutes left so I feel like it can't be too

791
00:44:17,600 --> 00:44:25,200
infeasible is if I go and turn off like everything, right?

792
00:44:25,400 --> 00:44:29,700
So you know if I'm if I'm like here, right?

793
00:44:29,900 --> 00:44:32,000
The only thing on the screen is the text.

794
00:44:32,800 --> 00:44:33,500
That's it.

795
00:44:34,200 --> 00:44:38,500
So if I were to change that to something that only Drew one letter, I

796
00:44:38,500 --> 00:44:44,100
should have only two like totals rights on the screen, and I should be

797
00:44:44,100 --> 00:44:49,000
able to step through the routine pretty clearly and see if I believe

798
00:44:49,000 --> 00:44:50,400
what's happening makes any sense.

799
00:44:50,400 --> 00:44:56,200
Or if there's some kind of obvious bug in there that doesn't write,

800
00:44:56,600 --> 00:44:57,200
and what are we?

801
00:44:57,300 --> 00:44:58,300
What do we drawn up there?

802
00:44:58,300 --> 00:44:59,800
Let me strike and search for it.

803
00:45:01,100 --> 00:45:02,800
16 milliseconds.

804
00:45:02,800 --> 00:45:03,700
Epd

805
00:45:14,000 --> 00:45:17,100
So I think it's this line that we're talking about here.

806
00:45:17,300 --> 00:45:20,000
So if I just were to temporarily make it and

807
00:45:23,100 --> 00:45:26,300
Set it to H4 handmade hero.

808
00:45:29,000 --> 00:45:33,500
Then at this point in theory, there's just one thing being drawn.

809
00:45:34,800 --> 00:45:39,200
So let's let's see what we can see.

810
00:45:40,400 --> 00:45:41,800
Like I said, I'm at this point.

811
00:45:41,800 --> 00:45:45,300
I just want to kind of look for something that will guide me towards

812
00:45:45,300 --> 00:45:50,900
how I want to proceed in the debugging process because they don't have

813
00:45:50,900 --> 00:45:56,500
a solid idea yet of exactly how I want to pursue to pursue it, right?

814
00:45:56,800 --> 00:45:58,700
But creating simple test cases.

815
00:45:58,700 --> 00:46:00,000
Seems like a good plan.

816
00:46:00,700 --> 00:46:03,800
So let's take a look at what happens here at sort entries.

817
00:46:06,700 --> 00:46:07,600
Here we are running.

818
00:46:08,600 --> 00:46:10,000
Now, we've only got the H.

819
00:46:10,400 --> 00:46:13,900
So what we should see is that there should be two things, we got

820
00:46:13,900 --> 00:46:14,500
three.

821
00:46:15,400 --> 00:46:17,700
So let's see what those three actually are.

822
00:46:29,700 --> 00:46:30,600
What is the problem?

823
00:46:31,600 --> 00:46:34,600
Why ain't you showing me my stuff's?

824
00:46:39,200 --> 00:46:42,000
All right, so you're telling me I got three things.

825
00:46:44,200 --> 00:46:45,500
That's what you claim.

826
00:46:47,200 --> 00:46:51,100
I don't actually know what those three things are, but hopefully we

827
00:46:51,100 --> 00:46:51,900
will find out.

828
00:46:51,900 --> 00:46:58,400
So it looks like we've got well, you know what, I could also see what

829
00:46:58,400 --> 00:46:59,800
well, you know, I guess we don't really need to.

830
00:46:59,800 --> 00:47:04,200
Let's see what they actually, what we do with the drawing here.

831
00:47:05,000 --> 00:47:10,300
So we're going to start out by sorting A and B against each other.

832
00:47:11,300 --> 00:47:13,400
Well actually seeing, if they intersect, I should say,

833
00:47:16,200 --> 00:47:17,600
So let's take a look.

834
00:47:17,700 --> 00:47:22,500
We've Got A and B I guess we knew that they were input node 0 and and

835
00:47:22,500 --> 00:47:23,600
one there.

836
00:47:23,600 --> 00:47:25,000
But let's do it this way.

837
00:47:25,900 --> 00:47:30,700
We're looking at a and b and here we've got the oh,

838
00:47:33,800 --> 00:47:34,100
you know what?

839
00:47:34,100 --> 00:47:38,400
I just remembered I wonder if that's because that information is going

840
00:47:38,400 --> 00:47:43,200
through the sort bias path and the sort bias path.

841
00:47:43,200 --> 00:47:44,700
Maybe doesn't do anything.

842
00:47:46,000 --> 00:47:46,500
Anymore.

843
00:47:54,100 --> 00:47:55,100
Seems pretty likely.

844
00:48:01,300 --> 00:48:04,300
Yeah, I bet that's exactly what happened.

845
00:48:05,600 --> 00:48:07,400
I bet that's exactly what happened.

846
00:48:07,400 --> 00:48:11,000
So, what we probably need to do here is go, okay.

847
00:48:11,000 --> 00:48:14,600
Inside render group, we're not using the sort of bias anymore, are we?

848
00:48:16,000 --> 00:48:16,500
Nope.

849
00:48:17,200 --> 00:48:18,400
No, we're not.

850
00:48:19,200 --> 00:48:25,200
So when we actually do our, our rendering here, like our push wrecked,

851
00:48:25,200 --> 00:48:26,200
and that sort of stuff.

852
00:48:27,200 --> 00:48:32,700
When we do, our get Bound for, we're going to need to use that.

853
00:48:34,800 --> 00:48:36,100
That sort bias, right?

854
00:48:37,400 --> 00:48:40,100
We do get Bound for our Z.

855
00:48:40,100 --> 00:48:42,500
Max probably should have

856
00:48:46,600 --> 00:48:48,200
that added into it, right?

857
00:48:57,100 --> 00:48:57,700
Let's see.

858
00:48:57,900 --> 00:49:03,700
Okay, so now we at least have the things that we're using sort bias.

859
00:49:04,300 --> 00:49:05,500
Now, those are at least

860
00:49:07,200 --> 00:49:08,700
Restored in theory.

861
00:49:09,900 --> 00:49:10,900
Let's see if that's true.

862
00:49:13,800 --> 00:49:15,200
If we open it up a little bit,

863
00:49:21,000 --> 00:49:24,300
Okay, so that's all nice and clean now.

864
00:49:30,100 --> 00:49:32,500
Huh, it's funny to look at the sort groups.

865
00:49:34,200 --> 00:49:35,300
So much stuff.

866
00:49:37,200 --> 00:49:38,900
The poor build Sprite graph.

867
00:49:41,700 --> 00:49:42,500
I tell you computer.

868
00:49:42,500 --> 00:49:43,600
Sure are fast though.

869
00:49:47,300 --> 00:49:50,100
It's kind of amazing when you write algorithms, then computers just

870
00:49:50,100 --> 00:49:54,300
crank through hundreds of millions of, you know, permutations of

871
00:49:54,300 --> 00:49:55,200
something like that.

872
00:49:56,700 --> 00:50:05,200
So it does look fairly true at the moment that our Z Sprites are

873
00:50:05,200 --> 00:50:07,200
sorting against each other correctly.

874
00:50:07,200 --> 00:50:11,100
Now, when there are only Z Sprites because that's what we're looking

875
00:50:11,100 --> 00:50:15,900
at here and now our sort is not messed up, right?

876
00:50:17,500 --> 00:50:20,900
So, that's a good thing to some degree.

877
00:50:24,000 --> 00:50:28,100
I do wonder about the alignment of some of these guys looking at their

878
00:50:28,100 --> 00:50:30,100
bounding rectangles looks a little wrong.

879
00:50:30,600 --> 00:50:33,900
That might be because we're not doing some of the scaling stuff

880
00:50:33,900 --> 00:50:35,000
properly yet but

881
00:50:36,700 --> 00:50:39,100
all right, so

882
00:50:41,800 --> 00:50:43,300
At least that's one thing down.

883
00:50:43,600 --> 00:50:44,800
We still have another thing though.

884
00:50:44,800 --> 00:50:49,100
Which is that when we come in here and we've got y Sprites in the mix,

885
00:50:49,100 --> 00:50:51,200
well, it doesn't work, right?

886
00:50:52,500 --> 00:50:56,600
So those why Sprites are still sorting above the Z Sprites, despite

887
00:50:56,600 --> 00:50:59,700
the fact that the Z Sprites are supposed to be like hugely

888
00:51:00,000 --> 00:51:03,900
Serve and that might be an aspect of our sort rule, but that may mean

889
00:51:03,900 --> 00:51:07,100
that are sort rule needs to get improved, right?

890
00:51:07,500 --> 00:51:11,700
So let's take a look at what our sort rule actually is because it's

891
00:51:11,700 --> 00:51:13,200
been a while since we did that.

892
00:51:14,300 --> 00:51:17,500
And let's just see if maybe this doesn't make as much sense as we

893
00:51:17,500 --> 00:51:18,300
thought it would.

894
00:51:18,600 --> 00:51:23,400
So, in this case, we know that the both Z Sprites case works at least

895
00:51:23,400 --> 00:51:27,000
amongst, you know, in its of itself, right?

896
00:51:27,000 --> 00:51:29,600
So it works for its own purposes.

897
00:51:31,600 --> 00:51:35,900
In the case where we're doing something else, we've got our a includes

898
00:51:35,900 --> 00:51:37,400
b or B includes a.

899
00:51:37,600 --> 00:51:41,300
And basically what we're saying there is we're going to sort by the Z

900
00:51:41,300 --> 00:51:43,000
value of these two things.

901
00:51:43,200 --> 00:51:45,400
If they are included, right?

902
00:51:45,900 --> 00:51:50,200
But if they're not included, then we're going to sort by the Y.

903
00:51:50,500 --> 00:51:55,900
So presumably what we're seeing here is that neither a nor B includes

904
00:51:55,900 --> 00:51:56,700
the other.

905
00:51:57,900 --> 00:52:00,300
And so we sort by the Y and of course, if

906
00:52:00,500 --> 00:52:02,000
Sort those two by the why.

907
00:52:02,000 --> 00:52:06,500
Well, it doesn't matter how much Z there is on one of these people.

908
00:52:06,500 --> 00:52:11,600
It's, you know, which are Whoever has the earlier position in y is

909
00:52:11,600 --> 00:52:12,600
going to win.

910
00:52:13,100 --> 00:52:14,800
That's, that's obviously, common sense.

911
00:52:20,000 --> 00:52:21,000
so, I think

912
00:52:22,100 --> 00:52:25,600
It is actually just our sort rule that is the problem at this point

913
00:52:26,000 --> 00:52:30,500
because we don't it doesn't look like the algorithm is failing to

914
00:52:30,500 --> 00:52:33,500
actually enforce the sort rule.

915
00:52:33,500 --> 00:52:38,100
It looks like the sort rule itself is just a little bit bogus and so

916
00:52:38,100 --> 00:52:38,700
you know,

917
00:52:41,400 --> 00:52:42,500
Considering this.

918
00:52:47,100 --> 00:52:52,600
I guess the, what we were sort of talking about here is

919
00:52:56,200 --> 00:52:57,100
Well, there's a couple things.

920
00:52:57,300 --> 00:53:01,000
First of all, we wrote this rule before taking into account.

921
00:53:01,000 --> 00:53:04,900
The fact that we knew that they overlapped in screen space.

922
00:53:05,900 --> 00:53:09,600
So we know that they overlap the two things that were checking overlap

923
00:53:09,600 --> 00:53:16,500
in screen space already which means I'm not super sure what the a

924
00:53:16,500 --> 00:53:23,700
includes B&B includes a really is meant to do here because and

925
00:53:23,800 --> 00:53:25,800
furthermore I'm not sure how that's ever

926
00:53:26,000 --> 00:53:26,600
Failing.

927
00:53:26,900 --> 00:53:30,700
Are we just setting the y-min and y-max to be just wrong?

928
00:53:32,000 --> 00:53:33,500
Because that's probably the case.

929
00:53:33,800 --> 00:53:37,600
But if you look at that, the a includes BB includes a nonsense.

930
00:53:42,300 --> 00:53:44,100
Really, I'm not sure.

931
00:53:51,200 --> 00:53:54,000
I guess the idea is that the Z Sprites themselves

932
00:53:58,300 --> 00:53:59,800
Have a lineman in the Y Max.

933
00:54:00,200 --> 00:54:05,200
But the wise Sprites don't have a Wyman in a WiMAX there at a single

934
00:54:05,200 --> 00:54:06,700
y, right?

935
00:54:08,600 --> 00:54:11,300
So in theory, yes.

936
00:54:11,300 --> 00:54:15,600
So I guess in theory that does mean that it's eminently possible.

937
00:54:15,600 --> 00:54:19,300
And probably the case we're getting now that I think about it.

938
00:54:19,700 --> 00:54:22,100
It's okay because I mean or knots, okay?

939
00:54:22,100 --> 00:54:28,700
But it wasn't illogical because if we have a z Sprite and I guess I

940
00:54:28,700 --> 00:54:29,600
always am,

941
00:54:30,000 --> 00:54:34,200
Challenged at how to draw these out because we're talking about a sort

942
00:54:34,200 --> 00:54:35,500
of pseudo 3D thing.

943
00:54:36,600 --> 00:54:38,500
But if I have a z Sprite,

944
00:54:40,000 --> 00:54:43,900
And I have a wife Sprite that's sanding on that sea Sprite, then it's

945
00:54:43,900 --> 00:54:47,200
eminently possible that if we looked at it from the top down, you

946
00:54:47,200 --> 00:54:51,500
could have a situation like this, right where this is where the why

947
00:54:51,500 --> 00:54:55,600
Sprite is actually standing it extends up to here, which does make

948
00:54:55,600 --> 00:54:57,300
them overlap in screen space.

949
00:54:57,400 --> 00:55:00,800
But if you look at it from the side, wouldn't look like this.

950
00:55:00,800 --> 00:55:02,200
It would look like this.

951
00:55:03,800 --> 00:55:08,400
Which is to say that they don't actually it's not inclusive in that

952
00:55:08,400 --> 00:55:08,900
case.

953
00:55:10,300 --> 00:55:10,900
Right.

954
00:55:13,600 --> 00:55:19,300
So I think what that means is that we

955
00:55:21,200 --> 00:55:24,500
We don't necessarily have a bug.

956
00:55:25,900 --> 00:55:28,300
Pretty much anywhere at this point.

957
00:55:30,400 --> 00:55:36,900
This is exactly what we would expect to happen and it would be correct

958
00:55:36,900 --> 00:55:40,000
for the single room stuff that we want to do.

959
00:55:40,800 --> 00:55:43,800
We don't have the concept in a single room that something can be on

960
00:55:43,800 --> 00:55:49,200
top of something else Z wise in that way, right?

961
00:55:50,200 --> 00:55:53,400
Because even in this case over here, where it looks like we do, we

962
00:55:53,400 --> 00:55:56,300
would never actually have that case because this thing would be

963
00:55:58,100 --> 00:55:59,000
Where's my mouse cursor?

964
00:55:59,400 --> 00:56:02,000
This thing would have to be right here.

965
00:56:05,500 --> 00:56:06,000
Right?

966
00:56:06,900 --> 00:56:07,700
So I don't know.

967
00:56:08,200 --> 00:56:11,900
We may actually be at the point where if we just started slicing these

968
00:56:11,900 --> 00:56:13,900
into layers, right?

969
00:56:13,900 --> 00:56:18,600
Where we had a layer for each room level, right?

970
00:56:18,800 --> 00:56:22,500
And then we had a layer for the debug information, and we could, by

971
00:56:22,500 --> 00:56:25,200
the way, turn off sorting because we don't need sorting on that,

972
00:56:25,500 --> 00:56:26,000
right?

973
00:56:26,300 --> 00:56:27,800
Or we could use the other sorting.

974
00:56:28,900 --> 00:56:30,000
We may actually be in.

975
00:56:30,000 --> 00:56:31,000
Okay, shape here.

976
00:56:33,900 --> 00:56:34,500
I don't know.

977
00:56:34,700 --> 00:56:38,800
We may not actually have any immediate bugs at the moment now, that

978
00:56:38,800 --> 00:56:43,100
doesn't mean we're going to find any as we add more stuff, but it does

979
00:56:43,100 --> 00:56:46,800
seem like it's looking positive.

980
00:56:48,200 --> 00:56:55,400
Just let's say I do miss, I miss our snake and floaty head people.

981
00:56:56,000 --> 00:56:59,300
So I kind of feel like they maybe want to come back in.

982
00:57:01,000 --> 00:57:03,600
Because we turned them off oversimplifying things but I feel like

983
00:57:03,600 --> 00:57:08,400
maybe now might be might be a good time.

984
00:57:09,600 --> 00:57:10,800
In a world.

985
00:57:12,100 --> 00:57:17,500
Where there's a snake and some monsters and a familiar who pisses

986
00:57:17,500 --> 00:57:19,600
everyone off by following them around.

987
00:57:29,400 --> 00:57:30,500
I don't know, man.

988
00:57:31,100 --> 00:57:35,100
Starting to look kind of good starting to be good.

989
00:57:37,000 --> 00:57:40,600
I mean Chris, I have an ulterior motive here to get all of this stuff

990
00:57:40,600 --> 00:57:46,200
working because Anna's art pack is looking so darn cool.

991
00:57:47,800 --> 00:57:49,200
That I really want to put it in the game.

992
00:57:51,600 --> 00:57:55,000
She made like this dungeon area and there's a whole bunch of Orphans

993
00:57:55,000 --> 00:57:59,800
now for the orphanage and it's just it's cool.

994
00:58:00,300 --> 00:58:01,400
So that's going to be fun.

995
00:58:02,400 --> 00:58:03,100
All right.

996
00:58:04,300 --> 00:58:07,200
All right, let's go to the Q&A for now because I think we may be sort

997
00:58:07,200 --> 00:58:10,500
of getting to the point where the sort is actually pretty reasonable.

998
00:58:11,500 --> 00:58:15,000
And I think maybe we want to go do the layer stuff now and then see

999
00:58:15,200 --> 00:58:15,900
with the layers.

1000
00:58:15,900 --> 00:58:18,700
Plus the Sorting are we at the point where we're kind of comfortable

1001
00:58:18,700 --> 00:58:20,300
put moving forwards on things?

1002
00:58:20,900 --> 00:58:22,300
We do have to do some optimization.

1003
00:58:22,300 --> 00:58:24,700
We don't think we want to leave that N squared in there even though

1004
00:58:24,700 --> 00:58:26,500
it's running plenty fast at the moment.

1005
00:58:28,100 --> 00:58:30,100
I just that that's not going to be great.

1006
00:58:30,900 --> 00:58:33,900
So we probably want to do something to kind of level level eyes that

1007
00:58:34,700 --> 00:58:35,300
But yeah.

1008
00:59:05,600 --> 00:59:06,700
In sohbat.

1009
00:59:26,500 --> 00:59:30,700
Yes, the Torso spray a casing does draw on top of the head Sprite, but

1010
00:59:30,700 --> 00:59:32,000
that's expected.

1011
00:59:32,300 --> 00:59:38,400
So what we have to do now that we actually have a coherent sorting

1012
00:59:38,400 --> 00:59:43,400
plan is well, there's two things we have to do and I probably will

1013
00:59:43,400 --> 00:59:46,200
wait till after the art pack to do them.

1014
00:59:47,000 --> 00:59:51,300
But the first thing is we have to have actual real Sprite bounds for

1015
00:59:51,300 --> 00:59:52,700
the Torso in that stuff.

1016
00:59:52,900 --> 00:59:53,800
So that has happened.

1017
00:59:53,900 --> 00:59:55,700
But the other thing we have to do is I think we

1018
00:59:55,800 --> 00:59:58,600
want to just add rules for sorting this because right now, the only

1019
00:59:58,600 --> 00:59:59,900
way that's working is by tweaking,

1020
01:00:00,000 --> 01:00:00,900
Z values.

1021
01:00:01,100 --> 01:00:04,800
They're all actually, it's completely Bogus the way that spread is

1022
01:00:04,800 --> 01:00:05,700
constructed.

1023
01:00:05,800 --> 01:00:09,800
They're all actually the same place Sprite wise.

1024
01:00:10,000 --> 01:00:13,800
So it's just like, oh, you know, here's the, the, this bright and

1025
01:00:13,800 --> 01:00:15,200
there's another Sprite right on top of it.

1026
01:00:15,200 --> 01:00:17,300
That looks like that and another spray it right on top of it, that

1027
01:00:17,300 --> 01:00:20,600
looks like that and they're all in exactly the same place what we

1028
01:00:20,600 --> 01:00:24,600
would rather do right is we want those to actually just be Sprites

1029
01:00:24,600 --> 01:00:28,500
that look like this because then I think they would all sort properly

1030
01:00:28,500 --> 01:00:29,800
all the time but

1031
01:00:30,000 --> 01:00:31,200
Even if they don't.

1032
01:00:33,900 --> 01:00:37,100
We don't really want to deal with this anyway because this is a

1033
01:00:37,100 --> 01:00:38,000
semantic.

1034
01:00:38,000 --> 01:00:40,900
Like we don't actually want the head to move.

1035
01:00:41,100 --> 01:00:41,800
How should I say this?

1036
01:00:42,100 --> 01:00:45,700
If this is the body and the head is moving around, on top of it, we

1037
01:00:45,700 --> 01:00:48,000
want the head to always be above the body.

1038
01:00:48,000 --> 01:00:51,300
So we probably want a rule that just says, that's always true, if that

1039
01:00:51,300 --> 01:00:51,900
makes sense.

1040
01:00:54,900 --> 01:00:58,600
So I don't even know that we want to let make the sort actually have

1041
01:00:58,600 --> 01:01:00,200
to deal with that in the first place.

1042
01:01:18,900 --> 01:01:21,100
This Collision work between stairs and hero.

1043
01:01:21,400 --> 01:01:21,900
Right now.

1044
01:01:21,900 --> 01:01:28,300
Collision is turned off for basically any, there are no Collision.

1045
01:01:28,300 --> 01:01:29,300
Well, you know what?

1046
01:01:32,000 --> 01:01:32,700
We just drove her.

1047
01:01:32,900 --> 01:01:40,100
There are no Collision, there's no Collision anything on on the

1048
01:01:42,900 --> 01:01:43,800
round tiles.

1049
01:01:44,600 --> 01:01:45,900
Where, where are you?

1050
01:01:54,900 --> 01:01:56,500
So do you see those blue?

1051
01:01:56,600 --> 01:01:58,600
You see the blue rectangle there?

1052
01:01:59,400 --> 01:02:02,000
Blue, rectangles are Collision right now.

1053
01:02:03,300 --> 01:02:07,600
And you can see that there's blue rectangles All Around The Ring of

1054
01:02:08,000 --> 01:02:10,200
trees, right?

1055
01:02:11,500 --> 01:02:16,100
But yeah, but that's, that's all there is at the moment.

1056
01:02:18,300 --> 01:02:20,100
The don't ask me why that's drawing where it's drawing.

1057
01:02:20,100 --> 01:02:21,400
That seems kind of weird.

1058
01:02:23,400 --> 01:02:25,000
I think we may have a that code.

1059
01:02:25,000 --> 01:02:27,500
Maybe a little bit stale at this point, unfortunately.

1060
01:02:27,500 --> 01:02:31,400
Oh, I see it's because it's actually hovering up above, it's actually

1061
01:02:31,400 --> 01:02:32,000
higher.

1062
01:02:34,100 --> 01:02:37,100
Yeah, this is going to be nice to get all this is easy stuff cleaned

1063
01:02:37,100 --> 01:02:37,300
up.

1064
01:02:37,300 --> 01:02:40,700
Now, we can go back in there and once we finish the layer section

1065
01:02:40,700 --> 01:02:42,600
where we were right in the middle of doing the layer stuff, and we

1066
01:02:42,600 --> 01:02:44,300
decided we needed the Sorting to work properly.

1067
01:02:44,300 --> 01:02:45,300
So we did that.

1068
01:02:48,000 --> 01:02:48,400
But yeah.

1069
01:02:48,400 --> 01:02:51,100
So the only thing that currently can Collide is the trees and the

1070
01:02:51,100 --> 01:02:51,400
hero.

1071
01:02:51,400 --> 01:02:52,600
That's one thing that has a nickel.

1072
01:02:52,700 --> 01:02:59,200
Geometry and that's probably going to stay kind of like that.

1073
01:03:00,000 --> 01:03:03,900
Just remember, we're mostly going to be using the sort of square

1074
01:03:03,900 --> 01:03:07,300
occupation stuff to prevent you from moving.

1075
01:03:07,500 --> 01:03:11,900
So the way that I keep the head from going through things will

1076
01:03:11,900 --> 01:03:13,500
probably be moral.

1077
01:03:13,900 --> 01:03:17,500
I don't know if that'll really be Collision based as opposed to just

1078
01:03:17,600 --> 01:03:24,000
you can't move the head towards something where there it's not open

1079
01:03:24,700 --> 01:03:27,400
like you can't move past the halfway point if you couldn't hop, there

1080
01:03:27,600 --> 01:03:28,900
is probably how we'll do it.

1081
01:03:29,600 --> 01:03:29,800
I do.

1082
01:03:30,000 --> 01:03:31,400
Don't so Collision.

1083
01:03:31,400 --> 01:03:35,900
I think may end up being something that's more about

1084
01:03:38,900 --> 01:03:46,500
Like like, projectiles hitting you or things like that and less about

1085
01:03:46,500 --> 01:03:50,000
movement because the movement is des kind of discrete now.

1086
01:03:50,100 --> 01:03:54,000
Now, you know, and I but I don't know it's hard to say

1087
01:04:09,800 --> 01:04:13,100
Do you anticipate similar, if not identical graph, sorting would be

1088
01:04:13,100 --> 01:04:17,600
used for any other game purpose other than Sprite sort?

1089
01:04:37,200 --> 01:04:40,900
I mean, maybe some World Jen stuff.

1090
01:04:42,700 --> 01:04:44,400
Could maybe use it?

1091
01:04:44,400 --> 01:04:47,200
I probably not identical.

1092
01:04:47,500 --> 01:04:52,500
Honestly you know could be cut and paste this and then change it

1093
01:04:52,500 --> 01:04:54,200
around a bit and make it into something.

1094
01:04:54,200 --> 01:04:58,300
Probably, will we be pulling it out as a reusable component?

1095
01:05:00,900 --> 01:05:05,900
I am guessing that probably nothing will use it quite this way, but I

1096
01:05:05,900 --> 01:05:10,900
suspect that world generation will do some graph-based stuff, just not

1097
01:05:11,700 --> 01:05:12,400
this.

1098
01:05:23,500 --> 01:05:24,700
Let's see.

1099
01:05:35,500 --> 01:05:37,400
Let's look at on, have any other specific questions?

1100
01:05:37,400 --> 01:05:39,500
So I'll take some of the nonsti questions.

1101
01:05:40,500 --> 01:05:41,400
What language is this?

1102
01:05:41,400 --> 01:05:51,900
This is a C++ and we use mostly C the C subset of C plus plus we don't

1103
01:05:51,900 --> 01:05:54,300
use a whole lot of actual C++.

1104
01:05:55,500 --> 01:05:57,200
So it's a it's kind of a, it's an old.

1105
01:05:57,200 --> 01:05:59,400
It's kind of old school in that sense.

1106
01:06:00,500 --> 01:06:04,600
This style of programming is not 100% old school.

1107
01:06:04,900 --> 01:06:08,100
It's a bit new school in a couple of ways.

1108
01:06:08,100 --> 01:06:12,000
And obviously we, you know, we use the resources of the machine.

1109
01:06:12,000 --> 01:06:13,500
We're not trying to make like a fork.

1110
01:06:13,500 --> 01:06:15,500
A demo kind of old school sort of thing.

1111
01:06:16,000 --> 01:06:17,300
Well, of course, 4K demos.

1112
01:06:17,300 --> 01:06:19,800
Now, use the GPU and stuff like that, so, that's separate, I guess.

1113
01:06:19,800 --> 01:06:20,600
But, you know what I mean.

1114
01:06:22,500 --> 01:06:26,000
So, you know, it's a hybrid of old-school, new-school, kind of

1115
01:06:26,000 --> 01:06:28,100
programming, but it's definitely kind of old-school.

1116
01:06:28,100 --> 01:06:29,900
Language-wise, we're not using an

1117
01:06:30,000 --> 01:06:32,700
Interpreter or Garbage Collection or any of those sorts of things.

1118
01:06:34,000 --> 01:06:34,400
so,

1119
01:06:40,600 --> 01:06:43,600
What are a few pieces of advice you would give to a new programmer?

1120
01:06:45,200 --> 01:06:50,600
Yeah, I would say that what Rome said program program program

1121
01:06:50,600 --> 01:06:51,300
practices key.

1122
01:06:51,300 --> 01:06:56,700
I would say that programming a lot is really what it's about and

1123
01:06:56,700 --> 01:06:59,400
there's lots of ways to get better but you know, the Corwin is to

1124
01:06:59,400 --> 01:07:00,200
always be programming.

1125
01:07:00,200 --> 01:07:05,200
And, you know, always ask how something works, why something works the

1126
01:07:05,200 --> 01:07:08,600
way it does, you know, dig in, learn how things actually work.

1127
01:07:08,900 --> 01:07:10,300
Don't just try to get things working.

1128
01:07:10,800 --> 01:07:15,900
Try to figure out why they're working and you know program, you know,

1129
01:07:15,900 --> 01:07:20,300
if you start out in a language like basic or you know, JavaScript or

1130
01:07:20,300 --> 01:07:22,100
something, that's very high level.

1131
01:07:22,100 --> 01:07:27,400
And you don't necessarily know what's going on, you know, which is

1132
01:07:27,400 --> 01:07:28,100
where everyone starts.

1133
01:07:28,100 --> 01:07:30,200
I mean, most people don't start programming in c.

1134
01:07:30,200 --> 01:07:34,100
I don't think, you know, challenge yourself to move past that into

1135
01:07:34,100 --> 01:07:37,300
more low-level languages, learn some learn, some C programming

1136
01:07:37,300 --> 01:07:40,200
eventually, learn some Assembly Language programming, you know, like

1137
01:07:40,400 --> 01:07:42,600
Learn about how the computer actually works.

1138
01:07:42,600 --> 01:07:44,200
And how programming actually works.

1139
01:07:44,200 --> 01:07:47,900
Not just, oh, I put these libraries together and something happened,

1140
01:07:48,100 --> 01:07:53,000
you know, because regardless of what you actually do, when you go to

1141
01:07:53,000 --> 01:07:58,300
make, you know, when you, when you go to work, the education process,

1142
01:07:58,300 --> 01:08:03,000
I think has helped immensely by always digging in and saying, what

1143
01:08:03,000 --> 01:08:06,900
should I, you know, what should I be doing here?

1144
01:08:06,900 --> 01:08:07,400
I should be.

1145
01:08:07,400 --> 01:08:09,400
I should be trying to figure out how stuff is working.

1146
01:08:10,800 --> 01:08:14,600
at a core level in not just being satisfied, when something seems to

1147
01:08:14,600 --> 01:08:16,399
kind of work, and then I move on, you know,

1148
01:08:19,300 --> 01:08:22,200
And I'd also say, oh, he's never stopped asking yourself.

1149
01:08:22,700 --> 01:08:25,000
How you could have written code better or what?

1150
01:08:25,100 --> 01:08:26,500
What are the reasons why the code?

1151
01:08:26,500 --> 01:08:29,700
You just wrote wasn't as good as it could be or what are the reasons,

1152
01:08:29,700 --> 01:08:33,300
why the code you wrote had to be written that way in this language,

1153
01:08:33,399 --> 01:08:37,100
you know, ask yourself, is there a better way the language could have

1154
01:08:37,100 --> 01:08:37,700
done that?

1155
01:08:38,899 --> 01:08:42,399
You know, be aware of those things and try to push yourself for words

1156
01:08:43,399 --> 01:08:47,300
and so it's really just a lot of practice and always having that

1157
01:08:47,300 --> 01:08:48,899
mindset of like, asking why

1158
01:08:49,100 --> 01:08:51,399
I figure out why things work and always trying to push yourself for

1159
01:08:51,399 --> 01:08:54,500
words instead of just being satisfied that you kind of got something

1160
01:08:54,500 --> 01:08:57,000
working or whatever, you know, never let that be enough.

1161
01:08:57,000 --> 01:08:59,899
Always try to keep pushing yourself to learn more and

1162
01:09:00,000 --> 01:09:03,500
And be more and more knowledgeable about how things are actually

1163
01:09:03,500 --> 01:09:03,899
happening.

1164
01:09:05,399 --> 01:09:07,000
What is your time estimate?

1165
01:09:08,899 --> 01:09:10,300
Or sorry, what is your estimate time?

1166
01:09:10,300 --> 01:09:11,600
It will take you to finish a maid here.

1167
01:09:11,600 --> 01:09:13,600
And how is it different from your original estimate?

1168
01:09:14,399 --> 01:09:20,000
My original estimate was like, 600 days, which I accidentally said

1169
01:09:20,000 --> 01:09:22,000
would take two years, but that's obviously not true.

1170
01:09:22,000 --> 01:09:27,200
Because it's 600 days is more way, more than two years actually,

1171
01:09:27,600 --> 01:09:32,100
because we only do five days a week, right?

1172
01:09:32,300 --> 01:09:33,600
And we take some time off.

1173
01:09:33,600 --> 01:09:36,100
So, you know, it's probably more like three years or something like

1174
01:09:36,100 --> 01:09:37,800
this to actually do the 600.

1175
01:09:38,399 --> 01:09:40,300
But my original estimate was saying like, 600 days.

1176
01:09:40,899 --> 01:09:44,700
Unfortunately, I don't have any idea if that's accurate or not.

1177
01:09:44,700 --> 01:09:46,000
I mean it's just a complete Ball Park.

1178
01:09:46,000 --> 01:09:48,899
I have no reason for suspecting that I just thought that might be

1179
01:09:48,899 --> 01:09:49,899
roughly correct.

1180
01:09:51,399 --> 01:09:55,400
And, you know, I don't know.

1181
01:09:56,500 --> 01:09:58,000
I don't know how long things will take.

1182
01:09:58,000 --> 01:10:01,100
I also don't know how, you know, we have some control over what the

1183
01:10:01,100 --> 01:10:04,800
scope of the game is, you know, the game engine programming, I think

1184
01:10:04,800 --> 01:10:06,100
is winding down.

1185
01:10:06,200 --> 01:10:08,900
We don't have a lot more stuff that we need to do.

1186
01:10:09,300 --> 01:10:13,300
So I think that will easily get finished with in the 600 day window.

1187
01:10:14,200 --> 01:10:17,900
The question is, how much time is the game programming?

1188
01:10:17,900 --> 01:10:20,700
Like just program implementing game features, right?

1189
01:10:22,100 --> 01:10:24,600
You know, is that 100 days, 200 days?

1190
01:10:24,600 --> 01:10:27,100
300 days, 400 Days, 500 Days, who knows?

1191
01:10:28,500 --> 01:10:33,600
And so if that turns out to be 300, 300, 300, 200 to 300 days,

1192
01:10:34,600 --> 01:10:37,000
then I think we would probably finish around my estimate.

1193
01:10:37,000 --> 01:10:40,000
Maybe will be 50 days over a hundred days over, if it turns out that

1194
01:10:40,000 --> 01:10:42,900
that's wildly off, that's to take way more than 300 days.

1195
01:10:43,100 --> 01:10:44,300
And of course, days is weird.

1196
01:10:44,700 --> 01:10:46,300
We mean ours, right?

1197
01:10:46,300 --> 01:10:48,400
Because we do an hour a day, but so hours.

1198
01:10:48,400 --> 01:10:50,100
So 6:00 was the estimate.

1199
01:10:50,600 --> 01:10:52,100
You know, how close we do that?

1200
01:10:52,300 --> 01:10:53,100
I have no idea.

1201
01:10:54,000 --> 01:10:56,400
Once we have more of the game up and running.

1202
01:10:58,000 --> 01:10:59,600
You know, maybe 100 days from now.

1203
01:10:59,600 --> 01:11:03,800
Let's say when we kind of have a game probably, because we're at the

1204
01:11:03,800 --> 01:11:06,500
point where, you know, you can hop around and do stuff, and the engine

1205
01:11:06,500 --> 01:11:09,600
does all the things it needs to do and you could start making the game

1206
01:11:09,600 --> 01:11:10,100
part of the game.

1207
01:11:10,100 --> 01:11:13,500
Now, if you wanted to, there's a couple more things I would like to do

1208
01:11:13,500 --> 01:11:18,700
first but, you know, once we decide, yeah, we're done with that and

1209
01:11:18,700 --> 01:11:22,700
now we're just pretty much implementing like monster types and World

1210
01:11:22,700 --> 01:11:24,200
Jen whatever.

1211
01:11:25,200 --> 01:11:27,000
I think then we'll have a more realistic.

1212
01:11:27,100 --> 01:11:27,900
Estimate, right.

1213
01:11:27,900 --> 01:11:31,200
Will be like how long do we think you know, to get enough content to

1214
01:11:31,200 --> 01:11:31,500
this game?

1215
01:11:31,500 --> 01:11:35,400
That we think it's reasonable because I would like to do some

1216
01:11:35,400 --> 01:11:37,100
expansion packs the game and stuff like that as well.

1217
01:11:37,100 --> 01:11:41,100
So I don't I don't need everything to be in the first version of it,

1218
01:11:41,100 --> 01:11:41,400
right.

1219
01:11:41,400 --> 01:11:45,400
I would like to do kind of a thing where you know the game ships on

1220
01:11:45,400 --> 01:11:46,800
steam or whatever and

1221
01:11:48,700 --> 01:11:51,500
Or whenever we sort of say, like, here's an actual playable version

1222
01:11:51,500 --> 01:11:52,600
that we want people to play.

1223
01:11:52,600 --> 01:11:57,900
I would probably want to then ship, you know, add-ons to it.

1224
01:11:57,900 --> 01:11:59,600
They wouldn't necessarily be paid add-ons.

1225
01:12:00,100 --> 01:12:04,500
But just I would like it to have some some of that sort of.

1226
01:12:04,500 --> 01:12:06,300
Oh I played the game for a while and then oh cool.

1227
01:12:06,300 --> 01:12:09,100
There's an update that like added some stuff, you know.

1228
01:12:10,100 --> 01:12:11,600
I'd like to have that happen as well.

1229
01:12:11,600 --> 01:12:15,100
So we have some flexibility in like deciding what needs to be in

1230
01:12:15,100 --> 01:12:15,400
there.

1231
01:12:15,800 --> 01:12:20,200
But obviously like we want the game to be fun and interesting in its

1232
01:12:20,200 --> 01:12:20,900
initial shipment.

1233
01:12:20,900 --> 01:12:25,400
So there's a you can't just arbitrarily say like well whatever we have

1234
01:12:25,400 --> 01:12:28,600
it 600 days, that's what ships we would want to make sure there's at

1235
01:12:28,600 --> 01:12:29,800
least enough in there too.

1236
01:12:30,000 --> 01:12:31,200
To make it engaging game.

1237
01:12:32,000 --> 01:12:35,300
And, you know, there's a certain I think minimum set of elements and

1238
01:12:35,300 --> 01:12:40,400
minimum number of sort of different monsters, different area types or

1239
01:12:40,400 --> 01:12:42,100
whatever to make that happen.

1240
01:12:53,200 --> 01:12:55,100
Room says, off topic at the start of the show.

1241
01:12:55,100 --> 01:12:57,800
You said that every game, programmer, use the dev setup similar to

1242
01:12:57,800 --> 01:13:01,100
what we use debug with Visual Studio, but code with a different

1243
01:13:01,100 --> 01:13:01,500
editor.

1244
01:13:01,600 --> 01:13:02,300
Why?

1245
01:13:04,000 --> 01:13:05,000
I don't know why.

1246
01:13:05,600 --> 01:13:10,300
All I know is that Visual Studio is really the only debugger for

1247
01:13:10,300 --> 01:13:11,600
Windows that works at all.

1248
01:13:11,600 --> 01:13:13,900
I mean, there's really just not many options out there.

1249
01:13:13,900 --> 01:13:18,700
I wish there were more, you know, I really wish there was and maybe,

1250
01:13:18,700 --> 01:13:22,800
you know, some people in the handmade development community,

1251
01:13:24,000 --> 01:13:26,800
I've been working on some debugger stuff and so maybe someday we'll

1252
01:13:26,800 --> 01:13:27,200
get it to bugger.

1253
01:13:27,200 --> 01:13:29,200
We can use and so we don't have to use Visual Studio more and that

1254
01:13:29,200 --> 01:13:29,900
would be great.

1255
01:13:30,600 --> 01:13:35,200
But for the moment, it's really the only viable de vulgar for game

1256
01:13:35,200 --> 01:13:35,900
style code.

1257
01:13:35,900 --> 01:13:38,400
It's the only one you would really use there really isn't anything

1258
01:13:38,400 --> 01:13:42,300
else that's, that's better in a measurable way than it for that sort

1259
01:13:42,300 --> 01:13:42,700
of thing.

1260
01:13:43,800 --> 01:13:48,700
But you know it's editor is not necessarily everyone's cup of tea.

1261
01:13:48,800 --> 01:13:51,600
There's a number of reasons why you might not want to use the editor

1262
01:13:51,600 --> 01:13:52,600
and visual studio.

1263
01:13:52,600 --> 01:13:58,000
And so some people do use the editor visual studio, and that's fine.

1264
01:13:58,300 --> 01:14:00,500
And then other people use an external editor,

1265
01:14:01,800 --> 01:14:05,200
And the reason for that is just because the editor in Visual Studio

1266
01:14:05,200 --> 01:14:10,300
isn't clearly the most useful editor that you can currently get, you

1267
01:14:10,300 --> 01:14:12,800
know, there's plenty of people who would argue all day and night long

1268
01:14:12,800 --> 01:14:16,900
about we know you got a program in VI or you got to use emacs or you

1269
01:14:16,900 --> 01:14:21,200
got to use sublime or you got to use Source Insider, I don't know.

1270
01:14:23,600 --> 01:14:26,700
And so everyone has their preference on that and there is no clear

1271
01:14:26,700 --> 01:14:29,600
consensus that it's the easiest thing to use for debugging.

1272
01:14:30,900 --> 01:14:32,400
I'm sorry, there is no clear consensus.

1273
01:14:32,400 --> 01:14:34,000
That it's the best Editor to use.

1274
01:14:34,100 --> 01:14:36,300
There is a pretty clear consensus that there aren't really any

1275
01:14:36,300 --> 01:14:40,500
available at debugger options that are better at the moment.

1276
01:14:41,000 --> 01:14:42,700
So I think that's largely what it comes from.

1277
01:14:43,000 --> 01:14:46,800
If there were more good to buggers out there, I think that it wouldn't

1278
01:14:46,800 --> 01:14:47,900
look like this very long.

1279
01:14:48,000 --> 01:14:50,200
I don't think most people are all that happy with the visual studio

1280
01:14:50,200 --> 01:14:50,600
debugger.

1281
01:14:50,600 --> 01:14:52,100
I just don't think they have a lot of options.

1282
01:14:52,600 --> 01:14:54,200
I know I certainly don't like it.

1283
01:14:54,700 --> 01:14:56,500
If there was a better better to better out there.

1284
01:14:56,500 --> 01:14:58,700
I'd switch in a heartbeat but there just isn't

1285
01:15:05,200 --> 01:15:08,500
Philadelphia, are you enjoying this project as a programming challenge

1286
01:15:08,600 --> 01:15:11,200
or are your efforts, mainly put into the teaching part of it?

1287
01:15:11,800 --> 01:15:12,900
The latter really?

1288
01:15:15,200 --> 01:15:17,800
Not not because I don't think there's plenty of things you could find

1289
01:15:17,800 --> 01:15:21,800
that are challenging about making a 2-D game because really it's only

1290
01:15:21,800 --> 01:15:27,100
the 2D part that's you know any different from a 3D game.

1291
01:15:27,100 --> 01:15:28,100
It's only the graphical part.

1292
01:15:28,100 --> 01:15:31,500
Like the there's plenty of all the game code and all that stuff.

1293
01:15:31,500 --> 01:15:33,200
You could still do.

1294
01:15:33,200 --> 01:15:36,500
And you know, you could our pipeline stuff is there's plenty of places

1295
01:15:36,500 --> 01:15:40,000
you could look for to do interesting programming work regardless of

1296
01:15:40,000 --> 01:15:41,600
whether games 2D or 3D, certainly

1297
01:15:42,900 --> 01:15:46,700
But at only an hour and night I kind of have to stick to things.

1298
01:15:46,700 --> 01:15:51,800
I mostly am not going to push myself really hard on.

1299
01:15:52,100 --> 01:15:54,500
And the reason for that is that if I'm pushing myself really hard on

1300
01:15:54,500 --> 01:15:55,100
something,

1301
01:15:55,800 --> 01:15:59,300
It's, I can't, I can't talk through it, really.

1302
01:15:59,300 --> 01:16:03,400
I need a lot of, like, concentrated mental energy to, like, focus on

1303
01:16:03,400 --> 01:16:04,000
the problem.

1304
01:16:04,000 --> 01:16:08,900
And so just I don't think it would be feasible for me to solve a very

1305
01:16:08,900 --> 01:16:12,200
hard challenging programming problem on the stream.

1306
01:16:12,200 --> 01:16:15,100
Like something as simple as a 2d sorting stuff takes a while on the

1307
01:16:15,100 --> 01:16:18,100
stream and it's hard for me to work through much harder, probably,

1308
01:16:18,100 --> 01:16:21,800
than it would have been if I just had to do it by myself when I'm

1309
01:16:21,800 --> 01:16:23,000
regularly programming, right?

1310
01:16:23,000 --> 01:16:25,600
And so, you know, that's it, just

1311
01:16:25,900 --> 01:16:33,000
I have to be scoped in a, in that way, but I like programming in

1312
01:16:33,000 --> 01:16:35,800
general, I don't have to be challenged to enjoy programming.

1313
01:16:36,100 --> 01:16:40,200
So, so, you know, just because I don't feel like handmade Heroes going

1314
01:16:40,200 --> 01:16:43,700
to evolve a lot of challenging things per se.

1315
01:16:43,800 --> 01:16:48,800
Like, in that sense, I still enjoy programming it.

1316
01:16:48,900 --> 01:16:53,900
And similarly, like there are things in it that I haven't done before

1317
01:16:54,400 --> 01:16:55,700
and I've done things in different ways.

1318
01:16:55,800 --> 01:16:58,500
He's on handmade hero than I've done before so it's so it's still

1319
01:16:58,500 --> 01:17:00,700
interesting in exploratory sense as well.

1320
01:17:07,500 --> 01:17:09,400
All right, let's see.

1321
01:17:09,500 --> 01:17:11,400
I think we got one more question here.

1322
01:17:12,000 --> 01:17:14,500
What do you think about unit testing and test driven development?

1323
01:17:15,900 --> 01:17:17,400
We get this question so often.

1324
01:17:17,400 --> 01:17:20,100
It's the weirdest thing I guess unit testing and test driven

1325
01:17:20,100 --> 01:17:24,200
development must be like this fad that everyone is into these days or

1326
01:17:24,200 --> 01:17:24,700
something.

1327
01:17:27,400 --> 01:17:31,500
I'll say the same answer I said every time every programming

1328
01:17:31,500 --> 01:17:35,100
methodology is a trade-off and it's based on trade-offs.

1329
01:17:35,700 --> 01:17:39,400
And so the answer to whether unit testing and test driven development,

1330
01:17:39,400 --> 01:17:43,100
are a good idea, has nothing to do with whether you're using C++, it

1331
01:17:43,100 --> 01:17:46,000
has nothing to do whether your games or web.

1332
01:17:46,000 --> 01:17:48,100
It has nothing to do with any of that.

1333
01:17:48,700 --> 01:17:53,600
It is simply whether or not you think the time it takes you to make

1334
01:17:53,600 --> 01:17:54,600
the tests.

1335
01:17:56,900 --> 01:17:58,800
Is more or less than you?

1336
01:17:58,800 --> 01:17:59,800
Think it would take you.

1337
01:18:00,200 --> 01:18:02,500
To debug the code without the tests.

1338
01:18:03,300 --> 01:18:03,800
Right?

1339
01:18:05,300 --> 01:18:09,500
And so there's it's like every other programming methodology, you're

1340
01:18:09,500 --> 01:18:14,000
trying to get your trying to ship a product of a certain quality with

1341
01:18:14,000 --> 01:18:18,100
a certain feature set in the shortest amount of time that you can

1342
01:18:18,200 --> 01:18:18,700
write.

1343
01:18:18,700 --> 01:18:22,000
Nobody wants to take more time than necessary to produce whatever

1344
01:18:22,000 --> 01:18:23,700
they're producing, right?

1345
01:18:25,500 --> 01:18:27,700
And so when you look at something like test-driven development, you

1346
01:18:27,700 --> 01:18:31,700
have to ask yourself if I was to make a test for this thing.

1347
01:18:32,800 --> 01:18:34,700
How many bugs could I find with it?

1348
01:18:35,200 --> 01:18:37,000
Like, how easy is it to make a test?

1349
01:18:37,000 --> 01:18:38,300
That could find the bugs for this?

1350
01:18:39,000 --> 01:18:40,700
How long will it take me to make the test?

1351
01:18:41,300 --> 01:18:45,200
And how long would it be for me to find or know like, like would I

1352
01:18:45,200 --> 01:18:47,400
even know the bugs were there without this test?

1353
01:18:47,800 --> 01:18:51,200
And if I would then how long would it take me to find them without the

1354
01:18:51,200 --> 01:18:52,200
test, right?

1355
01:18:52,300 --> 01:18:55,100
That's what you need to be thinking about in your head because if the

1356
01:18:55,100 --> 01:18:58,200
answer is that the test will not take very long to write.

1357
01:18:58,600 --> 01:18:59,800
And we'll probably find bugs.

1358
01:18:59,800 --> 01:19:01,600
That would be hard to find any other way.

1359
01:19:02,500 --> 01:19:04,800
Sounds like a very good idea, right?

1360
01:19:05,100 --> 01:19:09,300
If the answer is, well, the only thing is we can really test are not

1361
01:19:09,500 --> 01:19:13,300
actually, the kinds of bugs were all that worried about, then it

1362
01:19:13,300 --> 01:19:16,000
becomes not such a good idea because now you're just wasting time

1363
01:19:16,000 --> 01:19:16,800
making test.

1364
01:19:16,800 --> 01:19:19,500
Making yourself feel like you wrote better code, but you really

1365
01:19:19,500 --> 01:19:22,200
haven't, you haven't really gone after the bugs that are going to

1366
01:19:22,200 --> 01:19:23,500
cause you the problems, right?

1367
01:19:24,400 --> 01:19:28,600
And so what this means when you, you know, when you sort of

1368
01:19:28,600 --> 01:19:29,500
extrapolate it,

1369
01:19:31,500 --> 01:19:36,400
Is that depending on exactly what you happen to be writing, whether

1370
01:19:36,400 --> 01:19:40,100
this is a good idea is going to be very different, right?

1371
01:19:40,500 --> 01:19:46,700
If you have code that can be tested, very specifically, like, we know

1372
01:19:46,700 --> 01:19:49,400
what the inputs and outputs to this should be.

1373
01:19:50,500 --> 01:19:55,000
Then that may be a really good case for test-driven development, but

1374
01:19:55,400 --> 01:19:58,700
one of the reasons why in games, there's only certain things we can we

1375
01:19:58,700 --> 01:20:01,200
can apply tester and go into that makes sense.

1376
01:20:01,700 --> 01:20:06,100
Our because a lot of the stuff is like ethereal user-based stuff.

1377
01:20:06,100 --> 01:20:09,800
It's like some particles were supposed to spawn out of this guy.

1378
01:20:09,800 --> 01:20:12,900
When he got punched in, they were supposed to look like blood, did

1379
01:20:12,900 --> 01:20:13,400
they?

1380
01:20:13,500 --> 01:20:17,000
Well you're not going to write a unit test for that, right?

1381
01:20:18,000 --> 01:20:19,800
The monster isn't attacking me.

1382
01:20:19,800 --> 01:20:23,200
As often as I thought he should you're not going to already you test

1383
01:20:23,200 --> 01:20:24,900
for that either, right?

1384
01:20:25,900 --> 01:20:29,700
And so one of the reasons why you will, you know, and like I said, it

1385
01:20:29,700 --> 01:20:31,300
doesn't matter what kind of code you're writing.

1386
01:20:31,600 --> 01:20:35,800
The mindset should always be the same but one of the reasons why you

1387
01:20:35,800 --> 01:20:41,300
won't see on average as much unit testing in a game, environment is

1388
01:20:41,300 --> 01:20:46,700
because a lot of the outputs from game code aren't inherently testable

1389
01:20:47,200 --> 01:20:47,700
yet.

1390
01:20:49,100 --> 01:20:53,800
You know, and so that's really what it ends up being.

1391
01:20:53,800 --> 01:20:56,700
Whereas sometimes, you know, maybe you see it more in the web world

1392
01:20:56,700 --> 01:20:59,800
and maybe, you know, it doesn't mean that game people are stupid or

1393
01:20:59,800 --> 01:20:59,900
whatever.

1394
01:21:00,000 --> 01:21:01,800
We are stupider that someone's making a bad decision.

1395
01:21:01,800 --> 01:21:04,600
Like I said, the mindset should always be the same but what you may

1396
01:21:04,600 --> 01:21:07,000
find is like, well, okay in the web World, we've got a lot of things

1397
01:21:07,000 --> 01:21:09,900
that are like, take some text in and spit some text out, and we have

1398
01:21:09,900 --> 01:21:12,000
an exact idea of what those things should be.

1399
01:21:12,000 --> 01:21:14,400
Well, that's something where maybe it's like, okay, you know, we could

1400
01:21:14,400 --> 01:21:16,800
unit test that it probably wouldn't take too long to build.

1401
01:21:16,900 --> 01:21:19,300
That's an easy thing to run regression tests.

1402
01:21:19,300 --> 01:21:21,800
Annika, that makes some sense, right?

1403
01:21:24,300 --> 01:21:27,200
So there you go and to give you a little more perspective on that,

1404
01:21:27,200 --> 01:21:29,400
like I do write unit tests for things sometimes.

1405
01:21:30,200 --> 01:21:33,300
And for example, when I worked at Red game tools I had a unit test or

1406
01:21:33,300 --> 01:21:37,100
that I made for my, for granny, for the 3D character animation

1407
01:21:37,100 --> 01:21:37,900
package.

1408
01:21:38,700 --> 01:21:42,800
And the, you know, what are the reasons for that is again that

1409
01:21:42,800 --> 01:21:43,200
equation?

1410
01:21:43,200 --> 01:21:44,300
So show is on your head.

1411
01:21:44,800 --> 01:21:47,300
Am I getting bang for the buck here, right?

1412
01:21:47,300 --> 01:21:48,000
Am I?

1413
01:21:48,300 --> 01:21:49,500
Is this a good idea?

1414
01:21:49,500 --> 01:21:52,500
Am I going to save time and energy by doing a thing?

1415
01:21:52,900 --> 01:21:54,000
And the answer is, well,

1416
01:21:54,200 --> 01:21:57,600
Okay, maybe this code that I'm writing.

1417
01:21:59,100 --> 01:22:01,100
Wouldn't actually benefit from unit testing.

1418
01:22:01,100 --> 01:22:05,600
If all I was doing is using it in my game, but in that situation, I

1419
01:22:05,600 --> 01:22:09,000
was writing code, that's used in thousands of games, right?

1420
01:22:09,600 --> 01:22:14,500
And so at that point, I'm not there running at the, you know, person

1421
01:22:14,500 --> 01:22:18,400
who's using this technology, I'm not there helping them, you know,

1422
01:22:18,400 --> 01:22:19,700
debug it on their machine.

1423
01:22:19,700 --> 01:22:24,500
I'm not there, I'm not in a situation to make that trade-off really.

1424
01:22:24,600 --> 01:22:28,600
As soon as this code goes out the door, I can't find anymore but

1425
01:22:29,100 --> 01:22:31,100
They have to find the bugs and send them back to me.

1426
01:22:31,400 --> 01:22:34,800
And so at that point because that's a much more costly debugging

1427
01:22:34,800 --> 01:22:35,300
process.

1428
01:22:35,300 --> 01:22:39,700
All of a sudden now it's like things I might never have written a new

1429
01:22:39,700 --> 01:22:43,900
test before suddenly it becomes very beneficial to write a unit test

1430
01:22:43,900 --> 01:22:47,100
because now I am saving time, I'm saving them time, I'm saving myself

1431
01:22:47,100 --> 01:22:49,400
time having to remotely find these bugs, right?

1432
01:22:50,000 --> 01:22:53,500
And so that equation should always be in your head where you're going,

1433
01:22:53,800 --> 01:22:58,700
am I making a good development decision, for whatever the Horizon is.

1434
01:22:58,900 --> 01:23:03,300
That I can see for what I'm working on, and it's always going to be a

1435
01:23:03,300 --> 01:23:08,100
trade-off there, where you have to make a good decision and if you

1436
01:23:08,100 --> 01:23:11,100
ever get locked into things, like I always write unit tests or I never

1437
01:23:11,100 --> 01:23:12,200
write unit tests or whatever.

1438
01:23:12,300 --> 01:23:15,600
You're almost certainly doing it wrong because the answer is almost

1439
01:23:15,600 --> 01:23:20,900
always more flexible than that and I have a hard time.

1440
01:23:20,900 --> 01:23:27,200
I strongly suspect that there is no discipline where unit testing is

1441
01:23:27,200 --> 01:23:28,200
always the debugging.

1442
01:23:28,200 --> 01:23:28,700
Answer

1443
01:23:28,800 --> 01:23:30,400
That's always the right choice.

1444
01:23:30,400 --> 01:23:30,900
You know.

1445
01:23:31,300 --> 01:23:36,100
And so, you know, that I think is the Fairly complete answer to that

1446
01:23:36,100 --> 01:23:36,700
question.

1447
01:23:36,800 --> 01:23:38,200
Should probably excerpt that.

1448
01:23:38,300 --> 01:23:39,800
So, I can just point somebody at it.

1449
01:23:39,800 --> 01:23:43,100
Every time they ask that question because that's the answer doesn't

1450
01:23:43,100 --> 01:23:43,600
change.

1451
01:23:49,600 --> 01:23:50,800
And I would also add that.

1452
01:23:52,000 --> 01:23:53,900
This is not specific to unit testing.

1453
01:23:53,900 --> 01:23:57,100
You could take what I just said, you really, that's the mindset to

1454
01:23:57,100 --> 01:23:58,500
everything, right?

1455
01:24:00,700 --> 01:24:05,500
And any development practice you use, I've talked about const before

1456
01:24:05,500 --> 01:24:06,400
this way, right?

1457
01:24:06,500 --> 01:24:08,900
Like I don't, well, it's not even feel.

1458
01:24:09,000 --> 01:24:12,300
I know, concept doesn't find any bugs for me, right?

1459
01:24:12,300 --> 01:24:15,600
It's like maybe finds a bug, you know, it could find a bug once in

1460
01:24:15,600 --> 01:24:18,200
every six months or something at best.

1461
01:24:20,500 --> 01:24:21,600
It never finds about for me.

1462
01:24:21,600 --> 01:24:22,400
My data coding.

1463
01:24:22,400 --> 01:24:25,900
I think we've had maybe two in all of handmade hero that maybe would

1464
01:24:25,900 --> 01:24:27,100
have been found by const.

1465
01:24:27,200 --> 01:24:30,300
And they took me a second to find, like I found them like immediately.

1466
01:24:30,500 --> 01:24:31,000
Right?

1467
01:24:32,300 --> 01:24:36,600
So I just know that when I program I generally don't get any value out

1468
01:24:36,600 --> 01:24:39,100
of constant so I know that I just shouldn't use it.

1469
01:24:39,300 --> 01:24:42,400
It's just, it's a waste of time if I put that in my code, right?

1470
01:24:43,100 --> 01:24:47,400
But, you know, not everyone codes the way I code.

1471
01:24:47,400 --> 01:24:50,800
So there may be people out there who always make cos mistakes.

1472
01:24:51,000 --> 01:24:51,700
Did that not?

1473
01:24:51,700 --> 01:24:54,400
Because they're bad programmer, because you see me make mistakes all

1474
01:24:54,400 --> 01:24:54,900
the time, right?

1475
01:24:54,900 --> 01:24:56,400
Every stream, I'm making mistakes.

1476
01:24:56,700 --> 01:24:59,500
It's about what kind of mistakes you make, right?

1477
01:24:59,700 --> 01:25:00,200
And so if

1478
01:25:00,400 --> 01:25:01,400
Look at some other programmer.

1479
01:25:01,400 --> 01:25:02,600
Maybe that's the mistake.

1480
01:25:02,600 --> 01:25:03,400
They always make.

1481
01:25:03,400 --> 01:25:07,200
There's a bunch of mistakes that I make that they don't make right.

1482
01:25:07,200 --> 01:25:09,500
But then that mistake, they make all the time.

1483
01:25:10,000 --> 01:25:13,900
And so, at that point again, it's that equations in your head for me,

1484
01:25:13,900 --> 01:25:15,300
cos is a waste of time.

1485
01:25:15,500 --> 01:25:19,300
I would just, I'm literally just wasting my time ever typing it in.

1486
01:25:20,100 --> 01:25:22,200
But for somebody else, it might be a great time-saver.

1487
01:25:22,200 --> 01:25:24,500
It might be that that catches bugs to them every day.

1488
01:25:24,700 --> 01:25:25,300
Right?

1489
01:25:25,600 --> 01:25:29,100
And so, you can't even say from one programmer to the other what you

1490
01:25:29,100 --> 01:25:30,300
should be doing because it dry

1491
01:25:30,400 --> 01:25:34,300
Changes and similarly, let's say I'm working with someone who has that

1492
01:25:34,300 --> 01:25:34,800
problem.

1493
01:25:35,000 --> 01:25:38,100
Well now it might make sense for me to put cost of my code because

1494
01:25:38,100 --> 01:25:41,000
when they have to use you know, if it's parts of the code that I think

1495
01:25:41,000 --> 01:25:44,700
they're going to use that I'm writing I got to be aware of that.

1496
01:25:44,700 --> 01:25:47,300
And be like okay this guy always messes up con stuff.

1497
01:25:47,400 --> 01:25:50,100
I should put constant here because it's going to save us all some time

1498
01:25:50,200 --> 01:25:53,200
because now he's not going to make those mistakes or whatever, right?

1499
01:25:54,500 --> 01:25:58,000
And so literally everything in programming that usually people get

1500
01:25:58,000 --> 01:26:00,200
very dogmatic about really it's usually more

1501
01:26:00,400 --> 01:26:07,200
About trade-offs, it's usually more about you know what is the

1502
01:26:07,200 --> 01:26:12,500
holistic situation that you're dealing with and realistically is doing

1503
01:26:12,500 --> 01:26:15,900
this particular thing that I'm about to do going to save time?

1504
01:26:15,900 --> 01:26:19,900
Holistically or am I just wasting the time to do it because it won't

1505
01:26:19,900 --> 01:26:20,800
actually help.

1506
01:26:21,400 --> 01:26:21,900
Right?

1507
01:26:24,900 --> 01:26:25,500
Answer that.

1508
01:26:28,900 --> 01:26:29,400
That's it.

1509
01:26:29,400 --> 01:26:29,700
Really

1510
01:26:42,300 --> 01:26:46,400
And in a room, I disagree on the, when working in a team that will use

1511
01:26:46,400 --> 01:26:47,700
your code, you need constant thing.

1512
01:26:48,000 --> 01:26:49,600
I don't actually think that's true.

1513
01:26:50,400 --> 01:26:53,600
I agree that when you're working on teams because remember, like,

1514
01:26:53,600 --> 01:26:56,200
working on granny was like working with the largest team in the world,

1515
01:26:56,200 --> 01:26:56,500
right.

1516
01:26:56,500 --> 01:26:58,100
Everyone had to use this Library.

1517
01:26:58,100 --> 01:26:59,000
It was like, you know,

1518
01:27:00,100 --> 01:27:02,700
When I was, there was hundreds of people and now it's thousands

1519
01:27:02,700 --> 01:27:03,100
people.

1520
01:27:05,000 --> 01:27:11,400
And what we did in that one is we just made it so that it worked both

1521
01:27:11,400 --> 01:27:11,700
ways.

1522
01:27:11,700 --> 01:27:17,600
So, it was always accepted constants in, but always allowed non

1523
01:27:17,600 --> 01:27:18,400
constants out.

1524
01:27:18,400 --> 01:27:20,900
So, it was basically like no matter whether you are cons programmer or

1525
01:27:20,900 --> 01:27:22,600
non constant over, you would work.

1526
01:27:23,900 --> 01:27:31,600
And the way that I usually approach those situations is I design the

1527
01:27:31,600 --> 01:27:34,000
API defensively if

1528
01:27:34,100 --> 01:27:36,400
I believe that the team is not going to be able to do it or there or

1529
01:27:36,400 --> 01:27:38,600
whatever and with Granny that's the way we did it.

1530
01:27:38,600 --> 01:27:41,900
Like it was very like it was a very defensively designed API in the

1531
01:27:41,900 --> 01:27:45,700
places where we thought it needed to be and but not in places where we

1532
01:27:45,700 --> 01:27:50,800
didn't contest is a very weak thing, right?

1533
01:27:50,800 --> 01:27:54,900
Like Costas, just saying that a piece of data can't be managed.

1534
01:27:54,900 --> 01:27:57,400
It's really doesn't help that much.

1535
01:27:57,800 --> 01:28:02,000
So if you're really worried about what how people are using something,

1536
01:28:03,200 --> 01:28:04,000
you kind of got to

1537
01:28:04,100 --> 01:28:04,700
Abbi.

1538
01:28:05,000 --> 01:28:08,300
You gotta go further than that, and think about how to shape the API.

1539
01:28:08,300 --> 01:28:11,500
So that it, it doesn't lead to mistakes, you know?

1540
01:28:13,500 --> 01:28:18,700
And so, so I don't really think Constance all that great pretty much

1541
01:28:18,700 --> 01:28:19,900
ever, to be honest with you.

1542
01:28:20,600 --> 01:28:23,800
But like I said, you know, everyone's should make their own trade off

1543
01:28:23,800 --> 01:28:30,100
there, but, you know, I'd be I'd be, I'd be cautious of believing that

1544
01:28:30,100 --> 01:28:30,700
there's

1545
01:28:34,400 --> 01:28:35,200
that there's

1546
01:28:36,800 --> 01:28:40,100
all that much you can do with const that you couldn't have just done

1547
01:28:40,100 --> 01:28:42,700
by making the API clearer, you know.

1548
01:28:44,200 --> 01:28:48,000
But yeah, if you're in a situation where the team is like going in and

1549
01:28:48,000 --> 01:28:51,200
mucking with all your code and you don't have clean delineation of

1550
01:28:51,200 --> 01:28:56,700
who's working on what then maybe, you know, hey, Constance something.

1551
01:28:58,800 --> 01:29:00,400
I still think you're in for a world of hurt.

1552
01:29:00,400 --> 01:29:04,400
I mean, if you don't trust someone to not get con strong, they're

1553
01:29:04,400 --> 01:29:07,200
going to get a lot wrong when they go, you know, like I'd be worried

1554
01:29:07,200 --> 01:29:12,200
about that person touching my code in general but you know what you

1555
01:29:12,200 --> 01:29:12,700
going to do.

1556
01:29:12,800 --> 01:29:17,600
And so I agree they're, you know, probably better than nothing but you

1557
01:29:17,600 --> 01:29:19,700
know, I think probably that point I'm a little more.

1558
01:29:19,700 --> 01:29:21,500
I'm a little bit worried in general.

1559
01:29:25,100 --> 01:29:27,700
And yes, trying to graph, actually just mentioned.

1560
01:29:27,900 --> 01:29:31,900
I also programmed 100% cons correct for about five years and

1561
01:29:33,500 --> 01:29:37,700
You know, I think it did literally nothing for me other than waste of

1562
01:29:37,700 --> 01:29:38,400
time.

1563
01:29:41,700 --> 01:29:43,400
All right, let's go ahead and

1564
01:29:46,100 --> 01:29:47,700
close it on out.

1565
01:29:51,900 --> 01:29:54,300
Okay.

1566
01:29:57,300 --> 01:29:58,700
Where am I hammer Hero at.

1567
01:29:58,700 --> 01:29:59,200
There it is.

1568
01:30:00,000 --> 01:30:02,300
Everyone for joining me for this episode of handmade here.

1569
01:30:02,300 --> 01:30:03,300
It's our pleasure coding with you.

1570
01:30:03,300 --> 01:30:09,000
As always, if you would like to follow along with the series at home,

1571
01:30:09,200 --> 01:30:11,700
you can always pre-order the game on handmade hero dot-org and it

1572
01:30:11,700 --> 01:30:13,200
comes with the source code.

1573
01:30:13,600 --> 01:30:16,900
So you can follow along and play around.

1574
01:30:16,900 --> 01:30:18,900
Do your own experiments at home?

1575
01:30:19,400 --> 01:30:22,600
We also have a website you go to ask questions a patreon page, you can

1576
01:30:22,600 --> 01:30:25,400
use if you want to support our video series, a schedule bot, the

1577
01:30:25,400 --> 01:30:28,200
tweets is cut you, if you want to catch us live, you can subscribe to

1578
01:30:28,200 --> 01:30:29,900
that on Twitter and then we

1579
01:30:30,000 --> 01:30:32,100
Also have a an episode guide.

1580
01:30:32,100 --> 01:30:36,600
If you want to go catch up on stuff, that happened in the past on

1581
01:30:36,600 --> 01:30:38,200
handmade hero, that's about it.

1582
01:30:38,200 --> 01:30:39,100
I'll be back tomorrow.

1583
01:30:39,100 --> 01:30:39,600
5:00 p.m.

1584
01:30:39,600 --> 01:30:42,400
Pacific Daylight time, until then have fun program, everyone.

1585
01:30:42,400 --> 01:30:44,300
And I will see you guys on the internet.

1586
01:30:44,300 --> 01:30:45,100
Take it easy, everybody.

