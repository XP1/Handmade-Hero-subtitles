1
00:00:00,100 --> 00:00:02,200
Start and then we'll go ahead and close that.

2
00:00:03,100 --> 00:00:08,300
Alright, everyone, hello and welcome back to handmade hero we have

3
00:00:08,300 --> 00:00:11,500
been on break for a week, but it is now time to get back to coding.

4
00:00:11,500 --> 00:00:14,600
A complete game from scratch live here on Twitch.

5
00:00:14,900 --> 00:00:19,600
And we stopped before break at a point, that was kind of someone

6
00:00:19,600 --> 00:00:19,900
interesting.

7
00:00:19,900 --> 00:00:23,300
Actually, we were starting to do the work that we need to do to make

8
00:00:23,300 --> 00:00:27,000
sure that we handled three-dimensional stuff correctly in our engine

9
00:00:27,000 --> 00:00:27,500
all the time.

10
00:00:27,500 --> 00:00:29,000
So we're a 2-D game.

11
00:00:29,000 --> 00:00:29,900
Meaning we're supposed to be

12
00:00:30,000 --> 00:00:33,500
a game that's, you know, similar to, you know, Binding of Isaac or

13
00:00:33,500 --> 00:00:36,200
Legend of Zelda, these sorts of games where you kind of walk around

14
00:00:36,200 --> 00:00:39,800
and it's very much supposed to be a 2d experience or something.

15
00:00:39,800 --> 00:00:45,500
I guess like Don't Starve but we actually are trying to allow sort of

16
00:00:45,500 --> 00:00:49,200
full 3d stuff in the world in so much as we care to have it.

17
00:00:49,200 --> 00:00:52,800
So we want to make sure that there's nothing inherent in the way that

18
00:00:52,800 --> 00:00:56,900
we've made the engine work that would, you know, cause sort of Jank

19
00:00:56,900 --> 00:00:59,800
Enos to happen when you want to actually do stuff like

20
00:01:00,000 --> 00:01:03,100
Multiple levels on top of each other or things like that.

21
00:01:03,400 --> 00:01:06,100
And we'd also like to be able to do stuff like have multi-level rooms

22
00:01:06,100 --> 00:01:10,400
where you can see perhaps the room below where you're standing in the

23
00:01:10,400 --> 00:01:13,000
case, where there is, you know, a whole sort of, in the, in the floor

24
00:01:13,000 --> 00:01:14,600
down to where that is, that sort of stuff.

25
00:01:14,900 --> 00:01:17,400
So we want to make sure all that stuff is handled cleanly and not

26
00:01:17,400 --> 00:01:18,400
really in a hacky way.

27
00:01:18,400 --> 00:01:20,700
A lot of times there is kind of a key ways to do it where there's, you

28
00:01:20,700 --> 00:01:24,500
know, exactly two levels that there can be your something like this

29
00:01:24,500 --> 00:01:28,300
and you know, or it's kind of just a hack in the way that the graphics

30
00:01:28,300 --> 00:01:29,800
are drawn, but it's not.

31
00:01:29,900 --> 00:01:31,100
Really handling, it 3D.

32
00:01:31,100 --> 00:01:34,900
We're trying to do it a little bit more robust than that, so we can do

33
00:01:34,900 --> 00:01:36,700
more interesting stuff if we so choose.

34
00:01:37,400 --> 00:01:39,000
Anyway, that's where we're going on right now.

35
00:01:39,000 --> 00:01:41,100
So I'm going to go ahead and get back into it because I think we're

36
00:01:41,100 --> 00:01:43,700
going to need some time today to just kind of get warmed up again.

37
00:01:43,700 --> 00:01:48,100
It's been a full week since we last programmed been more actually

38
00:01:48,200 --> 00:01:50,800
because it's been, it's been two weekends in between.

39
00:01:50,800 --> 00:01:54,600
So it's been more like, you know, 9 days or something since we

40
00:01:54,600 --> 00:01:54,900
program.

41
00:01:54,900 --> 00:01:58,100
So, what I'd like to do is jump right back into it again, if you

42
00:01:58,500 --> 00:01:59,800
already pre-ordered the game,

43
00:02:00,000 --> 00:02:01,000
Handmade here a.org.

44
00:02:01,100 --> 00:02:02,600
You can download the source code.

45
00:02:02,600 --> 00:02:06,100
So if you want to follow along with today's stream, today's stream is

46
00:02:06,100 --> 00:02:07,600
stream 76.

47
00:02:08,199 --> 00:02:10,300
At least, I think I set that correctly.

48
00:02:10,300 --> 00:02:13,400
Let's double-check and make sure that I haven't lost count.

49
00:02:13,400 --> 00:02:15,700
Yes, 75 was the last one.

50
00:02:15,700 --> 00:02:20,100
So what you want to do is you want to unpack day 75s source code from

51
00:02:20,100 --> 00:02:23,500
the source code ZIP file that comes with the, with the pre-order.

52
00:02:23,700 --> 00:02:26,800
You want to unzip the day 75 so that you'll be at the right place

53
00:02:26,800 --> 00:02:29,800
today if you're trying to follow, along with me at home because I

54
00:02:29,900 --> 00:02:33,800
We'll be starting with day, 75 source code for this episode.

55
00:02:34,400 --> 00:02:38,900
All right, we can kind of put Mischief down into the minimize that

56
00:02:38,900 --> 00:02:40,200
into the background for a second here.

57
00:02:40,600 --> 00:02:44,200
And I've restarted this computer since then, so I hopefully everything

58
00:02:44,400 --> 00:02:46,400
is still working properly.

59
00:02:46,400 --> 00:02:50,900
I guess I don't know that it is, I guess let's let's just open up our

60
00:02:50,900 --> 00:02:54,800
programs and actually make sure that nothing has gone terribly wrong

61
00:02:54,800 --> 00:02:57,000
since we have left things.

62
00:02:59,200 --> 00:02:59,800
You never know.

63
00:03:00,200 --> 00:03:02,000
You restart windows and anything can happen.

64
00:03:02,000 --> 00:03:02,700
It doesn't gentleman.

65
00:03:02,700 --> 00:03:06,100
You really don't know what you're going to get.

66
00:03:06,100 --> 00:03:07,900
When you restart a Windows machine, really?

67
00:03:07,900 --> 00:03:09,000
Anything is possible.

68
00:03:09,600 --> 00:03:13,100
So it looks like things are roughly the same as when we left them.

69
00:03:13,100 --> 00:03:18,000
That's a good sign and our stairwell looks like it's working as well.

70
00:03:18,000 --> 00:03:18,800
So that's good.

71
00:03:19,800 --> 00:03:21,600
So it looks like nothing.

72
00:03:21,600 --> 00:03:23,900
Nothing particularly bad happened, we're still able to run.

73
00:03:23,900 --> 00:03:25,200
Okay, everything looks good.

74
00:03:25,400 --> 00:03:29,400
And so if I remember correctly, what we wanted to do, what we had been

75
00:03:29,700 --> 00:03:29,900
planning.

76
00:03:30,000 --> 00:03:32,600
Nothing to do with the end of this was, first of all, we wanted to

77
00:03:32,600 --> 00:03:36,000
maybe do a little bit of cleanup on how we were doing our Collision

78
00:03:36,000 --> 00:03:39,600
detection for the stairwell, just kind of clean up some stuff.

79
00:03:39,600 --> 00:03:41,200
We had only just finished getting it working.

80
00:03:41,200 --> 00:03:43,900
Kind of the way that we had wanted it to work.

81
00:03:44,000 --> 00:03:48,500
And the other thing that we wanted to do is get our

82
00:03:49,500 --> 00:03:54,000
Our Collision detection properly working with Heights of things.

83
00:03:54,000 --> 00:03:57,400
So that if entities are brought into the simulation set like in this

84
00:03:57,400 --> 00:04:00,300
case, we've got sort of to play Fields going here, we got like a lower

85
00:04:00,300 --> 00:04:01,200
one and a higher one.

86
00:04:01,200 --> 00:04:04,000
You can kind of see these two rings of trees.

87
00:04:04,000 --> 00:04:06,300
That's sort of the downstairs and this is the upstairs one that we

88
00:04:06,300 --> 00:04:07,700
kind of had put in there.

89
00:04:07,700 --> 00:04:11,700
If you've got situations where you've got multiple entities in the

90
00:04:11,700 --> 00:04:14,800
working set like this and some of them are below you right now we're

91
00:04:14,800 --> 00:04:17,600
just doing that close your section in 2D and that's not going to work

92
00:04:17,600 --> 00:04:19,500
because it means that we can't ever

93
00:04:19,600 --> 00:04:22,600
Or get through, what should be an opening here because we're going to

94
00:04:22,600 --> 00:04:25,000
collide with the trees on the bottom level.

95
00:04:25,000 --> 00:04:28,300
As if they were trees, that we would have to worry about on the top

96
00:04:28,300 --> 00:04:28,600
level.

97
00:04:28,600 --> 00:04:32,000
And so, we need to make sure that we're actually taking into account

98
00:04:32,000 --> 00:04:36,600
where things are in three dimensions when we process collisions with

99
00:04:36,600 --> 00:04:36,900
them.

100
00:04:37,200 --> 00:04:40,400
So, that's something that currently we do for inclusion.

101
00:04:40,400 --> 00:04:43,800
Testing, for example, when you're working with the stairwell, we are

102
00:04:43,800 --> 00:04:47,100
actually testing where you are in three dimensions there.

103
00:04:47,600 --> 00:04:49,400
But when we're testing against,

104
00:04:49,500 --> 00:04:52,800
A movement like to see whether you can pass through something to see.

105
00:04:52,800 --> 00:04:55,700
If you've collided something collided with something in that movement

106
00:04:55,700 --> 00:04:59,500
step, we're not actually using the height of things that all there to

107
00:04:59,500 --> 00:05:01,500
see what whether or not you should Collide.

108
00:05:01,900 --> 00:05:04,000
So that's, you know, another thing we got to do.

109
00:05:04,200 --> 00:05:08,400
Finally, the big feature that we need to work on and attacked in there

110
00:05:08,400 --> 00:05:09,400
in a minute.

111
00:05:09,600 --> 00:05:12,200
Sorry at the moment and that will have to sort of do possibly at the

112
00:05:12,200 --> 00:05:16,700
end of this stream and probably tomorrow will be most of what we do is

113
00:05:16,700 --> 00:05:19,400
we need to start coming up with a definition for.

114
00:05:19,700 --> 00:05:22,600
What it means to have a particular ground height.

115
00:05:22,600 --> 00:05:26,000
Right now, we're sort of just doing a really cheesy thing where we

116
00:05:26,000 --> 00:05:28,800
just assume that the ground height is wherever the camera is.

117
00:05:29,000 --> 00:05:31,500
So when the camera moves up and down, we set the ground height to be

118
00:05:31,500 --> 00:05:36,300
wherever it's you know, sort of camera Center Point is and that's not

119
00:05:36,300 --> 00:05:37,700
really going to necessarily work.

120
00:05:38,300 --> 00:05:42,500
We you know, I suppose we could be could decide to do something like

121
00:05:42,500 --> 00:05:47,400
that as the permanent solution but it seems to me like, you know, kind

122
00:05:47,400 --> 00:05:49,400
of a little janky and it would also fight

123
00:05:49,500 --> 00:05:52,800
Fight our ability to move the camera independently of where the ground

124
00:05:52,800 --> 00:05:53,100
is.

125
00:05:53,200 --> 00:05:57,000
It also makes it harder for us to Define things that say where there

126
00:05:57,000 --> 00:05:58,800
isn't isn't round or stuff like this, I don't know.

127
00:05:58,800 --> 00:05:59,800
There's there's just

128
00:06:00,300 --> 00:06:03,400
I haven't thought it through too much and we need to go think it

129
00:06:03,400 --> 00:06:05,900
through so we can kind of Define exactly how all that stuff's going to

130
00:06:05,900 --> 00:06:08,200
work so we can get a nice stable way of understanding where the ground

131
00:06:08,200 --> 00:06:08,300
is.

132
00:06:08,300 --> 00:06:10,600
So right now, that's totally hacked, if I remember correctly.

133
00:06:11,400 --> 00:06:12,900
So that's what we've got.

134
00:06:13,400 --> 00:06:14,500
And that's pretty much.

135
00:06:14,500 --> 00:06:15,300
That's pretty much.

136
00:06:15,300 --> 00:06:17,900
We've got our work cut out for us there to get all that stuff going.

137
00:06:18,200 --> 00:06:21,100
So let's go ahead and start working on that.

138
00:06:21,100 --> 00:06:23,600
The first thing I'm going to tackle because it's the easiest one to

139
00:06:23,600 --> 00:06:23,800
do.

140
00:06:23,800 --> 00:06:26,500
It's very straightforward is just to get our Collision detection

141
00:06:26,500 --> 00:06:29,600
working so that things are only colliding with you if they're in the

142
00:06:29,600 --> 00:06:29,900
same.

143
00:06:30,100 --> 00:06:31,900
Of Z neighborhood as you are.

144
00:06:31,900 --> 00:06:35,500
So if you know, some things above or below you, that it won't Collide.

145
00:06:35,900 --> 00:06:42,400
So, what I'd like to do is I'd like to go ahead and go in here, to our

146
00:06:42,400 --> 00:06:46,800
handmade to our handmaids Sim region.

147
00:06:47,600 --> 00:06:49,900
And when we do our move entity call, right?

148
00:06:49,900 --> 00:06:51,700
This is where that that was happening.

149
00:06:51,900 --> 00:06:54,800
When we did our move entity called, we have this iteration Loop where

150
00:06:54,800 --> 00:06:58,400
we would go through and we would try to move the entity and we would

151
00:06:58,400 --> 00:06:59,800
do a check against other

152
00:07:00,000 --> 00:07:03,700
Serenity's to see whether it's any of them were hit, right?

153
00:07:03,700 --> 00:07:06,900
And since we haven't really done General Collision detection, yet we

154
00:07:06,900 --> 00:07:08,600
only did it just for a little square things.

155
00:07:08,600 --> 00:07:11,500
We still have this call is still called test wall.

156
00:07:11,900 --> 00:07:15,000
And basically, all it does, is it just tests against a single

157
00:07:15,300 --> 00:07:19,700
basically line segment that is, you know, on one of the axes like X or

158
00:07:19,700 --> 00:07:21,100
Y, or something like that, right?

159
00:07:21,900 --> 00:07:28,100
And if you'll notice Z is not taken into account there at all, right?

160
00:07:28,100 --> 00:07:29,400
There's absolutely no.

161
00:07:30,200 --> 00:07:32,200
Z included here whatsoever.

162
00:07:32,200 --> 00:07:35,600
And now what we could do is go expand the test, well, function to

163
00:07:35,600 --> 00:07:37,600
actually handle Z, but it's unclear.

164
00:07:37,600 --> 00:07:40,800
Why, you know, that's not really probably a good idea because when we

165
00:07:40,800 --> 00:07:44,700
do the final Collision detector, we're not going to use test wall and

166
00:07:44,700 --> 00:07:46,800
the things are not going to be rectilinear and they're not going to be

167
00:07:46,800 --> 00:07:47,500
access the line.

168
00:07:47,500 --> 00:07:49,800
And so really there's no point in updating the test wall.

169
00:07:49,800 --> 00:07:52,400
Call the test, well, calls, probably fine for our purposes.

170
00:07:52,400 --> 00:07:57,100
What we'd rather do is just say at the outset maybe let's just say

171
00:07:58,000 --> 00:07:59,800
we're going to look to see whether these

172
00:08:00,100 --> 00:08:01,900
Entities overlap in Z.

173
00:08:02,100 --> 00:08:06,000
And if they don't overlap in Z, we're not going to do any testing on

174
00:08:06,000 --> 00:08:06,200
them.

175
00:08:06,200 --> 00:08:08,800
So basically, we'll just in here, right?

176
00:08:08,800 --> 00:08:11,700
When we're actually doing this, we'll just we'll just full-on.

177
00:08:11,700 --> 00:08:16,200
Say when we look at the can Collide the first thing that we do after

178
00:08:16,200 --> 00:08:20,800
we do the testing maybe we'll still leave that Mankowski, diameter and

179
00:08:20,800 --> 00:08:27,700
the min max Corner thing in there but right after we do that we will

180
00:08:27,700 --> 00:08:29,800
do some check to see whether the entities

181
00:08:29,900 --> 00:08:31,000
overlapped in Z.

182
00:08:31,000 --> 00:08:34,900
And if they don't overlap in Z, then we simply aren't going to test

183
00:08:34,900 --> 00:08:35,400
them at all.

184
00:08:35,600 --> 00:08:38,700
Now, we've already constructed stuff that will help us test whether

185
00:08:38,700 --> 00:08:39,700
things are in Z.

186
00:08:40,200 --> 00:08:44,200
We've got this Mankowski diameter here and the McCaskey diameter is

187
00:08:44,200 --> 00:08:46,600
the size of the entities added together.

188
00:08:46,900 --> 00:08:50,400
So basically we've got the size of the entity in Z.

189
00:08:50,600 --> 00:08:54,400
We've got both of those sort of concatenated together which means that

190
00:08:54,400 --> 00:08:58,700
we also now we then use that to compute the Min and Max Corner which

191
00:08:58,700 --> 00:08:59,600
is basically

192
00:09:01,500 --> 00:09:03,700
The value of.

193
00:09:06,400 --> 00:09:06,900
Excuse me.

194
00:09:08,400 --> 00:09:12,600
If you assumed that the entity itself that we're testing against the

195
00:09:12,600 --> 00:09:16,200
colliding entity, if you will, you know what I'm saying, too many

196
00:09:16,200 --> 00:09:16,800
things here?

197
00:09:17,100 --> 00:09:18,700
I should probably just draw this out.

198
00:09:18,900 --> 00:09:22,500
That's probably the easiest way to to explain, what's already going on

199
00:09:22,500 --> 00:09:26,600
in the code, rather than me constantly trying to to say stuff there.

200
00:09:26,900 --> 00:09:30,200
So let's go ahead and thank you windows for that.

201
00:09:30,200 --> 00:09:31,000
Wonderful helpful.

202
00:09:31,200 --> 00:09:31,600
There we go.

203
00:09:32,800 --> 00:09:36,400
What I want to do is I'm going to, I'm going to, you know, go ahead

204
00:09:36,400 --> 00:09:37,700
and find a place here where you can

205
00:09:38,000 --> 00:09:38,500
Anything.

206
00:09:38,500 --> 00:09:39,000
There we go.

207
00:09:39,100 --> 00:09:41,200
So we'll say day 76.

208
00:09:41,900 --> 00:09:44,900
And what I was trying to say before is we have two entities, right

209
00:09:45,300 --> 00:09:45,900
before?

210
00:09:46,000 --> 00:09:48,900
We had basically like, you know, the wall entity, or the entity we're

211
00:09:48,900 --> 00:09:50,800
testing against, which doesn't this.

212
00:09:50,800 --> 00:09:53,600
I have to be a wall but that's the most of the things that impede our

213
00:09:53,600 --> 00:09:56,700
progress at the moment and we have the hero, right?

214
00:09:56,800 --> 00:09:58,700
And each of these had a dimension.

215
00:09:58,700 --> 00:10:03,500
So it had a measurement that said how wide or how high or anything it

216
00:10:03,500 --> 00:10:07,700
was right and so if you imagine we have the heroes Dimension here.

217
00:10:07,900 --> 00:10:11,500
Here and we had the walls Dimension here, so HD and WD.

218
00:10:11,500 --> 00:10:14,300
Let's say then what we decided to do.

219
00:10:14,600 --> 00:10:18,500
Because if you remember the discussion of how Mankowski algebra works

220
00:10:18,500 --> 00:10:21,900
and stuff like that, what we want to do is just treat the hero as a

221
00:10:21,900 --> 00:10:25,700
point, that moves in a long lines.

222
00:10:26,200 --> 00:10:29,200
And in order to do that, we need to shrink the hero down to a point

223
00:10:29,200 --> 00:10:34,100
and expand the things against, which he is colliding against by his

224
00:10:34,100 --> 00:10:35,500
size, right?

225
00:10:35,700 --> 00:10:37,700
So what we did is we said all right, let's see.

226
00:10:37,900 --> 00:10:39,800
Spanned the wall by however big.

227
00:10:39,800 --> 00:10:43,600
The hero actually is half on this side, half on that side, right?

228
00:10:43,600 --> 00:10:47,700
Expand that out and treat the new size of the wall, to be the size of

229
00:10:47,700 --> 00:10:50,600
the here, plus the wall, which effectively shrinks the hero down to a

230
00:10:50,600 --> 00:10:52,400
point for testing, right?

231
00:10:53,500 --> 00:10:57,000
And then we said, well, we'll do this relative to the wall, right?

232
00:10:57,000 --> 00:11:01,000
And so the way that we did that was we said let's subtract that hero

233
00:11:01,000 --> 00:11:01,800
location, right?

234
00:11:01,800 --> 00:11:04,400
If this is the point that the heroes at, let's subtract that from

235
00:11:04,400 --> 00:11:07,600
wherever the wall is and we'll just get a relative point.

236
00:11:08,000 --> 00:11:11,800
So what that means is now if we wanted to do Z, if you imagine a side

237
00:11:11,800 --> 00:11:15,000
view here, what we've already done is we've already constructed

238
00:11:15,000 --> 00:11:19,100
something where we basically have the heroes point, right?

239
00:11:19,100 --> 00:11:23,300
We've got that relative to here and then we've got a Min and a Max Z,

240
00:11:23,500 --> 00:11:23,700
right?

241
00:11:23,700 --> 00:11:26,900
We've got a maxi level and a minzy level that already.

242
00:11:26,900 --> 00:11:31,600
Tell us sort of whether the PE the, if we took peasy, right?

243
00:11:31,600 --> 00:11:32,600
It would just be this.

244
00:11:33,500 --> 00:11:35,400
It would just be where we are on the z-axis.

245
00:11:35,500 --> 00:11:37,700
We can just see whether that's in between,

246
00:11:37,900 --> 00:11:40,000
That men are the mat and Max, right?

247
00:11:40,100 --> 00:11:44,000
And that will tell us whether we can hit this entity or not, if we're

248
00:11:44,000 --> 00:11:46,600
outside of those bounds, that there's no way we're going to overlap

249
00:11:46,600 --> 00:11:46,800
with it.

250
00:11:46,800 --> 00:11:48,500
So we want to just ignore it that point.

251
00:11:49,200 --> 00:11:52,200
So really, all we have to do here, very straightforward, we can just

252
00:11:52,200 --> 00:11:58,000
take that Rel, we can take that rail Z, and we can say if the relative

253
00:11:58,000 --> 00:11:59,800
Z is greater than or equal to

254
00:12:00,000 --> 00:12:05,000
Ever are many corners he is and the real Z is less than or equal to

255
00:12:05,000 --> 00:12:09,000
whatever our Max Corners he is now and again this is a little iffy

256
00:12:09,000 --> 00:12:12,800
here because we don't really have, you know I'm going to I'm going to

257
00:12:12,800 --> 00:12:17,600
put it to do here when we finally do the focus rejection do we want an

258
00:12:17,600 --> 00:12:22,000
open inclusion at the max Corner because you notice I'm doing less

259
00:12:22,000 --> 00:12:22,400
than or equal.

260
00:12:22,400 --> 00:12:26,200
To in both cases there may be you know, if you remember when we did

261
00:12:26,200 --> 00:12:29,100
our rectangle code and maybe I'll even maybe I'll just do this because

262
00:12:29,100 --> 00:12:29,800
it seems like it's little

263
00:12:30,000 --> 00:12:32,800
Are consistent, but if you remember when we did it here we were saying

264
00:12:32,800 --> 00:12:36,200
that the max typically is not included, so it may be a little more

265
00:12:36,200 --> 00:12:38,400
collect correct here to just say that for now.

266
00:12:38,600 --> 00:12:41,300
I don't know, we don't have a robust after so we don't know why we

267
00:12:41,300 --> 00:12:41,900
might care.

268
00:12:42,300 --> 00:12:45,000
And so I'm going to put that off till when we do the Collision Tech

269
00:12:46,200 --> 00:12:48,600
detection, full pass.

270
00:12:49,000 --> 00:12:52,800
Because at this point, I really just don't know if that makes sense.

271
00:12:53,000 --> 00:12:56,500
I really just don't know what it is that we would want to do there.

272
00:12:56,900 --> 00:12:57,900
We'll have to think about it.

273
00:12:58,400 --> 00:12:59,800
All right, so if I do that and I

274
00:13:00,000 --> 00:13:00,800
Do that test.

275
00:13:00,800 --> 00:13:04,600
Now we should have again, I'm not totally sure, but I believe we

276
00:13:04,600 --> 00:13:07,300
should pass through things that are not on our level and stop and ones

277
00:13:07,300 --> 00:13:07,800
that aren't okay.

278
00:13:07,800 --> 00:13:09,700
That looks like we're just passing through everything.

279
00:13:11,900 --> 00:13:13,600
Which is not what we want to do at all.

280
00:13:15,600 --> 00:13:16,400
It's always funny.

281
00:13:17,400 --> 00:13:20,100
So I wonder why I got to see here what I'm doing.

282
00:13:20,400 --> 00:13:24,900
Ugly here, also to break point there and we'll see, but I believe am I

283
00:13:24,900 --> 00:13:30,000
doing anything obviously stupid before I test that if R LZ is greater

284
00:13:30,000 --> 00:13:38,100
than equal to Min Corners e and r LZ know that looks looks basic

285
00:13:38,100 --> 00:13:38,200
right.

286
00:13:38,200 --> 00:13:40,800
So I'm going to step in there and see what's going on again.

287
00:13:41,300 --> 00:13:43,800
Hmm, it's been a while since we program.

288
00:13:43,800 --> 00:13:48,800
So to chances of me forgetting something about how our code is working

289
00:13:48,800 --> 00:13:50,100
is pretty high.

290
00:13:50,700 --> 00:13:51,500
But what you going to do?

291
00:13:52,100 --> 00:13:54,200
All right, so let's go ahead and step in here.

292
00:13:55,600 --> 00:13:57,900
We should what's going on.

293
00:13:57,900 --> 00:13:58,500
There we go.

294
00:13:59,400 --> 00:14:03,900
We should be able to do some some hoops.

295
00:14:04,200 --> 00:14:04,800
Let's see here.

296
00:14:04,900 --> 00:14:07,300
I guess we should be able to step in at any time and we should be able

297
00:14:07,300 --> 00:14:08,300
to see these triggering.

298
00:14:08,400 --> 00:14:08,900
Right?

299
00:14:09,400 --> 00:14:10,800
So let's see.

300
00:14:11,300 --> 00:14:15,900
What is our Min corner and our Max Corner that we're testing against

301
00:14:15,900 --> 00:14:16,200
here?

302
00:14:16,200 --> 00:14:17,900
Let's just find out what those are.

303
00:14:18,400 --> 00:14:22,600
So let's see, men corner and Max Corner.

304
00:14:22,600 --> 00:14:24,900
They should straddle 0, right?

305
00:14:24,900 --> 00:14:26,500
And they should be roughly the size.

306
00:14:26,500 --> 00:14:29,400
What is this entity that we're testing against it's a wall?

307
00:14:29,400 --> 00:14:34,500
So it should basically straddle either side of zero and does which is

308
00:14:34,500 --> 00:14:37,600
good and the Z's in here.

309
00:14:38,500 --> 00:14:38,800
All right.

310
00:14:38,800 --> 00:14:41,000
Well so it looks like probably the

311
00:14:41,200 --> 00:14:45,700
Problem that we're facing is just that we didn't actually give any

312
00:14:45,700 --> 00:14:47,900
height to our walls.

313
00:14:48,200 --> 00:14:51,400
So this is probably just a data definition problem because we didn't

314
00:14:51,400 --> 00:14:53,400
really add 3D to a lot of things.

315
00:14:53,600 --> 00:14:57,000
So when we add a wall, what we're going to have to do is actually add

316
00:14:57,000 --> 00:14:59,200
some depth to it.

317
00:14:59,300 --> 00:14:59,800
So if we go

318
00:15:00,000 --> 00:15:01,100
Here we could say.

319
00:15:01,100 --> 00:15:05,200
All right I don't know how high a wall is you know what's?

320
00:15:05,200 --> 00:15:09,500
Let's say that it's half the the tile depth in meters or something

321
00:15:09,500 --> 00:15:10,000
like this.

322
00:15:10,000 --> 00:15:11,500
Will have to think about that a little bit.

323
00:15:11,600 --> 00:15:14,300
When we they'll probably be walls of differing Heights.

324
00:15:14,300 --> 00:15:17,500
I'm guessing in the game when we're actually done with it because

325
00:15:17,500 --> 00:15:20,000
they'll probably walls that are low enough for flying things to fly

326
00:15:20,000 --> 00:15:24,300
over and walls that are tall enough to block flying things or, you

327
00:15:24,300 --> 00:15:28,200
know, stuff of this nature and so for now we kind of got a you know

328
00:15:28,200 --> 00:15:28,800
leave it

329
00:15:30,300 --> 00:15:31,100
Leave it at that.

330
00:15:31,100 --> 00:15:34,900
So anyway we got to add that there and then I suppose other things

331
00:15:34,900 --> 00:15:37,200
should also have a size as well.

332
00:15:37,200 --> 00:15:42,800
Probably the player should have a size, he currently does not appear

333
00:15:42,800 --> 00:15:48,100
to have a size, which is also odd and the monstars don't have a size.

334
00:15:48,100 --> 00:15:51,100
So, so most people don't have a size.

335
00:15:51,900 --> 00:15:53,900
Not sure what to really do about that.

336
00:15:54,000 --> 00:15:59,400
I guess we'll just give them some size for now, and I guess,

337
00:15:59,800 --> 00:16:01,500
So we've got a y and x.

338
00:16:02,000 --> 00:16:02,900
Yeah, I don't know.

339
00:16:02,900 --> 00:16:04,400
This is a little bit odd.

340
00:16:04,900 --> 00:16:10,600
1.4 f is probably what his height should be.

341
00:16:11,300 --> 00:16:13,700
I wonder if we should go through and actually think about these a

342
00:16:13,700 --> 00:16:14,300
little bit.

343
00:16:14,300 --> 00:16:16,700
Maybe that's something that should be on our to-do list.

344
00:16:17,200 --> 00:16:19,300
Feels like something that probably should be.

345
00:16:19,800 --> 00:16:24,900
So maybe go through and Define how tall everything should be.

346
00:16:25,400 --> 00:16:28,900
And, and then, you know, just have some opinion about this because at

347
00:16:28,900 --> 00:16:29,400
the moment,

348
00:16:29,500 --> 00:16:33,400
We really don't know how tall things should be and it's a little bit

349
00:16:33,400 --> 00:16:33,900
wonky.

350
00:16:34,000 --> 00:16:36,500
All right, and also for things that are flying at The Familiar, we

351
00:16:36,500 --> 00:16:41,000
should probably do a little bit of work on that.

352
00:16:41,200 --> 00:16:46,600
Make sure flying things can go over low walls and so that'll be

353
00:16:47,000 --> 00:16:48,700
that'll be some good stuff to work out.

354
00:16:49,000 --> 00:16:53,100
Alright so we'll have to restart here because of course we change the

355
00:16:53,100 --> 00:16:57,200
definition and so we'd have to you know the in it code is where all

356
00:16:57,200 --> 00:16:58,200
that stuff was set.

357
00:16:58,700 --> 00:16:59,400
So let's see.

358
00:16:59,800 --> 00:17:04,500
We should find that we stop now and we do, we do seem to stop

359
00:17:04,500 --> 00:17:07,700
correctly, although it seems like, are we stopping.

360
00:17:07,700 --> 00:17:07,900
Yeah.

361
00:17:07,900 --> 00:17:11,599
Now we're stopping correctly on the bottom stuff, which means I should

362
00:17:11,599 --> 00:17:15,099
not be able to go through the exit here because we're on the bottom

363
00:17:15,099 --> 00:17:15,700
right now.

364
00:17:16,300 --> 00:17:17,900
And now let's walk up to the top.

365
00:17:18,000 --> 00:17:22,099
We can walk up to the top and we cannot walk through the top ring, but

366
00:17:22,099 --> 00:17:23,099
we should be able to go through.

367
00:17:23,099 --> 00:17:27,500
We can so that looks like that's working properly now.

368
00:17:27,500 --> 00:17:28,600
So that's good.

369
00:17:29,500 --> 00:17:37,000
And yeah, that seems about right and I still can't, I can't walk

370
00:17:37,000 --> 00:17:38,800
through the familiar, which is good.

371
00:17:38,800 --> 00:17:40,200
I can't walk through the monster.

372
00:17:40,200 --> 00:17:41,400
That's also good.

373
00:17:41,800 --> 00:17:44,800
I'm not sure what's happening with this but that looking good too.

374
00:17:44,800 --> 00:17:51,100
So our Collision detection is working stably enough at the moment for

375
00:17:51,100 --> 00:17:51,900
the 3D stuff.

376
00:17:51,900 --> 00:17:57,300
Well, that's oddly jerky, I'm not sure why that's being odd like that.

377
00:17:57,600 --> 00:17:58,100
Is that

378
00:17:59,400 --> 00:17:59,700
Yeah.

379
00:18:00,200 --> 00:18:03,600
One thing that I did notice, you'll have to forgive me for a second

380
00:18:03,600 --> 00:18:03,800
here.

381
00:18:03,800 --> 00:18:08,800
I meant to check this out, but I totally forgot to I meant to look to

382
00:18:08,800 --> 00:18:10,800
see when we did create wind oex.

383
00:18:11,100 --> 00:18:13,700
Okay, I was noticing.

384
00:18:13,700 --> 00:18:18,500
I was programming some stuff earlier last week, actually, and I

385
00:18:18,500 --> 00:18:24,500
noticed that if you pass WX layered to a window, your frame rate gets

386
00:18:24,500 --> 00:18:28,700
really, really bad, at least in opengl.

387
00:18:28,700 --> 00:18:29,800
I don't know if it

388
00:18:30,000 --> 00:18:35,000
It happens with with dip section, like we're using here, so I just

389
00:18:35,000 --> 00:18:36,900
want to make sure that we weren't still passing that.

390
00:18:36,900 --> 00:18:39,900
It's just a quick thing that I had thought of.

391
00:18:39,900 --> 00:18:43,200
And I wanted to remember that not to do if we were doing it, but we

392
00:18:43,200 --> 00:18:46,400
are it's not something I knew about but it kind of makes sense I

393
00:18:46,400 --> 00:18:49,800
guess, because if it's a layered window it's got to go through the

394
00:18:49,800 --> 00:18:50,500
compositor.

395
00:18:50,500 --> 00:18:54,300
First to do the layering stuff and maybe, you know, can't flip as

396
00:18:54,300 --> 00:18:54,700
fast.

397
00:18:54,700 --> 00:18:55,100
I don't know.

398
00:18:55,700 --> 00:18:59,900
But anyway, all right, so that's you know that

399
00:19:00,000 --> 00:19:05,000
Our Collision detection is good enough right now in NZ.

400
00:19:05,100 --> 00:19:08,500
So we can kind of say that this is this is done for now.

401
00:19:08,800 --> 00:19:12,500
And then we can also go ahead and say let's let's take a look at the

402
00:19:12,500 --> 00:19:15,100
at the other two that we added here.

403
00:19:15,100 --> 00:19:20,000
I think because that seems like that seems like something.

404
00:19:20,000 --> 00:19:22,800
Maybe we should we should go through and think about a little bit.

405
00:19:23,300 --> 00:19:26,200
And in fact, it kind of sets us up for doing the ground stuff as well

406
00:19:26,200 --> 00:19:29,600
because in order to do the ground stuff properly, we should have an

407
00:19:29,900 --> 00:19:33,800
Idea of how everything lines up in 3D and how things are stacked on

408
00:19:33,800 --> 00:19:37,800
top of each other, how that concept kind of works where tile chunks

409
00:19:37,800 --> 00:19:42,100
are in terms of how things are staggered and all sorts of stuff like

410
00:19:42,100 --> 00:19:42,500
that.

411
00:19:42,600 --> 00:19:45,000
We probably want to get a handle on that.

412
00:19:46,100 --> 00:19:46,600
So, yeah.

413
00:19:46,900 --> 00:19:50,800
So let's take a look and and see what all this stuff is hammers out

414
00:19:50,800 --> 00:19:51,000
too.

415
00:19:52,000 --> 00:19:55,900
So, if I remember correctly, we set up a thing in here that said how

416
00:19:55,900 --> 00:19:58,700
big tiles were sort of height Wise.

417
00:19:59,700 --> 00:20:04,000
It's, let's see, tile side and M and tile depth and M is sort of

418
00:20:04,000 --> 00:20:04,300
thing.

419
00:20:04,900 --> 00:20:10,600
And what we said is that the tile side in meters is essentially what

420
00:20:10,600 --> 00:20:14,400
the the depth I guess I should say of a tile.

421
00:20:16,700 --> 00:20:21,100
So if we imagine a tile as a thing, you know, sort of a unit that we

422
00:20:21,100 --> 00:20:27,500
think about typically as being this sort of element of space we don't

423
00:20:27,500 --> 00:20:30,300
actually require things to be tiled at all but was sort of something

424
00:20:30,300 --> 00:20:33,000
we were had been thinking about in terms of a unit of space.

425
00:20:33,900 --> 00:20:36,700
For example, if we were going to do walls that you stamp out we'd

426
00:20:36,700 --> 00:20:39,200
probably do them in this proportion.

427
00:20:40,100 --> 00:20:42,800
So if we did something like this what we're saying is that we've got a

428
00:20:42,800 --> 00:20:45,200
certain tile side and M here, right?

429
00:20:45,300 --> 00:20:45,700
Whatever that.

430
00:20:45,900 --> 00:20:48,400
Is whatever the world is initialized to.

431
00:20:49,800 --> 00:20:57,000
We're setting up the tile side in M such that the it's a cube, right?

432
00:20:57,000 --> 00:20:58,100
We're saying that.

433
00:20:58,100 --> 00:20:59,800
These are all exactly the same.

434
00:21:00,000 --> 00:21:06,400
This this and this are all congruent, they're all the same length and

435
00:21:06,500 --> 00:21:09,200
what's kind of weird about that is?

436
00:21:09,200 --> 00:21:14,600
I don't think we actually care about height the same way that we do

437
00:21:14,800 --> 00:21:18,800
about sort of the, the two or I guess we should say depth as we do

438
00:21:18,800 --> 00:21:23,500
about the other two Dimensions, because if you think about it, when

439
00:21:23,500 --> 00:21:27,300
we're looking at the world top down, we typically want fairly fine

440
00:21:27,300 --> 00:21:29,900
gradations this way right into

441
00:21:30,000 --> 00:21:33,000
Terms of entities, you know we know the entities are moving around, we

442
00:21:33,000 --> 00:21:37,500
typically want pretty fine gradations there but in terms of height I

443
00:21:37,500 --> 00:21:41,300
don't know that we really do typically will probably represent very

444
00:21:41,300 --> 00:21:46,200
tall things, you know, just sort of standing in a particular cell and

445
00:21:46,200 --> 00:21:49,300
we don't really need the ability to have lots of things stacked on top

446
00:21:49,300 --> 00:21:49,800
of each other.

447
00:21:49,800 --> 00:21:52,800
Very often, that's not the common case for a game like this.

448
00:21:52,800 --> 00:21:57,100
It doesn't really happen hardly at all and really, I don't know, it

449
00:21:57,100 --> 00:21:59,800
seems like we probably want to say that.

450
00:22:00,000 --> 00:22:04,500
However, High, you know, a floor would be of a building.

451
00:22:05,200 --> 00:22:08,500
That's really the size of the cell that we care about.

452
00:22:08,500 --> 00:22:12,200
So you know, probably it's something that looks more like this you

453
00:22:12,200 --> 00:22:18,200
know where you've got kind of something that's very sort of tall

454
00:22:18,200 --> 00:22:19,800
compared to its footprint.

455
00:22:20,200 --> 00:22:23,500
That's actually the cell and maybe that's you know a good three or

456
00:22:23,500 --> 00:22:24,700
four times.

457
00:22:24,900 --> 00:22:28,800
However big that that tile Dimension would be right.

458
00:22:28,800 --> 00:22:29,400
So if that's

459
00:22:29,900 --> 00:22:31,100
The tile Dimension there.

460
00:22:31,800 --> 00:22:35,000
So, you know, that's kind of what I'm thinking.

461
00:22:35,500 --> 00:22:41,500
If you look at how high a building normally would be a building floor,

462
00:22:41,500 --> 00:22:43,300
might be like 10 feet high.

463
00:22:43,400 --> 00:22:44,700
Let's say right.

464
00:22:45,100 --> 00:22:55,900
You know how tall tall is a typical Building Story and let's see what

465
00:22:55,900 --> 00:22:56,400
this is.

466
00:22:56,400 --> 00:22:58,200
Cutting the height of a building.

467
00:22:58,200 --> 00:22:59,700
No, we just want to know.

468
00:23:00,100 --> 00:23:01,700
How tall is the story of though?

469
00:23:01,700 --> 00:23:03,800
10 feet is a common estimate.

470
00:23:04,900 --> 00:23:07,700
So, yeah, let's say 10 feet was a common estimate.

471
00:23:09,000 --> 00:23:11,000
What is 10 feet and meters?

472
00:23:11,600 --> 00:23:17,200
Well, it's 3.04 so close to three, so we could say that three meters

473
00:23:17,200 --> 00:23:20,700
high would be a, probably a pretty good, you know.

474
00:23:21,700 --> 00:23:26,800
A pretty good estimate for how big we might want our cells to be in

475
00:23:26,800 --> 00:23:30,500
terms of how we Chunk Up the world, right?

476
00:23:31,200 --> 00:23:37,000
And so, when we build this, I'm thinking that basically what we want

477
00:23:37,000 --> 00:23:41,800
to do is for tile chunks, we want to kind of do the opposite of what

478
00:23:41,800 --> 00:23:43,500
we did here in some sense, right?

479
00:23:43,700 --> 00:23:44,900
For a tile chunk.

480
00:23:45,000 --> 00:23:47,700
We're often only looking at one slice of the work.

481
00:23:47,700 --> 00:23:48,100
Well,

482
00:23:50,300 --> 00:23:52,300
You know, the thing I was about to say is probably wrong.

483
00:23:52,800 --> 00:23:54,700
So I'm going to, I'm going to stop there for a second.

484
00:23:55,200 --> 00:23:56,200
Let's think about this.

485
00:23:56,500 --> 00:23:58,000
So we have one more thing to think about.

486
00:23:58,000 --> 00:23:59,900
So if we're thinking about a typical element,

487
00:24:00,300 --> 00:24:01,300
Something like this.

488
00:24:02,600 --> 00:24:05,200
When we start to think about tile chunks, I think maybe what I was

489
00:24:05,200 --> 00:24:08,100
going to say, doesn't really apply but let's let's talk it through for

490
00:24:08,100 --> 00:24:08,700
a second.

491
00:24:09,300 --> 00:24:13,400
So what a tile chunk is, is an aggregate basically, and we don't call

492
00:24:13,400 --> 00:24:14,100
them townships anymore.

493
00:24:14,100 --> 00:24:15,300
Guess we call the world chunks.

494
00:24:15,400 --> 00:24:18,300
It's basically a region of space where stuff lives, right?

495
00:24:18,300 --> 00:24:21,900
It's like, it's sort of a storage unit for stuff in the world for

496
00:24:21,900 --> 00:24:22,900
entities in the world.

497
00:24:23,500 --> 00:24:26,300
And so if we're thinking about how big that should be, what we were

498
00:24:26,300 --> 00:24:29,800
saying before is, you know, maybe if this was what

499
00:24:30,000 --> 00:24:32,800
Our common sort of construction element looked like, I think what we

500
00:24:32,800 --> 00:24:36,500
were saying is, like, maybe 16 by 16 across, right?

501
00:24:36,500 --> 00:24:37,100
Was the thing.

502
00:24:37,100 --> 00:24:37,500
Yeah.

503
00:24:38,200 --> 00:24:41,300
So whatever that unit is of construction that we tend to think in,

504
00:24:41,300 --> 00:24:44,100
even though, again, we're not explicitly representing this anywhere.

505
00:24:44,100 --> 00:24:47,000
It's just kind of a size guide at this point because we allow any of

506
00:24:47,000 --> 00:24:48,900
these to be any shape and positioned anywhere.

507
00:24:49,400 --> 00:24:52,700
So we don't have to it's not like a tile map where it's locked to it

508
00:24:53,200 --> 00:24:56,900
if we're saying that we're going to be 16 across, right?

509
00:24:57,200 --> 00:24:59,800
And 16 this way the question

510
00:25:00,300 --> 00:25:04,800
How tall should this chunk be in terms of units, right?

511
00:25:05,000 --> 00:25:10,100
So we're basically saying that this is, you know, something like this,

512
00:25:10,300 --> 00:25:10,800
right?

513
00:25:12,400 --> 00:25:16,900
This is if this was our sort of construction grid, right?

514
00:25:17,500 --> 00:25:20,000
Wow, I did a bad job, this is not even Square.

515
00:25:20,100 --> 00:25:24,000
The construction grid, I drew, but you get the idea our construction

516
00:25:24,000 --> 00:25:29,500
grid basically says, we store in chunks of this size, in terms of

517
00:25:29,500 --> 00:25:29,900
construction,

518
00:25:30,000 --> 00:25:32,800
When elements and again, things can be placed wherever you want in

519
00:25:32,800 --> 00:25:33,100
here.

520
00:25:33,100 --> 00:25:36,500
But this was sort of, you know, if you think of a typical wall piece

521
00:25:37,100 --> 00:25:40,000
that might be made by an artist, that should be about that big or

522
00:25:40,000 --> 00:25:41,400
something, you know, blah blah blah.

523
00:25:41,900 --> 00:25:45,700
We're thinking about it in terms of stuff that would go like this in

524
00:25:45,700 --> 00:25:46,900
the world, right?

525
00:25:47,900 --> 00:25:51,500
So the question is, if that's what we're doing for how we're storing

526
00:25:51,500 --> 00:25:56,400
the world, 16 by 16, which seems pretty reasonable, but we haven't

527
00:25:56,400 --> 00:25:58,400
really thought to thought too hard about it.

528
00:25:58,600 --> 00:25:59,900
How high should it be?

529
00:26:00,300 --> 00:26:01,000
Right?

530
00:26:01,100 --> 00:26:04,500
And so if we're saying that, you know, there's there's three meters.

531
00:26:04,500 --> 00:26:07,100
So this is a distance of three meters here, right?

532
00:26:07,300 --> 00:26:09,700
If are saying that there's three meters per floor.

533
00:26:09,900 --> 00:26:15,400
One question is for tile chunks, how many floors do we want to store?

534
00:26:16,300 --> 00:26:19,300
And it seems to me like probably the answer.

535
00:26:19,800 --> 00:26:21,400
Alright, so I'm going to go back to things.

536
00:26:21,400 --> 00:26:23,100
We're doing is a thinking it through a little bit.

537
00:26:23,100 --> 00:26:27,000
I'll I'll say probably what I was going to say is okay.

538
00:26:27,200 --> 00:26:29,800
Anyway, but

539
00:26:30,100 --> 00:26:32,500
How many floors do we want to include in chunk?

540
00:26:32,900 --> 00:26:38,300
And I think that probably, we only really want to include one floor,

541
00:26:38,400 --> 00:26:39,200
right?

542
00:26:39,300 --> 00:26:42,900
Because typically speaking, there's not going to be a lot of

543
00:26:42,900 --> 00:26:43,600
visibility.

544
00:26:43,600 --> 00:26:46,900
Florida floor, like typically floors are going to be opaque and when

545
00:26:46,900 --> 00:26:50,100
they're not opaque they'll probably only show through to one thing

546
00:26:50,100 --> 00:26:51,500
below it or whatever, right?

547
00:26:52,200 --> 00:26:56,300
And so, what I'm thinking is in general, we probably don't want to be

548
00:26:56,300 --> 00:26:59,800
pulling in lots of entities that are not

549
00:27:00,000 --> 00:27:05,000
Involved in the computation, we probably want to just pull in the

550
00:27:05,000 --> 00:27:06,200
floor, that's active.

551
00:27:06,200 --> 00:27:09,400
And then if you can see down to the floor below, it will pull that in

552
00:27:09,400 --> 00:27:11,000
as well or something like that, right?

553
00:27:11,000 --> 00:27:16,900
But in general we won't be pulling in lots of floors like that and if

554
00:27:16,900 --> 00:27:19,800
it turns out that we don't ever allow this case like we don't actually

555
00:27:19,800 --> 00:27:23,000
allow things that show through to the bottom then we could restrict it

556
00:27:23,000 --> 00:27:23,700
just to the one floor.

557
00:27:23,700 --> 00:27:26,200
But I think we probably do for visual interest will probably want to

558
00:27:26,200 --> 00:27:27,300
do that once in a while.

559
00:27:27,800 --> 00:27:29,900
And so for looking down,

560
00:27:30,000 --> 00:27:34,400
Down what we'll have to do, is basically do a query where we say.

561
00:27:34,400 --> 00:27:39,000
Alright, let's look at everything that's inside the current camera.

562
00:27:41,100 --> 00:27:42,600
Bounds that we want to use.

563
00:27:42,600 --> 00:27:47,900
And then we'll expand that by when we detect that we have entities,

564
00:27:47,900 --> 00:27:51,700
that would allow us to see through to the ground, will sort of detect

565
00:27:51,700 --> 00:27:55,800
that and, and add layers going downward.

566
00:27:55,800 --> 00:27:58,600
So what kind of will drill down or something like that, right?

567
00:27:58,900 --> 00:28:01,200
That's kind of the way that I'm thinking we'll probably want to do it

568
00:28:01,500 --> 00:28:01,700
that way.

569
00:28:01,700 --> 00:28:03,900
We've got some inclusion in there and we won't grab more layers than

570
00:28:03,900 --> 00:28:04,400
we need.

571
00:28:04,600 --> 00:28:07,700
And so, what I think is we probably want to just leave it to one layer

572
00:28:07,700 --> 00:28:09,500
at a time in those.

573
00:28:09,600 --> 00:28:10,000
Chunks.

574
00:28:10,300 --> 00:28:15,600
So that we don't have a situation where we are constantly to me

575
00:28:16,600 --> 00:28:19,200
constantly, pulling in all sorts of entities, that we really just

576
00:28:19,200 --> 00:28:22,600
didn't need to simulate at a high frequency because they're not even

577
00:28:22,600 --> 00:28:24,200
visible at all right?

578
00:28:25,100 --> 00:28:27,100
So, that's what I think we should probably do for now.

579
00:28:27,900 --> 00:28:34,000
Now, in order to do that, what I want to do is say okay, we'll leave

580
00:28:34,000 --> 00:28:37,400
all the same tiles per chunk stuff the way we were doing it before.

581
00:28:37,900 --> 00:28:39,400
And then instead of making this tile side,

582
00:28:39,500 --> 00:28:43,400
And M will just pass in another thing here, which will be the tile

583
00:28:43,400 --> 00:28:48,100
depth in meters tile depth in meters and you can see that I've already

584
00:28:48,100 --> 00:28:48,900
sort of done it this way.

585
00:28:48,900 --> 00:28:52,600
This is already sort of what, I guess for lack of better term.

586
00:28:52,900 --> 00:28:56,900
What I was expecting when we first typed in this code, you'll notice

587
00:28:56,900 --> 00:28:58,900
that I had already just set it to one tile.

588
00:28:58,900 --> 00:29:02,900
Hi instead of setting it to 16 tiles High when we're doing it before.

589
00:29:02,900 --> 00:29:06,000
But we're saying now is we're going to do higher than that because

590
00:29:06,000 --> 00:29:09,500
really the tile side and M is a lot smaller than what we

591
00:29:09,600 --> 00:29:12,200
The average Florida up to be, so we're going to set it to that and

592
00:29:12,200 --> 00:29:14,000
then we'll store it in here as well.

593
00:29:14,100 --> 00:29:18,200
And so then when we call initialize World in here, when we actually,

594
00:29:18,200 --> 00:29:25,400
oops, initialize world, will pass that tile side and then we'll also

595
00:29:25,400 --> 00:29:29,500
pass whatever we want the depth to be right, which is going to be 3.0

596
00:29:29,500 --> 00:29:32,400
for now and that'll be that that distance.

597
00:29:32,700 --> 00:29:35,100
Now when we go to grab a floor,

598
00:29:36,600 --> 00:29:40,700
now we kind of have this thing where that we got two competing things

599
00:29:40,700 --> 00:29:44,600
that sort of fight against each other a little bit and I'm not sure

600
00:29:44,600 --> 00:29:45,800
how we want to handle it.

601
00:29:46,500 --> 00:29:48,300
Again, if you take a look at the side view.

602
00:29:48,500 --> 00:29:49,900
So let's do a side view here.

603
00:29:50,900 --> 00:29:53,200
If you take a look at the side view of what happens when we have a

604
00:29:53,200 --> 00:29:54,800
multi-story thing like this, right?

605
00:29:54,800 --> 00:29:56,200
Let's let's go ahead and do that.

606
00:29:56,600 --> 00:29:59,800
So let's say here's story zero of our building and one two and three

607
00:30:00,300 --> 00:30:00,900
Right.

608
00:30:00,900 --> 00:30:04,900
And, you know, we've got a stairwell that kind of comes up in here

609
00:30:04,900 --> 00:30:09,700
something like this and and you know, maybe we've got holes in here

610
00:30:09,700 --> 00:30:13,400
and in a wall or something, you know, whatever you know.

611
00:30:15,100 --> 00:30:20,400
So what what we have to consider is previously what I saying is to

612
00:30:20,400 --> 00:30:23,400
avoid numerical nastiness, where we kind of have things that are

613
00:30:23,400 --> 00:30:27,000
standing on the floor, that might drop a little bit below the floor or

614
00:30:27,000 --> 00:30:28,300
things like, you know, who knows?

615
00:30:29,000 --> 00:30:31,800
I was worried about that and I was saying, well, we probably want to

616
00:30:31,800 --> 00:30:38,500
make it so that the tiles are like straddling like this, that that

617
00:30:38,500 --> 00:30:42,700
world chunks are straddling so that they capture everything that's

618
00:30:42,700 --> 00:30:43,500
near the floor.

619
00:30:43,500 --> 00:30:44,100
Boundary.

620
00:30:45,100 --> 00:30:50,300
But the thing that's nasty about that is that would bring in right in

621
00:30:50,300 --> 00:30:51,100
a tile chunk.

622
00:30:51,100 --> 00:30:54,900
You would, you would easily potentially say that like things like this

623
00:30:55,300 --> 00:30:56,300
that were overlapping.

624
00:30:56,300 --> 00:30:58,400
This might go into this chunk.

625
00:30:58,800 --> 00:31:00,400
Instead of going into this chunk, right?

626
00:31:00,400 --> 00:31:04,200
Depending on where this was placed a floating thing, that was floating

627
00:31:04,200 --> 00:31:04,400
up.

628
00:31:04,400 --> 00:31:08,500
Here, should clearly be in, in actually, this tile jump down here

629
00:31:08,500 --> 00:31:09,300
related to this floor.

630
00:31:09,300 --> 00:31:13,100
But instead, it's going to be placed in this chunk and our gather

631
00:31:13,100 --> 00:31:14,600
would find that

632
00:31:14,800 --> 00:31:18,100
that because our gather is going to gather everything, you know, you

633
00:31:18,100 --> 00:31:19,600
know, in a region that looks like that.

634
00:31:19,600 --> 00:31:22,600
But what that means is, we're always Gathering to child Sho tile

635
00:31:22,600 --> 00:31:23,000
chunks.

636
00:31:23,300 --> 00:31:26,800
Even if we could only see one floor, right?

637
00:31:26,900 --> 00:31:31,600
Even if this is all we could see here is my little, that's my little

638
00:31:31,600 --> 00:31:32,200
eyeball.

639
00:31:33,300 --> 00:31:34,200
It's pretty great, huh?

640
00:31:34,900 --> 00:31:37,900
If this is all we could see is just this floor, you know.

641
00:31:37,900 --> 00:31:39,400
We can't see any of the rest of this.

642
00:31:39,600 --> 00:31:41,400
We're still pulling in all of these entities.

643
00:31:41,400 --> 00:31:44,300
We might still be pulling in and he's up here and that's just not a

644
00:31:44,300 --> 00:31:45,100
good idea.

645
00:31:45,600 --> 00:31:48,500
So it does seem like maybe even though it's a, you know, kind of a

646
00:31:48,500 --> 00:31:50,000
nice thing to do it this way.

647
00:31:50,100 --> 00:31:53,100
It does seem that maybe we want to do is do a nice inclusion thing

648
00:31:53,100 --> 00:31:56,500
where we actually do and this would this would be our Max thing would

649
00:31:56,500 --> 00:32:01,200
come into play here, where we actually do something where we say.

650
00:32:01,200 --> 00:32:03,000
Okay, let's actually

651
00:32:03,200 --> 00:32:06,900
We make it so that a tile chunk actually just encompasses the floor

652
00:32:06,900 --> 00:32:12,300
itself and it doesn't extend below or above the floor boundary.

653
00:32:12,400 --> 00:32:14,600
Now maybe we can stagger it a little bit, you know.

654
00:32:14,600 --> 00:32:16,800
Maybe we can say that it's like a little bit like this.

655
00:32:16,800 --> 00:32:21,200
So it, you know, it has a little bit of give to it.

656
00:32:21,200 --> 00:32:25,100
So things are staggered a tiny bit but on the whole, you know, maybe

657
00:32:25,100 --> 00:32:29,000
let's actually keep it fairly well aligned in that sense.

658
00:32:29,800 --> 00:32:32,900
And so if we want to do that, I

659
00:32:33,100 --> 00:32:36,600
Yes let's see here when we actually do are economically as coordinates

660
00:32:36,600 --> 00:32:40,500
here I'm not sure exactly what we're doing already in terms of how we

661
00:32:40,500 --> 00:32:46,400
re canonicalize them, let's take a look.

662
00:32:46,900 --> 00:32:48,300
Actually, guess it's not really cannot size.

663
00:32:48,300 --> 00:32:52,400
It's chunk position from tile position where were actually placing

664
00:32:52,400 --> 00:32:58,500
these guys and so offsets, let's see what we're doing.

665
00:32:58,500 --> 00:32:59,900
We're saying the world tells us

666
00:33:00,000 --> 00:33:03,000
M, times the ABS tile in any direction.

667
00:33:03,300 --> 00:33:06,100
So this is kind of a little bit wrong now because again tile side and

668
00:33:06,100 --> 00:33:10,100
M is not how actually, how deep things are going to be and so we

669
00:33:10,100 --> 00:33:14,500
really don't actually want that to be the case for these guys.

670
00:33:14,500 --> 00:33:20,600
What we actually want to do here is is take just the the X and Y and

671
00:33:20,600 --> 00:33:21,700
multiply it by it.

672
00:33:22,400 --> 00:33:27,500
But you know what I could do, we could just say this is the you know,

673
00:33:27,500 --> 00:33:29,900
tile size dimension or something like

674
00:33:30,000 --> 00:33:34,800
This where we go ahead and say, OK, it's a tile sided M and then it's

675
00:33:34,800 --> 00:33:36,000
the tile depth in meters.

676
00:33:38,000 --> 00:33:40,300
And then, this is just a hadamard product, right?

677
00:33:40,400 --> 00:33:44,300
Hadamard product of our tile Dimension, X.

678
00:33:44,300 --> 00:33:46,200
That ABS tile XYZ.

679
00:33:46,500 --> 00:33:51,000
That'll give us what we actually wanted for the position, right?

680
00:33:51,600 --> 00:33:52,700
And that should work, good.

681
00:33:52,700 --> 00:33:53,500
But now we got to say.

682
00:33:53,500 --> 00:33:58,400
All right, so how are these things being sort of placed?

683
00:33:59,300 --> 00:33:59,900
And it may

684
00:34:00,000 --> 00:34:04,300
If it were already placing them in the way that I just said that we

685
00:34:04,300 --> 00:34:08,400
should, it looks to me like, nobody here is doing an offset.

686
00:34:08,400 --> 00:34:09,699
Which means,

687
00:34:11,000 --> 00:34:18,500
Correct me if I'm wrong but that, that would seem to suggest that you

688
00:34:18,500 --> 00:34:21,300
that we were actually already doing exactly what I just said, right?

689
00:34:21,300 --> 00:34:23,600
In other words, we don't have to do any work, that was just what was

690
00:34:23,600 --> 00:34:24,300
happening already.

691
00:34:24,300 --> 00:34:28,000
And it's only if we wanted to do the staggered version that we would

692
00:34:28,000 --> 00:34:32,900
have had to, actually do something about it because if we set the ABS

693
00:34:32,900 --> 00:34:36,699
tiles E20, then obviously we would end up with zero.

694
00:34:36,699 --> 00:34:40,300
If you set it to 1, we would end up with it being one more over.

695
00:34:40,300 --> 00:34:40,600
It's over.

696
00:34:40,800 --> 00:34:45,100
Really, if anything, I would say that all we really have to do here is

697
00:34:45,100 --> 00:34:52,000
we want to do an offset for we'd want to do an offset for the X&Y.

698
00:34:52,100 --> 00:34:56,800
We'd probably want the X and Y to be half a tile over.

699
00:34:57,900 --> 00:35:00,600
So I'm trying to think of what the best thing to do is I think

700
00:35:00,600 --> 00:35:04,800
probably what we'd want to do here is actually start drawing in a

701
00:35:04,800 --> 00:35:07,200
little bit, how these things are layered.

702
00:35:07,400 --> 00:35:10,600
This would be a good thing to have debug info for

703
00:35:10,700 --> 00:35:15,000
Or and so maybe what I'll do is I'll postpone this until when we

704
00:35:15,000 --> 00:35:17,100
actually have the debug code.

705
00:35:17,300 --> 00:35:25,100
We might say something like draw tile chunks so we can verify that

706
00:35:25,100 --> 00:35:29,100
things are aligned in the chunks.

707
00:35:29,300 --> 00:35:35,700
We want them to be in ETC because that'll be a really that if we had

708
00:35:35,700 --> 00:35:39,800
some debug rendering stuff, it'd be really easy to verify what I just

709
00:35:39,800 --> 00:35:40,500
said, but

710
00:35:40,800 --> 00:35:44,100
We don't it's a little bit harder, so I'm just going to go ahead and

711
00:35:44,100 --> 00:35:48,100
double-check that that what I just said is working properly, it is

712
00:35:49,300 --> 00:35:50,200
looks like that's fine.

713
00:35:50,200 --> 00:35:55,900
Now you can see that that that that floor is much higher up than it

714
00:35:55,900 --> 00:35:58,800
was before, which is because we changed the floor height to 3 meters,

715
00:35:58,800 --> 00:35:59,800
which is exactly what

716
00:36:00,500 --> 00:36:03,300
We would expect to happen and let's see here.

717
00:36:03,300 --> 00:36:06,400
When we go upstairs, we also go up at a much faster rate, because

718
00:36:06,400 --> 00:36:08,400
we've got to go all the way up to that top part there.

719
00:36:09,300 --> 00:36:11,800
So, there we go, and that all works good.

720
00:36:11,900 --> 00:36:16,400
So that seems pretty consistent and reasonable, so that's fine.

721
00:36:17,700 --> 00:36:20,400
Okay, so let's leave that at that.

722
00:36:20,500 --> 00:36:26,100
So now we have to do is start to say, all right, how, how tall should

723
00:36:26,100 --> 00:36:27,400
everything be right?

724
00:36:27,400 --> 00:36:28,800
How big should everything be?

725
00:36:29,600 --> 00:36:31,400
And let's start to take a look at that.

726
00:36:31,600 --> 00:36:37,200
So let's go into handmade World dot CPP here, I'm sorry, handmade dot

727
00:36:37,200 --> 00:36:41,200
CPP, where we add our entity sizes, and let's just think about this a

728
00:36:41,200 --> 00:36:46,000
little bit if we're going to add an NZ, how big should be?

729
00:36:46,500 --> 00:36:47,300
Well, a wall.

730
00:36:47,500 --> 00:36:50,100
Should probably be the tile depth in meters, right?

731
00:36:50,100 --> 00:36:54,200
It should be the full height of the floor is what I would think.

732
00:36:54,500 --> 00:37:01,500
And since we don't do since we don't do inclusion on the max, I feel

733
00:37:01,500 --> 00:37:06,400
like, even though it goes all the way up to the top, we wouldn't even

734
00:37:06,400 --> 00:37:08,800
need to leave an Epsilon, it would just work.

735
00:37:09,000 --> 00:37:10,300
Now, I'm not sure about that.

736
00:37:10,300 --> 00:37:10,800
Let's see.

737
00:37:10,800 --> 00:37:13,300
So here, I'm going to walk around to test that Collision detection

738
00:37:13,300 --> 00:37:15,400
there that all works fine.

739
00:37:15,500 --> 00:37:17,300
Go to the top, Clint

740
00:37:17,400 --> 00:37:20,300
Section works there, and it works here.

741
00:37:20,300 --> 00:37:20,600
Yeah.

742
00:37:20,600 --> 00:37:24,000
So so we can actually do it at the full height and that's fine.

743
00:37:24,600 --> 00:37:27,300
So that's all good, no worries there.

744
00:37:27,500 --> 00:37:28,600
So that's, that's nice.

745
00:37:29,000 --> 00:37:32,300
So let's take a look at what things should be other Heights.

746
00:37:32,400 --> 00:37:34,500
Let's say that we've got the stairwell

747
00:37:36,200 --> 00:37:39,400
That well we already did that correctly because we said that that's

748
00:37:39,500 --> 00:37:41,000
going to be the depth in meters.

749
00:37:41,600 --> 00:37:42,400
Which is that height.

750
00:37:42,400 --> 00:37:44,200
Now you know what I'm thinking though?

751
00:37:45,100 --> 00:37:47,300
If this were only the depth in meters

752
00:37:49,300 --> 00:37:50,800
We shouldn't be colliding.

753
00:37:50,800 --> 00:37:53,500
So did we not use that as the inclusion rule?

754
00:37:53,500 --> 00:37:55,900
I'm guessing we didn't use that as the inclusion rule.

755
00:37:56,900 --> 00:37:59,700
I don't know if you see what I'm seeing there, but if the stairwells

756
00:37:59,700 --> 00:38:03,200
only that big, then why are we able to walk down it?

757
00:38:03,300 --> 00:38:04,700
Maybe we can't walk down it.

758
00:38:04,700 --> 00:38:05,400
Let's find out.

759
00:38:05,400 --> 00:38:06,200
Let's take a look here.

760
00:38:06,200 --> 00:38:10,000
So, when we do inclusion, when we were doing our inclusion testing,

761
00:38:10,000 --> 00:38:11,200
which is this stuff here?

762
00:38:12,300 --> 00:38:17,200
When we did rectangles intersect, what exactly does that called do,

763
00:38:17,200 --> 00:38:17,700
right?

764
00:38:17,800 --> 00:38:19,000
Let's take a look and make

765
00:38:19,600 --> 00:38:20,800
Math.h.

766
00:38:22,100 --> 00:38:25,400
Let's take a look at rectangles intersect.

767
00:38:27,500 --> 00:38:30,200
So, yeah, so you can see what's happening here, right?

768
00:38:31,400 --> 00:38:34,300
Basically, rectangles intersect, which is our call for doing

769
00:38:34,300 --> 00:38:35,100
intersection testing.

770
00:38:35,100 --> 00:38:40,600
Here doesn't obey that Max rule, which is kind of janky, right?

771
00:38:40,600 --> 00:38:43,200
That's not probably what we wanted it to do.

772
00:38:46,000 --> 00:38:53,600
that that's just not like all of our testing is basically predicated

773
00:38:53,600 --> 00:38:58,800
on the fact that, you know, if I've got a rectangle and in, let's say,

774
00:38:58,800 --> 00:38:59,200
oops,

775
00:39:00,000 --> 00:39:03,500
My men corner here is my Max corner, right?

776
00:39:03,700 --> 00:39:09,200
All of it was predicated on the fact that that very last row or

777
00:39:09,200 --> 00:39:13,800
column, that very last infinitely thin Edge, is not included in the

778
00:39:13,800 --> 00:39:17,300
rectangle and the reason that we're going with a rule like that is so

779
00:39:17,300 --> 00:39:21,000
that you can stack two rectangles perfectly together, right?

780
00:39:21,000 --> 00:39:22,800
Like let's say I got a second rectangle here.

781
00:39:24,500 --> 00:39:30,300
Like so and you know definitively what the people at this coordinate

782
00:39:30,300 --> 00:39:34,300
are on you know that they're on this guy, right?

783
00:39:34,500 --> 00:39:35,200
Not this guy.

784
00:39:35,600 --> 00:39:40,400
If the max were included then there'd be no way to perfectly stack.

785
00:39:40,400 --> 00:39:44,500
Two rectangles next to each other without trying to figure out what

786
00:39:44,500 --> 00:39:47,500
the minimum floating-point Epsilon value.

787
00:39:47,500 --> 00:39:52,900
Was at that scale that you could use to put you one floating Point

788
00:39:52,900 --> 00:39:53,800
Unit over.

789
00:39:54,400 --> 00:39:57,400
From the other guy which would be a huge pain and definitely not

790
00:39:57,400 --> 00:39:58,300
something we want to do.

791
00:39:59,800 --> 00:40:04,100
But for our rectangle intersection testing, we're not doing that,

792
00:40:04,100 --> 00:40:04,700
right?

793
00:40:05,000 --> 00:40:09,100
Our rectangle intersection testing says that you have to be less than

794
00:40:09,100 --> 00:40:11,700
in order to be considered intersecting.

795
00:40:12,800 --> 00:40:15,300
I'm sorry to in order to be considered not intersecting.

796
00:40:16,500 --> 00:40:20,600
Which means that anything that was on and if the two rectangles a but

797
00:40:20,700 --> 00:40:26,600
in any way then they are are considered, you know, they're they're

798
00:40:26,600 --> 00:40:27,700
considered intersecting.

799
00:40:31,200 --> 00:40:32,500
Which I don't think we want to do.

800
00:40:32,900 --> 00:40:36,900
So even though that happens to help us in this particular case because

801
00:40:36,900 --> 00:40:39,800
it means that when I woke up, this thing I can walk down it again

802
00:40:40,200 --> 00:40:44,200
because I happen to be exactly on it both at the bottom level.

803
00:40:44,200 --> 00:40:51,000
And the top level, what I think that we would rather do is fix that in

804
00:40:51,200 --> 00:40:57,100
by having stairwells hit regions, extend above the floor a bit, which

805
00:40:57,100 --> 00:40:59,100
I think we want to do anyway, right?

806
00:40:59,100 --> 00:41:00,700
I think that's something that we would want to do.

807
00:41:00,900 --> 00:41:03,000
Anyway, but I don't know.

808
00:41:03,100 --> 00:41:05,100
So anyway, we could take a look at that and that's something that we

809
00:41:05,100 --> 00:41:06,500
should play around with a little bit.

810
00:41:06,800 --> 00:41:08,900
Just so we can kind of see what's going on there.

811
00:41:08,900 --> 00:41:11,900
Now that that said I don't actually know that's what saving us.

812
00:41:12,100 --> 00:41:14,800
It could be that I'm not quite thinking about it because, you know,

813
00:41:14,800 --> 00:41:19,000
like what I'm also noticing is that if I walk into this guy, it stops

814
00:41:19,000 --> 00:41:23,100
me and I feel like it shouldn't actually stop me because I feel like

815
00:41:23,100 --> 00:41:28,900
our Collision that should not actually have been the case.

816
00:41:30,500 --> 00:41:30,700
Let me

817
00:41:30,800 --> 00:41:33,600
We think about that a little bit, but if you if you know what I mean,

818
00:41:33,700 --> 00:41:34,300
right?

819
00:41:34,600 --> 00:41:38,100
It should be that if you try to walk into it, the thing that would

820
00:41:38,100 --> 00:41:39,100
have stopped it.

821
00:41:39,600 --> 00:41:40,800
You was this test walk.

822
00:41:40,800 --> 00:41:45,100
All right, because we're not stopping you down here in the overlap

823
00:41:45,100 --> 00:41:45,600
testing.

824
00:41:46,200 --> 00:41:50,600
So it seems to me like we're actually still intersecting

825
00:41:51,600 --> 00:41:54,900
The stairwell even so, so that's actually not the thing that's

826
00:41:54,900 --> 00:41:57,600
stopping us, but it doesn't change the fact that it's wrong.

827
00:41:57,600 --> 00:41:59,800
And so first, I want to fix that and then we'll take a

828
00:42:00,800 --> 00:42:03,700
And see what to do with the, with the other part of it.

829
00:42:04,400 --> 00:42:07,700
So what we're doing here is we're basically doing an inversion test.

830
00:42:07,700 --> 00:42:10,600
So what we're doing is we're saying, let's test first to see whether

831
00:42:10,600 --> 00:42:14,000
they're not intersecting and then we'll just return the opposite of

832
00:42:14,000 --> 00:42:15,000
that, right?

833
00:42:15,200 --> 00:42:19,000
So to test, whether two things are not intersecting, what we want to

834
00:42:19,000 --> 00:42:24,300
do here is we're saying okay, if the Min of this thing, right is less

835
00:42:24,300 --> 00:42:26,200
than the maximum of the other one.

836
00:42:26,200 --> 00:42:28,800
So let me, let me draw out what this is actually doing.

837
00:42:31,200 --> 00:42:32,400
We talked about this before.

838
00:42:32,700 --> 00:42:33,400
In fact, I don't know.

839
00:42:33,400 --> 00:42:35,600
Can I actually find the drawing?

840
00:42:35,600 --> 00:42:36,300
Probably not.

841
00:42:36,300 --> 00:42:41,100
That's one thing we don't really have is how to search our drawings

842
00:42:41,500 --> 00:42:45,200
effectively because like, what do you know, what do you do?

843
00:42:45,200 --> 00:42:49,000
How can you see what, where we may have drawn?

844
00:42:49,000 --> 00:42:51,200
That who has any idea?

845
00:42:52,900 --> 00:42:57,600
Well, does anyone see it side?

846
00:42:57,600 --> 00:43:00,500
I don't really see it.

847
00:43:00,700 --> 00:43:01,500
On here.

848
00:43:03,300 --> 00:43:07,800
Well, maybe overlap test.

849
00:43:08,500 --> 00:43:09,700
At least one play.

850
00:43:09,700 --> 00:43:10,200
Here we go.

851
00:43:10,300 --> 00:43:12,400
This was the drawing, right.

852
00:43:13,200 --> 00:43:17,400
So basically what we were saying before is, you know, we have a min

853
00:43:17,400 --> 00:43:19,300
max and we have be min max.

854
00:43:19,300 --> 00:43:22,600
And so what we're doing is we're checking for things like, okay, if

855
00:43:22,600 --> 00:43:26,900
the minimum of B is greater than the maximum of a, then we know that

856
00:43:26,900 --> 00:43:28,700
they can't be overlapping, right?

857
00:43:28,700 --> 00:43:30,500
Because there's space in between,

858
00:43:30,600 --> 00:43:32,600
Where this one ends and where this one begins.

859
00:43:33,100 --> 00:43:36,600
So, what we want to say is, let's suppose the maximum minimum were

860
00:43:36,600 --> 00:43:38,900
exactly equivalent, right?

861
00:43:38,900 --> 00:43:42,300
So B's minimum was right on the maximum, right?

862
00:43:42,800 --> 00:43:47,200
In that case, we would not consider them intersecting.

863
00:43:48,000 --> 00:43:53,600
So what we actually want to do is we want to change these tests here,

864
00:43:53,600 --> 00:43:54,200
for example.

865
00:43:54,200 --> 00:43:56,300
So when we do Min vs.

866
00:43:56,300 --> 00:44:00,500
Max, like the one I just said so if bees Min is

867
00:44:00,700 --> 00:44:02,000
Greater than a is Max.

868
00:44:02,200 --> 00:44:05,300
What you want to do is set that actually to be if it's greater than or

869
00:44:05,300 --> 00:44:07,000
equal to, right?

870
00:44:07,200 --> 00:44:12,400
Because if it's greater than or equal to we want to consider them not

871
00:44:12,400 --> 00:44:15,700
intersecting because that Max is not included, right?

872
00:44:15,700 --> 00:44:19,000
And so that's true of all of those dimensions.

873
00:44:19,300 --> 00:44:23,000
And so now, the question is, what about the other side of that?

874
00:44:23,000 --> 00:44:26,300
What about where we're testing the max against the Min.

875
00:44:26,300 --> 00:44:29,600
And so what we're saying here in this case is we're looking for if

876
00:44:29,600 --> 00:44:30,400
bees Max

877
00:44:30,900 --> 00:44:32,600
was over here, right?

878
00:44:32,700 --> 00:44:35,100
And so what about the case, where they're exactly coincident.

879
00:44:35,100 --> 00:44:39,000
Again, I get we don't want that to be the case.

880
00:44:39,000 --> 00:44:42,200
We don't want to include that maximum overlap.

881
00:44:42,300 --> 00:44:45,600
So I believe what we want to do here is again, say the same thing.

882
00:44:45,600 --> 00:44:51,100
We want to say that these max if it's less than or equal to a is men,

883
00:44:51,100 --> 00:44:51,700
right?

884
00:44:51,700 --> 00:44:55,200
That it's not going to trigger the intersection.

885
00:44:55,500 --> 00:44:59,700
So that seems to me to be more in keeping with the

886
00:45:00,000 --> 00:45:02,800
All that we set up and avoid this from getting into a situation where

887
00:45:02,800 --> 00:45:05,600
we have different tests, returning different things.

888
00:45:05,800 --> 00:45:10,200
Now, we still are working properly in terms of going up and down which

889
00:45:10,200 --> 00:45:12,500
again, I think is a little odd.

890
00:45:12,600 --> 00:45:16,100
So I'm just wondering what I'm forgetting because in theory.

891
00:45:16,100 --> 00:45:20,800
Now, if we were right on the top, when we go here, we shouldn't

892
00:45:20,800 --> 00:45:25,400
actually you know we shouldn't be actually going through like that

893
00:45:25,400 --> 00:45:28,100
that that's that's not that's not correct.

894
00:45:28,500 --> 00:45:29,900
So my question is what's

895
00:45:30,000 --> 00:45:32,200
Actually happening there and I don't know.

896
00:45:32,200 --> 00:45:35,000
So let's try and figure out what is actually happening there.

897
00:45:36,000 --> 00:45:41,200
So, first off, let's make sure we know how big this thing actually is.

898
00:45:41,300 --> 00:45:45,000
So if I go in here and I take a look at the stairwell, where are we

899
00:45:45,000 --> 00:45:46,200
placing it, right?

900
00:45:46,200 --> 00:45:49,900
So here, so, here is the first thing that I guess is affecting it,

901
00:45:49,900 --> 00:45:50,300
right?

902
00:45:50,300 --> 00:45:56,000
Is we're actually placing these at an offset in the world, right?

903
00:45:56,100 --> 00:45:57,800
And oh well, you know what?

904
00:45:57,800 --> 00:45:59,600
That, that explains it right there.

905
00:46:01,000 --> 00:46:03,800
These placements are placing us.

906
00:46:03,900 --> 00:46:09,500
So basically what our dimensions are interpreted as being around where

907
00:46:09,500 --> 00:46:10,700
we are, right?

908
00:46:11,300 --> 00:46:15,300
So basically when we, when we say what the dimension is, I guess I got

909
00:46:15,300 --> 00:46:19,100
a zoom back to where we were day.

910
00:46:19,200 --> 00:46:20,800
No, no.

911
00:46:21,300 --> 00:46:22,200
Let's see here.

912
00:46:24,000 --> 00:46:25,400
J76.

913
00:46:26,700 --> 00:46:28,200
Where is des 76?

914
00:46:28,200 --> 00:46:28,800
There it is.

915
00:46:29,900 --> 00:46:32,100
This is such a funny drawing at this point.

916
00:46:32,300 --> 00:46:32,600
All right.

917
00:46:32,600 --> 00:46:33,200
So here's day.

918
00:46:33,200 --> 00:46:34,300
76 again.

919
00:46:35,100 --> 00:46:35,700
There we go.

920
00:46:35,900 --> 00:46:36,900
Am I the right size?

921
00:46:36,900 --> 00:46:37,500
It's heart.

922
00:46:37,500 --> 00:46:40,600
That's the other thing that I don't know how to get this to do is to

923
00:46:40,900 --> 00:46:42,800
to zoom to a known sighs.

924
00:46:42,900 --> 00:46:44,700
I really wish Mischief could just do that.

925
00:46:44,700 --> 00:46:48,500
I don't know, maybe it can and I don't know how to do it but yeah it

926
00:46:48,500 --> 00:46:49,200
would be nice.

927
00:46:49,900 --> 00:46:51,300
So does this look about right?

928
00:46:51,300 --> 00:46:52,800
I think that looks about right.

929
00:46:53,000 --> 00:46:55,200
That's how big things were.

930
00:46:55,400 --> 00:46:57,700
So let's just say that that's how big they were and keep going.

931
00:46:59,400 --> 00:47:01,900
So I guess what's happening here is just that are entities are

932
00:47:01,900 --> 00:47:05,500
actually this size right are entities.

933
00:47:05,600 --> 00:47:08,900
I'm snack, size are actually placed like so if this is the ground,

934
00:47:09,300 --> 00:47:10,000
right?

935
00:47:10,400 --> 00:47:14,000
Then essentially our entities are doing that and so that explains why

936
00:47:14,000 --> 00:47:16,500
they can go and they're considered intersecting.

937
00:47:16,500 --> 00:47:20,900
These stairwells that are even at the stairwell is only set up to be

938
00:47:20,900 --> 00:47:21,600
that way.

939
00:47:22,300 --> 00:47:25,500
So we want to actually do is Place entities such that they're, you

940
00:47:25,500 --> 00:47:28,600
know, a base and their Dimension kind of goes up from the base like

941
00:47:28,600 --> 00:47:29,100
that.

942
00:47:30,200 --> 00:47:31,700
so, I wonder

943
00:47:33,100 --> 00:47:34,800
I'm just thinking how we want to do this.

944
00:47:35,100 --> 00:47:40,100
I wonder if that implies that our rule for where entities are should

945
00:47:40,100 --> 00:47:45,400
actually be that the position, you know, you go out from the position

946
00:47:45,700 --> 00:47:48,500
but you go up in z.

947
00:47:52,300 --> 00:47:52,900
I don't know.

948
00:47:53,300 --> 00:47:54,300
You know what I'm saying?

949
00:47:54,500 --> 00:47:58,200
Like in terms of how you align the bounding box of the entity, I

950
00:47:58,200 --> 00:47:59,900
wonder if we want to make it so that

951
00:48:00,200 --> 00:48:04,800
Your alignment is, you know, from for the standpoint of a

952
00:48:04,800 --> 00:48:06,300
three-dimensional drawing here.

953
00:48:08,100 --> 00:48:08,400
Right.

954
00:48:08,400 --> 00:48:12,300
I wonder if we want to make it so that essentially the, the point is

955
00:48:12,300 --> 00:48:17,600
in the exact middle of the bottom face of your bounds.

956
00:48:17,800 --> 00:48:20,700
And so the height is is measured that way.

957
00:48:20,900 --> 00:48:23,800
Whereas the other dimensions are not the other dimensions are

958
00:48:23,800 --> 00:48:29,400
measured, you know, as as being equally spread out from where you are,

959
00:48:31,800 --> 00:48:32,700
mmm.

960
00:48:34,000 --> 00:48:36,600
I mean, the other thing we could do is that everything is a minimum

961
00:48:36,600 --> 00:48:37,100
corner.

962
00:48:38,300 --> 00:48:42,300
So you're always specifying your minimum corner and then everything is

963
00:48:42,300 --> 00:48:43,200
out from there.

964
00:48:45,600 --> 00:48:46,400
Hmm.

965
00:48:47,100 --> 00:48:48,000
I don't know.

966
00:48:48,000 --> 00:48:49,700
I don't know how I feel about that.

967
00:48:55,500 --> 00:48:58,700
So let's take a look at where it's actually used for starters.

968
00:49:00,600 --> 00:49:04,500
That'll give us a little bit of an understanding of it, I suppose.

969
00:49:05,200 --> 00:49:11,400
So if we were to, to go into SIM region and take a look at basically,

970
00:49:11,400 --> 00:49:14,100
the places where I actually do something with it.

971
00:49:15,600 --> 00:49:17,200
Well, so here's an example right here.

972
00:49:18,600 --> 00:49:20,200
And then we've got another example.

973
00:49:21,800 --> 00:49:22,400
Let's see.

974
00:49:22,400 --> 00:49:23,800
So we actually

975
00:49:26,000 --> 00:49:29,800
so we do do a fair bit of stuff that wants to be symmetric like

976
00:49:29,800 --> 00:49:34,300
entities overlapping rectangles and sizing them so it looks it really

977
00:49:34,300 --> 00:49:37,400
looks like we're we want to just keep treating it that way.

978
00:49:37,400 --> 00:49:40,900
So it seems like what we want to do is we want to do, do we want to do

979
00:49:40,900 --> 00:49:44,500
that placement where we're going to place things so that they're

980
00:49:44,500 --> 00:49:45,600
adjusted properly.

981
00:49:48,300 --> 00:49:50,100
Yeah, I feel like it just the center.

982
00:49:50,100 --> 00:49:54,500
Plus the dimension is just a better thing to do there.

983
00:49:55,300 --> 00:49:58,900
Yeah, so I mean, you know, that's what it is, that's what it is.

984
00:49:59,300 --> 00:50:04,000
So I guess what we want to do here is say alright, let's go ahead and

985
00:50:04,300 --> 00:50:05,500
and just account for that.

986
00:50:05,500 --> 00:50:09,300
Maybe what I'll do is make a call in addition to add low entity,

987
00:50:09,300 --> 00:50:12,800
something that takes a dimension, I'm not sure.

988
00:50:13,000 --> 00:50:17,900
Let's take a look here, Adler and of the Adler entity everything.

989
00:50:18,100 --> 00:50:19,000
Has one.

990
00:50:19,300 --> 00:50:24,700
So maybe I'll just add that to the call and it will automatically

991
00:50:24,700 --> 00:50:28,400
maybe do that adjustment for you.

992
00:50:28,400 --> 00:50:29,400
Let's say,

993
00:50:32,700 --> 00:50:45,700
Yeah, yeah, so I guess what I'm going to do here and I guess we should

994
00:50:45,700 --> 00:50:48,300
give the sword dimension in Z as well.

995
00:50:49,600 --> 00:50:51,400
Maybe just a very small dimension in Z.

996
00:50:52,600 --> 00:50:56,400
I guess what we should probably do here is say, alright, let's add a

997
00:50:56,400 --> 00:50:59,800
new function and there's going to be a function here.

998
00:51:00,000 --> 00:51:05,100
That basically does the same thing as ADD low entity, but it's going

999
00:51:05,100 --> 00:51:12,100
to be a, let's say a ground identity, right?

1000
00:51:12,700 --> 00:51:18,100
And a ground identity is going to have, you know, a dimension and a

1001
00:51:18,100 --> 00:51:24,200
position and you know, will will say that when you pass in, whatever

1002
00:51:24,200 --> 00:51:26,800
that position is, we're going to offset it.

1003
00:51:28,300 --> 00:51:29,900
We're going to go ahead and offset that.

1004
00:51:30,000 --> 00:51:32,800
Mission by whatever the dimension is.

1005
00:51:33,000 --> 00:51:36,900
So when you pass that dim in, you won't have to set that anymore,

1006
00:51:38,000 --> 00:51:39,100
it'll kind of do that for you.

1007
00:51:39,100 --> 00:51:43,500
And so what this will do is it'll call AD low entity with the position

1008
00:51:44,100 --> 00:51:47,700
and the type that you specify and then it'll go ahead.

1009
00:51:47,900 --> 00:51:53,100
Well, and set the dimension for you as well, but it'll also do before

1010
00:51:53,100 --> 00:51:54,600
it does that, it will do that.

1011
00:51:55,100 --> 00:51:59,800
That mapping for you, we're essentially it, it offsets the way.

1012
00:52:00,000 --> 00:52:00,900
The Entity was.

1013
00:52:00,900 --> 00:52:07,000
So if I take a look at handmade World, aah, whoops, there should be

1014
00:52:07,000 --> 00:52:10,500
that offset call.

1015
00:52:10,500 --> 00:52:16,700
Where is that offset map into chunks space.

1016
00:52:16,700 --> 00:52:22,300
So this right, so if I do that map in a chunk space World position

1017
00:52:24,200 --> 00:52:25,200
offset p.

1018
00:52:25,900 --> 00:52:29,100
And so what we'll do is we'll say we're going to map into chunks pace.

1019
00:52:30,400 --> 00:52:35,400
The original P that we got and then we'll take the dimension, will say

1020
00:52:35,400 --> 00:52:38,900
that we're going to, we're going to offset it by half the dimension in

1021
00:52:38,900 --> 00:52:40,600
Z downward.

1022
00:52:40,600 --> 00:52:43,700
So, to sort of I'm sorry upward, right?

1023
00:52:43,900 --> 00:52:46,400
So that will move it up to account for that.

1024
00:52:46,400 --> 00:52:49,800
So that it will be based on the ground properly, but that it's sought

1025
00:52:49,800 --> 00:52:53,300
its actual placement in the world will leave.

1026
00:52:53,300 --> 00:52:57,000
Its bottom, the bottom of this bounding box on the ground.

1027
00:52:57,600 --> 00:52:59,600
All right, so we'll go ahead and return that.

1028
00:53:00,100 --> 00:53:01,300
And that looks good.

1029
00:53:01,300 --> 00:53:06,200
So we've got now some work to do here, where I basically say that

1030
00:53:06,200 --> 00:53:17,000
Dimension is going to be something like this.

1031
00:53:18,600 --> 00:53:28,600
And this so there is a wall and then I can say a drowned identity dim

1032
00:53:29,100 --> 00:53:30,000
and delete that

1033
00:53:30,100 --> 00:53:31,200
That right?

1034
00:53:31,400 --> 00:53:32,400
That makes sense.

1035
00:53:33,000 --> 00:53:38,300
None of the overloads course you would make me do this.

1036
00:53:39,000 --> 00:53:39,400
Thank you.

1037
00:53:39,400 --> 00:53:40,100
See.

1038
00:53:46,800 --> 00:53:49,100
Right, maybe it wasn't as bad as I thought.

1039
00:53:50,400 --> 00:53:52,100
Let me let me give it another chance.

1040
00:53:54,000 --> 00:53:54,300
Okay.

1041
00:53:54,400 --> 00:53:56,300
Now see was not being mean to me.

1042
00:53:56,300 --> 00:53:56,700
There.

1043
00:53:56,700 --> 00:53:59,300
Who is just me forgetting to select the Z coordinate.

1044
00:54:00,100 --> 00:54:04,300
All right, so and I guess I have to pass the world there to probably

1045
00:54:04,300 --> 00:54:04,700
right.

1046
00:54:05,000 --> 00:54:07,800
This guy seems so it knows how to do that mapping.

1047
00:54:08,800 --> 00:54:11,300
So that should allow us now to place things.

1048
00:54:11,300 --> 00:54:13,700
Let's double-check that that actually worked at all.

1049
00:54:15,500 --> 00:54:20,600
That should allow us to place things properly in Z and, and we'll see

1050
00:54:20,600 --> 00:54:21,700
if it actually did.

1051
00:54:21,800 --> 00:54:28,700
And of course, our guy is now lower than the walls, right?

1052
00:54:28,900 --> 00:54:29,900
So he's

1053
00:54:30,000 --> 00:54:34,400
Like down a bit in Z and so now that should stop happening once we

1054
00:54:34,400 --> 00:54:36,700
actually Place him properly as well.

1055
00:54:37,300 --> 00:54:39,800
So let's go ahead, we got ad wall, we've got our ads stare.

1056
00:54:39,800 --> 00:54:45,700
So if we want our Dimension again, let's go ahead and set that up.

1057
00:54:46,200 --> 00:54:48,200
So we've got there's the X.

1058
00:54:49,000 --> 00:54:51,200
We've got our y here.

1059
00:54:52,400 --> 00:54:59,900
Is that in there and our Z, so that in there and that

1060
00:55:00,000 --> 00:55:02,200
Will automatically do its thing.

1061
00:55:02,700 --> 00:55:05,200
So a drowned identity.

1062
00:55:05,400 --> 00:55:05,800
Oops.

1063
00:55:06,400 --> 00:55:06,700
See

1064
00:55:09,100 --> 00:55:09,700
There we go.

1065
00:55:10,600 --> 00:55:16,000
So now what we would do is we would just get rid of this so we don't

1066
00:55:16,000 --> 00:55:18,600
actually need that offset anymore because it should just offset

1067
00:55:18,600 --> 00:55:19,200
itself.

1068
00:55:20,500 --> 00:55:21,200
There we go.

1069
00:55:21,600 --> 00:55:24,000
And what else we got?

1070
00:55:24,100 --> 00:55:26,900
We got we got RS, word, RS.

1071
00:55:26,900 --> 00:55:30,300
Word isn't a problem because we're, it doesn't actually have a

1072
00:55:30,300 --> 00:55:33,700
position at the moment so we can leave that be for.

1073
00:55:33,700 --> 00:55:37,400
Now, our player, he should be grounded.

1074
00:55:37,400 --> 00:55:38,800
So let's take his dimension.

1075
00:55:39,000 --> 00:55:43,200
Here and actually set him up properly and he should be about 1.4

1076
00:55:43,200 --> 00:55:44,400
meters high, right?

1077
00:55:44,700 --> 00:55:45,600
That was what we said.

1078
00:55:45,600 --> 00:55:50,400
The height of the hero should be, I think no, that can't be right.

1079
00:55:50,400 --> 00:55:51,900
He's not 1.4 meters.

1080
00:55:52,100 --> 00:55:53,200
He's a little kid.

1081
00:55:55,500 --> 00:56:01,300
We did this before, but I forget what it was, how tall is, let's say a

1082
00:56:01,900 --> 00:56:03,200
velociraptor.

1083
00:56:03,600 --> 00:56:04,700
How did that?

1084
00:56:05,000 --> 00:56:05,700
How is that?

1085
00:56:05,700 --> 00:56:08,200
The most common, what is going on here?

1086
00:56:08,700 --> 00:56:14,600
All right, well, whatever, how tall is, I don't know, maybe he's,

1087
00:56:14,800 --> 00:56:19,200
let's say, I don't know how old he is.

1088
00:56:19,200 --> 00:56:20,700
Let's say seven year old.

1089
00:56:25,900 --> 00:56:28,400
63 cm, right?

1090
00:56:29,700 --> 00:56:34,100
So point 6, 3 meters, so that makes sense, right?

1091
00:56:35,600 --> 00:56:42,000
You know, I'm saying, point 6, 3 meters is how big our kids will be.

1092
00:56:42,900 --> 00:56:44,900
There we go, seems reasonable.

1093
00:56:46,200 --> 00:56:49,500
And that's just, that's all yes.

1094
00:56:49,700 --> 00:56:54,400
So, if I go ahead and move these out, we've got he's he's won by 0.5

1095
00:56:54,400 --> 00:56:56,100
by 0.6 3F.

1096
00:56:56,300 --> 00:56:59,800
Delete that and we'll add him as grounded.

1097
00:57:00,500 --> 00:57:03,600
And we will add his Dimension there.

1098
00:57:05,500 --> 00:57:09,700
And that looks about it up.

1099
00:57:09,700 --> 00:57:11,000
We're almost out of time.

1100
00:57:11,800 --> 00:57:15,800
So let me just finish this guy up for the monstar.

1101
00:57:16,600 --> 00:57:20,900
The monstar is 1.0 0.5 0.5 with a minute and I know why our monstar is

1102
00:57:20,900 --> 00:57:25,200
so much taller than our guy, but I guess that's just because monsters

1103
00:57:25,200 --> 00:57:29,200
or bigger and scarier, so we'll add ground identity there.

1104
00:57:31,200 --> 00:57:36,700
Dimension and again, Jim equals 0.5 0.8, whoops, no 11.0.

1105
00:57:38,000 --> 00:57:41,300
F 5, F 0 .5 F.

1106
00:57:41,400 --> 00:57:43,500
Well, that's good .x.

1107
00:57:43,700 --> 00:57:50,000
Well, good that we caught that accidentally, there's the familiar, and

1108
00:57:50,000 --> 00:57:52,000
we'll have to do some more work on the familiar later because we

1109
00:57:52,000 --> 00:57:54,600
actually want the familiar to float and we haven't done anything about

1110
00:57:54,600 --> 00:57:55,100
that yet.

1111
00:57:55,100 --> 00:57:56,900
So I've got an entity.

1112
00:57:57,100 --> 00:57:57,600
There we go.

1113
00:57:58,900 --> 00:58:00,700
So what's the

1114
00:58:01,000 --> 00:58:02,400
Here, no semicolon.

1115
00:58:02,400 --> 00:58:03,700
Nobody likes the missing semicolon.

1116
00:58:03,700 --> 00:58:05,900
So let's go ahead and run that see where we're at.

1117
00:58:07,600 --> 00:58:10,400
Let's see if we can actually stop our guy.

1118
00:58:10,400 --> 00:58:12,800
That looks a bit wrong to me.

1119
00:58:14,600 --> 00:58:22,100
It looks like we're still lower than the trees are which which isn't

1120
00:58:22,100 --> 00:58:22,900
my intention.

1121
00:58:22,900 --> 00:58:28,300
So I've got a little bit of bogus and it's happening in my code more.

1122
00:58:28,300 --> 00:58:30,800
Importantly, we're still getting that, so that's

1123
00:58:30,900 --> 00:58:32,000
A little bit odd as well.

1124
00:58:32,000 --> 00:58:34,600
So some things a little something, as a little odd.

1125
00:58:34,600 --> 00:58:37,300
Let's just take a couple more seconds to take a look at that.

1126
00:58:37,700 --> 00:58:38,700
Where is my ad grounded?

1127
00:58:38,700 --> 00:58:39,200
Any code?

1128
00:58:39,200 --> 00:58:39,800
There it is.

1129
00:58:41,300 --> 00:58:42,900
So let's see.

1130
00:58:42,900 --> 00:58:48,200
Let me just make sure I did this reasonably so map into chunks space,

1131
00:58:48,200 --> 00:58:52,400
we're taking the initial p, and then we're doing that mapping.

1132
00:58:52,400 --> 00:58:56,100
We're adding it at the offset P so that seems right or change saving

1133
00:58:56,100 --> 00:58:56,700
the dimension.

1134
00:58:59,200 --> 00:59:02,500
That works roughly correct.

1135
00:59:02,500 --> 00:59:05,000
Let me go ahead and step into that but otherwise, I guess we'll have

1136
00:59:05,000 --> 00:59:08,200
to leave it here tomorrow and we'll do bucket tomorrow.

1137
00:59:08,200 --> 00:59:09,400
Ground identity.

1138
00:59:11,500 --> 00:59:13,100
Let's see what it says here.

1139
00:59:13,900 --> 00:59:14,900
So,

1140
00:59:16,300 --> 00:59:18,400
Map into chunks space.

1141
00:59:19,200 --> 00:59:20,300
Oh, you know what though?

1142
00:59:21,000 --> 00:59:29,500
Now that I think about it though really are drawing code is slightly

1143
00:59:29,500 --> 00:59:30,000
wrong.

1144
00:59:30,100 --> 00:59:34,200
In fact, I should fix the drawing code first before I look at this our

1145
00:59:34,200 --> 00:59:39,800
drawing code uses, the Z placement to to determine where to draw the

1146
00:59:39,800 --> 00:59:43,500
guy, but it really should use the minimum of the Z bounds, right?

1147
00:59:43,900 --> 00:59:45,900
It shouldn't be doing this as the entities

1148
00:59:46,600 --> 00:59:47,200
Right.

1149
00:59:47,500 --> 00:59:49,900
Instead it should be using

1150
00:59:52,000 --> 00:59:56,600
It should actually be using that, that point offset by it should be

1151
00:59:56,600 --> 00:59:59,800
using that base point because we're drawing up from the base.

1152
01:00:00,000 --> 01:00:00,200
Point.

1153
01:00:00,200 --> 01:00:03,300
That's how we were actually doing all of the other rendering, right?

1154
01:00:03,300 --> 01:00:08,900
Look, when we draw the rectangles we're actually doing I assume we're

1155
01:00:08,900 --> 01:00:10,800
actually doing that I don't actually know if that's true.

1156
01:00:10,800 --> 01:00:11,500
How are we doing it?

1157
01:00:11,500 --> 01:00:12,000
Let's see.

1158
01:00:13,800 --> 01:00:14,900
Draw a rectangle.

1159
01:00:14,900 --> 01:00:18,600
Play Love Tapas named entity with height 1.0.

1160
01:00:18,600 --> 01:00:19,600
Let's see here.

1161
01:00:22,500 --> 01:00:24,700
Clear, left top, layer left top.

1162
01:00:24,700 --> 01:00:25,500
Where is put out?

1163
01:00:25,500 --> 01:00:25,800
Okay.

1164
01:00:25,800 --> 01:00:26,300
There it is.

1165
01:00:26,700 --> 01:00:30,100
So player left top, we're not using that code at all.

1166
01:00:30,100 --> 01:00:34,000
That code is just bogus gravity, ground point, and it easy.

1167
01:00:37,400 --> 01:00:39,600
so, when we do this computation,

1168
01:00:41,100 --> 01:00:46,200
When do we actually offset the point by entities e right there.

1169
01:00:46,200 --> 01:00:48,600
So what we're doing is we're saying that the center

1170
01:00:49,700 --> 01:00:51,500
is the offset.

1171
01:00:54,300 --> 01:00:55,300
Yeah, you know what?

1172
01:00:55,400 --> 01:00:57,700
This is going to take a little bit because this I think is just wrong.

1173
01:00:57,700 --> 01:01:00,100
I think our drawing code is just bogus to begin with.

1174
01:01:01,200 --> 01:01:03,900
So that is actually it's not a fair test to say that it would look

1175
01:01:03,900 --> 01:01:06,300
like I was in the wrong place because this code is just kind of bogus.

1176
01:01:06,500 --> 01:01:09,700
So we should probably do is fix this so that it's actually drawing it.

1177
01:01:10,100 --> 01:01:15,200
So that the Z is actually starting at the lowest point in going up

1178
01:01:15,300 --> 01:01:18,500
from there because that's actually how we're thinking about the

1179
01:01:18,500 --> 01:01:22,600
drawing, in terms of how far it should be offset.

1180
01:01:22,600 --> 01:01:23,900
So that that does seem

1181
01:01:24,400 --> 01:01:27,400
It does seem a little bit bogus, which is how we're doing it, but

1182
01:01:27,400 --> 01:01:30,100
either way, we've got some bug's to deal with.

1183
01:01:30,400 --> 01:01:32,100
So I'll leave that for tomorrow.

1184
01:01:32,200 --> 01:01:35,900
I'll put that on the top of the to-do list, so we already went through

1185
01:01:35,900 --> 01:01:38,000
and went, how tall things are.

1186
01:01:38,100 --> 01:01:45,100
So let's say, debug drawing of Z levels and inclusion of Z to make

1187
01:01:45,100 --> 01:01:50,100
sure that there are no bugs.

1188
01:01:51,800 --> 01:01:53,900
because there are some now,

1189
01:01:54,300 --> 01:02:00,200
All right, so let's go ahead and go to the Q&A.

1190
01:02:00,200 --> 01:02:05,600
If you could, please please fix your question with Q: so that I can

1191
01:02:05,600 --> 01:02:09,700
see it and try to keep it to things that we've done on today's stream

1192
01:02:09,700 --> 01:02:13,700
or on a previous stream if you want to ask off-topic questions or

1193
01:02:13,700 --> 01:02:16,700
things about what we're going to do in the future or any other thing

1194
01:02:16,700 --> 01:02:19,400
like that, please do it in the pre stream.

1195
01:02:19,400 --> 01:02:23,000
Come about 15 minutes before a scheduled stream start time and we do

1196
01:02:23,000 --> 01:02:24,000
off-topic questions then.

1197
01:02:24,300 --> 01:02:27,600
We didn't do any today because we wanted to give everyone the

1198
01:02:27,600 --> 01:02:31,500
opportunity to watch John's programming lecture so that's why there

1199
01:02:31,500 --> 01:02:32,000
wasn't much today.

1200
01:02:32,000 --> 01:02:36,100
But on days when Jonathan doing compiler demos we always do

1201
01:02:36,100 --> 01:02:37,000
pre-screening questions.

1202
01:02:37,000 --> 01:02:38,900
So that's the time to answer those

1203
01:02:40,100 --> 01:02:41,400
I'm sorry to ask those.

1204
01:03:02,800 --> 01:03:06,100
That kid you just created is around 2 ft tall.

1205
01:03:08,700 --> 01:03:11,100
Yeah, isn't that that same?

1206
01:03:12,400 --> 01:03:13,600
Does that not seem right?

1207
01:03:15,600 --> 01:03:16,400
That's right.

1208
01:03:18,200 --> 01:03:20,200
Is there anything wrong with with that?

1209
01:03:22,800 --> 01:03:26,600
Oh you think that basically that thing that we got was just bogus?

1210
01:03:27,400 --> 01:03:30,000
So people are saying that that's too short for a seven-year-old.

1211
01:03:31,900 --> 01:03:35,600
So better data is that growth chart boys?

1212
01:03:35,600 --> 01:03:38,500
Girls height weight at Hall's dot MD.

1213
01:03:40,300 --> 01:03:40,700
Wait.

1214
01:03:40,700 --> 01:03:44,700
So just just just curious.

1215
01:03:45,600 --> 01:03:48,500
What is the actual height for a seven-year-old?

1216
01:03:49,000 --> 01:03:49,800
In that case?

1217
01:03:52,500 --> 01:03:53,600
Has somebody looked it up?

1218
01:04:03,400 --> 01:04:06,600
So as for someone asks, I was wondering, why do you have two windows

1219
01:04:06,600 --> 01:04:06,900
open?

1220
01:04:06,900 --> 01:04:10,200
And not just one, the answer is because I find that it's most

1221
01:04:10,200 --> 01:04:14,100
effective to work in a manner where I can have two files open at once.

1222
01:04:14,300 --> 01:04:15,600
Typically so I can do things.

1223
01:04:15,600 --> 01:04:20,800
Like you know, if I'm working on some region dot CPP, I often want to

1224
01:04:20,800 --> 01:04:24,700
see some region to H at the same time, so I just have hot keys to

1225
01:04:24,800 --> 01:04:27,700
allow me to view those and then I break my files up, such that I can

1226
01:04:27,700 --> 01:04:29,800
see, like my data types.

1227
01:04:29,800 --> 01:04:33,000
All together that make sense of things that I want to look at two.

1228
01:04:33,200 --> 01:04:33,400
There.

1229
01:04:33,900 --> 01:04:38,600
And then so that I have my CPP files when I'm working on them I can

1230
01:04:38,600 --> 01:04:42,500
quickly see a bunch of the types that are involved in that CPP file.

1231
01:04:53,600 --> 01:04:57,600
Over four feet seems right for a seven-year-old okay.

1232
01:04:58,000 --> 01:04:58,400
Well

1233
01:05:06,600 --> 01:05:08,300
I wonder if we can find.

1234
01:05:10,000 --> 01:05:10,700
Here we go.

1235
01:05:13,100 --> 01:05:17,500
Let's see, male children.

1236
01:05:17,500 --> 01:05:21,800
7 height in inches is 48.

1237
01:05:22,800 --> 01:05:23,800
so,

1238
01:05:27,600 --> 01:05:30,800
Oops, 48 inches in meters.

1239
01:05:32,300 --> 01:05:33,800
1.2.

1240
01:05:34,900 --> 01:05:38,000
Oh, so we were actually pretty close before.

1241
01:05:39,300 --> 01:05:41,200
That's huh.

1242
01:05:41,400 --> 01:05:43,700
Alright, so let's go ahead and

1243
01:05:45,800 --> 01:05:48,400
Let's go ahead and update that ad.

1244
01:05:51,200 --> 01:05:52,600
Player, that's what it's called.

1245
01:05:53,400 --> 01:05:55,900
So he is about that tall.

1246
01:05:58,600 --> 01:05:59,200
Let's say.

1247
01:06:09,200 --> 01:06:09,900
Let's see.

1248
01:06:09,900 --> 01:06:12,600
Any other questions about stuff that we were doing?

1249
01:06:20,000 --> 01:06:26,800
Doesn't look like it looks like mostly non programming related

1250
01:06:26,800 --> 01:06:27,900
questions.

1251
01:06:32,200 --> 01:06:35,100
As for the apps that we are using for the dev environment.

1252
01:06:35,200 --> 01:06:36,100
Yes, it is good.

1253
01:06:36,100 --> 01:06:43,500
New Emax is the editor Dev studio is the debugger and the, we use this

1254
01:06:43,500 --> 01:06:47,600
Mischief app for drawing, but that's not really a development tool.

1255
01:06:47,600 --> 01:06:50,700
It's just what we use for illustrating things on the string.

1256
01:06:51,900 --> 01:06:55,500
If you wanted to, you could get by with just if Studio because it's

1257
01:06:55,500 --> 01:06:57,000
got editing built in as well.

1258
01:06:57,300 --> 01:07:00,800
I don't like it's editor very much so I don't use

1259
01:07:01,000 --> 01:07:02,900
But there's nothing wrong with that.

1260
01:07:05,300 --> 01:07:07,500
Like people people do it.

1261
01:07:07,500 --> 01:07:10,900
People definitely follow handmade here on using just the visual studio

1262
01:07:10,900 --> 01:07:11,400
editor.

1263
01:07:11,600 --> 01:07:14,400
I think there are some trickiness and doing some of the live

1264
01:07:14,400 --> 01:07:18,300
co-editing stuff that we do getting that to work properly with its

1265
01:07:18,300 --> 01:07:22,900
build is a little janky sometimes but you know they've pretty sure

1266
01:07:22,900 --> 01:07:24,200
people have worked it out by now.

1267
01:07:24,700 --> 01:07:27,900
How to do that properly and visual studio so you don't really need the

1268
01:07:27,900 --> 01:07:28,800
Emax part of it.

1269
01:07:28,800 --> 01:07:31,500
That's just the editor that I prefer but you could, you could do it

1270
01:07:31,500 --> 01:07:33,800
just with, basically everything that we're doing, you could do just

1271
01:07:33,800 --> 01:07:35,000
with Visual Studio which is

1272
01:07:36,900 --> 01:07:40,800
You can use the Community Edition which Microsoft makes available for

1273
01:07:40,800 --> 01:07:41,200
free.

1274
01:07:51,200 --> 01:07:52,500
Let's see.

1275
01:07:55,400 --> 01:07:59,500
Any recommendations for tracking down Heap, corruption bugs.

1276
01:08:04,800 --> 01:08:05,400
Hmm.

1277
01:08:07,500 --> 01:08:09,800
so what I typically do,

1278
01:08:11,100 --> 01:08:14,300
for Heap, corruption bugs is

1279
01:08:17,200 --> 01:08:20,100
Let me see if I have any other questions that are, like, on topic to

1280
01:08:20,100 --> 01:08:23,200
stuff, we've been working on because it's a good question but it's not

1281
01:08:23,200 --> 01:08:25,399
really related to what we're doing at the moment.

1282
01:08:30,800 --> 01:08:32,300
Let's see.

1283
01:08:36,600 --> 01:08:37,000
Yes.

1284
01:08:37,000 --> 01:08:39,600
Oh, well, let me just answer this question because it's a good

1285
01:08:39,600 --> 01:08:40,100
question.

1286
01:08:40,800 --> 01:08:44,500
So typically, here's what I do to debug keep corruption errors.

1287
01:08:45,300 --> 01:08:47,300
So, you know, we've got this memory nothing.

1288
01:08:47,300 --> 01:08:47,800
Right.

1289
01:08:48,100 --> 01:08:52,700
And the way that the memory Arena thing works is I go ahead and I just

1290
01:08:52,800 --> 01:08:55,899
allocate out of a, you know, a memory block, right?

1291
01:08:56,399 --> 01:08:59,800
And so every time we do an allocation, we don't actually

1292
01:09:02,000 --> 01:09:02,399
Allocate.

1293
01:09:02,399 --> 01:09:03,500
Any memory really?

1294
01:09:03,500 --> 01:09:05,000
We just increment an integer.

1295
01:09:05,000 --> 01:09:08,100
So I mean our allocator, you know, it's still allocate, it's still an

1296
01:09:08,100 --> 01:09:09,200
allocation, right?

1297
01:09:09,600 --> 01:09:13,200
But our allocation is boiled down to just like plus equals the size.

1298
01:09:13,200 --> 01:09:15,800
That's that's the entire work of the allocation and that's intentional

1299
01:09:15,800 --> 01:09:17,899
because I want allocation to be completely free.

1300
01:09:18,200 --> 01:09:22,200
Like I don't want any time spent like program games should spend no

1301
01:09:22,200 --> 01:09:23,899
time allocating and deallocating memory.

1302
01:09:23,899 --> 01:09:26,899
If your game spends any time whatsoever allocating and deallocating

1303
01:09:26,899 --> 01:09:29,800
memory in my opinion, that is a poorer.

1304
01:09:30,000 --> 01:09:31,899
Architecture because there's no reason for it.

1305
01:09:31,899 --> 01:09:32,800
It's not necessary.

1306
01:09:32,899 --> 01:09:34,899
And so, all you're doing is wasting CPU time.

1307
01:09:34,899 --> 01:09:37,800
That could be better, spent Computing, something else or doing

1308
01:09:37,800 --> 01:09:41,000
something that would make the game better rather than allocating

1309
01:09:41,000 --> 01:09:43,800
ordeal nltk memory, which is not making the game better, it's just

1310
01:09:43,800 --> 01:09:44,399
bookkeeping.

1311
01:09:45,200 --> 01:09:49,300
So that's the way I tend to do it and that's intentional.

1312
01:09:49,300 --> 01:09:52,200
But what that means is, it's very, very difficult to track down.

1313
01:09:52,200 --> 01:09:55,400
Keep errors in this case because anytime you overwrite some of the

1314
01:09:55,400 --> 01:09:57,900
memory that you may have allocated here, right?

1315
01:09:58,300 --> 01:09:59,400
You will never know.

1316
01:09:59,400 --> 01:09:59,900
You'll just

1317
01:10:00,100 --> 01:10:04,400
Some other values that are, you know, somewhere else.

1318
01:10:04,400 --> 01:10:07,400
In that it we're being your something else and you'll get a bug.

1319
01:10:07,400 --> 01:10:08,700
But it's a hard to find bug.

1320
01:10:09,700 --> 01:10:12,400
So, typically what I do and we haven't had a chance.

1321
01:10:12,400 --> 01:10:14,200
We haven't had a reason to do this because we haven't had any

1322
01:10:14,200 --> 01:10:17,400
corruption bugs in the program so far.

1323
01:10:18,600 --> 01:10:22,200
Typically, what I do when we wanted to box, like that, is this class

1324
01:10:22,900 --> 01:10:26,200
this, the sort of shouldn't really say class this tool, this whatever

1325
01:10:26,200 --> 01:10:27,000
you want to call it.

1326
01:10:27,300 --> 01:10:31,200
I know I say class in my head sometimes I think of things as classes

1327
01:10:31,400 --> 01:10:33,200
and they're not what everyone else thinks those classes.

1328
01:10:33,200 --> 01:10:36,000
So I try to avoid using that term so that people won't think about

1329
01:10:36,000 --> 01:10:37,000
virtual functions like that.

1330
01:10:37,000 --> 01:10:38,000
Because that's not what I mean.

1331
01:10:39,100 --> 01:10:42,100
I kind of mean this utility, this thing that does stuff.

1332
01:10:42,200 --> 01:10:42,800
Right.

1333
01:10:44,000 --> 01:10:47,900
So basically this this combination this this initialized and push.

1334
01:10:48,400 --> 01:10:49,900
So these two functions here.

1335
01:10:50,300 --> 01:10:53,400
Well, I'll do is, I'll extend them to basically have two versions, one

1336
01:10:53,400 --> 01:10:56,100
version that I use for actually shipping the game, which looks pretty

1337
01:10:56,100 --> 01:10:59,400
much exactly like what you see here, modulo few things, it will

1338
01:10:59,400 --> 01:11:03,000
probably add later as well, but then the other version I have is a

1339
01:11:03,000 --> 01:11:07,100
debug version which wait does, is instead of actually doing the

1340
01:11:07,100 --> 01:11:10,200
allocation this nice clean way that I've set up here, it actually does

1341
01:11:10,200 --> 01:11:14,700
do an allocation, every time you do a push and what it does is it

1342
01:11:14,700 --> 01:11:18,100
calls through to the OS layer and ask for a block

1343
01:11:18,300 --> 01:11:19,100
lack of memory.

1344
01:11:20,500 --> 01:11:23,300
With a special debug allocation routine, and what that debug

1345
01:11:23,300 --> 01:11:27,700
allocation routine is is it does a virtual a lock or a mem map,

1346
01:11:27,700 --> 01:11:29,300
depending on which platform you're on, right?

1347
01:11:29,800 --> 01:11:34,800
But it does one of these and the way that it works is it asks for the

1348
01:11:34,800 --> 01:11:35,600
memory

1349
01:11:39,100 --> 01:11:43,800
If you imagine the allocation, right, let's say that this is the

1350
01:11:43,800 --> 01:11:45,000
virtual page size.

1351
01:11:46,100 --> 01:11:49,200
So let's say that this is a 4K page, right?

1352
01:11:49,800 --> 01:11:54,600
Because that's how big page boundaries are in in small in regular page

1353
01:11:54,600 --> 01:11:56,700
size operation.

1354
01:11:56,900 --> 01:11:59,800
They can go up to 64 K and 2 megabytes and other things like that.

1355
01:11:59,800 --> 01:11:59,900
But

1356
01:12:00,300 --> 01:12:02,200
Let's say that the page size was for okay for now.

1357
01:12:02,700 --> 01:12:06,100
So, normally what happens is when you do a virtual a lock right, you

1358
01:12:06,100 --> 01:12:09,400
allocate some memory and you start using it right from here, right?

1359
01:12:09,400 --> 01:12:13,900
From from the first byte offset of the page, and you just use however

1360
01:12:13,900 --> 01:12:14,700
much you're going to use.

1361
01:12:14,800 --> 01:12:17,300
And you know, there's these 4K Pages, they're mapped in your process

1362
01:12:17,300 --> 01:12:18,800
face and everything's fine and whatever.

1363
01:12:19,600 --> 01:12:23,100
But if what that means is that if I was to do a virtual Alec and ask

1364
01:12:23,100 --> 01:12:26,300
for the amount of memory that I actually wanted, let's say I wanted 6K

1365
01:12:26,700 --> 01:12:27,200
right.

1366
01:12:27,800 --> 01:12:30,000
I would get back this region here.

1367
01:12:31,300 --> 01:12:35,700
And it would map these two pages for me and I could write stuff into

1368
01:12:35,700 --> 01:12:38,400
here and it would just right in here, right?

1369
01:12:38,600 --> 01:12:42,400
And if I wrote over this, nothing would happen.

1370
01:12:42,400 --> 01:12:46,400
Until I actually wrote off to hear like I'd have to right past the end

1371
01:12:46,400 --> 01:12:48,000
of the page here, right?

1372
01:12:48,000 --> 01:12:51,400
If I did a virtual Alec and maybe this would actually be mapped for

1373
01:12:51,400 --> 01:12:51,900
all I know.

1374
01:12:51,900 --> 01:12:53,500
So it might be that nothing would even happen.

1375
01:12:53,500 --> 01:12:56,900
Then I just get silent bugs because you know, this thing's over

1376
01:12:56,900 --> 01:12:57,900
writing its bounds.

1377
01:12:58,700 --> 01:13:02,400
If I were to overwrite this way, I'd be more likely to fault but again

1378
01:13:02,400 --> 01:13:03,900
even that could be mapped.

1379
01:13:05,800 --> 01:13:10,400
But usually people very rarely underflow buffers, usually you overflow

1380
01:13:10,400 --> 01:13:12,400
buffers, that's just tends to be the way things go.

1381
01:13:13,300 --> 01:13:17,200
So what I do is I virtual Alec basically, a bigger range that I need.

1382
01:13:17,200 --> 01:13:21,000
What I do is I allocate an additional page, right?

1383
01:13:22,500 --> 01:13:27,200
So that basically I've got, you know, something that looks, you know,

1384
01:13:27,200 --> 01:13:29,400
that's too big to even draw.

1385
01:13:29,400 --> 01:13:30,500
So let's do this this way.

1386
01:13:30,500 --> 01:13:32,100
Let's draw the pages a little bit smaller.

1387
01:13:32,400 --> 01:13:34,900
We go so 4K, 4K.

1388
01:13:35,100 --> 01:13:36,200
A 4K.

1389
01:13:36,900 --> 01:13:42,300
What I'll do is I'll allocate it such that I place allocate one extra

1390
01:13:42,300 --> 01:13:43,100
page that I need.

1391
01:13:43,100 --> 01:13:48,600
So 6K needs 8K worth, you know, two pages to fit, I'll allocate

1392
01:13:48,600 --> 01:13:49,700
actually three pages.

1393
01:13:49,700 --> 01:13:54,400
So one more than the amount I need and then I'll essentially align the

1394
01:13:54,400 --> 01:14:02,100
6K the other way so that the 6K boundary starts here and ends here,

1395
01:14:02,600 --> 01:14:04,800
right, it ends right on the page boundary.

1396
01:14:06,400 --> 01:14:10,400
What I then do is I take this extra page that I've allocated and I'm M

1397
01:14:10,400 --> 01:14:11,100
protect it.

1398
01:14:11,100 --> 01:14:12,900
I do virtual protect

1399
01:14:15,900 --> 01:14:20,100
On that page and I set it to not be allowed to be accessed, read or

1400
01:14:20,100 --> 01:14:20,600
write.

1401
01:14:21,900 --> 01:14:26,200
What that allows me to do is even if anybody ever in the code ever

1402
01:14:26,200 --> 01:14:31,100
over rights by even one bite the end of the buffer, you get an

1403
01:14:31,100 --> 01:14:32,200
immediate page fault.

1404
01:14:32,200 --> 01:14:36,200
And that is a really easy way to track down memory errors.

1405
01:14:36,900 --> 01:14:40,800
What you can do is you could run your program twice in two different

1406
01:14:40,800 --> 01:14:44,400
modes to you can do it this way and then you can do the same thing,

1407
01:14:44,400 --> 01:14:45,300
but do it in reverse?

1408
01:14:46,400 --> 01:14:47,800
Line up the page.

1409
01:14:47,800 --> 01:14:50,300
So that um, men protect the first page.

1410
01:14:51,200 --> 01:14:54,700
And you align it like that.

1411
01:14:54,700 --> 01:14:58,200
So now that one bite over run in the other direction will fault.

1412
01:14:58,200 --> 01:14:59,800
And if you run the program once

1413
01:15:00,000 --> 01:15:03,700
This allocation scheme and once with this allocation scheme, you will

1414
01:15:03,700 --> 01:15:07,800
have guarantee that you will have hard faulted on any type of overrun

1415
01:15:07,800 --> 01:15:09,500
by 1 B, in any direction.

1416
01:15:09,900 --> 01:15:13,700
Now, this gets a little more complicated if you have alignment issues.

1417
01:15:14,600 --> 01:15:19,600
So if you are aligning, your your allocations to say 16 B boundaries,

1418
01:15:19,600 --> 01:15:21,500
which is common in Cindy operation.

1419
01:15:23,400 --> 01:15:26,500
If you're doing that, then you can't ever really do anything.

1420
01:15:26,500 --> 01:15:30,200
About the fact that you're going to be always 16 B aligned, which

1421
01:15:30,200 --> 01:15:35,400
means that someone could overwrite a boundary by up to 15 B if the

1422
01:15:35,400 --> 01:15:38,100
allocation wasn't actually allocating the full amount.

1423
01:15:38,100 --> 01:15:43,800
But since it's unusual to allocate less than a 16 byte granularity for

1424
01:15:43,800 --> 01:15:45,100
a 16 byte aligned thing.

1425
01:15:45,100 --> 01:15:49,200
Usually this isn't a problem but that's typically what I do and then I

1426
01:15:49,200 --> 01:15:51,400
run the program once in this way and once in that way and that should

1427
01:15:51,400 --> 01:15:52,200
get you just about

1428
01:15:52,400 --> 01:15:54,500
I hope that makes some sense.

1429
01:16:02,900 --> 01:16:04,200
Let's see.

1430
01:16:09,000 --> 01:16:12,000
If you're not allocating memory as the game goes, are you allocating a

1431
01:16:12,000 --> 01:16:12,700
bunch of the start?

1432
01:16:12,700 --> 01:16:13,800
How does that work?

1433
01:16:14,000 --> 01:16:16,900
Yes, we allocate all the memory at the outset.

1434
01:16:17,100 --> 01:16:20,800
At the moment, we allocate a lot more than we probably actually need

1435
01:16:21,600 --> 01:16:23,200
because we're just in development right now.

1436
01:16:23,200 --> 01:16:27,400
But later, we'll, we'll probably have a little bit more to say about

1437
01:16:27,400 --> 01:16:28,900
exactly how much we should do.

1438
01:16:29,300 --> 01:16:32,300
But if you want more information about that, obviously, you can you

1439
01:16:32,300 --> 01:16:36,800
can come here to the video archive and if you if you look at the video

1440
01:16:36,800 --> 01:16:38,000
archive, we've got

1441
01:16:39,200 --> 01:16:43,500
Every single day of coatings on here, you can go look up exactly what

1442
01:16:43,500 --> 01:16:44,100
that was.

1443
01:16:44,300 --> 01:16:48,400
So I believe, let's take a look here.

1444
01:16:49,900 --> 01:16:58,200
Platform-independent game memory is probably the one to look at Star

1445
01:16:58,200 --> 01:17:00,400
Trek but I'm not entirely sure.

1446
01:17:01,200 --> 01:17:02,400
I think that's probably it.

1447
01:17:02,400 --> 01:17:07,200
So I would probably take a look at that and just, you know,

1448
01:17:09,800 --> 01:17:11,600
watch the video to tell you.

1449
01:17:13,800 --> 01:17:16,100
What are the Linux equivalencies functions?

1450
01:17:16,100 --> 01:17:20,100
I think M mapped and M protect our the Linux equivalents to the

1451
01:17:20,100 --> 01:17:20,800
functions.

1452
01:17:28,800 --> 01:17:29,700
So let's see.

1453
01:17:29,700 --> 01:17:31,800
Do we have any topic questions still?

1454
01:17:31,800 --> 01:17:32,600
No.

1455
01:17:33,200 --> 01:17:35,500
So I guess I'll try to do the closest.

1456
01:17:35,500 --> 01:17:39,300
I'll try to sort questions by the closest to on topic.

1457
01:17:39,600 --> 01:17:40,400
That seem fair.

1458
01:17:42,000 --> 01:17:42,900
Let's see.

1459
01:17:54,100 --> 01:17:56,200
How far along are we in?

1460
01:17:56,200 --> 01:17:57,400
Developing the game.

1461
01:17:58,300 --> 01:17:59,900
We are so

1462
01:18:00,000 --> 01:18:05,100
Only do an hour a night and so the number of days is the number of

1463
01:18:05,100 --> 01:18:06,000
hours roughly.

1464
01:18:06,000 --> 01:18:11,000
So we're 76 hours in which is like, we're almost UND 880.

1465
01:18:11,200 --> 01:18:13,700
That'll mean we're at our second week of programming.

1466
01:18:13,700 --> 01:18:16,600
If it was a work week, right, 40 hours a week of programming is the

1467
01:18:16,600 --> 01:18:17,900
typical amount.

1468
01:18:17,900 --> 01:18:19,600
I kind of figure.

1469
01:18:21,400 --> 01:18:27,200
So we're about two weeks in and so we don't really have an engine yet,

1470
01:18:27,700 --> 01:18:29,300
we're working towards the engine.

1471
01:18:30,300 --> 01:18:35,200
So basically we are, you know, we're at the point where we're, we're

1472
01:18:35,200 --> 01:18:38,200
getting pretty close to having all the stuff specced out that we

1473
01:18:38,200 --> 01:18:39,700
actually want in our engine.

1474
01:18:39,800 --> 01:18:43,000
We've got a little to-do list here that

1475
01:18:44,600 --> 01:18:48,600
It's not that we want to still sort of figure out mostly.

1476
01:18:48,600 --> 01:18:50,300
This is the, the kind of this.

1477
01:18:50,300 --> 01:18:55,100
This first part here is mostly the tricky part, and I guess a little

1478
01:18:55,100 --> 01:18:57,400
bit down here, which is this stuff.

1479
01:18:58,100 --> 01:18:58,500
But yeah.

1480
01:18:58,500 --> 01:19:02,100
So we've got, you know, I'd say we've got at least two full weeks of

1481
01:19:02,100 --> 01:19:07,700
programming more to do to get through a lot of these things and kind

1482
01:19:07,700 --> 01:19:08,900
of have a better sense of it.

1483
01:19:09,300 --> 01:19:11,200
And then once we're done with that, we'll start on game production

1484
01:19:11,200 --> 01:19:13,900
proper and that's like writing the real renderer and then

1485
01:19:15,000 --> 01:19:17,300
Kind of like working through all the systems and making sure they're

1486
01:19:17,300 --> 01:19:20,900
all like full you know, full quality and stuff like that.

1487
01:19:21,200 --> 01:19:23,800
But yeah, so we're not very far into it.

1488
01:19:23,800 --> 01:19:27,000
I would say I mean two weeks is not very long to be programming on a

1489
01:19:27,000 --> 01:19:29,000
game especially when you're programming from scratch.

1490
01:19:29,700 --> 01:19:35,300
So, you know, I would expect, you know, you wouldn't it's pretty

1491
01:19:35,300 --> 01:19:40,200
unlikely to make any kind of game from scratch in in that kind of

1492
01:19:40,200 --> 01:19:40,700
time.

1493
01:19:41,400 --> 01:19:43,700
If you're, if you're, you know, not using an engine or something like

1494
01:19:43,700 --> 01:19:44,100
that.

1495
01:19:49,500 --> 01:19:54,700
Someone suggesting Emin map is another Linux equivalent call.

1496
01:20:02,900 --> 01:20:03,700
Is this insane?

1497
01:20:03,900 --> 01:20:05,100
Is this in C++?

1498
01:20:05,100 --> 01:20:05,600
Yes.

1499
01:20:05,800 --> 01:20:08,000
Well it's it's sort of C++.

1500
01:20:11,800 --> 01:20:14,200
We do use a little bit of C++ things.

1501
01:20:14,500 --> 01:20:18,200
So if you look here, you can see in our math Library.

1502
01:20:20,100 --> 01:20:22,800
This stuff is C++, right?

1503
01:20:23,600 --> 01:20:24,600
Operator overloading.

1504
01:20:25,400 --> 01:20:34,200
We also use some function overloading and that's mostly it.

1505
01:20:34,400 --> 01:20:38,400
We also 0, and we use the fact that we don't have to use, type deaths

1506
01:20:38,400 --> 01:20:42,900
to Define struck names and Union names the like that but that's mostly

1507
01:20:42,900 --> 01:20:43,400
it.

1508
01:20:43,600 --> 01:20:48,200
So really, we're sort of programming in c but technically it is C,

1509
01:20:48,200 --> 01:20:48,600
plus plus

1510
01:20:48,800 --> 01:20:51,100
Cuz we use a few C plus plus features here.

1511
01:20:51,100 --> 01:20:55,800
And there that we, or I should say that I think are useful.

1512
01:20:58,200 --> 01:20:59,800
I stay away from most of the other seat post.

1513
01:21:00,000 --> 01:21:01,600
Features that I don't think are so useful.

1514
01:21:12,000 --> 01:21:13,200
Does C++ compiler?

1515
01:21:13,200 --> 01:21:17,500
Generate hidden code like Constructors copy Constructors and Cetera in

1516
01:21:17,500 --> 01:21:20,800
the way that you structuring the game.

1517
01:21:24,700 --> 01:21:26,700
So I'm not really sure how to answer that question.

1518
01:21:26,700 --> 01:21:29,200
I mean, every compiler,

1519
01:21:30,400 --> 01:21:34,500
Like even a straight C generates hidden code, right?

1520
01:21:36,400 --> 01:21:40,000
Like if you were to assign a struct to another struck that does

1521
01:21:40,000 --> 01:21:44,200
essentially like a mem copyright and you didn't write that code and so

1522
01:21:44,200 --> 01:21:46,600
you're not controlling how that stuff got copied.

1523
01:21:48,200 --> 01:21:51,900
And similarly like you know in terms of

1524
01:21:53,400 --> 01:21:55,600
Various ways that things could be happening.

1525
01:21:55,800 --> 01:21:58,100
I mean there's just their stuff that happens.

1526
01:21:58,100 --> 01:21:59,500
That's that's hidden code.

1527
01:22:00,400 --> 01:22:04,900
In that sense, like C is not one-to-one readable in a way that like

1528
01:22:04,900 --> 01:22:10,000
directly implies what the Assembly Language is doing modulo, you know,

1529
01:22:10,000 --> 01:22:12,400
assignment of registers or something.

1530
01:22:13,700 --> 01:22:17,300
So in some sense I would say that hidden code is getting his getting

1531
01:22:17,300 --> 01:22:17,600
done.

1532
01:22:17,600 --> 01:22:18,000
Yes.

1533
01:22:18,300 --> 01:22:22,000
But in another sense I would say most of the time we're staying away

1534
01:22:22,000 --> 01:22:22,700
from any

1535
01:22:23,100 --> 01:22:25,300
Like weird hidden code generation.

1536
01:22:25,600 --> 01:22:26,500
We don't use templates.

1537
01:22:26,500 --> 01:22:28,000
We don't use Constructors and destructors.

1538
01:22:28,000 --> 01:22:29,000
We don't use stuff.

1539
01:22:29,000 --> 01:22:31,500
That's going to proliferate a lot of code that we don't explicitly,

1540
01:22:31,500 --> 01:22:32,000
right?

1541
01:22:33,000 --> 01:22:36,100
We do use operator overloading so that's some hidden code.

1542
01:22:36,100 --> 01:22:39,100
And that's four Vector, use, and so pretty much.

1543
01:22:39,800 --> 01:22:42,100
If that's what you mean by hidden code, I would say, operator,

1544
01:22:42,100 --> 01:22:45,800
overloading is the primary place for met for our math for our Vector

1545
01:22:45,800 --> 01:22:46,500
operators.

1546
01:22:46,900 --> 01:22:49,300
That's the place that you would see the compiler generating code.

1547
01:22:49,300 --> 01:22:51,500
That's not obviously there when you look at it.

1548
01:22:54,800 --> 01:22:56,800
Do you use the STL at all in your code?

1549
01:22:56,800 --> 01:22:58,300
No, I do not.

1550
01:22:59,500 --> 01:23:02,900
I don't think the STL is very good and I wouldn't recommend using it.

1551
01:23:04,200 --> 01:23:08,400
It it's the things that are provided in the STL are very rudimentary

1552
01:23:08,400 --> 01:23:09,200
and simple.

1553
01:23:09,300 --> 01:23:13,800
They are not complicated pieces of code and they are done in the sdl

1554
01:23:13,800 --> 01:23:15,700
in a way that's very complicated cumbersome.

1555
01:23:15,700 --> 01:23:21,200
And I find problematic when used in real code bases.

1556
01:23:21,200 --> 01:23:23,300
And so, I would never recommend using the STL

1557
01:23:23,900 --> 01:23:26,000
If you need something like that, you should write it yourself.

1558
01:23:26,400 --> 01:23:30,400
I think it's, well worth the effort to make sure that you don't

1559
01:23:31,200 --> 01:23:34,200
rely on it because it's not, it's not well designed and it's not,

1560
01:23:34,200 --> 01:23:37,100
well, executed in general as a piece of software.

1561
01:23:37,100 --> 01:23:41,600
So, and in general, you want to try to avoid having your basic

1562
01:23:41,900 --> 01:23:44,900
operations, like data types like that being done in something that's,

1563
01:23:45,000 --> 01:23:45,400
you know,

1564
01:23:46,600 --> 01:23:47,400
kind of janky.

1565
01:23:50,100 --> 01:23:56,300
Okay, I think we met maybe are coming to the end.

1566
01:23:58,700 --> 01:23:59,800
Coming to the end here.

1567
01:24:01,500 --> 01:24:03,200
Let's see.

1568
01:24:05,600 --> 01:24:07,200
Let's see.

1569
01:24:12,400 --> 01:24:12,800
Yeah.

1570
01:24:14,700 --> 01:24:15,300
Looks good.

1571
01:24:16,700 --> 01:24:17,400
Looks good.

1572
01:24:18,200 --> 01:24:20,900
I'd say that's pretty much all for today, in terms of questions.

1573
01:24:21,300 --> 01:24:23,800
So I am going to

1574
01:24:27,400 --> 01:24:30,700
Yeah, I am going to go ahead and call it, don't see any more

1575
01:24:30,700 --> 01:24:31,300
questions.

1576
01:24:32,000 --> 01:24:33,800
So I'm going to go ahead and close things down here.

1577
01:24:34,100 --> 01:24:36,900
We've got we know what we're doing tomorrow, so that's good.

1578
01:24:38,200 --> 01:24:43,100
And yeah, so let's let's, let's go ahead and end for the night.

1579
01:24:45,000 --> 01:24:48,800
Thank you very much, everyone for joining me for another another

1580
01:24:48,800 --> 01:24:49,800
episode of handmade here.

1581
01:24:49,800 --> 01:24:54,400
It's been a pleasure coding with you, as always, if you would like to

1582
01:24:54,600 --> 01:24:54,900
get your

1583
01:24:55,100 --> 01:24:56,200
And copy of the source code.

1584
01:24:56,200 --> 01:24:58,900
You can always pre-order the game on handmade hero dot-org.

1585
01:24:58,900 --> 01:25:01,500
And it comes with the source code.

1586
01:25:01,500 --> 01:25:04,800
I upload every night after I'm done programming so that you can play

1587
01:25:04,800 --> 01:25:08,000
around with it at home if you want and use it as a thing that for, you

1588
01:25:08,000 --> 01:25:10,800
know, for Learning and stuff, you can kind of tweak things and that's

1589
01:25:10,800 --> 01:25:11,600
a good way to learn.

1590
01:25:11,600 --> 01:25:15,000
I find is to be able to play with stuff Break Stuff and and kind of

1591
01:25:15,000 --> 01:25:17,000
figure out how it's working in a more Hands-On way.

1592
01:25:18,000 --> 01:25:19,900
So if you want to do that, you can do that at home made here at

1593
01:25:19,900 --> 01:25:21,100
orbital period of button.

1594
01:25:21,400 --> 01:25:24,900
If you want support the video series, we also have a patreon page if

1595
01:25:25,000 --> 01:25:27,900
Go to the patreon page, you can subscribe there and that's a way to

1596
01:25:27,900 --> 01:25:30,700
support the video series and it's always very much appreciated.

1597
01:25:31,000 --> 01:25:33,700
We also have a tweetbot so you can follow the series.

1598
01:25:34,100 --> 01:25:34,800
We're here.

1599
01:25:34,900 --> 01:25:39,200
Every weeknight basically, sometimes we're in the mornings on Fridays,

1600
01:25:39,200 --> 01:25:41,300
for example, so we will move the times around.

1601
01:25:41,300 --> 01:25:44,500
So if you want to know the schedule, you can always click on the Tweet

1602
01:25:44,500 --> 01:25:48,000
pot or you can some you know if you are on Twitter you can follow the

1603
01:25:48,000 --> 01:25:50,500
tweetbot and that way you'll get the tweets delivered to you and it

1604
01:25:50,500 --> 01:25:51,700
tweets about twice a day.

1605
01:25:52,400 --> 01:25:54,900
Once in the morning to say, when the stream will be and once

1606
01:25:55,900 --> 01:25:57,300
An hour before the stream starts.

1607
01:25:57,700 --> 01:26:00,900
It also has a like a weekend thing.

1608
01:26:00,900 --> 01:26:03,000
It does, we're at tweets out the schedule for the whole week, so you

1609
01:26:03,000 --> 01:26:04,200
can always take a look at that way.

1610
01:26:04,200 --> 01:26:07,000
So that's kind of Handy to got a video archived on YouTube with all

1611
01:26:07,000 --> 01:26:07,600
the old videos.

1612
01:26:07,600 --> 01:26:11,100
And we also have a news and Forum site, which also has an annotated

1613
01:26:11,100 --> 01:26:13,800
version of the video archive, which is pretty awesome.

1614
01:26:13,900 --> 01:26:15,300
I highly recommend checking it out.

1615
01:26:15,300 --> 01:26:18,300
It's also got some great coding resources up there like ports to Linux

1616
01:26:18,300 --> 01:26:20,600
and Mac if you're trying to follow along on a platform, it's not

1617
01:26:20,600 --> 01:26:21,300
windows.

1618
01:26:21,900 --> 01:26:24,300
It's got a place we can ask questions.

1619
01:26:24,300 --> 01:26:25,000
It's just got

1620
01:26:25,100 --> 01:26:25,700
lots of good stuff.

1621
01:26:25,700 --> 01:26:27,900
So if you're trying to learn from the series, I really recommend

1622
01:26:27,900 --> 01:26:28,800
checking it out.

1623
01:26:28,900 --> 01:26:31,000
Some people in the community have done some really helpful things up

1624
01:26:31,000 --> 01:26:33,200
there and it's just a good place to go.

1625
01:26:34,300 --> 01:26:36,300
So again, thanks everyone for joining me tomorrow.

1626
01:26:36,400 --> 01:26:37,800
We'll be back here at 8:00 p.m.

1627
01:26:37,800 --> 01:26:39,700
Pacific Standard Time are normal slot.

1628
01:26:39,700 --> 01:26:45,300
We were 30 minutes late today, because we moved the stream up to give

1629
01:26:45,500 --> 01:26:47,200
John stream a chance to finish.

1630
01:26:48,000 --> 01:26:52,000
We always try to move the stream to accommodate the compiler demos of

1631
01:26:52,000 --> 01:26:54,200
John does, because I'm pretty excited about the language he's working

1632
01:26:54,200 --> 01:26:54,800
on and

1633
01:26:55,600 --> 01:26:59,800
I want everyone to watch it and and be excited.

1634
01:27:00,000 --> 01:27:00,900
Because I know I am.

1635
01:27:00,900 --> 01:27:02,600
So that's why we were 30 minutes.

1636
01:27:03,300 --> 01:27:06,900
You know, that's why our scheduled time was, 30 minutes, it was 8:30

1637
01:27:07,000 --> 01:27:09,500
tonight, but tomorrow will be back at 8 p.m.

1638
01:27:09,900 --> 01:27:10,800
and it should be 8 p.m.

1639
01:27:10,800 --> 01:27:13,200
for the rest of the week until Friday when it will be at.

1640
01:27:13,200 --> 01:27:13,900
It's 9:00 a.m.

1641
01:27:13,900 --> 01:27:17,500
slot as usual so, pretty much other than today, every day is a its

1642
01:27:17,500 --> 01:27:18,700
normal schedule for this week.

1643
01:27:19,000 --> 01:27:20,300
So I hope to see you back here.

1644
01:27:20,300 --> 01:27:27,200
Tomorrow night, have a wonderful Tuesday and yeah, enjoy coding till I

1645
01:27:27,200 --> 01:27:27,600
see you again.

1646
01:27:27,900 --> 01:27:28,700
Take it easy everyone.

