1
00:00:02,200 --> 00:00:07,000
Okay, we are back with the Q&A for the final intro to see session the

2
00:00:07,000 --> 00:00:07,700
test sessions.

3
00:00:07,700 --> 00:00:08,300
We've been doing.

4
00:00:08,300 --> 00:00:09,400
I think they went pretty well.

5
00:00:10,200 --> 00:00:11,800
Obviously, it's hard to cram.

6
00:00:13,200 --> 00:00:17,600
Everything you might want to know about, see into just 5 days, 5 hours

7
00:00:17,600 --> 00:00:18,100
or something.

8
00:00:18,100 --> 00:00:18,400
I don't know.

9
00:00:18,400 --> 00:00:20,500
We got six hours of time.

10
00:00:20,500 --> 00:00:22,500
So I strongly suspect that.

11
00:00:22,500 --> 00:00:25,600
You know, if I really maybe at some point based on the response to the

12
00:00:25,600 --> 00:00:29,000
handmade hero thing, which has been much much more enthusiastic than

13
00:00:29,500 --> 00:00:30,800
any possible thing.

14
00:00:30,800 --> 00:00:31,600
I was expecting.

15
00:00:32,400 --> 00:00:35,000
I was expecting anyone to even notice the stream for months.

16
00:00:36,400 --> 00:00:38,800
Basically, since there is so much interest at some point.

17
00:00:38,800 --> 00:00:42,300
I probably should go through and do a real full intro to see that's

18
00:00:42,300 --> 00:00:42,600
like,

19
00:00:42,700 --> 00:00:45,800
You know, four weeks long or something like that so that people who

20
00:00:45,800 --> 00:00:49,600
literally have no idea how to program or how to program in, C can come

21
00:00:49,600 --> 00:00:52,700
to it and actually learn absolutely everything instead of kind of me

22
00:00:52,700 --> 00:00:55,100
quickly going through things and showing you okay here's examples of

23
00:00:55,100 --> 00:00:59,300
all the stuff that we're going to be doing and now good luck, but

24
00:00:59,500 --> 00:01:02,300
hopefully it was good for some people and it's I was trying to I think

25
00:01:02,300 --> 00:01:04,800
maybe it would was hopefully a little bit helpful for people who kind

26
00:01:04,800 --> 00:01:07,100
of know programming already but maybe don't know all the see stuff

27
00:01:07,100 --> 00:01:10,100
with like, you know pointers and how they work and where stuff goes on

28
00:01:10,100 --> 00:01:12,500
the stack and executables and stuff because that's kind of stuff.

29
00:01:12,700 --> 00:01:14,800
Probably that, you know, you wouldn't necessarily know if you program

30
00:01:14,800 --> 00:01:18,000
in a different language that worked differently or an environment that

31
00:01:18,000 --> 00:01:19,200
work differently and so on so forth.

32
00:01:19,200 --> 00:01:24,500
So anyway, thanks everyone for coming to the Q&A at senior.

33
00:01:24,500 --> 00:01:29,600
Ettore would be the thing to put at senior ettore in the chat window.

34
00:01:29,600 --> 00:01:32,000
If you want me to see it for the questions.

35
00:01:32,000 --> 00:01:37,100
And since this is a Sunday, I don't think I have to go until like 5:30

36
00:01:37,100 --> 00:01:37,700
or something.

37
00:01:37,700 --> 00:01:40,700
So we can do Q&A Q&A for a long time today.

38
00:01:40,700 --> 00:01:42,000
If we want to we'll see how it goes.

39
00:01:45,100 --> 00:01:48,900
Speaker asks, have you ever found use for a bit Fields?

40
00:01:49,200 --> 00:01:54,600
The answer is, I don't know that I've ever used bit Fields myself.

41
00:01:54,600 --> 00:01:57,600
Much bit fields, are basically a thing for those of you don't know,

42
00:01:57,600 --> 00:02:02,000
where you basically allowed to Define, sort of struct almost, but

43
00:02:02,000 --> 00:02:04,800
where the structs have a specific number of bits allocated to each

44
00:02:04,800 --> 00:02:07,000
member that's less than a bite often times.

45
00:02:08,199 --> 00:02:11,400
And I don't tend to use them only because I like to be more explicit

46
00:02:11,400 --> 00:02:11,900
in my code.

47
00:02:11,900 --> 00:02:13,600
And I don't know what the compiler is going to do.

48
00:02:13,800 --> 00:02:16,600
And I do that bit Fields, the compiler is going to generate some

49
00:02:16,600 --> 00:02:21,400
stuff, and I'd rather just hand code it, usually, but there, I mean, I

50
00:02:21,400 --> 00:02:23,900
do do things that you could do in bit Fields.

51
00:02:23,900 --> 00:02:25,000
I just usually hand code them.

52
00:02:25,000 --> 00:02:27,400
So, yes, I mean, I could easily use bit Fields.

53
00:02:27,400 --> 00:02:29,500
I just don't tend to, but they're useful.

54
00:02:33,600 --> 00:02:37,200
So in watch the Expressions, typing X comma, B, when an input variable

55
00:02:37,200 --> 00:02:39,200
X is initialized, will allow you to view the values in binary.

56
00:02:39,400 --> 00:02:40,300
Does it actually?

57
00:02:40,300 --> 00:02:42,300
Or is that only if you're on the newer version?

58
00:02:42,300 --> 00:02:44,300
That's what we were trying to figure out earlier in the Stream.

59
00:02:44,500 --> 00:02:45,800
So y comma B.

60
00:02:45,800 --> 00:02:46,900
Yeah, it doesn't work.

61
00:02:47,200 --> 00:02:49,700
So I think that I think they added that later.

62
00:02:49,700 --> 00:02:52,000
So hopefully in the mainstream will be able to do that because I'm

63
00:02:52,000 --> 00:02:55,900
going to switch to 2013 Community Edition in the mainstream, but the

64
00:02:55,900 --> 00:02:58,500
problem is, I'm still, I'm using the one that was on this computer.

65
00:02:58,500 --> 00:02:59,300
That was

66
00:03:00,100 --> 00:03:04,000
Original one that was license for this computer because I didn't know

67
00:03:04,000 --> 00:03:06,600
I needed to use some of the I want to be able to, like it's used the

68
00:03:06,600 --> 00:03:07,500
register window and stuff.

69
00:03:07,500 --> 00:03:10,100
So I didn't want to use express for some of the things we were doing.

70
00:03:10,700 --> 00:03:13,400
But now that I know that it's actually free to just use the newer one.

71
00:03:13,400 --> 00:03:16,800
I'll be using a newer one and then X comma B should hopefully work, we

72
00:03:16,800 --> 00:03:17,200
hope.

73
00:03:18,400 --> 00:03:19,600
Idiocracy regarding your diagram.

74
00:03:19,600 --> 00:03:21,200
A virtual page is just going to physical memory.

75
00:03:21,200 --> 00:03:22,800
Does the virtual memory address space itself?

76
00:03:22,800 --> 00:03:24,200
Reside in physical memory.

77
00:03:24,400 --> 00:03:27,000
You said that the VMA s goes out to his car to get data.

78
00:03:27,000 --> 00:03:29,400
So, is there a section of physical memory set aside for the VMA, s,

79
00:03:29,400 --> 00:03:31,500
and the rest of physical memory is made up of data.

80
00:03:31,500 --> 00:03:32,300
Retrieved from the disk.

81
00:03:32,300 --> 00:03:33,400
The diagram is a bit.

82
00:03:33,400 --> 00:03:35,500
Incestuous confusing to me at the moment.

83
00:03:35,600 --> 00:03:37,200
Yes, that diagram showing off the best diagram.

84
00:03:40,600 --> 00:03:41,700
So, here's what I'll say.

85
00:03:44,100 --> 00:03:47,600
If I remember correctly, and I may very well not so you should

86
00:03:47,600 --> 00:03:49,600
probably should probably go.

87
00:03:49,600 --> 00:03:50,900
Look this up if you really care.

88
00:03:52,700 --> 00:03:57,300
In a Windows, the page table which basically tells it all the stuff

89
00:03:57,300 --> 00:04:00,000
that thing you're asking about the thing that that understands the

90
00:04:00,000 --> 00:04:02,300
virtual memory address space for processes.

91
00:04:03,300 --> 00:04:09,600
I believe the page table is not itself virtual in earlier versions of

92
00:04:09,600 --> 00:04:14,200
Windows even like Windows 7, I think possibly even in Windows 8.

93
00:04:14,200 --> 00:04:14,600
I don't know.

94
00:04:14,800 --> 00:04:17,000
So, basically the virtual memory

95
00:04:18,100 --> 00:04:18,399
Map.

96
00:04:18,399 --> 00:04:21,500
The thing that says we're all the pages should be and what how they're

97
00:04:21,500 --> 00:04:22,300
allocating stuff.

98
00:04:22,400 --> 00:04:26,600
I believe that is resides in physical memory in Windows typically, but

99
00:04:27,300 --> 00:04:30,300
I believe they are now moving towards a scheme or have already moved

100
00:04:30,300 --> 00:04:32,400
to this game where that itself can be virtual.

101
00:04:32,400 --> 00:04:35,600
So it's like it's like two levels deep so you can paid some of it out.

102
00:04:35,600 --> 00:04:37,400
And I don't know if they've done that or are doing that.

103
00:04:37,400 --> 00:04:42,100
I don't pay much attention to the windows kernel advances of recent

104
00:04:42,100 --> 00:04:42,500
year.

105
00:04:42,900 --> 00:04:46,500
So, the answer is, I believe, it's normally in physical memory on most

106
00:04:46,500 --> 00:04:47,500
versions of windows that are running.

107
00:04:47,700 --> 00:04:50,800
Currently, but I think they were going to try to make that virtual

108
00:04:51,100 --> 00:04:53,800
because you do run into places now with 64-bit addressing and

109
00:04:53,800 --> 00:04:56,500
computers, having so much memory you do run into situations.

110
00:04:56,500 --> 00:05:00,600
Now where you want more, you want to be able to not be limited by the

111
00:05:00,600 --> 00:05:01,100
page table.

112
00:05:01,100 --> 00:05:03,800
You don't want the page table to be this hard, constraint that starts

113
00:05:03,800 --> 00:05:06,000
eating up a ton of physical memory because you can't get, you can't

114
00:05:06,000 --> 00:05:06,800
move it out.

115
00:05:07,400 --> 00:05:07,900
So I don't know.

116
00:05:07,900 --> 00:05:08,900
So, I think that's true.

117
00:05:09,000 --> 00:05:10,000
But I really don't know.

118
00:05:10,000 --> 00:05:12,800
You should ask a Windows kernel expert and they would be able to tell

119
00:05:12,800 --> 00:05:13,100
you.

120
00:05:13,500 --> 00:05:16,300
You could also ask a Linux kernel expert, how they do theirs because

121
00:05:16,300 --> 00:05:17,500
every operating system has to deal

122
00:05:17,600 --> 00:05:19,200
With this problem of that.

123
00:05:19,200 --> 00:05:19,500
So,

124
00:05:21,800 --> 00:05:23,900
Symmetry what happened to the nice background?

125
00:05:24,500 --> 00:05:25,400
I don't know what that means.

126
00:05:25,500 --> 00:05:29,300
I'm sorry, if the stack lives in cash on the CPU.

127
00:05:29,300 --> 00:05:31,600
What happens at the stack outgrows, the size of the cache?

128
00:05:32,000 --> 00:05:32,400
Okay.

129
00:05:32,600 --> 00:05:36,000
So the stack doesn't live in the cache on the CPU.

130
00:05:36,300 --> 00:05:38,400
The stack lives in memory, just like anything else.

131
00:05:38,400 --> 00:05:40,400
The stack is in your virtual memory space.

132
00:05:40,800 --> 00:05:44,500
So when the stack grows, it's growing in regular memory.

133
00:05:44,500 --> 00:05:48,500
Now the CPU since it happens to be executing code, that's using the

134
00:05:48,500 --> 00:05:48,900
stack.

135
00:05:48,900 --> 00:05:50,800
The stack is almost always hot in the cache.

136
00:05:50,800 --> 00:05:51,400
So you usually

137
00:05:51,500 --> 00:05:55,200
ER, at least the top of the stack is in the CPUs cache usually, but

138
00:05:55,200 --> 00:05:56,500
it's all backed by memory.

139
00:05:56,800 --> 00:05:59,100
It's not, it's not living in the cache.

140
00:06:00,100 --> 00:06:04,000
The stack is the data that's actually living in memory in the virtual

141
00:06:04,000 --> 00:06:07,100
memory address space of your of your running code.

142
00:06:07,300 --> 00:06:11,000
Now, you may be thinking of the I cash, which I referenced and the I

143
00:06:11,000 --> 00:06:12,900
cash is for code, not data.

144
00:06:13,100 --> 00:06:15,100
The I cash is actually just the instructions.

145
00:06:15,100 --> 00:06:18,300
The actual Assembly Language instructions, that the CPU is going to

146
00:06:18,300 --> 00:06:21,000
execute that our code got compiled down to not the data.

147
00:06:21,200 --> 00:06:24,400
The code that gets also back in memory.

148
00:06:24,400 --> 00:06:25,900
That's all in the virtual memory address space.

149
00:06:25,900 --> 00:06:29,600
It just gets pulled into the I cash when it's being executed because

150
00:06:29,600 --> 00:06:29,700
the

151
00:06:30,000 --> 00:06:32,600
it basically doesn't want to have to keep doing the work of like

152
00:06:32,600 --> 00:06:35,000
blowing it out into Micro Ops and whatever else it needs to do.

153
00:06:36,700 --> 00:06:39,100
You mentioned in the pre stream that you're crazy casting pointer with

154
00:06:39,100 --> 00:06:39,500
demonstration.

155
00:06:39,500 --> 00:06:41,000
Last June was undefined Behavior.

156
00:06:41,000 --> 00:06:45,700
Why is this so I like I said, I usually go by what compilers do not

157
00:06:45,700 --> 00:06:47,200
what the spec does because I hate the spec.

158
00:06:47,200 --> 00:06:51,000
The spec is garbage and it drives me insane because I feel like they

159
00:06:51,000 --> 00:06:54,600
do really bad things with a spec a lot and often times it gets worse

160
00:06:54,600 --> 00:06:55,300
instead of better.

161
00:06:55,800 --> 00:06:57,900
So I don't actually know that it's undefined a paper.

162
00:06:58,100 --> 00:07:01,600
Someone said that it was undefined behavior and it probably is.

163
00:07:01,900 --> 00:07:06,300
And the reason for that is that oftentimes technically it's undefined.

164
00:07:06,800 --> 00:07:12,200
To cast things to different sizes that aren't allocated in the same

165
00:07:12,200 --> 00:07:12,500
pool.

166
00:07:12,500 --> 00:07:12,800
Like.

167
00:07:12,800 --> 00:07:17,400
I don't think you're technically always allowed to cast something from

168
00:07:17,400 --> 00:07:22,000
say, you know, a struct to a short that was randomly in it or

169
00:07:22,000 --> 00:07:22,300
something.

170
00:07:22,300 --> 00:07:25,400
If you don't use a short that was actually in the struck.

171
00:07:25,400 --> 00:07:25,900
I don't know.

172
00:07:26,000 --> 00:07:27,000
So I'm not sure.

173
00:07:27,100 --> 00:07:30,700
It may be that it is actually defined but it could also be undefined.

174
00:07:30,900 --> 00:07:34,000
It doesn't matter because it always works and that is really the

175
00:07:34,000 --> 00:07:36,300
majority of what I usually care about is what actually works.

176
00:07:36,400 --> 00:07:39,800
Works and if compiler stopped supporting that, I would not use those

177
00:07:39,800 --> 00:07:40,700
compilers anymore.

178
00:07:40,700 --> 00:07:42,200
Like, that's totally unacceptable to me.

179
00:07:42,300 --> 00:07:42,900
There had better.

180
00:07:42,900 --> 00:07:43,800
Be a switch in the compiler.

181
00:07:43,800 --> 00:07:46,500
That make sure I can always get a pointer to memory and do whatever I

182
00:07:46,500 --> 00:07:49,800
want and if you can't do that, that is the end of me using your

183
00:07:49,800 --> 00:07:51,100
language period.

184
00:07:52,400 --> 00:07:55,000
Are there system calls or something that lets you tell the OS to load

185
00:07:55,000 --> 00:07:56,000
your code into physical memory?

186
00:07:56,000 --> 00:07:57,700
Instead of the lazy page faulting thing.

187
00:07:58,400 --> 00:08:00,200
I don't actually know.

188
00:08:01,500 --> 00:08:04,400
If there's a way to tell Windows to do that in some kind of General

189
00:08:04,400 --> 00:08:08,400
sense, but what I can tell you is there are ways of you doing all

190
00:08:08,400 --> 00:08:12,900
kinds of shenanigans that do involve specifically telling windows.

191
00:08:12,900 --> 00:08:18,000
So, you could, if you want to, let me see here.

192
00:08:19,100 --> 00:08:23,200
So here, for example, is a function called virtual lock and what

193
00:08:23,200 --> 00:08:26,600
virtual lock does, is virtual, lock takes a base address.

194
00:08:26,600 --> 00:08:31,000
So somewhere a memory pointer and a size, which is so, some amount of

195
00:08:31,000 --> 00:08:36,299
memory, and what it will do is it will just full-on lock that into

196
00:08:36,299 --> 00:08:38,600
physical memory, so that it can't be swapped out anymore.

197
00:08:39,400 --> 00:08:42,100
Like, I believe period.

198
00:08:43,000 --> 00:08:45,300
I don't know if there's conditions where if it was really in a panic,

199
00:08:45,300 --> 00:08:46,000
it could do it.

200
00:08:46,000 --> 00:08:48,800
But for the most part, it means don't swap this out.

201
00:08:49,200 --> 00:08:50,900
And so, you can actually go.

202
00:08:50,900 --> 00:08:54,500
If you wanted to start manually, virtually locking Pages down.

203
00:08:54,500 --> 00:08:57,500
If you're just like, do not ever Swap this two disc ever.

204
00:08:57,900 --> 00:08:58,800
You can do that.

205
00:08:59,200 --> 00:08:59,800
It's not usually.

206
00:09:00,000 --> 00:09:03,300
Good idea to do that but you could so there's other things like that

207
00:09:03,300 --> 00:09:07,100
to you can do if you're really trying to force the operating system to

208
00:09:07,100 --> 00:09:08,100
play by your rules.

209
00:09:12,000 --> 00:09:15,300
Is the C runtime Library different from the standard C library?

210
00:09:16,900 --> 00:09:20,400
Well, there's the standard C++ library and then there's the standard C

211
00:09:20,400 --> 00:09:22,000
library and those are different.

212
00:09:22,000 --> 00:09:24,300
But yeah, the C runtime library and standard C library.

213
00:09:24,300 --> 00:09:26,500
I think are just there should be two terms of the same thing.

214
00:09:26,500 --> 00:09:30,700
They're just like, you know, F open and F right and stuff like that.

215
00:09:31,100 --> 00:09:33,900
Are standard, C library, things stuff that C++ my library.

216
00:09:33,900 --> 00:09:36,800
Like the STL that's in the C++ standard library and those are

217
00:09:36,800 --> 00:09:37,400
different.

218
00:09:37,400 --> 00:09:40,200
There's a difference between the CCC library in C++ standard.

219
00:09:40,900 --> 00:09:43,200
But yeah, that standard Library versus runtime Library.

220
00:09:43,200 --> 00:09:44,300
Think should be the same thing.

221
00:09:46,000 --> 00:09:48,200
Why do you prefer knr style brackets?

222
00:09:48,700 --> 00:09:51,400
Oh, so, yeah, like I was kind of saying white space is always

223
00:09:51,400 --> 00:09:52,800
optional, so you can do things.

224
00:09:52,800 --> 00:09:54,400
You can write code like that.

225
00:09:54,400 --> 00:09:57,700
If you want, if you want your black, look at that, you can write code

226
00:09:57,700 --> 00:10:01,100
that even looked, you know, it's called squash brace.

227
00:10:01,100 --> 00:10:03,700
It's the weirdest thing you can do this.

228
00:10:05,200 --> 00:10:07,300
I don't know if you guys have ever seen this style called squash

229
00:10:07,300 --> 00:10:07,700
brace.

230
00:10:08,800 --> 00:10:09,700
I always thought was funny.

231
00:10:10,600 --> 00:10:10,900
Right?

232
00:10:11,000 --> 00:10:13,300
It's full bananas, right?

233
00:10:13,300 --> 00:10:14,300
And it looks like that.

234
00:10:16,500 --> 00:10:20,500
And basically it's the weirdest style because technically the bracket

235
00:10:20,500 --> 00:10:23,500
that lines up isn't the one that closes the block.

236
00:10:23,500 --> 00:10:26,200
So like this goes with this, right?

237
00:10:26,300 --> 00:10:28,000
But it looks like it goes with this.

238
00:10:28,000 --> 00:10:29,000
It's full bananas.

239
00:10:29,200 --> 00:10:31,200
So, yeah, you can write, you can indent your code.

240
00:10:31,200 --> 00:10:34,000
However, you want, and you can put the braces, anywhere you want.

241
00:10:34,000 --> 00:10:38,100
I use them like this because I think that's how my father did it.

242
00:10:39,700 --> 00:10:44,000
I want to say, but I don't know.

243
00:10:44,600 --> 00:10:44,900
I'm sorry.

244
00:10:44,900 --> 00:10:45,300
I do not know.

245
00:10:45,500 --> 00:10:47,600
I do that is how I've always done it and I'm just used to it.

246
00:10:47,600 --> 00:10:48,500
So that's how I do it.

247
00:10:49,800 --> 00:10:50,100
Are there.

248
00:10:50,100 --> 00:10:51,200
Different performance characteristics?

249
00:10:51,200 --> 00:10:52,600
With the different bitwise operators?

250
00:10:52,600 --> 00:10:53,100
Yes!

251
00:10:53,700 --> 00:10:54,600
There actually are.

252
00:10:55,100 --> 00:11:01,000
So basically, the way that bit operations work is it's entirely

253
00:11:01,000 --> 00:11:05,100
dependent on how the processor chose to implement them.

254
00:11:05,600 --> 00:11:10,700
So there are architectures where bitwise operators are flat cost.

255
00:11:10,800 --> 00:11:18,300
So basically, if I do a shift by 4, then that always cost the same as

256
00:11:18,300 --> 00:11:19,100
a shift by

257
00:11:19,700 --> 00:11:21,900
For shift by 30, right?

258
00:11:22,500 --> 00:11:26,100
There are other architectures where the more you shift, the more it

259
00:11:26,100 --> 00:11:26,700
costs.

260
00:11:27,500 --> 00:11:31,100
And the reason for that is because shifting is actually, I guess kind

261
00:11:31,100 --> 00:11:33,600
of annoying in the sense that where the way you have to structure the

262
00:11:33,600 --> 00:11:38,100
gates so that it's actually kind of more expensive, I guess to do

263
00:11:38,100 --> 00:11:41,400
shifts in that are long and sort of short.

264
00:11:41,900 --> 00:11:45,800
I think I want to say that that is a bit.

265
00:11:45,800 --> 00:11:46,900
Esoteric though.

266
00:11:47,300 --> 00:11:49,100
I want to say that

267
00:11:49,600 --> 00:11:53,300
Maybe, I don't know if the P4 had some of this stuff in it, but I

268
00:11:53,300 --> 00:11:54,400
don't think so.

269
00:11:54,900 --> 00:11:58,600
I want to say that for the most part, the processors that we will be

270
00:11:58,600 --> 00:11:59,800
dealing with it.

271
00:12:00,000 --> 00:12:07,400
Usually flat cost so or xan's shifts, I think usually are predictable

272
00:12:07,400 --> 00:12:10,800
fixed amount of time and there isn't like a huge performance

273
00:12:10,800 --> 00:12:11,800
difference between them.

274
00:12:12,700 --> 00:12:17,200
But either way, what I will say is most of the time, those are not the

275
00:12:17,200 --> 00:12:18,100
Ops you're counting.

276
00:12:18,800 --> 00:12:21,700
Most code, just doesn't care how much bit Ops.

277
00:12:21,700 --> 00:12:22,200
It does.

278
00:12:22,700 --> 00:12:24,200
Usually the things that are costing.

279
00:12:24,200 --> 00:12:26,400
You time are either floating-point Ops.

280
00:12:26,400 --> 00:12:29,800
So a lot of math Ops on floating Point numbers, which we didn't.

281
00:12:30,000 --> 00:12:31,500
In the Stream will be covering the mainstream.

282
00:12:32,300 --> 00:12:32,900
Floating Point.

283
00:12:32,900 --> 00:12:37,200
Numbers Ops your usually worried about and memory axises is really the

284
00:12:37,200 --> 00:12:38,400
thing like memory.

285
00:12:38,400 --> 00:12:39,600
How much memory you're sucking in.

286
00:12:39,600 --> 00:12:43,900
And how many floating Ops are doing on that memory tends to be a lot

287
00:12:43,900 --> 00:12:44,700
more what you're worried about.

288
00:12:44,700 --> 00:12:48,800
I don't remember caring about a bit wise up, performance-wise in a

289
00:12:48,800 --> 00:12:50,900
long, long time.

290
00:12:52,000 --> 00:12:54,400
But, you know, correctly from our like I said, when I answer this

291
00:12:54,400 --> 00:12:55,600
questions as best I can.

292
00:12:55,800 --> 00:12:59,900
But, you know, honestly, my strong suit in programming tends to be.

293
00:13:00,200 --> 00:13:03,800
Architecture and sort of like, code design sorts of stuff.

294
00:13:05,300 --> 00:13:08,400
And I do have a lot of expertise in like animation systems and stuff

295
00:13:08,400 --> 00:13:12,000
because I worked on those for a long time, but like optimization isn't

296
00:13:12,000 --> 00:13:16,800
my strong suit, so, you know, if you ask me something like what's the

297
00:13:16,800 --> 00:13:18,300
best way to write a blah?

298
00:13:18,600 --> 00:13:20,800
I ain't going to no, like someone asked about cache, oblivious data

299
00:13:20,800 --> 00:13:21,200
structures.

300
00:13:21,200 --> 00:13:23,600
I don't even know what those were right, which is an example.

301
00:13:23,600 --> 00:13:25,700
Like if you were a super optimizations guy.

302
00:13:25,700 --> 00:13:28,000
There's probably no way you wouldn't have known what those were.

303
00:13:28,000 --> 00:13:28,200
Right.

304
00:13:28,200 --> 00:13:29,800
You just know that because you familiar

305
00:13:30,900 --> 00:13:34,800
But I'm still mostly the type of guy who does large code.

306
00:13:34,900 --> 00:13:36,300
Lots of code.

307
00:13:36,400 --> 00:13:38,600
Well architected is usually what I can say.

308
00:13:38,600 --> 00:13:41,800
I can give good advice on but when we're talking about like really

309
00:13:41,800 --> 00:13:44,800
hardcore optimization stuff, that's something that you're almost

310
00:13:44,800 --> 00:13:46,800
always going to want to want a second opinion because I'll show you

311
00:13:46,800 --> 00:13:48,000
how to get it good.

312
00:13:48,300 --> 00:13:51,600
But if you want it great, that's going to be somebody else.

313
00:13:51,600 --> 00:13:54,600
That's going to be someone who specializes in optimizing that thing.

314
00:13:55,200 --> 00:13:57,800
And there's always someone out there who specializes in optimizing

315
00:13:57,800 --> 00:13:59,800
that thing, and they know more than

316
00:14:00,000 --> 00:14:03,800
Someone like me who spends time doing other things because processes

317
00:14:03,800 --> 00:14:09,100
are always changing and if you don't keep learning how to optimize for

318
00:14:09,300 --> 00:14:11,500
the changes, you're always a little bit behind.

319
00:14:11,500 --> 00:14:14,200
So I'm always going to be a little bit behind when it comes to things

320
00:14:14,200 --> 00:14:14,700
like that.

321
00:14:16,600 --> 00:14:17,900
Let's see here.

322
00:14:19,900 --> 00:14:22,800
How much bit feeling do you do on real code, tons?

323
00:14:23,400 --> 00:14:26,500
We will you will be bit, fiddling probably right out of the gate on

324
00:14:26,500 --> 00:14:26,900
Monday.

325
00:14:27,100 --> 00:14:28,200
I bet we'll see some bit Fielding.

326
00:14:28,400 --> 00:14:32,700
It's not a ton but like it's often.

327
00:14:33,000 --> 00:14:36,300
Yeah, usually do a little bit of it in everything, just a little bit.

328
00:14:36,300 --> 00:14:37,000
Not a whole lot.

329
00:14:38,100 --> 00:14:40,100
Will you be writing your own allocator?

330
00:14:40,100 --> 00:14:40,900
Absolutely.

331
00:14:41,500 --> 00:14:42,700
Absolutely, absolutely.

332
00:14:43,400 --> 00:14:46,200
Couldn't you get the pointer to your variable that you want to see in

333
00:14:46,200 --> 00:14:49,200
binary and look at it in the memory window, the memory window doesn't

334
00:14:49,200 --> 00:14:49,500
Dubai.

335
00:14:49,600 --> 00:14:50,500
Binary either.

336
00:14:51,500 --> 00:14:54,100
I don't think I mean, yes, you could do that.

337
00:14:54,100 --> 00:14:59,200
If the, if the thing would have laid a bunch of main braces, there you

338
00:14:59,200 --> 00:14:59,800
could do that.

339
00:15:00,000 --> 00:15:06,100
If it was possible to actually display binary in the memory window,

340
00:15:06,100 --> 00:15:08,100
but I don't think you can, right.

341
00:15:08,100 --> 00:15:10,800
I mean, yeah, it doesn't have binary.

342
00:15:10,800 --> 00:15:12,800
It's only got hexadecimal.

343
00:15:12,900 --> 00:15:14,200
So we'd be no better off.

344
00:15:14,200 --> 00:15:17,700
We just be seeing hexadecimal again, which is, you know, it's too bad

345
00:15:17,700 --> 00:15:21,100
but people seem to be suggesting relatively strenuously in the chat

346
00:15:21,300 --> 00:15:24,600
that visual studio 2013, will allow us to view it in binary.

347
00:15:24,600 --> 00:15:27,400
So hopefully that will be true.

348
00:15:27,500 --> 00:15:28,300
We'll find out tomorrow.

349
00:15:31,800 --> 00:15:34,800
Not sure if this is too big to ask, but can you show us how to open a

350
00:15:34,800 --> 00:15:36,500
blank window using the win API?

351
00:15:36,500 --> 00:15:37,600
That is tomorrow?

352
00:15:38,400 --> 00:15:40,600
Yes, does not too big to ask.

353
00:15:40,700 --> 00:15:42,600
But tomorrow, that is what we will be doing.

354
00:15:43,800 --> 00:15:48,000
Clemens bound, what do you think of our aii for resource handling?

355
00:15:48,000 --> 00:15:52,800
So, raii for people who don't know, I actually used to do a lot of C++

356
00:15:52,800 --> 00:15:55,900
program, which is the only reason I know what raii is.

357
00:15:56,800 --> 00:16:00,900
Normally, if you ask me, a C++ one of these fancy C++ isms.

358
00:16:00,900 --> 00:16:02,800
I would tell you like, I don't know what that is, now care what that

359
00:16:02,800 --> 00:16:04,700
is, but I do know it already is.

360
00:16:04,700 --> 00:16:07,100
That's resource acquisition is initialization.

361
00:16:07,100 --> 00:16:11,300
Usually, what that means, what that basically means is designing code.

362
00:16:11,500 --> 00:16:13,400
Such that a, a

363
00:16:13,800 --> 00:16:15,100
Logical unit.

364
00:16:15,600 --> 00:16:20,200
Usually in C++ they're referring to a class which is a glorified

365
00:16:20,200 --> 00:16:28,600
struct basically as soon as it has acquired any resource memory, a

366
00:16:28,600 --> 00:16:35,400
file handle, a network socket, something that is a resource that has

367
00:16:35,400 --> 00:16:36,300
to be acquired.

368
00:16:36,300 --> 00:16:41,400
And then released Rai basically means that the class is considered

369
00:16:41,400 --> 00:16:43,300
initialized once that resource.

370
00:16:43,500 --> 00:16:47,300
Has been acquired and it's not supposed to do anything additional

371
00:16:48,300 --> 00:16:50,300
until basically.

372
00:16:50,300 --> 00:16:53,700
Basically, unless you make up a new class that does the next step.

373
00:16:54,900 --> 00:16:58,400
Without trying to go in and give a full example of what that is for

374
00:16:58,400 --> 00:17:04,700
everyone and showing perhaps why it is kind of silly.

375
00:17:05,500 --> 00:17:07,000
I will simply say that.

376
00:17:09,700 --> 00:17:12,500
The way that you want to design code in general.

377
00:17:14,200 --> 00:17:20,200
Is to understand the ways in which that code can fail in practice and

378
00:17:20,200 --> 00:17:21,200
designed the code.

379
00:17:21,200 --> 00:17:23,000
So that it properly handles.

380
00:17:23,099 --> 00:17:30,000
Those failure cases what people often advocate in C++ is trying to

381
00:17:30,100 --> 00:17:35,300
write your code, such that it handles, and I'm using that in quotes.

382
00:17:36,200 --> 00:17:39,300
All possible failures at all possible points.

383
00:17:40,700 --> 00:17:45,900
What that means is if for some reason, my code couldn't open the file

384
00:17:45,900 --> 00:17:47,500
handle that it was trying to open.

385
00:17:47,700 --> 00:17:51,300
I want it to automatically through a series of exceptions and

386
00:17:51,300 --> 00:17:54,500
destructors and all these other sorts of things unwind.

387
00:17:54,500 --> 00:17:57,900
All the stuff that had been doing up to that point in a way that makes

388
00:17:57,900 --> 00:17:58,100
it.

389
00:17:58,100 --> 00:17:59,500
So that it is somehow

390
00:18:00,000 --> 00:18:00,600
We cleaner.

391
00:18:02,700 --> 00:18:06,300
I never find code written in that way to ever actually work in

392
00:18:06,300 --> 00:18:07,400
practice very well.

393
00:18:07,600 --> 00:18:10,000
I find that it's actually very brittle to failure.

394
00:18:10,400 --> 00:18:12,800
And the reason that I find that it's very brittle to failure, is

395
00:18:12,800 --> 00:18:17,100
because the things that people have done is they have translated, they

396
00:18:17,100 --> 00:18:21,000
have, they have moved the job of thinking about the ways, the code can

397
00:18:21,000 --> 00:18:26,100
actually fail into just a reflexive way of just sticking things in

398
00:18:26,100 --> 00:18:27,100
Constructors and destructors.

399
00:18:27,100 --> 00:18:30,000
And assuming that the unwinding of the stack will just do the right

400
00:18:30,000 --> 00:18:30,400
thing.

401
00:18:31,200 --> 00:18:34,800
But the answer is that usually when things fail in your program that

402
00:18:34,800 --> 00:18:37,900
you expect to fail like a network socket, can't be opened or a network

403
00:18:37,900 --> 00:18:39,200
socket, doesn't send the thing.

404
00:18:39,200 --> 00:18:41,200
It needs to send or a file can't be opened.

405
00:18:41,600 --> 00:18:46,100
Usually what you really need is custom logic that recovers from that

406
00:18:46,100 --> 00:18:47,300
failure in a smart way.

407
00:18:47,300 --> 00:18:49,000
And that logic is often different.

408
00:18:49,000 --> 00:18:52,800
Depending on the circumstance, one file, not being able to open is

409
00:18:52,800 --> 00:18:54,200
different from another file, not being open.

410
00:18:54,200 --> 00:18:55,900
If I'm trying to open file a.

411
00:18:55,900 --> 00:18:58,300
Maybe the thing that I want to do when it can't open is wait a few

412
00:18:58,300 --> 00:19:00,800
seconds and try again, but if I'll be candid,

413
00:19:01,000 --> 00:19:01,500
Be open, then.

414
00:19:01,500 --> 00:19:04,000
Maybe what I want to do is just exit the damn program because

415
00:19:04,000 --> 00:19:06,900
nothing's going to be able to happen and those are simple examples,

416
00:19:06,900 --> 00:19:10,100
but really it's not that much more complicated that when you really

417
00:19:10,100 --> 00:19:11,700
start programming a real program, really?

418
00:19:11,700 --> 00:19:14,700
It's just about you need to think about the failures and you need to

419
00:19:14,700 --> 00:19:16,500
write code that handles the failures.

420
00:19:17,000 --> 00:19:20,000
So what I find a lot of people Soccer Plus programmers who are gung ho

421
00:19:20,000 --> 00:19:22,600
but our Ira, I do that.

422
00:19:22,600 --> 00:19:26,700
I don't approve of and would not recommend is they spend a ton of time

423
00:19:26,700 --> 00:19:30,200
typing in code that handles failures that will never happen and then

424
00:19:30,200 --> 00:19:30,700
when their code

425
00:19:30,900 --> 00:19:33,800
Really does fail in the weight in the places where I would know that

426
00:19:33,800 --> 00:19:36,200
that's that's legitimately going to happen on a running system.

427
00:19:36,200 --> 00:19:39,400
It totally blows up and yeah, they freed the memory and close the file

428
00:19:39,400 --> 00:19:40,900
handles, but that who cares?

429
00:19:41,200 --> 00:19:44,500
Like you need the code to actually work.

430
00:19:44,700 --> 00:19:48,100
It doesn't matter if it cleans up after itself, it needs to actually

431
00:19:48,100 --> 00:19:48,800
work.

432
00:19:49,000 --> 00:19:53,000
And so if you can't even get the code to work, why are you bothering

433
00:19:53,000 --> 00:19:54,900
dealing with whether you close the file handle?

434
00:19:54,900 --> 00:19:55,900
That is not relevant.

435
00:19:55,900 --> 00:20:00,800
That is not part of the of actually the problem definition.

436
00:20:00,900 --> 00:20:05,000
That is a way of making sure that your code does not leave detritus

437
00:20:05,000 --> 00:20:08,600
around in leak handles, but it is not actually the primary problem

438
00:20:08,600 --> 00:20:10,200
statement of what's supposed to happen.

439
00:20:10,200 --> 00:20:13,000
So, like most C++ design patterns.

440
00:20:13,200 --> 00:20:18,200
I find raii to be a way that people excuse themselves from doing the

441
00:20:18,200 --> 00:20:21,700
hard work by doing busy work, which actually does not solve the

442
00:20:21,700 --> 00:20:23,200
problem that they needed to solve.

443
00:20:24,200 --> 00:20:25,300
Hope that answers that question.

444
00:20:29,000 --> 00:20:30,900
Doo doo, doo doo doo.

445
00:20:30,900 --> 00:20:32,400
How much would feeling would you be writing?

446
00:20:32,400 --> 00:20:36,400
Your own allocator couldn't get pointer above idiocracy, asked a

447
00:20:36,400 --> 00:20:38,800
question from before and yes, we will do that.

448
00:20:38,800 --> 00:20:42,400
But let me just see if there's any other code questions coming down

449
00:20:42,400 --> 00:20:42,800
here.

450
00:20:43,400 --> 00:20:43,800
First.

451
00:20:43,800 --> 00:20:47,200
I will, I will push this one onto the stack and I will not forget it.

452
00:20:52,900 --> 00:20:57,200
Doo doo, doo doo, I think a four-year CS degree is a bad idea waste of

453
00:20:57,200 --> 00:20:57,500
money.

454
00:20:57,500 --> 00:20:58,500
I have no idea.

455
00:20:58,500 --> 00:20:59,800
I have never taken one.

456
00:21:01,900 --> 00:21:04,000
Are you going to use structs instead of classes?

457
00:21:04,400 --> 00:21:05,000
Yes.

458
00:21:05,000 --> 00:21:05,800
I never typed.

459
00:21:05,800 --> 00:21:06,400
The word glass.

460
00:21:07,000 --> 00:21:09,600
How will I handle the need for polymorphism polymorphism?

461
00:21:11,400 --> 00:21:16,500
Is a silly idea sorry to say it like that but polymorphism is an

462
00:21:16,500 --> 00:21:17,100
interesting to me.

463
00:21:17,100 --> 00:21:18,200
It's just not interesting.

464
00:21:19,800 --> 00:21:20,500
It's interesting.

465
00:21:20,500 --> 00:21:24,900
If you actually maybe by polymorphism actually mean, full duck typing

466
00:21:26,600 --> 00:21:29,700
but really like mixing is the thing that you want and C++ handles it

467
00:21:29,700 --> 00:21:30,400
very poorly.

468
00:21:31,000 --> 00:21:33,800
It's polymorphism using multiple inheritance, just doesn't work at

469
00:21:33,800 --> 00:21:34,200
all.

470
00:21:34,800 --> 00:21:36,600
So what we're actually going to do is things that are much more

471
00:21:36,600 --> 00:21:38,200
powerful than inheritance.

472
00:21:38,500 --> 00:21:40,700
We're basically going to implement full mix in.

473
00:21:41,700 --> 00:21:45,400
Which will allow us to do things that are just far more powerful than

474
00:21:45,400 --> 00:21:46,800
you can do with inheritance.

475
00:21:46,800 --> 00:21:48,300
Inheritance is is useless.

476
00:21:48,300 --> 00:21:49,300
It's a dumb idea.

477
00:21:49,300 --> 00:21:51,400
I don't know why they put that in C++.

478
00:21:51,400 --> 00:21:52,700
It's completely useless.

479
00:21:54,000 --> 00:21:57,700
You can occasionally use it to do something very rudimentary.

480
00:21:58,400 --> 00:22:02,100
That's basically function, pointer kinds of dispatch and even, then

481
00:22:02,100 --> 00:22:02,800
it's stupid.

482
00:22:02,800 --> 00:22:04,100
It doesn't work properly.

483
00:22:04,300 --> 00:22:07,600
It's way less capable than a table of function pointers because you

484
00:22:07,600 --> 00:22:11,000
can't modify the function pointers since the V table format is okay.

485
00:22:11,100 --> 00:22:11,400
Take.

486
00:22:12,300 --> 00:22:14,500
So yet inheritance in C++ is awful.

487
00:22:15,500 --> 00:22:19,000
I would never ever, ever, ever use it in a program that said, there

488
00:22:19,000 --> 00:22:20,200
are programmers, who I respect.

489
00:22:20,300 --> 00:22:22,100
Like, John Blow, who do use it.

490
00:22:22,100 --> 00:22:26,600
They use it very sparingly, usually one level inheritance at most, so

491
00:22:26,600 --> 00:22:29,900
I certainly wouldn't argue with someone who decided to use it because

492
00:22:29,900 --> 00:22:32,700
there are effective programmers, who do use it, but I will note that

493
00:22:32,700 --> 00:22:34,700
they use it very limited.

494
00:22:35,200 --> 00:22:38,600
And even John, for example is kind of Designing his own language,

495
00:22:38,600 --> 00:22:40,200
because he thinks inheritance doesn't work very well.

496
00:22:40,200 --> 00:22:40,700
So,

497
00:22:41,200 --> 00:22:43,600
In I think even he would probably agree.

498
00:22:43,800 --> 00:22:45,600
You'd have to ask him but I think he would probably agree.

499
00:22:45,600 --> 00:22:49,600
That inheritance is pretty weak and lame and the only time you would

500
00:22:49,600 --> 00:22:52,600
really ever use, it is for this really simple thing that it can sort

501
00:22:52,600 --> 00:22:53,200
of do.

502
00:22:53,500 --> 00:22:56,100
And you were almost the whole time wishing you had something better.

503
00:22:58,400 --> 00:22:59,900
Will the game be C++ or C?

504
00:22:59,900 --> 00:23:02,400
And any reason you did your intros at Sea in a sieve, if you file, the

505
00:23:02,400 --> 00:23:07,200
game will be C in CPP because I want to use some CP features.

506
00:23:07,600 --> 00:23:12,900
We will use some operator overloading, and we will use some, we may

507
00:23:12,900 --> 00:23:15,800
use some Constructor Destructor pairs to do things like automatically,

508
00:23:15,800 --> 00:23:17,400
cap times and blocks or something like that.

509
00:23:17,400 --> 00:23:21,000
I don't know that we will but there are some little features of C++

510
00:23:21,000 --> 00:23:24,700
here and there that I may use oh a function overloading is another one

511
00:23:24,700 --> 00:23:25,000
too.

512
00:23:25,300 --> 00:23:28,100
So I find this usually best to compile and sleepy.

513
00:23:28,200 --> 00:23:31,500
P mode, even though I mostly write code that looks like, see because I

514
00:23:31,500 --> 00:23:34,500
find that it's nice to be able to have the features of C++ if I want

515
00:23:34,500 --> 00:23:34,800
them.

516
00:23:35,600 --> 00:23:38,800
And then I just, I'm since I've had enough experience.

517
00:23:38,800 --> 00:23:40,100
I know which ones to stay away from.

518
00:23:40,100 --> 00:23:42,600
So I just don't use the stuff that gets you into trouble.

519
00:23:43,000 --> 00:23:45,600
So it's kind of The Best of Both Worlds, to compile, your C code and

520
00:23:45,600 --> 00:23:49,000
see because you can always just, you know, switch up what are the

521
00:23:49,000 --> 00:23:50,700
differences between references and pointers.

522
00:23:51,500 --> 00:23:53,500
There is no difference between a reference in a pointer.

523
00:23:53,600 --> 00:23:53,900
Basically.

524
00:23:53,900 --> 00:23:57,900
A reference is just a way of getting a free dereference in there.

525
00:23:57,900 --> 00:23:58,100
So,

526
00:23:58,200 --> 00:23:59,200
So, a reference.

527
00:24:01,000 --> 00:24:05,300
For those of you don't know if you if you say if you declare your code

528
00:24:05,300 --> 00:24:07,400
to have an ampersand in it ahead of time.

529
00:24:08,000 --> 00:24:10,500
This is called a reference while I need to actually set it to

530
00:24:10,500 --> 00:24:10,800
something.

531
00:24:10,800 --> 00:24:11,500
That's actually

532
00:24:13,400 --> 00:24:18,700
A variable, this basically gets you a pointer to why that you don't

533
00:24:18,700 --> 00:24:20,000
actually have to dereference.

534
00:24:20,100 --> 00:24:22,500
So instead of normally, you know, if that was a regular pointer.

535
00:24:22,500 --> 00:24:26,700
I'd have to type y r f equals 6 or something to, to talk about the

536
00:24:26,700 --> 00:24:31,500
value pointed to, by why ref to do a dereference a reference type.

537
00:24:31,500 --> 00:24:33,300
It just means one that I don't have to do that.

538
00:24:33,400 --> 00:24:34,600
I can just do it.

539
00:24:34,600 --> 00:24:35,100
Directly.

540
00:24:36,100 --> 00:24:39,600
I tend to not use them because I think they finally added a way to do

541
00:24:39,600 --> 00:24:41,800
this and C++ in the recent spec.

542
00:24:42,000 --> 00:24:42,800
But for me.

543
00:24:42,900 --> 00:24:45,300
Many, many years you couldn't override them.

544
00:24:45,400 --> 00:24:50,400
So you couldn't set a reference like using something, you know, update

545
00:24:50,400 --> 00:24:54,400
this reference, please to point to something new, right?

546
00:24:54,700 --> 00:24:55,800
You couldn't do that.

547
00:24:56,300 --> 00:24:58,500
And so the reason I didn't use them as pointers.

548
00:24:58,500 --> 00:25:00,900
I like to be able to set my pointer to point to new things.

549
00:25:00,900 --> 00:25:04,200
And so references were kind of useless, but I think they had something

550
00:25:04,200 --> 00:25:07,500
to do that now, so if you really like references, I think in the

551
00:25:07,500 --> 00:25:11,000
latest latest spec you you can, you can actually swap arms.

552
00:25:11,000 --> 00:25:11,200
I don't know.

553
00:25:11,200 --> 00:25:12,000
Don't quote me on that.

554
00:25:12,000 --> 00:25:12,700
I don't read the spec.

555
00:25:12,900 --> 00:25:13,700
anymore, but

556
00:25:19,000 --> 00:25:20,100
Well, let's see.

557
00:25:20,100 --> 00:25:22,700
You said you were using C++, but I'll be backwards compatible with

558
00:25:22,700 --> 00:25:23,200
see.

559
00:25:23,800 --> 00:25:27,200
I don't think I said that this, I hope I didn't say that.

560
00:25:27,300 --> 00:25:29,000
It will not really be backwards compatible.

561
00:25:29,300 --> 00:25:30,300
Most things I will do.

562
00:25:30,300 --> 00:25:33,900
You can compile c99 if you wanted to compile this stuff and c99 pretty

563
00:25:33,900 --> 00:25:37,000
much all of handmade hero will probably compile and c99 with a few

564
00:25:37,000 --> 00:25:37,500
exceptions.

565
00:25:37,500 --> 00:25:39,100
That would be probably easier for you to fix.

566
00:25:39,400 --> 00:25:42,600
So it will be somewhat backwards, compatible c99, but that's not a

567
00:25:42,600 --> 00:25:43,200
goal.

568
00:25:43,600 --> 00:25:44,700
So I don't guarantee that.

569
00:25:50,900 --> 00:25:51,700
Let's see.

570
00:25:54,700 --> 00:25:56,200
You might want to talk about short-circuiting.

571
00:25:57,300 --> 00:25:58,400
I might talk about that the mainstream.

572
00:25:58,400 --> 00:25:59,500
But okay, I'll throw it in here.

573
00:26:00,100 --> 00:26:04,200
So what short-circuiting means is, if I have a lot of talking about,

574
00:26:04,200 --> 00:26:07,400
like, you could sort of make these if statements that have things like

575
00:26:07,400 --> 00:26:08,500
or as Ann Ann's in them.

576
00:26:09,500 --> 00:26:10,300
So, okay.

577
00:26:10,700 --> 00:26:13,500
Basically if you have something that looks like this, where I've got

578
00:26:13,500 --> 00:26:16,100
two different things that are going to happen to evaluate my

579
00:26:16,100 --> 00:26:17,300
conditional, right?

580
00:26:17,700 --> 00:26:18,200
And you know what?

581
00:26:18,200 --> 00:26:19,100
I don't even need to do them here.

582
00:26:19,100 --> 00:26:20,800
So let's let's say we're not even talking about conditional.

583
00:26:20,800 --> 00:26:24,300
I'm just Computing the values 0 1, I just want to know there's

584
00:26:24,500 --> 00:26:26,500
Not zero, I just want to know if this is true or false.

585
00:26:27,300 --> 00:26:31,700
Well, what happens in see is that the compiler is under no obligation

586
00:26:32,600 --> 00:26:38,000
to execute any further into the line than it needs to, to actually

587
00:26:38,100 --> 00:26:39,200
give you the value back.

588
00:26:39,300 --> 00:26:43,600
So, for example, if it sees that Y is in fact equal to 5, right?

589
00:26:43,600 --> 00:26:49,900
If y was equal to 5, it is under no obligation to actually compute Z

590
00:26:49,900 --> 00:26:50,700
equals 5.

591
00:26:51,000 --> 00:26:53,000
And furthermore, I believe in fact, no.

592
00:26:53,000 --> 00:26:54,300
I know the specs.

593
00:26:54,400 --> 00:26:56,600
Says it will not compute it.

594
00:26:56,800 --> 00:26:59,700
So if you want to do something like a function call here.

595
00:27:00,000 --> 00:27:03,100
Like, compute the thing one.

596
00:27:04,400 --> 00:27:06,500
Right, and I'm going to make some call.

597
00:27:06,500 --> 00:27:10,000
And then I'm going to say, compute the thing too.

598
00:27:10,000 --> 00:27:14,200
And I want to know if either of these functions returned, you know, a

599
00:27:14,200 --> 00:27:14,900
particular value.

600
00:27:14,900 --> 00:27:18,700
Like I want to know if either of these returns not zero, it's under no

601
00:27:18,700 --> 00:27:22,700
obligation to actually do the second thing and will not do it.

602
00:27:23,000 --> 00:27:26,000
So, it means that if you're expecting compute the thing to to get

603
00:27:26,000 --> 00:27:28,400
called or, you know, an easier.

604
00:27:28,400 --> 00:27:30,700
One, since we haven't talked too much about function calls.

605
00:27:30,900 --> 00:27:34,100
Let's say I did x equals X plus 3.

606
00:27:34,500 --> 00:27:39,300
In here and Y, equals y plus 5 because C allows you to put full

607
00:27:39,300 --> 00:27:41,200
Expressions, pretty much anywhere you want.

608
00:27:41,300 --> 00:27:44,700
So I can actually do work and update, Y and X right in the middle

609
00:27:44,700 --> 00:27:44,800
here.

610
00:27:44,800 --> 00:27:46,700
If I wanted to, there's nothing wrong with that.

611
00:27:47,200 --> 00:27:48,500
This one will get done.

612
00:27:49,300 --> 00:27:53,900
Right but this one won't get done because it'll do this one.

613
00:27:53,900 --> 00:27:58,100
It'll set x equal to X plus 3 that will be not 0 probably and so it

614
00:27:58,100 --> 00:28:01,900
will never have to it knows that the value of this this or will be 1.

615
00:28:01,900 --> 00:28:04,100
So it will never have to actually execute this.

616
00:28:04,500 --> 00:28:06,200
So why will come out of this?

617
00:28:06,300 --> 00:28:08,300
Not having the incremented by 5.

618
00:28:08,500 --> 00:28:12,200
So if you were expecting it to you, will be in for a surprise that is

619
00:28:12,200 --> 00:28:14,700
what circuiting is, and it is good to be aware of.

620
00:28:14,700 --> 00:28:15,800
So, thank you for bringing that up.

621
00:28:20,000 --> 00:28:22,000
Using Code blocks.

622
00:28:22,000 --> 00:28:25,000
I can just use into Maine for my main function, what's going on with

623
00:28:25,000 --> 00:28:27,200
the window stuff in Visual Studio.

624
00:28:28,400 --> 00:28:31,800
It really has nothing to do with code blocks.

625
00:28:32,100 --> 00:28:35,900
The entry point is determined by the C runtime library and the

626
00:28:35,900 --> 00:28:36,700
operating system.

627
00:28:37,200 --> 00:28:40,600
So if you're talking about code blocks on Windows, you probably just

628
00:28:40,600 --> 00:28:43,300
made a project that was compiled in console mode.

629
00:28:43,600 --> 00:28:46,700
And if you compile a thing in console mode, even in Visual Studio,

630
00:28:47,300 --> 00:28:49,400
Is main the one you're talking about.

631
00:28:49,700 --> 00:28:54,500
For example, I can even show you that if I go in here, I think I can

632
00:28:54,500 --> 00:28:55,900
probably set it again.

633
00:28:55,900 --> 00:28:58,000
This is always an adventure because I never know where all the

634
00:28:58,000 --> 00:28:59,900
settings are in visual studio.

635
00:28:59,900 --> 00:29:03,500
And I certainly takes me a while to find them usually.

636
00:29:03,600 --> 00:29:11,300
So if I go in here and I want to do, let's see, can I do Linker?

637
00:29:11,800 --> 00:29:15,100
Should be something in the Linker that lets me kind of say what I

638
00:29:15,100 --> 00:29:15,400
want.

639
00:29:15,400 --> 00:29:17,100
Okay, so this subsystem thing.

640
00:29:17,300 --> 00:29:21,400
NG here, which is a subsystem Windows if I change that to substance of

641
00:29:21,400 --> 00:29:23,200
console, right?

642
00:29:23,300 --> 00:29:27,700
And I compiled this thing when I compile it, you'll notice that it now

643
00:29:27,700 --> 00:29:28,500
won't link.

644
00:29:28,600 --> 00:29:31,000
And the reason it won't think it's because it wants main, right?

645
00:29:31,000 --> 00:29:32,500
It no longer is looking for win main.

646
00:29:32,800 --> 00:29:37,600
So then if I go in here and say Main and use the standard notation

647
00:29:37,800 --> 00:29:39,600
therefore remain, right?

648
00:29:42,900 --> 00:29:44,500
Now my code starts there, right?

649
00:29:44,500 --> 00:29:47,000
And that's actually where the code, this is where the code will start,

650
00:29:47,200 --> 00:29:47,700
right?

651
00:29:48,000 --> 00:29:49,300
So, I don't know if that answers your question.

652
00:29:49,300 --> 00:29:53,500
But basically it has absolutely nothing to do with with code blocks or

653
00:29:53,500 --> 00:29:54,100
Visual Studio.

654
00:29:54,100 --> 00:29:58,000
It's just whether you were compiling with that as the entry point and

655
00:29:58,000 --> 00:29:59,000
either way.

656
00:30:00,000 --> 00:30:04,100
Windows is basically going to call into one or the other layer up

657
00:30:04,100 --> 00:30:06,700
anyway, and this is something we will do in the mainstream a little

658
00:30:06,700 --> 00:30:08,200
bit more, but if you look

659
00:30:11,600 --> 00:30:13,900
Getting way ahead of where we probably should be at this point.

660
00:30:13,900 --> 00:30:16,000
The hey, again, it's a Sunday.

661
00:30:16,400 --> 00:30:19,300
If you look at something called the call stack, which is basically the

662
00:30:19,300 --> 00:30:22,100
functions that have been called up to this point where we are how deep

663
00:30:22,100 --> 00:30:22,500
we are.

664
00:30:22,900 --> 00:30:25,600
If you back out of the call stack from where we are, and man, you'll

665
00:30:25,600 --> 00:30:27,100
see that we're not actually at window.

666
00:30:27,100 --> 00:30:28,800
So this thing I don't know if you can see this here.

667
00:30:29,000 --> 00:30:30,700
Well, you know, you can't because of course windows.

668
00:30:30,800 --> 00:30:34,300
I mean, a visual studio wants all the things to be super small van T.

669
00:30:34,300 --> 00:30:38,200
So let me go and let me set the fonts to something bigger here.

670
00:30:39,200 --> 00:30:39,300
So,

671
00:30:39,500 --> 00:30:40,600
Let's see.

672
00:30:41,300 --> 00:30:47,300
Call stack is call stack on the table, people intermediates window.

673
00:30:47,300 --> 00:30:47,700
Output.

674
00:30:47,700 --> 00:30:48,500
Window registers.

675
00:30:48,500 --> 00:30:50,400
Watch locals Autos, Autos.

676
00:30:50,400 --> 00:30:51,500
Call stack.

677
00:30:51,800 --> 00:30:56,600
Hey, so, I'm going to go ahead and set the call stack to Liberation

678
00:30:56,600 --> 00:31:00,700
mono and get that to be bigger.

679
00:31:01,500 --> 00:31:01,900
Okay.

680
00:31:02,500 --> 00:31:06,000
So, here we are in the call stack and this tells us basically who's

681
00:31:06,000 --> 00:31:08,900
calling who is called in to us who the people had to call in, to us?

682
00:31:09,400 --> 00:31:15,100
So if you see kernel32.dll kernel32.dll is actually where Windows

683
00:31:15,100 --> 00:31:17,500
actually entered us, right?

684
00:31:17,500 --> 00:31:22,700
So kernel32 is where the kernel mapped its code into our address

685
00:31:22,700 --> 00:31:23,200
space.

686
00:31:23,300 --> 00:31:26,400
It called into there and then that called in to us and it called in to

687
00:31:26,400 --> 00:31:27,100
us here.

688
00:31:27,400 --> 00:31:29,200
This is the C runtime Library.

689
00:31:29,400 --> 00:31:32,200
This is code that Microsoft wrote that it linked with our executable,

690
00:31:32,400 --> 00:31:35,900
which does some startup crap that allows them to implement certain

691
00:31:35,900 --> 00:31:38,800
functions of the C standard runtime Library.

692
00:31:39,700 --> 00:31:43,700
That called underscore underscore, teaming CRS to start up, which is

693
00:31:43,700 --> 00:31:47,700
also something that supplied by Microsoft in their runtime library.

694
00:31:48,000 --> 00:31:50,500
That did a bunch of initialization code, right?

695
00:31:50,500 --> 00:31:51,800
You can see it happening here.

696
00:31:52,900 --> 00:31:53,700
What were they doing?

697
00:31:53,700 --> 00:31:57,400
They were doing some kind of a memory locked exchange.

698
00:31:57,400 --> 00:31:59,200
They slept for a while.

699
00:31:59,300 --> 00:32:05,500
I guess if they couldn't exchange it, they did something to check

700
00:32:05,500 --> 00:32:09,300
whether they finished initializing they went.

701
00:32:09,500 --> 00:32:13,500
I didn't initialise C++ Constructors that have to happen at startup

702
00:32:13,500 --> 00:32:14,200
time.

703
00:32:14,800 --> 00:32:15,200
I don't know.

704
00:32:15,200 --> 00:32:18,600
I mean, I'm not, I'm just sort of vaguely guessing it what this is

705
00:32:18,600 --> 00:32:19,000
doing.

706
00:32:20,200 --> 00:32:21,000
Let's see here.

707
00:32:21,000 --> 00:32:24,600
They're looking getting the command line.

708
00:32:25,000 --> 00:32:27,000
They're processing.

709
00:32:27,000 --> 00:32:28,600
The command line for double quotes.

710
00:32:28,600 --> 00:32:33,100
It looks like skipping white space and then they finally call win

711
00:32:33,100 --> 00:32:33,300
main.

712
00:32:33,300 --> 00:32:34,200
If its wind main.

713
00:32:34,200 --> 00:32:36,200
Otherwise, they call Main if it's main, depending on whether you'd

714
00:32:36,200 --> 00:32:37,200
started console or not.

715
00:32:37,400 --> 00:32:39,200
So, that's actually what's going on there.

716
00:32:39,400 --> 00:32:42,200
And finally, we actually get to us after all that stuff happens.

717
00:32:42,300 --> 00:32:45,900
If you were to link without the C runtime Library, you would actually

718
00:32:45,900 --> 00:32:51,200
you'd be right here you would, you would be doing this and so you

719
00:32:51,200 --> 00:32:52,500
wouldn't have all that stuff happen.

720
00:32:52,500 --> 00:32:54,000
It would just you'd be writing you.

721
00:32:58,000 --> 00:32:59,600
Mmm.

722
00:33:00,000 --> 00:33:02,400
Like to know how many people bought the lesson, I'm curious at how big

723
00:33:02,400 --> 00:33:03,400
the community will be.

724
00:33:03,400 --> 00:33:08,000
I don't, I think the easiest way to see that is actually if you go to

725
00:33:08,000 --> 00:33:09,200
just to Twitch.

726
00:33:10,600 --> 00:33:18,600
So if you do twitch.tv handmade made hero, is that how you do it.

727
00:33:19,600 --> 00:33:25,000
I think you can look and see how many people have subscribed because

728
00:33:25,000 --> 00:33:27,300
more people subscribed by I think.

729
00:33:27,500 --> 00:33:27,700
So.

730
00:33:27,700 --> 00:33:29,800
How do you get subscribe?

731
00:33:30,000 --> 00:33:31,600
A, how do you know what?

732
00:33:31,600 --> 00:33:33,200
See, I'm too much of a twitch.

733
00:33:33,200 --> 00:33:34,000
Noob.

734
00:33:34,000 --> 00:33:35,300
I don't know.

735
00:33:35,700 --> 00:33:41,000
I have no idea how you do, how you get, like, the stats or whatever,

736
00:33:41,800 --> 00:33:45,800
but if you can, if you can go to like the the thing that says, there

737
00:33:45,800 --> 00:33:48,500
you go, thirteen hundred followers.

738
00:33:48,800 --> 00:33:53,200
So I assume that means like roughly 1,300 people could be watching at

739
00:33:53,200 --> 00:33:56,900
maximum because presumably, unless there's people who just don't know

740
00:33:56,900 --> 00:33:58,900
how to use tuition so they didn't follow it or whatever, but

741
00:33:58,900 --> 00:33:59,800
presumably if you're going

742
00:34:00,400 --> 00:34:01,100
Try to follow along.

743
00:34:01,100 --> 00:34:02,500
Then you you did that.

744
00:34:03,300 --> 00:34:03,600
Okay?

745
00:34:08,500 --> 00:34:09,800
Let's see.

746
00:34:13,400 --> 00:34:14,500
Short circuiting.

747
00:34:15,000 --> 00:34:16,699
Will you show how to look for I cache?

748
00:34:16,699 --> 00:34:17,900
Misses in the mainstream?

749
00:34:17,900 --> 00:34:21,699
Probably not unless we actually run into something where we're

750
00:34:21,699 --> 00:34:22,400
actually doing that.

751
00:34:22,400 --> 00:34:25,900
Now, maybe I'll do a section on like performance counters from from

752
00:34:25,900 --> 00:34:29,600
Intel or something, but probably not, I cache misses are super rare

753
00:34:29,600 --> 00:34:32,800
thing to be optimizing for so I probably won't get to that.

754
00:34:33,600 --> 00:34:34,800
But, you know, I don't know.

755
00:34:34,800 --> 00:34:36,400
And again, I'm also the wrong person.

756
00:34:36,600 --> 00:34:38,300
Like if you're optimizing for, I cast.

757
00:34:38,300 --> 00:34:38,800
Mrs.

758
00:34:38,900 --> 00:34:40,300
You're a hardcore optimization guy.

759
00:34:40,400 --> 00:34:42,600
I mean, it's pretty much it if your Flex 64k alias.

760
00:34:42,800 --> 00:34:43,699
I cast, mrs.

761
00:34:43,699 --> 00:34:47,400
Tlb like, if you're optimizing that stuff, you're a hardcore

762
00:34:47,400 --> 00:34:50,600
optimization guy and you almost never need to do that.

763
00:34:51,000 --> 00:34:53,300
For Just Two to make a really good game.

764
00:34:53,600 --> 00:34:56,100
If you want to push technical boundaries, you absolutely do need to

765
00:34:56,100 --> 00:34:58,800
know that stuff, but we probably won't get that far.

766
00:34:59,000 --> 00:35:02,900
I'm going to give people essentially the start of like, here's how we

767
00:35:02,900 --> 00:35:04,100
optimize code to be good.

768
00:35:04,400 --> 00:35:08,400
And here's how we are code to be good, but I'm not going to go all the

769
00:35:08,400 --> 00:35:11,700
way on anything because we could Rat Hole for months on optimization,

770
00:35:11,700 --> 00:35:12,500
and that's not the goal.

771
00:35:12,700 --> 00:35:14,800
Like the goal is for me to give you a complete game show you how to

772
00:35:14,800 --> 00:35:15,300
make all of it.

773
00:35:15,300 --> 00:35:17,700
Good and to let you know what, you don't know.

774
00:35:17,700 --> 00:35:20,300
So that if you're like, I really want to be if someone who spends all

775
00:35:20,300 --> 00:35:21,300
my time, working on X.

776
00:35:21,300 --> 00:35:23,900
You will know what x is and how to like that go further.

777
00:35:24,200 --> 00:35:26,000
So I'll select in this dream.

778
00:35:26,000 --> 00:35:29,300
I mention I cash so that you know that it's there, but I don't

779
00:35:29,300 --> 00:35:31,300
necessarily show you everything you need to know about it.

780
00:35:32,700 --> 00:35:34,600
Do you use a lot of advanced auto ship to simple ones?

781
00:35:34,600 --> 00:35:36,700
Do you worry about algorithmic Owen complexity?

782
00:35:36,800 --> 00:35:40,500
Yes, you always have to worry about algorithmic, 0, n complexity.

783
00:35:41,000 --> 00:35:43,500
You should know the 0 n complexity of absolutely everything you do if

784
00:35:43,500 --> 00:35:44,100
you don't.

785
00:35:44,200 --> 00:35:45,000
That is a problem.

786
00:35:45,100 --> 00:35:47,100
So, I will be mentioning that often during the stream.

787
00:35:48,600 --> 00:35:52,100
Would you fight one horse-sized duck or 10?

788
00:35:52,100 --> 00:35:55,000
The Legend of Zelda, swarming duck-sized horses?

789
00:35:58,600 --> 00:35:59,800
That is a tough question.

790
00:36:00,200 --> 00:36:06,100
I think probably horse-sized duck because I don't like horses.

791
00:36:06,100 --> 00:36:07,100
I don't trust them.

792
00:36:07,200 --> 00:36:08,900
I think ducks are more trustworthy.

793
00:36:09,100 --> 00:36:12,000
And so I feel like a duck and I could have a fair fight.

794
00:36:12,600 --> 00:36:17,100
Whereas I think 10 horses, no matter how big they were would be,

795
00:36:17,200 --> 00:36:18,200
wouldn't be a fair fight.

796
00:36:18,200 --> 00:36:22,100
They would try to do things to try and rig the fight against me and I

797
00:36:22,100 --> 00:36:23,000
don't think that's fair.

798
00:36:23,000 --> 00:36:25,400
Like, if me and the horse are going to have a fight.

799
00:36:25,500 --> 00:36:26,600
I mean the duck are going to have a fight.

800
00:36:26,600 --> 00:36:28,700
It's going to be a gentleman's fight.

801
00:36:30,400 --> 00:36:34,900
And I feel like both of us will be able to enter it on terms that are

802
00:36:34,900 --> 00:36:37,800
fair and respect each other afterwards.

803
00:36:38,500 --> 00:36:44,800
No low blows, you know, nothing below the feather line and whereas if

804
00:36:44,800 --> 00:36:47,400
it's going to be, for example, a horse, who knows what that thing is

805
00:36:47,400 --> 00:36:48,900
going to do, that's going to be one of those things was like, look

806
00:36:48,900 --> 00:36:50,600
over there and then the horse trots kick you, right?

807
00:36:50,600 --> 00:36:51,800
That's like what a horse would do.

808
00:36:52,100 --> 00:36:54,400
So, I think I definitely fight the one horse-sized duck.

809
00:36:55,300 --> 00:36:59,000
I'm not sure if I can ask this but what operating system is your PC.

810
00:36:59,000 --> 00:37:01,400
This one that were on right now is Windows 7?

811
00:37:03,300 --> 00:37:03,900
Did I miss it?

812
00:37:03,900 --> 00:37:06,600
Or did you not discuss functions return values passing by value

813
00:37:06,600 --> 00:37:07,500
reference etcetera?

814
00:37:08,000 --> 00:37:09,600
We did discuss functions.

815
00:37:09,700 --> 00:37:14,100
We did discuss return values, but we have not yet discussed passing by

816
00:37:14,100 --> 00:37:16,000
value versus passing by reference.

817
00:37:16,000 --> 00:37:16,400
Really?

818
00:37:16,400 --> 00:37:19,600
I mean, basically those are the things we'll probably get two more in

819
00:37:19,600 --> 00:37:22,800
the mainstream as well as what kind of function calls you do.

820
00:37:22,800 --> 00:37:24,200
Like standard Culver's is fastball.

821
00:37:26,000 --> 00:37:30,200
Have you seen have an opinion on data oriented design Dodd?

822
00:37:30,200 --> 00:37:30,700
Main?

823
00:37:31,600 --> 00:37:34,500
I don't have not seen it.

824
00:37:34,800 --> 00:37:36,000
So I do not have an opinion.

825
00:37:36,500 --> 00:37:40,300
I do like code that is oriented around the data that it works with.

826
00:37:40,300 --> 00:37:43,200
So I sounds like something I would like, but who knows, maybe the name

827
00:37:43,200 --> 00:37:43,800
doesn't mean that?

828
00:37:47,700 --> 00:37:50,600
Weird that senior trade didn't mention stack overflows at the obvious

829
00:37:50,600 --> 00:37:52,100
Point, unless I missed it.

830
00:37:52,800 --> 00:37:54,200
No, I did not mention stackoverflow.

831
00:37:54,200 --> 00:37:57,300
Stack overflows or just what happens when you run out of guard pages

832
00:37:57,300 --> 00:37:57,900
on the stack.

833
00:37:57,900 --> 00:38:00,000
So you've run out of space basically for the stack.

834
00:38:00,200 --> 00:38:04,000
And so, you know, you have to basically take into account the fact

835
00:38:04,000 --> 00:38:07,500
that you you have limited stock size, but we will never do anything

836
00:38:07,500 --> 00:38:09,800
that comes anywhere close to using the all those Stacks dies.

837
00:38:09,800 --> 00:38:11,900
I don't think so that probably won't be too much of an issue.

838
00:38:11,900 --> 00:38:13,500
But yeah that that's more of an advanced topic.

839
00:38:13,500 --> 00:38:15,200
If you're overflowing the stack, some stuffs gone.

840
00:38:16,000 --> 00:38:18,500
That's either gone wrong, or you're doing something particularly odd.

841
00:38:19,700 --> 00:38:21,700
Are you going to be using opengl and DirectX?

842
00:38:21,700 --> 00:38:23,900
Know we're building the engine from scratch.

843
00:38:23,900 --> 00:38:25,200
We will not be using open till DirectX.

844
00:38:25,200 --> 00:38:29,400
I may do eventually something that shows you how to do the renderer in

845
00:38:29,400 --> 00:38:30,200
opengl.

846
00:38:30,300 --> 00:38:32,600
Just so you know how to do the equivalent things.

847
00:38:32,600 --> 00:38:35,600
But that would be like at the very end of the game, just to show you

848
00:38:35,600 --> 00:38:39,100
how to get more performance by using a GPU basically, but but yeah,

849
00:38:39,100 --> 00:38:39,500
that's it.

850
00:38:42,300 --> 00:38:46,300
Royal Tom says, the comedy thing, does not work in visual studio 2013

851
00:38:46,300 --> 00:38:46,600
there.

852
00:38:46,600 --> 00:38:48,700
So the all the people are saying, comma, B.

853
00:38:48,900 --> 00:38:49,900
Why are you saying that?

854
00:38:49,900 --> 00:38:53,800
You're just, you're just trying to sow confusion.

855
00:38:53,900 --> 00:38:55,500
Don't say it if you haven't tried it.

856
00:38:57,400 --> 00:38:59,800
Scdf, 47 chance of me being able to follow along.

857
00:39:00,000 --> 00:39:01,000
It's absolutely.

858
00:39:01,400 --> 00:39:05,500
The only problem is I'm not sure exactly how I'm going to handle this.

859
00:39:05,500 --> 00:39:07,700
Maybe, what I'll do is try to, I'll try to maybe try to help people.

860
00:39:07,700 --> 00:39:12,700
I'm not sure, but basically, I will do the developing on Windows, but

861
00:39:12,700 --> 00:39:15,500
I will show how to write the equivalent startup code on Linux and Mac.

862
00:39:16,000 --> 00:39:17,800
The question is when I do that.

863
00:39:18,400 --> 00:39:20,500
And so I'm trying to work out exactly how that's going to happen.

864
00:39:20,500 --> 00:39:24,100
What may have to happen is I'll just write the code myself and I won't

865
00:39:24,100 --> 00:39:26,700
show how to write it and it will be in the source tree.

866
00:39:26,900 --> 00:39:29,800
And then later I will go and rewrite.

867
00:39:30,000 --> 00:39:33,300
It it explaining how I write it on the live stream so that people can

868
00:39:33,300 --> 00:39:35,000
see something like that.

869
00:39:35,000 --> 00:39:35,500
I don't know.

870
00:39:35,500 --> 00:39:38,100
I'm still trying to work that out, but I would like people to be able

871
00:39:38,100 --> 00:39:40,000
to follow along on Linux and Mac if possible.

872
00:39:40,500 --> 00:39:41,700
So, we'll see what we can do.

873
00:39:45,500 --> 00:39:48,600
Cordelia night tonight to do the standard multiplication, star use B

874
00:39:48,600 --> 00:39:52,000
shift to optimize itself, or does it do it in some other way?

875
00:39:52,000 --> 00:39:55,200
The answer is that the compiler may take advantage of that?

876
00:39:55,200 --> 00:39:59,400
Yes, if you do an integer x to the compiler, May shift if it's faster

877
00:40:00,100 --> 00:40:02,900
on that platform, that's that's just one of the things that optimize

878
00:40:02,900 --> 00:40:07,200
our might do, I think, usually that's called strength reduction.

879
00:40:08,100 --> 00:40:11,100
In compiler parlance, it's been a while since I've talked to compiler.

880
00:40:11,300 --> 00:40:14,500
But basically there's a set of optimizations that compilers can do

881
00:40:14,500 --> 00:40:17,800
which turn operations that are expensive on the CPU and to ones that

882
00:40:17,800 --> 00:40:20,000
are less expensive because they happen to work out.

883
00:40:20,100 --> 00:40:24,500
And so one of the things that can happen is a shift by 2 or x 2 or a

884
00:40:24,500 --> 00:40:26,900
shift can be kind of interchanged.

885
00:40:27,000 --> 00:40:29,500
So it will do that depending on the platform if it thinks it can get

886
00:40:29,500 --> 00:40:30,100
the speed win.

887
00:40:34,800 --> 00:40:37,700
Let's see when you ask the chat, something keep in mind.

888
00:40:37,700 --> 00:40:38,200
There's a delay.

889
00:40:38,200 --> 00:40:39,100
So, make sure to wait 30.

890
00:40:39,100 --> 00:40:39,600
Yes.

891
00:40:39,600 --> 00:40:40,700
Yes, I do.

892
00:40:40,800 --> 00:40:41,800
I do try to do that now.

893
00:40:43,700 --> 00:40:46,100
Will the allocator be lock-free thread-safe?

894
00:40:46,400 --> 00:40:49,500
Miss Chantix wants to know the allocator.

895
00:40:50,900 --> 00:40:53,100
So it depends exactly what you're talking about.

896
00:40:54,200 --> 00:40:56,300
Allocator means two different things.

897
00:40:56,600 --> 00:40:59,300
There's the thing that actually gets memory from the system and that

898
00:40:59,300 --> 00:41:02,300
will probably not be locked free or thread safe.

899
00:41:03,400 --> 00:41:05,500
That will probably just be something that gets a memory from the

900
00:41:05,500 --> 00:41:05,900
system.

901
00:41:06,600 --> 00:41:11,700
The actual things that allocate out of that pool that it receives in

902
00:41:11,700 --> 00:41:12,700
the operating system.

903
00:41:13,700 --> 00:41:19,200
I suspect that there are maybe one place where those are locked free

904
00:41:19,200 --> 00:41:24,100
and thread safe because there is one thing I do anticipate doing that

905
00:41:24,100 --> 00:41:26,800
will want that, everything else will not require it and you never

906
00:41:26,800 --> 00:41:28,600
write locked free thread, safe code.

907
00:41:28,600 --> 00:41:30,700
If you don't need to because it is more complicated.

908
00:41:31,600 --> 00:41:33,600
How much dependency injection do you use?

909
00:41:34,500 --> 00:41:36,600
Dependency injection.

910
00:41:38,800 --> 00:41:40,100
Dependency injection.

911
00:41:40,100 --> 00:41:40,400
I'm sorry.

912
00:41:40,400 --> 00:41:42,100
I do not know what you mean by dependency injection.

913
00:41:42,100 --> 00:41:45,400
If enemy Mouse could tell me what they mean by that.

914
00:41:45,900 --> 00:41:48,000
The simple parameter passing.

915
00:41:48,000 --> 00:41:48,400
I'm sorry.

916
00:41:48,400 --> 00:41:51,000
Enemy Mouse, tell me what you mean by that and I will answer that.

917
00:41:54,300 --> 00:41:55,500
Let's see.

918
00:41:56,200 --> 00:41:59,600
Do you feel the same way about doing raii for public?

919
00:42:00,200 --> 00:42:04,700
Eyes, public apis are delicate topic and I need to see the specific

920
00:42:04,700 --> 00:42:07,200
case always before I'm willing to make any kind of.

921
00:42:09,100 --> 00:42:10,000
Proclamation.

922
00:42:10,100 --> 00:42:12,100
I have a whole lecture that's like an hour-long.

923
00:42:12,100 --> 00:42:14,400
That's on the web about API design.

924
00:42:14,400 --> 00:42:17,100
You can look at if you want to that answer some of those questions,

925
00:42:17,100 --> 00:42:21,300
but why will you not be using class instruct instead, like, in a bit

926
00:42:21,300 --> 00:42:22,200
of detail, Maybe?

927
00:42:23,600 --> 00:42:28,300
Well, first of all, I mean I should point out the fact, if it wasn't

928
00:42:28,300 --> 00:42:31,300
already known to someone asking that question because I didn't cover

929
00:42:31,300 --> 00:42:31,700
classes.

930
00:42:31,700 --> 00:42:34,500
So if you're asking that question, you must already know, so I'm not

931
00:42:34,500 --> 00:42:35,800
sure why I'm typing this in but

932
00:42:37,300 --> 00:42:40,200
There is no difference between a class instruct and C++.

933
00:42:40,700 --> 00:42:43,300
They are exactly the same except for one difference.

934
00:42:43,600 --> 00:42:46,000
That is that a struct, has this at the beginning of it.

935
00:42:46,000 --> 00:42:48,900
Implicitly and a class has this at beginning of it.

936
00:42:48,900 --> 00:42:50,400
Implicitly, that's pretty much it.

937
00:42:51,400 --> 00:42:53,700
So basically why am I not using a class?

938
00:42:53,700 --> 00:42:56,100
Well, I could use a class if you would prefer.

939
00:42:58,000 --> 00:42:58,900
There is my class.

940
00:42:59,100 --> 00:42:59,500
It's great.

941
00:42:59,500 --> 00:42:59,900
Right?

942
00:43:00,000 --> 00:43:00,700
Do you love it?

943
00:43:01,900 --> 00:43:03,400
So, yeah, there's no difference in instructing, the class.

944
00:43:03,400 --> 00:43:06,700
There's no difference between those two things, literally, no

945
00:43:06,700 --> 00:43:07,700
difference between those two things.

946
00:43:07,900 --> 00:43:09,900
Like, what do you want to do anything?

947
00:43:09,900 --> 00:43:10,600
You want to do?

948
00:43:10,900 --> 00:43:11,600
You can do it.

949
00:43:11,800 --> 00:43:13,000
You want to hear it from something?

950
00:43:14,800 --> 00:43:15,400
Go nuts.

951
00:43:17,600 --> 00:43:19,400
Right, no problem.

952
00:43:20,100 --> 00:43:21,700
So there's no difference between instruction the class.

953
00:43:21,700 --> 00:43:24,500
There's a C++ doesn't doesn't distinguish between those two things.

954
00:43:24,500 --> 00:43:25,200
As far as I know.

955
00:43:25,500 --> 00:43:28,000
They're, they're 100% equivocal equivalent.

956
00:43:28,200 --> 00:43:33,900
They're 100% equivalent except for which default you use and it always

957
00:43:33,900 --> 00:43:37,200
cracks me up to watch C++, programmers type.

958
00:43:37,200 --> 00:43:42,800
This always I've never seen like a C++ programmer in modern times not

959
00:43:42,800 --> 00:43:44,100
start their class with public.

960
00:43:44,100 --> 00:43:47,200
I'm like, why didn't you just type that then you don't need?

961
00:43:47,400 --> 00:43:50,000
That and you can just type private down here, but who knows?

962
00:43:50,600 --> 00:43:51,100
I don't know why?

963
00:43:51,100 --> 00:43:52,500
C++ programmers, do what they do.

964
00:43:52,600 --> 00:43:57,200
They just, they do what they do.

965
00:43:57,300 --> 00:43:59,400
You can't, you know, you gotta love them.

966
00:44:00,300 --> 00:44:01,900
They like to type a lot more than they need to.

967
00:44:01,900 --> 00:44:02,600
That's what that's for.

968
00:44:02,600 --> 00:44:03,000
Sure.

969
00:44:04,100 --> 00:44:05,500
Why will you not be using class?

970
00:44:05,500 --> 00:44:06,700
Direct instead got that.

971
00:44:06,900 --> 00:44:08,200
Why no classes answered?

972
00:44:08,200 --> 00:44:10,100
That have no idea.

973
00:44:10,100 --> 00:44:11,100
What a mixing is.

974
00:44:11,100 --> 00:44:15,400
Can you elaborate a mix in is when you say that, something wants to

975
00:44:15,400 --> 00:44:16,200
have a lot of stuff.

976
00:44:16,200 --> 00:44:17,200
So for example,

977
00:44:17,300 --> 00:44:17,500
Oil.

978
00:44:18,800 --> 00:44:22,300
In a fictional language that is not exist.

979
00:44:23,400 --> 00:44:28,200
I want to create a projectile like I did before but instead of having

980
00:44:28,200 --> 00:44:30,000
it, specify its own layout and stuff.

981
00:44:30,000 --> 00:44:35,500
I just want to say that a projectile, you know, you know.

982
00:44:35,500 --> 00:44:38,000
It it is an entity.

983
00:44:38,300 --> 00:44:48,200
It has flammability it, it can explode, it does.

984
00:44:48,500 --> 00:44:52,100
Sort of it does do damage Etc.

985
00:44:52,100 --> 00:44:55,400
And you basically lists a bunch of stuff that you want to be true

986
00:44:55,400 --> 00:44:56,200
about this thing.

987
00:44:56,200 --> 00:44:59,900
And then the language mixes what all of those mean together into

988
00:45:00,000 --> 00:45:01,000
One thing that can do them.

989
00:45:01,000 --> 00:45:08,300
All right, and C++ with multiple inheritance, tried to do this, right?

990
00:45:08,300 --> 00:45:10,100
They tried to make it so that you can do those things.

991
00:45:10,100 --> 00:45:14,000
Like, I am, I inherit this thing from flammable, you know, and other

992
00:45:14,000 --> 00:45:16,500
things, multiple, multiple inheritance.

993
00:45:16,900 --> 00:45:19,800
I inherit from multiple things that I might want to be, but it doesn't

994
00:45:19,800 --> 00:45:23,100
work properly because a lot of things that you want to be able to do

995
00:45:23,100 --> 00:45:26,400
in that start in, that system don't actually work the way you want mix

996
00:45:26,400 --> 00:45:27,000
into work.

997
00:45:27,100 --> 00:45:29,400
So what a lot of people's first farmers do is they do mix in by

998
00:45:30,000 --> 00:45:30,500
Moment.

999
00:45:30,500 --> 00:45:33,400
So they'll put Like A flammable thing in here, right?

1000
00:45:33,400 --> 00:45:36,700
And then they'll have ways of like turning a projectile, into a

1001
00:45:36,700 --> 00:45:40,200
flammable by returning, the interior thing out of it and blah blah

1002
00:45:40,200 --> 00:45:43,400
blah and it's all just a it's all just a mess.

1003
00:45:43,600 --> 00:45:46,900
So we will be trying to implement A system that does mix in more

1004
00:45:46,900 --> 00:45:49,600
cleanly for the things that we want to do and we'll just implement it

1005
00:45:49,600 --> 00:45:50,200
by hand.

1006
00:45:50,200 --> 00:45:51,900
We won't try to use any fancy language features.

1007
00:45:51,900 --> 00:45:55,500
We'll just do it and you'll see how it's done.

1008
00:45:55,700 --> 00:45:56,400
It's no big deal.

1009
00:46:03,300 --> 00:46:04,700
I never talked about the camera operator.

1010
00:46:04,700 --> 00:46:05,300
That's true.

1011
00:46:05,700 --> 00:46:08,400
I think it's actually technically called the sequence operator and I

1012
00:46:08,400 --> 00:46:11,100
am not going to talk about it because unless it actually comes up in

1013
00:46:11,100 --> 00:46:12,400
the Stream, which it might sometimes.

1014
00:46:12,400 --> 00:46:14,700
I'll probably get kind of just ignore it.

1015
00:46:14,900 --> 00:46:15,900
For those of you who want to know.

1016
00:46:15,900 --> 00:46:16,500
What a comma operator.

1017
00:46:16,500 --> 00:46:16,600
Is.

1018
00:46:16,600 --> 00:46:18,700
It just basically puts two statements next to each other.

1019
00:46:19,200 --> 00:46:24,200
So basically, if I do something like, you know, x equals 6, Z equals

1020
00:46:24,200 --> 00:46:29,200
4, it basically allows me to do two separate statements that happen.

1021
00:46:29,900 --> 00:46:32,700
Sequentially sort of like a semi colon operator, but

1022
00:46:33,000 --> 00:46:36,200
Doesn't actually have the Restriction at it, has to be grouped on a

1023
00:46:36,200 --> 00:46:36,800
separate thing.

1024
00:46:38,100 --> 00:46:38,800
Go to as well.

1025
00:46:38,800 --> 00:46:40,900
I'm not going to cover go to because I almost never use them.

1026
00:46:41,500 --> 00:46:43,600
So, there is a go to and see, but I'm not going to cover it.

1027
00:46:43,600 --> 00:46:44,100
I there's other.

1028
00:46:44,100 --> 00:46:45,600
There's a lot of things to see that I could cover.

1029
00:46:46,100 --> 00:46:47,700
It was not inclusive thing for sure.

1030
00:46:48,900 --> 00:46:50,800
I understand that I can recreate the source code at home.

1031
00:46:50,800 --> 00:46:53,100
But just by following your stream, but what about art and music?

1032
00:46:53,200 --> 00:46:53,900
Do I have to buy the game?

1033
00:46:53,900 --> 00:46:55,700
Download it or you provided some download links?

1034
00:46:55,900 --> 00:46:57,200
Yes, if you want art.

1035
00:46:57,200 --> 00:46:57,800
There are music.

1036
00:46:57,800 --> 00:46:58,500
You have to buy the game.

1037
00:46:58,900 --> 00:47:00,500
That's kind of what the game is.

1038
00:47:00,500 --> 00:47:01,600
The source code, the art the music.

1039
00:47:01,600 --> 00:47:05,200
So if you want that Gotta Buy it, this might have been answered.

1040
00:47:05,200 --> 00:47:07,100
Made you use go to and see ever know.

1041
00:47:07,400 --> 00:47:08,900
I don't, I'm not strictly against it.

1042
00:47:08,900 --> 00:47:09,700
I just haven't.

1043
00:47:09,700 --> 00:47:11,500
I grew up not using it and just don't use it.

1044
00:47:11,500 --> 00:47:12,000
Very often.

1045
00:47:13,900 --> 00:47:16,100
Are you been cousins?

1046
00:47:16,100 --> 00:47:17,400
I do not know who Ben Cousins is.

1047
00:47:19,400 --> 00:47:20,500
Let's see.

1048
00:47:20,600 --> 00:47:21,900
Why do you like?

1049
00:47:21,900 --> 00:47:23,000
Okay, I covered the class thing.

1050
00:47:23,000 --> 00:47:25,200
We'd be showing the creation of any tools like a level editor.

1051
00:47:27,200 --> 00:47:27,900
It's good question.

1052
00:47:29,800 --> 00:47:33,500
Probably will do a little bit of a little level editor, sorts of

1053
00:47:33,500 --> 00:47:34,000
stuff.

1054
00:47:35,200 --> 00:47:38,300
I want to show how to do procedurally, generated worlds.

1055
00:47:38,600 --> 00:47:41,900
So, I probably won't be building like, a really big level editor

1056
00:47:41,900 --> 00:47:45,200
because we won't be editing levels a ton, but we probably will do a

1057
00:47:45,200 --> 00:47:46,200
little bit of that yet.

1058
00:47:47,300 --> 00:47:49,300
Have you ever made anything for the demo scene or know?

1059
00:47:49,300 --> 00:47:49,800
Anyone who has?

1060
00:47:49,900 --> 00:47:53,300
I have not but Fabien who have referred to a couple times who works at

1061
00:47:53,300 --> 00:47:55,500
rad was part of Fab rush.

1062
00:47:55,600 --> 00:47:59,800
I don't actually know how to pronounce that but he is

1063
00:48:00,000 --> 00:48:06,200
A guy who works at rad, who is a friend of mine, and he was part of

1064
00:48:06,200 --> 00:48:07,400
the demo group.

1065
00:48:07,400 --> 00:48:07,800
There we go.

1066
00:48:07,800 --> 00:48:08,600
That's the one.

1067
00:48:10,000 --> 00:48:11,000
Let's see.

1068
00:48:11,300 --> 00:48:17,100
This is them, and they did a bunch of cool demos like K Kriegers,

1069
00:48:17,100 --> 00:48:17,700
pretty cool.

1070
00:48:17,700 --> 00:48:20,600
It was like some like 120k executable.

1071
00:48:20,600 --> 00:48:21,800
That's like a whole Quake game.

1072
00:48:21,800 --> 00:48:22,400
Basically.

1073
00:48:23,000 --> 00:48:23,700
It's pretty cool.

1074
00:48:23,900 --> 00:48:28,500
So yeah, I mean, I dunno, I guess that's one person who did something

1075
00:48:28,500 --> 00:48:29,900
don't say, I don't think I know anyone.

1076
00:48:30,000 --> 00:48:30,400
One else.

1077
00:48:30,900 --> 00:48:33,400
I don't know many people from Europe actually.

1078
00:48:33,400 --> 00:48:35,900
And the demo scene seems to be like way bigger there than it is here.

1079
00:48:35,900 --> 00:48:39,700
So like I've only, I just haven't met that many people from Europe.

1080
00:48:39,700 --> 00:48:40,500
So I don't know.

1081
00:48:40,500 --> 00:48:41,200
A lot of demo scene.

1082
00:48:41,200 --> 00:48:41,500
People.

1083
00:48:41,500 --> 00:48:42,600
I think demos are really cool.

1084
00:48:42,600 --> 00:48:43,600
I like the demo scene.

1085
00:48:43,600 --> 00:48:44,600
I think that would have been something.

1086
00:48:44,800 --> 00:48:47,600
I would have had fun growing up in that scene, but they didn't have

1087
00:48:47,600 --> 00:48:48,600
that where I lived.

1088
00:48:51,600 --> 00:48:53,200
Why don't use a platform independent library?

1089
00:48:53,200 --> 00:48:55,900
Because I want to show you how to make everything yourself after, you

1090
00:48:55,900 --> 00:48:58,300
know, how to make everything yourself, then by all means use a

1091
00:48:58,300 --> 00:48:59,500
library, if you like it.

1092
00:49:02,200 --> 00:49:03,600
So, what are the general plan for the game?

1093
00:49:03,600 --> 00:49:04,800
Get something on screen quickly possible?

1094
00:49:04,800 --> 00:49:06,000
Put your sugar for the whole game.

1095
00:49:06,000 --> 00:49:06,700
Something else.

1096
00:49:06,900 --> 00:49:08,100
It will be real, play it by ear.

1097
00:49:08,100 --> 00:49:10,600
But basically, we're going to get a simple thing up and running first.

1098
00:49:10,600 --> 00:49:13,800
And then, we're going to expand the parts as we go into more and more

1099
00:49:13,800 --> 00:49:16,500
professional quality, because that's generally how you do it.

1100
00:49:16,500 --> 00:49:20,900
Even, you know, when you're writing a game, that's not teaching game.

1101
00:49:20,900 --> 00:49:24,100
You tend to want to structure its which you push gradually outward.

1102
00:49:24,700 --> 00:49:27,100
So you don't have like this sort of

1103
00:49:29,400 --> 00:49:33,000
Huge load of crazy architecture that has to happen first where you

1104
00:49:33,000 --> 00:49:34,500
don't know how all the parts into relate.

1105
00:49:34,500 --> 00:49:37,900
So if you sort of build over time, usually works much better.

1106
00:49:41,300 --> 00:49:42,300
Strength reduction.

1107
00:49:42,300 --> 00:49:45,600
Yes, tea or water would probably be kinder to your voice than milk.

1108
00:49:45,600 --> 00:49:48,500
It is almond milk, but that's possibly true.

1109
00:49:49,000 --> 00:49:50,600
We show fractals and how to do them.

1110
00:49:50,600 --> 00:49:54,000
No fractals will not really be related.

1111
00:49:54,200 --> 00:49:57,100
Dependency injection means we used Loop to get us into a lot of

1112
00:49:57,100 --> 00:50:00,000
trouble and now we're using even more up to get out again, then know,

1113
00:50:00,000 --> 00:50:01,100
I probably won't do that.

1114
00:50:01,100 --> 00:50:01,900
That sounds awful.

1115
00:50:03,400 --> 00:50:06,900
Dia is not a common thing in C C++ be on-premise Constructors.

1116
00:50:06,900 --> 00:50:09,100
Otherwise, use reflective Nexus to prefilled data.

1117
00:50:10,700 --> 00:50:11,200
Okay.

1118
00:50:11,600 --> 00:50:16,200
Let's say can a struct have a Constructor?

1119
00:50:16,200 --> 00:50:16,700
Yes.

1120
00:50:17,400 --> 00:50:18,200
You're okay.

1121
00:50:18,200 --> 00:50:20,500
Did your teachers seriously tell you?

1122
00:50:21,600 --> 00:50:23,200
Okay, Lord, Julien 1992.

1123
00:50:23,300 --> 00:50:25,000
Did you really have a teacher?

1124
00:50:25,300 --> 00:50:27,700
Who told you that a struct?

1125
00:50:27,700 --> 00:50:29,100
Can't have a Constructor?

1126
00:50:29,500 --> 00:50:34,400
Because I do not know how you get a job teaching, anyone anything?

1127
00:50:34,600 --> 00:50:37,500
If you can't take 10 seconds to type this,

1128
00:50:39,600 --> 00:50:42,200
If you can't have a Constructor, how did I just type that, right?

1129
00:50:42,200 --> 00:50:45,500
That's all that was literally like, you know, 20 characters or

1130
00:50:45,500 --> 00:50:45,800
something.

1131
00:50:45,800 --> 00:50:48,300
I had to type in, to answer my student properly.

1132
00:50:48,500 --> 00:50:50,400
How did you not do that before?

1133
00:50:50,400 --> 00:50:51,700
You said that, that's awful?

1134
00:50:52,300 --> 00:50:52,800
Okay.

1135
00:50:53,400 --> 00:50:54,500
That's really weird.

1136
00:50:55,500 --> 00:50:56,800
I suppose, I shouldn't get mad.

1137
00:50:56,800 --> 00:50:58,600
I mean, I say wrong things on this stream.

1138
00:50:58,600 --> 00:50:59,700
I only know what I know.

1139
00:50:59,700 --> 00:50:59,900
So,

1140
00:51:00,000 --> 00:51:00,300
First.

1141
00:51:00,300 --> 00:51:02,000
Maybe I shouldn't be so hard on people.

1142
00:51:02,700 --> 00:51:04,400
Yeah, I guess I just never tried it.

1143
00:51:06,100 --> 00:51:07,800
All right, I'm gonna not be mad about that.

1144
00:51:07,800 --> 00:51:09,900
I think I should always try to be positive on this dream because you

1145
00:51:09,900 --> 00:51:12,400
know, what programming is complicated.

1146
00:51:12,400 --> 00:51:14,900
And so I could see someone just not knowing like maybe you just never

1147
00:51:14,900 --> 00:51:15,900
thought to try it.

1148
00:51:16,400 --> 00:51:18,900
And if you never thought to try it, then I guess you'd probably just

1149
00:51:18,900 --> 00:51:19,600
be like, I don't know.

1150
00:51:19,600 --> 00:51:21,100
I've never seen anyone do it.

1151
00:51:21,800 --> 00:51:24,900
So I just assumed that you couldn't and I didn't want to read the spec

1152
00:51:24,900 --> 00:51:28,000
because I mean I'll be honest the spec is f and giant so I could

1153
00:51:28,000 --> 00:51:29,300
totally see you not one green specks.

1154
00:51:29,300 --> 00:51:29,800
Oh nevermind.

1155
00:51:29,800 --> 00:51:31,700
I retract the rage rage attracted.

1156
00:51:32,700 --> 00:51:35,200
If you would like to tell your teacher politely that you can have

1157
00:51:35,200 --> 00:51:35,800
struck.

1158
00:51:36,000 --> 00:51:38,000
Instructs, you should do so.

1159
00:51:40,500 --> 00:51:42,400
Someone asked about how you started programming career.

1160
00:51:42,400 --> 00:51:42,800
Let's hear.

1161
00:51:42,800 --> 00:51:43,300
It's okay.

1162
00:51:43,300 --> 00:51:46,000
I think we're probably getting the point where I should answer that

1163
00:51:46,000 --> 00:51:46,500
question.

1164
00:51:51,800 --> 00:51:55,100
Let's see, it will, the will the game include old-school passwords for

1165
00:51:55,100 --> 00:51:55,700
saving?

1166
00:51:56,600 --> 00:51:59,400
We could, if you want to remind me when we're further along the game

1167
00:51:59,400 --> 00:52:01,500
and maybe we will, I'm going to show you how to save the game for

1168
00:52:01,500 --> 00:52:03,500
reals to a drive, but we could, we could do that.

1169
00:52:07,100 --> 00:52:09,300
It's great to see someone so excited about programming with a lot of

1170
00:52:09,300 --> 00:52:09,700
experience.

1171
00:52:09,700 --> 00:52:11,600
But do you think people interested in game design will be disappointed

1172
00:52:11,600 --> 00:52:12,100
in the Stream.

1173
00:52:12,100 --> 00:52:15,400
I person want to focus on game design first for my games and only then

1174
00:52:15,400 --> 00:52:17,000
implementing them it properly in C++.

1175
00:52:17,000 --> 00:52:17,900
It's am not in student teaching.

1176
00:52:17,900 --> 00:52:18,900
C++ to other people.

1177
00:52:18,900 --> 00:52:20,600
Just my Approach makes sense for game development.

1178
00:52:20,600 --> 00:52:22,900
Do you think it's faster use Python for game prototypes?

1179
00:52:23,900 --> 00:52:27,800
I would say that people who are primarily used on game design,

1180
00:52:28,200 --> 00:52:31,300
probably would be disappointing the stream because I am not a game

1181
00:52:31,300 --> 00:52:32,000
designer.

1182
00:52:33,200 --> 00:52:36,000
So if you're just interested in game design, you probably want to

1183
00:52:36,000 --> 00:52:36,400
watch a stream.

1184
00:52:36,500 --> 00:52:40,500
Someone who's a professional game designer, I would think as to

1185
00:52:40,500 --> 00:52:43,500
whether it's a good idea to use python, or C++ or whatever.

1186
00:52:43,500 --> 00:52:44,900
I have no idea what ever you are.

1187
00:52:44,900 --> 00:52:47,300
Most comfortable using is what you should use.

1188
00:52:49,300 --> 00:52:51,100
John Blow, for example, who's the best game designer?

1189
00:52:51,100 --> 00:52:54,700
I know he writes his prototypes and C++.

1190
00:52:55,100 --> 00:52:57,200
So, you know, I don't know.

1191
00:52:57,300 --> 00:53:01,900
I've never met a game designer who's as good as John and so obviously,

1192
00:53:01,900 --> 00:53:04,700
you don't need to use Python but John's also making his own language

1193
00:53:04,700 --> 00:53:05,200
from scratch.

1194
00:53:05,200 --> 00:53:06,700
So probably the reason he's not using python.

1195
00:53:06,700 --> 00:53:10,500
It's you think Spice Islands also bad and you probably think C++ is

1196
00:53:10,500 --> 00:53:11,700
just a little less bad.

1197
00:53:11,900 --> 00:53:14,300
And so what he probably really wants for making his games and is

1198
00:53:14,300 --> 00:53:17,000
prototypes as well is just a good language and that's what he's doing.

1199
00:53:17,300 --> 00:53:18,500
So I certainly hope he succeeds.

1200
00:53:18,700 --> 00:53:20,900
Maybe then the answer to that question will be much more obvious,

1201
00:53:20,900 --> 00:53:25,500
which is just use John Blow language to make your prototypes because

1202
00:53:25,500 --> 00:53:26,000
it's awesome.

1203
00:53:28,600 --> 00:53:30,400
How much money do game makers make?

1204
00:53:31,800 --> 00:53:32,500
I don't know.

1205
00:53:33,000 --> 00:53:33,900
That's a good question.

1206
00:53:34,400 --> 00:53:36,300
I have never really been a game maker.

1207
00:53:36,600 --> 00:53:39,000
I actually make game technology and Licensing.

1208
00:53:39,000 --> 00:53:40,900
Game technology was a great living.

1209
00:53:41,400 --> 00:53:45,000
I have always been able to make a lot of money and I'm very fortunate

1210
00:53:45,000 --> 00:53:45,500
to be able to do.

1211
00:53:45,500 --> 00:53:50,300
So, I would say that in general if you know the kinds of low-level

1212
00:53:50,300 --> 00:53:52,800
programming that I am focusing on in these streams where you

1213
00:53:52,800 --> 00:53:54,000
understand the whole process.

1214
00:53:54,000 --> 00:53:54,800
You do architecture.

1215
00:53:54,800 --> 00:53:56,700
Well, you can get down to the nitty-gritty.

1216
00:53:56,900 --> 00:53:58,000
You maybe aren't the best optimize.

1217
00:53:58,000 --> 00:53:59,900
eyes are in the world, but you understand where the

1218
00:54:00,000 --> 00:54:06,600
Happens and why there are a ton of high paying jobs available for you.

1219
00:54:07,000 --> 00:54:13,200
I basically don't know a single high-paying company out there that

1220
00:54:13,200 --> 00:54:19,200
isn't actually gated on Talent, not money like the primary problem.

1221
00:54:19,200 --> 00:54:23,300
Most of the time for projects at companies is that they cannot hire

1222
00:54:23,300 --> 00:54:23,600
enough.

1223
00:54:23,600 --> 00:54:24,700
Good engine programmers.

1224
00:54:25,200 --> 00:54:28,800
It is never the case that they like, have as many great engine

1225
00:54:28,800 --> 00:54:29,800
programmers as they need.

1226
00:54:30,000 --> 00:54:30,900
That never happens.

1227
00:54:31,000 --> 00:54:32,300
People are usually.

1228
00:54:32,400 --> 00:54:35,900
There are usually just implicitly job openings.

1229
00:54:36,100 --> 00:54:39,000
If you are a good engine style programmer.

1230
00:54:39,200 --> 00:54:44,000
So like if you came to me and you're like I totally powned the

1231
00:54:44,100 --> 00:54:46,200
handmade hero stream, like I'm awesome at this.

1232
00:54:46,200 --> 00:54:46,500
Now.

1233
00:54:46,500 --> 00:54:48,000
I know everything about this.

1234
00:54:48,800 --> 00:54:51,900
And you can prove to what you don't need to prove it to me because I'm

1235
00:54:51,900 --> 00:54:52,300
not hiring.

1236
00:54:52,300 --> 00:54:55,000
But you can prove that to someone that you understand all that stuff

1237
00:54:55,000 --> 00:54:55,900
and you're totally good at it.

1238
00:54:55,900 --> 00:54:59,700
I mean, that's just your instantly valuable summer because they're

1239
00:54:59,700 --> 00:55:01,800
just is there's a dearth of people who understand this stuff.

1240
00:55:01,800 --> 00:55:03,900
A lot of applicants that people get for these positions.

1241
00:55:03,900 --> 00:55:05,800
They only know, Java or something, right?

1242
00:55:05,800 --> 00:55:07,600
Because that's what they learned in school or saying that and that's

1243
00:55:07,600 --> 00:55:11,800
not useful and you can't put that person to work on a game engine for

1244
00:55:11,800 --> 00:55:12,400
a long time.

1245
00:55:12,400 --> 00:55:14,200
They're going to have to go through and like, learn all this stuff

1246
00:55:14,200 --> 00:55:17,400
and, you know, so basically game engines are places where they need

1247
00:55:17,400 --> 00:55:17,600
people.

1248
00:55:17,600 --> 00:55:18,500
They always need people.

1249
00:55:18,900 --> 00:55:22,100
And maybe in the future, that won't be true, but for right now,

1250
00:55:22,100 --> 00:55:24,300
there's always it's always hard to find enough.

1251
00:55:24,300 --> 00:55:25,800
Good talented, low-level programmers.

1252
00:55:28,100 --> 00:55:30,400
Well, the source down that include Version Control so you can back go

1253
00:55:30,400 --> 00:55:33,400
back versions, The Source Code control will not be version controlled.

1254
00:55:33,400 --> 00:55:35,400
It will rather have everyday Source in it.

1255
00:55:35,500 --> 00:55:36,100
So you download it.

1256
00:55:36,100 --> 00:55:38,200
They'll be a zip for every day and you can unzip the day that you

1257
00:55:38,200 --> 00:55:38,900
want.

1258
00:55:39,000 --> 00:55:42,300
If you have a source code control program that you like, you can just

1259
00:55:42,400 --> 00:55:46,100
unpack those on top of each other and check them in and have your own

1260
00:55:46,200 --> 00:55:50,200
source code control tree as it should be in the tool of your choice,

1261
00:55:50,300 --> 00:55:52,800
get or material or bizarre, or whatever you want to use.

1262
00:55:56,100 --> 00:55:57,200
You will see some trolls on stream.

1263
00:55:57,200 --> 00:55:57,600
Sometimes.

1264
00:55:57,600 --> 00:55:58,400
Be advised.

1265
00:55:58,400 --> 00:55:59,100
Yes.

1266
00:55:59,400 --> 00:56:00,200
There's trolls.

1267
00:56:00,200 --> 00:56:01,200
I know what can you do?

1268
00:56:03,200 --> 00:56:05,100
What do you do during the day these days?

1269
00:56:05,100 --> 00:56:08,500
I am working on some projects that are not announced yet.

1270
00:56:08,900 --> 00:56:11,100
Just working a trap provide a better salary than a senior deposition

1271
00:56:11,100 --> 00:56:12,600
at a game studio in the same area.

1272
00:56:13,300 --> 00:56:15,500
No, because it's a high-paying area.

1273
00:56:16,000 --> 00:56:18,600
So like, for example valve pays very well.

1274
00:56:20,100 --> 00:56:22,700
So like, you know, if you were working at valve or you're working at

1275
00:56:22,700 --> 00:56:25,100
rad, you would be getting paid very well.

1276
00:56:26,000 --> 00:56:30,600
There are other places in the country, where an certainly actually

1277
00:56:30,600 --> 00:56:32,800
also abroad, where the salaries aren't.

1278
00:56:33,000 --> 00:56:34,800
Hi for those positions.

1279
00:56:34,800 --> 00:56:39,300
And so it's really very dependent on how strong the game companies are

1280
00:56:39,300 --> 00:56:40,000
in your area.

1281
00:56:40,200 --> 00:56:42,900
Because when those game companies are making a lot of money, they are

1282
00:56:42,900 --> 00:56:47,200
going after that sort of hard to find engine programmers and stuff

1283
00:56:47,200 --> 00:56:47,800
like that.

1284
00:56:47,900 --> 00:56:50,900
They're paying a lot more money for them because they want the best

1285
00:56:50,900 --> 00:56:52,100
people and they've got the money to do.

1286
00:56:52,100 --> 00:56:55,300
So, but you go to an area where there's not many game companies and

1287
00:56:55,300 --> 00:56:58,400
they're not super wealthy, then they're not going to have that money

1288
00:56:58,400 --> 00:56:59,800
to sort of Chase that talent and

1289
00:57:04,500 --> 00:57:06,100
A comment about the our a discussion earlier.

1290
00:57:06,100 --> 00:57:08,600
REI does not actually mean that you have to use exceptions.

1291
00:57:08,700 --> 00:57:10,600
Sure, but I didn't say that.

1292
00:57:10,600 --> 00:57:14,400
I just was listing the things exceptions destructors and so on Rai is

1293
00:57:14,400 --> 00:57:15,800
just not relevant.

1294
00:57:15,800 --> 00:57:20,600
Like it's not, it's it is not a useful to way to look at things.

1295
00:57:20,800 --> 00:57:22,400
It doesn't matter how you implement it.

1296
00:57:23,000 --> 00:57:24,500
It's just not a useful way to look at things.

1297
00:57:26,300 --> 00:57:27,200
Will you use any?

1298
00:57:27,200 --> 00:57:27,900
I respect the game.

1299
00:57:27,900 --> 00:57:30,800
Know, and that brings us to the end of the question.

1300
00:57:30,800 --> 00:57:35,300
So now I will go back to the question that we pushed on the stack,

1301
00:57:35,300 --> 00:57:38,300
which was just totally not related to code at all.

1302
00:57:39,900 --> 00:57:42,500
But it was idiocracy is question.

1303
00:57:43,000 --> 00:57:44,600
Where is the question?

1304
00:57:45,300 --> 00:57:48,000
Where is it scrolling scrolling?

1305
00:57:48,000 --> 00:57:53,200
I'm sure if I knew how to search in this, we would be in good shape,

1306
00:57:53,200 --> 00:57:55,700
but of course, I don't because I've never

1307
00:57:55,800 --> 00:58:00,800
Used hex chat before and so not having used Acts chapter 4 means, I

1308
00:58:00,800 --> 00:58:02,100
don't really know what's going on.

1309
00:58:02,500 --> 00:58:04,700
So, let's see, idiocracy, idiocracy.

1310
00:58:04,700 --> 00:58:06,900
Idiocracy, theocracy.

1311
00:58:06,900 --> 00:58:07,900
Idiocracy.

1312
00:58:07,900 --> 00:58:11,700
Where are you?

1313
00:58:11,700 --> 00:58:12,300
You're gone.

1314
00:58:13,400 --> 00:58:14,700
You're totally gone, Bianca.

1315
00:58:14,700 --> 00:58:16,200
See you have scrolled.

1316
00:58:16,200 --> 00:58:17,000
There you are.

1317
00:58:17,700 --> 00:58:18,100
It's a good thing.

1318
00:58:18,100 --> 00:58:21,200
I am using extra though because that would have long scrolled past the

1319
00:58:21,200 --> 00:58:21,800
twitch chat.

1320
00:58:21,800 --> 00:58:24,300
I think the twitch chats not going to find that at all.

1321
00:58:24,900 --> 00:58:25,700
Would you talk a little

1322
00:58:25,800 --> 00:58:28,000
all about your background at the start of your pro in career given

1323
00:58:28,000 --> 00:58:30,300
that you had an early certain programming at the age of seven.

1324
00:58:30,300 --> 00:58:32,400
What were the circumstances in you?

1325
00:58:32,400 --> 00:58:33,400
Not attending college?

1326
00:58:33,600 --> 00:58:36,000
How have you gone about learning Source like linear algebra.

1327
00:58:36,000 --> 00:58:38,200
Did you crack open a textbook and learn it on your own?

1328
00:58:38,200 --> 00:58:41,000
Or did you just learn the bits and pieces relevant to a reviewer?

1329
00:58:41,000 --> 00:58:44,400
Has finally was getting it in Microsoft difficult, given your lack of

1330
00:58:44,400 --> 00:58:44,900
degree.

1331
00:58:46,100 --> 00:58:51,900
Well, so the complete story is that I grew up.

1332
00:58:52,200 --> 00:58:54,600
Like I said, my father was a programmer, so I learned to program

1333
00:58:54,600 --> 00:58:55,600
because he taught me how

1334
00:58:56,800 --> 00:58:59,700
And that was the only way that I learned because I didn't really have

1335
00:58:59,700 --> 00:59:04,500
access to any programming resources, besides him the there.

1336
00:59:04,700 --> 00:59:06,500
I grew up in a town that didn't even have a book store.

1337
00:59:06,600 --> 00:59:07,800
Let alone technical book store.

1338
00:59:09,300 --> 00:59:14,900
So, I pretty much had to just bend and I didn't have like a BBS dial

1339
00:59:14,900 --> 00:59:15,800
anything to anyone.

1340
00:59:15,800 --> 00:59:18,300
I have like, friends, who knew anything about programming at all.

1341
00:59:19,200 --> 00:59:23,400
So for most of my childhood, I just I would ask my dad and my dad

1342
00:59:23,400 --> 00:59:26,000
would sometimes go get books for me from like Digital Life.

1343
00:59:26,100 --> 00:59:28,900
Equipment Corporation or something where he worked and he would like,

1344
00:59:28,900 --> 00:59:31,800
give those to me and I could read those or he would teach me how to do

1345
00:59:31,800 --> 00:59:38,200
something and then later on like I think we would go there was a when

1346
00:59:38,200 --> 00:59:42,300
I kind of got a little older there was like a Borders bookstore in

1347
00:59:42,300 --> 00:59:45,100
Framingham, which was like 30 minutes away and we would drive there

1348
00:59:45,100 --> 00:59:47,600
and we look we'd sit in the section with computer books and look at

1349
00:59:47,600 --> 00:59:47,900
them.

1350
00:59:47,900 --> 00:59:51,100
Occasionally, we'd buy one, but they're expensive for kid.

1351
00:59:51,100 --> 00:59:55,000
And you know, I started learning some things out of books.

1352
00:59:55,000 --> 00:59:55,600
I think I learned

1353
00:59:57,500 --> 00:59:59,500
gosh, so I learned my first

1354
01:00:00,000 --> 01:00:02,400
3D math out of Foley and Van Dam.

1355
01:00:03,600 --> 01:00:09,300
I think my dad had xeroxed a page on rotation that I had learned,

1356
01:00:09,400 --> 01:00:10,500
stuff about that.

1357
01:00:10,500 --> 01:00:13,600
And then I bought the book at the borders eventually to learn stuff

1358
01:00:13,600 --> 01:00:14,700
like Matrix transforms.

1359
01:00:14,700 --> 01:00:15,700
I think that's true.

1360
01:00:17,900 --> 01:00:18,900
It's been so long.

1361
01:00:18,900 --> 01:00:19,300
I'm sorry.

1362
01:00:19,300 --> 01:00:20,600
I can't remember a lot of these things.

1363
01:00:20,600 --> 01:00:24,100
But basically, you know, in those days, there was no internet.

1364
01:00:24,100 --> 01:00:27,900
So it was actually pretty easy to learn a lot at home because when you

1365
01:00:27,900 --> 01:00:29,700
got home, there wasn't anything to do.

1366
01:00:29,700 --> 01:00:32,700
And if you like computers, you would just go try to do stuff.

1367
01:00:32,900 --> 01:00:35,400
And so it's a lot easier to learn things on your own when you're not

1368
01:00:35,400 --> 01:00:36,700
like on Twitter all day.

1369
01:00:36,700 --> 01:00:37,200
Right?

1370
01:00:38,000 --> 01:00:40,300
Like I imagine kids today probably have a hard time learning things

1371
01:00:40,300 --> 01:00:43,000
because there's just so much distraction and there's tons of games to

1372
01:00:43,000 --> 01:00:44,100
play and all this other stuff.

1373
01:00:45,400 --> 01:00:47,100
And so I played a lot of games when I was a kid too.

1374
01:00:47,100 --> 01:00:49,800
But like you had one game that you bought and it was expensive and you

1375
01:00:49,800 --> 01:00:51,000
played a lot of it.

1376
01:00:51,000 --> 01:00:53,300
And then when you were done, you were done right?

1377
01:00:53,500 --> 01:00:56,600
There wasn't just like, oh, I can go and get all these games, and

1378
01:00:56,600 --> 01:00:58,100
they're like, I bought a Humble Bundle.

1379
01:00:58,100 --> 01:01:01,400
And there's like, basically, 300 hours of gaming in there.

1380
01:01:01,400 --> 01:01:01,700
Right?

1381
01:01:01,700 --> 01:01:02,500
That's not a thing.

1382
01:01:02,500 --> 01:01:06,700
It was like $30 or whatever, and there was tons of game piracy to, but

1383
01:01:06,700 --> 01:01:07,900
even that can't keep up.

1384
01:01:07,900 --> 01:01:11,300
I mean, the amount of games pirated by people.

1385
01:01:11,600 --> 01:01:12,600
When I was a kid.

1386
01:01:12,800 --> 01:01:14,600
It's like smaller than the amount you could just live.

1387
01:01:14,800 --> 01:01:21,800
We buy nowadays on on you know, a trivial part time job that you have

1388
01:01:21,800 --> 01:01:25,400
as a kid, you know, you make 20 bucks a week or something and you're

1389
01:01:25,400 --> 01:01:28,000
going to have more games than you could even pirate from back when I

1390
01:01:28,000 --> 01:01:28,400
was a kid.

1391
01:01:28,400 --> 01:01:29,800
So yeah, I don't know.

1392
01:01:29,800 --> 01:01:34,500
But point being we learned a bunch of stuff myself and some friends of

1393
01:01:34,500 --> 01:01:36,600
mine to who used to kind of start to get into it.

1394
01:01:36,600 --> 01:01:39,400
None of them were as into it as I was but, you know, we learned some

1395
01:01:39,400 --> 01:01:40,600
stuff and wrote some stuff.

1396
01:01:41,600 --> 01:01:44,600
Basically, what happened from there is total luck.

1397
01:01:44,700 --> 01:01:51,300
If I was friends with somebody from early on like from from when I was

1398
01:01:51,300 --> 01:02:00,200
little and their father used to run a computer company went bankrupt

1399
01:02:00,700 --> 01:02:06,700
or closed in some way and he went to work as an executive for

1400
01:02:06,700 --> 01:02:07,600
Microsoft.

1401
01:02:08,600 --> 01:02:12,800
So when I was in high school, he was like you should come out here for

1402
01:02:12,800 --> 01:02:13,800
an internship.

1403
01:02:13,900 --> 01:02:14,100
Now.

1404
01:02:14,100 --> 01:02:16,600
I don't actually know why he wanted me to do that.

1405
01:02:16,600 --> 01:02:18,800
I just assumed he was just being nice.

1406
01:02:19,200 --> 01:02:22,100
Like I don't think there was any reason why Microsoft would care if I

1407
01:02:22,100 --> 01:02:26,500
went out to do an internship because I'm just some kid, but I think he

1408
01:02:26,500 --> 01:02:30,400
just was like, oh, you know, this was a kid who's a friend of ours

1409
01:02:30,400 --> 01:02:34,500
from, from back, you know, Microsoft's, obviously in Seattle, so they

1410
01:02:34,500 --> 01:02:37,700
moved to Seattle, but I was still in

1411
01:02:38,700 --> 01:02:40,900
So I'm pretty sure basically all that was was just, you know, he was

1412
01:02:40,900 --> 01:02:43,200
being nice to know, you know, like maybe he would like to come out and

1413
01:02:43,200 --> 01:02:44,800
see how we do things, and he could do an internship.

1414
01:02:44,800 --> 01:02:46,000
And I mean, I'm an executive here.

1415
01:02:46,000 --> 01:02:48,000
So if I tell them that they should have this kid as an intern, they're

1416
01:02:48,000 --> 01:02:50,100
going to actually know if that's true.

1417
01:02:50,100 --> 01:02:51,600
Maybe maybe he couldn't have done that.

1418
01:02:51,600 --> 01:02:52,400
I'm not positive.

1419
01:02:52,400 --> 01:02:54,500
But anyway, so I was in high school.

1420
01:02:54,700 --> 01:02:59,800
I was like, okay, so I just went out there and went

1421
01:03:00,000 --> 01:03:06,400
Our interview Loop for interns and I really really really lucked out

1422
01:03:06,400 --> 01:03:09,500
on the internet on the interview Loop is basically what it boils down

1423
01:03:09,500 --> 01:03:14,000
to because being so young and not really exposed to very much things.

1424
01:03:14,000 --> 01:03:16,600
There were only a limited set of things that I really knew how to do

1425
01:03:16,600 --> 01:03:19,800
well and one of the things that I really knew how to do well with

1426
01:03:19,800 --> 01:03:23,200
stuff like Sprite compositing because I did a bunch of programming on

1427
01:03:23,200 --> 01:03:26,000
the Amiga and I knew a lot of stuff about how to work with, like, bit

1428
01:03:26,000 --> 01:03:29,800
planes and all these sorts of other things like rectangle, Direct.

1429
01:03:30,000 --> 01:03:33,300
Angle copies with alpha or without or those sorts of things.

1430
01:03:33,600 --> 01:03:37,600
I like knew all that stuff cold because I did it all the time.

1431
01:03:37,800 --> 01:03:39,900
That was like, what I did because I tried to make games.

1432
01:03:39,900 --> 01:03:41,800
And one of the things that you do when you make games, As you move

1433
01:03:41,800 --> 01:03:42,900
images, around the screen.

1434
01:03:44,100 --> 01:03:48,700
So I super look down the interview Loop because the first very first

1435
01:03:48,700 --> 01:03:54,000
person on the interview Loop was a guy named Michael Edwards, I

1436
01:03:54,000 --> 01:03:58,600
believe, and I don't know what happened to this fellow, but isn't it

1437
01:03:58,600 --> 01:03:59,600
guy named Michael Edwards?

1438
01:03:59,600 --> 01:04:02,700
And he was actually an old-school Amiga guy too.

1439
01:04:03,300 --> 01:04:08,000
And so the question he happened to ask me for whatever reason was like

1440
01:04:08,000 --> 01:04:11,700
do a rectangle, a rectangle blitt like copy from one place to the

1441
01:04:11,700 --> 01:04:13,400
other and I can just write that.

1442
01:04:13,400 --> 01:04:13,700
Like

1443
01:04:13,800 --> 01:04:15,400
Even at that time, I could just write that.

1444
01:04:16,000 --> 01:04:19,600
And so I think he thought he enjoyed talking because we were both

1445
01:04:19,600 --> 01:04:22,600
naked people and he was like, oh this kid knows how to program because

1446
01:04:22,600 --> 01:04:23,500
he could do this thing.

1447
01:04:23,500 --> 01:04:29,300
This interview question that I asked him and then I had to go through

1448
01:04:29,300 --> 01:04:31,700
other energy or the day where I did not do nearly as well.

1449
01:04:32,000 --> 01:04:32,800
Like things.

1450
01:04:32,800 --> 01:04:34,500
I didn't know how to do very well at that time.

1451
01:04:34,500 --> 01:04:39,600
We're like bit operation for testing like I almost never tested bit

1452
01:04:39,600 --> 01:04:40,200
fields and stuff.

1453
01:04:40,200 --> 01:04:43,300
So like one of the questions that they asked me was something like if

1454
01:04:43,300 --> 01:04:43,600
you get

1455
01:04:43,700 --> 01:04:44,900
Back a bite.

1456
01:04:45,100 --> 01:04:49,100
And you want to know if there's a particular two bit value at any of

1457
01:04:49,100 --> 01:04:51,600
the four aligned locations in the B.

1458
01:04:51,600 --> 01:04:53,200
Like, what's the fastest way to do that?

1459
01:04:53,600 --> 01:04:55,600
And like I'm sure I answered that question.

1460
01:04:55,600 --> 01:05:00,500
Super poorly and another guy asked me how to draw a circle really

1461
01:05:00,500 --> 01:05:03,800
effectively, and he was looking for me to basically do a present ham,

1462
01:05:03,800 --> 01:05:06,900
Circle, sort of style thing.

1463
01:05:07,100 --> 01:05:09,700
And I didn't really know how to do that at all.

1464
01:05:09,700 --> 01:05:13,100
So, I mean, I gave them code that Drew a circle, but it was like super

1465
01:05:13,100 --> 01:05:13,500
slow.

1466
01:05:13,800 --> 01:05:16,900
By comparison, so I think mostly like, I don't know what would have

1467
01:05:16,900 --> 01:05:17,300
happened.

1468
01:05:17,300 --> 01:05:18,000
Exactly.

1469
01:05:18,200 --> 01:05:22,700
If I hadn't had the luck of getting someone who happened to just be

1470
01:05:22,700 --> 01:05:26,000
right in line with me, on the first interview because, again, it's

1471
01:05:26,000 --> 01:05:26,500
possible.

1472
01:05:26,500 --> 01:05:29,700
Like, if some Microsoft executive says that we've got this idiot kid,

1473
01:05:29,900 --> 01:05:33,500
from my hometown who I want to have come out here and do an

1474
01:05:33,500 --> 01:05:34,100
internship.

1475
01:05:34,100 --> 01:05:36,000
I mean, it's a political company.

1476
01:05:36,100 --> 01:05:40,300
Maybe I just would Dave just half the to that, you know, if maybe this

1477
01:05:40,300 --> 01:05:41,400
feel like great.

1478
01:05:42,100 --> 01:05:43,600
But luckily for me.

1479
01:05:43,700 --> 01:05:43,800
Me.

1480
01:05:44,300 --> 01:05:47,600
I actually had one interviewee who actually really did legitimately.

1481
01:05:47,800 --> 01:05:51,300
I think, think I was okay, probably not anything special, but at

1482
01:05:51,300 --> 01:05:52,100
least, okay.

1483
01:05:52,700 --> 01:05:57,700
And so he, they put me with him and said, you know, you can have the

1484
01:05:57,700 --> 01:05:59,800
you can do the internship over the summer.

1485
01:06:00,000 --> 01:06:03,500
You can go with this team, and I was like, awesome because, you know,

1486
01:06:03,500 --> 01:06:04,900
I knew when I went through the interview.

1487
01:06:04,900 --> 01:06:07,300
Look, I'm like, yeah, I think I probably was pretty stupid and there's

1488
01:06:07,300 --> 01:06:09,200
other ones, but I felt like I did a really good job here.

1489
01:06:09,200 --> 01:06:11,700
And I answer the question, totally correctly and that sort of stuff.

1490
01:06:11,700 --> 01:06:12,600
And I really like the guy.

1491
01:06:12,600 --> 01:06:15,500
So I was like, I could probably actually not be a total waste of time

1492
01:06:16,400 --> 01:06:16,800
there.

1493
01:06:17,900 --> 01:06:20,600
So anyway, I went out for that internship for the internship.

1494
01:06:20,600 --> 01:06:25,300
Over the summer, and the internship itself was a bit of a disaster.

1495
01:06:25,700 --> 01:06:27,700
I will say, and I

1496
01:06:30,700 --> 01:06:31,700
All I can say about that.

1497
01:06:31,700 --> 01:06:36,300
Just being completely honest is I showed up and the guy who I had

1498
01:06:36,300 --> 01:06:40,400
interviewed with had had in classic Microsoft fashion back.

1499
01:06:40,400 --> 01:06:41,800
Then, it is not Microsoft.

1500
01:06:41,800 --> 01:06:44,600
Now is a very milquetoast politically correct company.

1501
01:06:44,700 --> 01:06:47,500
When you go there, you will probably sit through hours of diversity,

1502
01:06:47,500 --> 01:06:51,000
training every year or something, where you watch a video that has

1503
01:06:51,000 --> 01:06:54,000
like one black, Persian one Asian person, you know, one Hispanic

1504
01:06:54,000 --> 01:06:56,900
person, one white person and like the right mix of females or

1505
01:06:56,900 --> 01:06:59,800
whatever, all doing things in an office.

1506
01:07:00,000 --> 01:07:03,600
Is that they shouldn't do and then a little, like red X comes up and

1507
01:07:03,600 --> 01:07:06,200
goes that was inappropriate behavior.

1508
01:07:06,400 --> 01:07:08,000
What you should have done, is blah, blah blah, right?

1509
01:07:08,000 --> 01:07:10,400
Like that is the company that they are right now and it's not their

1510
01:07:10,400 --> 01:07:10,800
fault.

1511
01:07:10,800 --> 01:07:12,700
When you get big as a company, you got to do this stuff.

1512
01:07:12,700 --> 01:07:13,800
There are lawsuits.

1513
01:07:14,600 --> 01:07:17,600
There's you know, just been incredible bulk.

1514
01:07:17,600 --> 01:07:20,600
That happens with a company where you're trying to manage 100,000

1515
01:07:20,600 --> 01:07:21,400
employees.

1516
01:07:21,600 --> 01:07:23,600
That's just what happens and happens to everyone.

1517
01:07:23,700 --> 01:07:24,100
It's happening.

1518
01:07:24,100 --> 01:07:24,800
The Google Now.

1519
01:07:24,800 --> 01:07:27,100
It happened to Microsoft back then and happens to everybody.

1520
01:07:28,600 --> 01:07:32,600
But at that time, which is this is back in 93 or 94 or something like

1521
01:07:32,600 --> 01:07:33,100
that.

1522
01:07:34,200 --> 01:07:38,400
I know somewhere somewhere in there, Microsoft was still kind of a

1523
01:07:38,400 --> 01:07:39,900
lean mean company.

1524
01:07:40,600 --> 01:07:43,000
They were 26, buildings total.

1525
01:07:43,000 --> 01:07:47,100
I think at the time and their programmers were still super gung-ho,

1526
01:07:47,100 --> 01:07:49,000
really sharp dudes.

1527
01:07:49,500 --> 01:07:52,200
If you were working at Microsoft, you were pretty good usually and I

1528
01:07:52,200 --> 01:07:57,200
met a lot of really good people when I was there and

1529
01:07:57,900 --> 01:08:02,700
They it was the era of people throwing a monitor through a wall if

1530
01:08:02,800 --> 01:08:03,800
stuff went down.

1531
01:08:04,600 --> 01:08:09,500
And so basically what had happened was there was some huge blow-up

1532
01:08:09,500 --> 01:08:11,700
with the guy had interviewed with that.

1533
01:08:11,700 --> 01:08:12,500
Had nothing to do with me.

1534
01:08:12,500 --> 01:08:13,700
It was about the products in the way.

1535
01:08:13,700 --> 01:08:19,500
He was running them and he literally just a couple days before me.

1536
01:08:19,500 --> 01:08:21,000
And the other interns were going to be under him.

1537
01:08:21,000 --> 01:08:25,000
Showed up literally just stormed out of the building and didn't come

1538
01:08:25,000 --> 01:08:25,500
back.

1539
01:08:26,200 --> 01:08:28,700
Like nobody knew where he went.

1540
01:08:28,700 --> 01:08:30,100
He just left.

1541
01:08:30,300 --> 01:08:32,200
He was so pissed about what had gone down.

1542
01:08:32,200 --> 01:08:33,399
I guess he just left.

1543
01:08:34,300 --> 01:08:35,399
So I show up.

1544
01:08:35,500 --> 01:08:38,800
And there's this other guy, his name, I think was Bruce Johnson and he

1545
01:08:38,800 --> 01:08:42,899
was a person who used to work at this sort of like he used to work at

1546
01:08:42,899 --> 01:08:45,600
a company that did like, defense Contracting graphic stuff.

1547
01:08:46,800 --> 01:08:50,899
I think he originally worked, he worked on a thing since I think he

1548
01:08:50,899 --> 01:08:52,100
might have worked on simnet.

1549
01:08:52,899 --> 01:08:53,800
I don't know if he did or not.

1550
01:08:54,200 --> 01:08:57,700
Anyway, it doesn't matter point, being, he's there and I'm like, who

1551
01:08:57,700 --> 01:08:58,200
are you?

1552
01:08:58,300 --> 01:08:59,700
And he's like, well,

1553
01:09:00,500 --> 01:09:03,100
The guy who is supposed to be your guys's manager and I'm there with

1554
01:09:03,100 --> 01:09:03,700
like this other guy.

1555
01:09:03,700 --> 01:09:05,600
I think it was Rudy celebration.

1556
01:09:05,700 --> 01:09:07,100
I don't remember who the other guy.

1557
01:09:07,100 --> 01:09:07,300
Was.

1558
01:09:07,300 --> 01:09:08,500
He showed up on the same day?

1559
01:09:09,200 --> 01:09:10,200
Might have been Rajiv.

1560
01:09:10,200 --> 01:09:10,800
Koyla.

1561
01:09:11,100 --> 01:09:11,200
I do.

1562
01:09:11,200 --> 01:09:11,500
Remember.

1563
01:09:11,500 --> 01:09:14,300
There's a couple guys there who are also entering at the same time as

1564
01:09:14,300 --> 01:09:14,600
me.

1565
01:09:14,800 --> 01:09:16,300
They were better programmers.

1566
01:09:16,300 --> 01:09:19,600
They were like from college, you know, so I'm the stupidest one in the

1567
01:09:19,600 --> 01:09:22,300
bunch for sure and I don't know what the hell's going on because I'm a

1568
01:09:22,300 --> 01:09:22,899
high school student.

1569
01:09:22,899 --> 01:09:24,800
So I don't know how to behave in a corporate setting or anything.

1570
01:09:24,800 --> 01:09:25,399
I'm just an idiot.

1571
01:09:25,399 --> 01:09:26,300
I'm complete.

1572
01:09:26,899 --> 01:09:28,700
Waste of time, but I'm there.

1573
01:09:29,399 --> 01:09:32,899
And so the other dude I'm with, you know, they set us down and they're

1574
01:09:32,899 --> 01:09:33,600
like look.

1575
01:09:34,600 --> 01:09:38,100
The two of you were supposed to be where he's gone and nobody knows

1576
01:09:38,100 --> 01:09:39,100
when he's coming back.

1577
01:09:39,500 --> 01:09:42,899
So, I'm gonna sort of be your manager for now and we're only there for

1578
01:09:42,899 --> 01:09:44,600
two months and this guy is out.

1579
01:09:44,600 --> 01:09:47,100
So it's like, all right, well fine.

1580
01:09:47,300 --> 01:09:50,399
And so he gives them something to do and he tells me he's like, I want

1581
01:09:50,399 --> 01:09:56,500
you to write a library for basically for loading.

1582
01:09:56,500 --> 01:10:02,200
And I files, which were the thing was some hacked up POS format that I

1583
01:10:02,200 --> 01:10:04,200
don't know who came up with it, but

1584
01:10:04,400 --> 01:10:09,000
Basically, on Windows, there was a time when you could have animated

1585
01:10:09,000 --> 01:10:11,800
cursors and I don't know if those are still around anymore.

1586
01:10:12,300 --> 01:10:15,700
But if you remember and like the original NT 351, and if you out there

1587
01:10:15,700 --> 01:10:18,400
who are old enough to remember this, and even going forward, I think

1588
01:10:18,400 --> 01:10:19,900
probably to nt4 still.

1589
01:10:19,900 --> 01:10:21,100
I don't know when it stopped happening.

1590
01:10:21,100 --> 01:10:25,000
But if you went into the mouse cursor settings, you could pick some

1591
01:10:25,000 --> 01:10:26,500
absolutely ridiculous stuff.

1592
01:10:26,500 --> 01:10:31,800
There was like a walking dinosaur, like a dinosaur that walks while

1593
01:10:31,800 --> 01:10:33,400
you're moving the mouse cursor.

1594
01:10:33,400 --> 01:10:34,200
It's

1595
01:10:34,300 --> 01:10:35,500
Is there, these little like things?

1596
01:10:36,500 --> 01:10:41,100
And so, what they had is, they had written a little file format called

1597
01:10:41,100 --> 01:10:45,500
an eye, which basically had a bunch of little bit map frames in it.

1598
01:10:45,600 --> 01:10:48,900
And I think they were only 16 color bitmap frames because this was

1599
01:10:48,900 --> 01:10:49,600
cursors.

1600
01:10:49,800 --> 01:10:53,000
We're still done with a hardware overlay at that point, on most of the

1601
01:10:53,000 --> 01:10:55,100
graphics cards of the day.

1602
01:10:55,700 --> 01:11:00,200
I want to say and so they were like 16 color only and you loaded them

1603
01:11:00,200 --> 01:11:04,900
in to make little cursor animations, like the walking dinosaur or like

1604
01:11:04,900 --> 01:11:06,100
a pointer that wiggles or

1605
01:11:06,200 --> 01:11:07,300
The stupid things like this.

1606
01:11:07,300 --> 01:11:09,600
No one cared about and what he was like.

1607
01:11:09,600 --> 01:11:11,100
As we want to do this thing.

1608
01:11:11,100 --> 01:11:13,500
We don't have a format to load animations from.

1609
01:11:14,500 --> 01:11:16,900
I don't think he really knew what he was doing.

1610
01:11:16,900 --> 01:11:19,800
So he this maybe he was just trying to make up something for me to do

1611
01:11:19,800 --> 01:11:20,500
and that's fine too.

1612
01:11:20,500 --> 01:11:22,200
But this is makes no sense.

1613
01:11:22,200 --> 01:11:23,900
But it was like they were try to do something with animations.

1614
01:11:24,200 --> 01:11:26,700
They want to do something with 3D and 2D overlay.

1615
01:11:26,700 --> 01:11:28,300
It seems like go right in and I loader.

1616
01:11:28,300 --> 01:11:31,900
So we can load and I files and it like, show them on tops of stuff.

1617
01:11:32,100 --> 01:11:33,800
But like, they're these little tiny.

1618
01:11:33,800 --> 01:11:36,000
I mean, they're like 16 by 16 or 32.

1619
01:11:36,200 --> 01:11:39,100
By 32, I think maximum, Maybe by 16 color.

1620
01:11:39,100 --> 01:11:40,700
I mean, I don't even know.

1621
01:11:41,500 --> 01:11:45,600
I don't know what he thought was going to happen, but he wasn't.

1622
01:11:45,700 --> 01:11:49,900
I think maybe thinking it through anyway, she's like, go write a

1623
01:11:49,900 --> 01:11:50,800
library for those.

1624
01:11:51,100 --> 01:11:53,700
So I did, I went wrote a library to load those.

1625
01:11:53,700 --> 01:11:55,000
I like Thomas back.

1626
01:11:55,000 --> 01:11:57,600
I don't know how it was on some server somewhere or something like

1627
01:11:57,600 --> 01:11:57,700
this.

1628
01:11:57,700 --> 01:11:58,800
He probably wanted me to it.

1629
01:11:59,100 --> 01:11:59,800
I wrote a library that

1630
01:12:00,000 --> 01:12:00,400
Of them.

1631
01:12:00,400 --> 01:12:03,300
And I wrote a little app, use the library but just kind of showed the,

1632
01:12:03,300 --> 01:12:06,900
you know, just showed the little things or whatever and then I had

1633
01:12:06,900 --> 01:12:11,300
nothing to do and so they were like the other guy was busy, but

1634
01:12:11,300 --> 01:12:14,700
working on some 3D stuff, one of the other interns who was pretty

1635
01:12:14,700 --> 01:12:15,200
good.

1636
01:12:15,300 --> 01:12:19,100
And then, you know, there was some other guys who are working on sort

1637
01:12:19,100 --> 01:12:21,400
of some opengl rendering who weren't interns and they were working on

1638
01:12:21,400 --> 01:12:24,200
this project and so they needed some 3D art.

1639
01:12:24,200 --> 01:12:27,600
So actually what I did for most of the rest of the internship was I

1640
01:12:27,600 --> 01:12:28,800
just made 3D art for them.

1641
01:12:29,000 --> 01:12:29,300
I

1642
01:12:30,000 --> 01:12:31,400
bought a copy of 3D Studio.

1643
01:12:31,500 --> 01:12:34,400
This is the first time I really had an experience with like exactly

1644
01:12:34,400 --> 01:12:36,700
how cheap money is for.

1645
01:12:37,200 --> 01:12:40,100
And I won't use the term these people because I am these people now

1646
01:12:40,100 --> 01:12:44,900
who work in this industry, but like at the time, the concept that you

1647
01:12:44,900 --> 01:12:50,200
would just send email and a three thousand dollar piece of software

1648
01:12:50,200 --> 01:12:52,000
which show up at your desk.

1649
01:12:52,000 --> 01:12:55,500
The next day was absurd, right.

1650
01:12:55,900 --> 01:12:59,800
I probably three thousand dollars would have been all the money.

1651
01:13:00,000 --> 01:13:04,300
I'd ever made in my lifetime and then some because I think the

1652
01:13:04,300 --> 01:13:08,400
Microsoft internship paid something like twenty four hundred dollars.

1653
01:13:08,400 --> 01:13:11,600
Or I don't know how much it made but it was more than I would have

1654
01:13:11,600 --> 01:13:13,600
ever made in any job at all by far.

1655
01:13:13,600 --> 01:13:14,200
Right.

1656
01:13:14,600 --> 01:13:17,200
And so prior to that three thousand dollars.

1657
01:13:17,200 --> 01:13:19,900
There's no way I was ever going to have my hands on three thousand

1658
01:13:19,900 --> 01:13:20,300
dollars.

1659
01:13:20,400 --> 01:13:24,000
If something got purchased for three thousand dollars that I my

1660
01:13:24,000 --> 01:13:26,900
parents would just have to be being extremely nice to me.

1661
01:13:26,900 --> 01:13:29,200
And buying me something expensive because I mean three thousand

1662
01:13:29,200 --> 01:13:29,800
dollars was a lot.

1663
01:13:29,900 --> 01:13:32,700
Or them to like it wasn't three thousand dollars, a lot of money.

1664
01:13:34,000 --> 01:13:35,100
But that's exactly what happened.

1665
01:13:35,100 --> 01:13:35,800
I was like, all right.

1666
01:13:35,800 --> 01:13:41,500
Well, I kind of knew how to use 3D Studio a little bit because there

1667
01:13:41,500 --> 01:13:44,800
is this pirate copy from this BBS guy that I knew.

1668
01:13:44,900 --> 01:13:48,200
So I had seen it before and I had used it before, but I didn't really

1669
01:13:48,200 --> 01:13:50,100
spent any serious time but it didn't really know what to do.

1670
01:13:50,400 --> 01:13:52,800
But I'm like, well, if we need to make 3D art, I know you can make it

1671
01:13:52,800 --> 01:13:56,100
in that if you can load it out of that and there were no artists at

1672
01:13:56,100 --> 01:13:56,700
this place.

1673
01:13:56,800 --> 01:14:00,700
So I'm like, if we could get a copy of that, you know, and I don't

1674
01:14:00,700 --> 01:14:01,400
know what to do.

1675
01:14:01,500 --> 01:14:03,300
I certainly can't power it something at Microsoft and

1676
01:14:03,500 --> 01:14:06,100
Try and call up people but can we pirate a copy of this thing?

1677
01:14:07,500 --> 01:14:09,400
Because it's got to be a legitimate, right?

1678
01:14:09,900 --> 01:14:12,400
So I don't know what to do, but they're like us, no problem.

1679
01:14:12,500 --> 01:14:17,800
So, someone sends a thing in and it's not one box of 3D Studio that

1680
01:14:17,800 --> 01:14:18,400
shows up.

1681
01:14:18,900 --> 01:14:23,600
It was like, at least two, it could have been like for, I don't

1682
01:14:23,600 --> 01:14:26,900
remember how many showed up, but it was like multiple boxes of three

1683
01:14:26,900 --> 01:14:30,200
thousand dollar software showed up and I'm like what the fuck?

1684
01:14:30,500 --> 01:14:32,700
So like that's I probably shouldn't use those that language on the

1685
01:14:32,700 --> 01:14:33,200
screen in case

1686
01:14:33,400 --> 01:14:34,100
Are children watching?

1687
01:14:34,100 --> 01:14:34,900
I apologize.

1688
01:14:34,900 --> 01:14:38,400
And I'm like, wow, that's crazy.

1689
01:14:38,500 --> 01:14:41,900
Like you can just send mail and like twelve thousand dollars worth of

1690
01:14:41,900 --> 01:14:44,300
software shows up on your desk.

1691
01:14:44,300 --> 01:14:45,100
That's insane.

1692
01:14:45,600 --> 01:14:47,600
So I made art with that for the rest of the time.

1693
01:14:47,600 --> 01:14:48,900
I didn't really do much programming.

1694
01:14:48,900 --> 01:14:51,300
They were doing some stuff in C++ and I didn't know C++.

1695
01:14:51,300 --> 01:14:55,500
I only knew see at the time and so I would have just gone back home

1696
01:14:55,500 --> 01:14:59,700
and that would have been it but we get to the meat of the story now.

1697
01:15:00,000 --> 01:15:05,100
Of the, the bizarre part of the story, which is I also was one of the

1698
01:15:05,100 --> 01:15:10,300
only people who is under 18 because almost everyone else was in

1699
01:15:10,300 --> 01:15:10,800
college.

1700
01:15:12,000 --> 01:15:16,800
I was not legally allowed to really do anything like drive a car

1701
01:15:16,800 --> 01:15:18,500
because a car rental company doesn't rent to you.

1702
01:15:18,500 --> 01:15:22,800
If you're under 18, I did find out there was a loophole to this

1703
01:15:22,900 --> 01:15:24,900
somewhat later, which was that?

1704
01:15:24,900 --> 01:15:28,100
It turns out that if you tell the people you're from Microsoft, they

1705
01:15:28,100 --> 01:15:29,000
just rent you the car.

1706
01:15:30,100 --> 01:15:31,200
This was very strange.

1707
01:15:31,200 --> 01:15:34,100
I at one point, A friend of mine came out to visit me while we were

1708
01:15:34,100 --> 01:15:35,700
there and we want it.

1709
01:15:35,700 --> 01:15:36,500
He was a friend of mine.

1710
01:15:36,500 --> 01:15:39,600
He he's like an outdoorsy guy, which I'm not really, but he was like

1711
01:15:39,600 --> 01:15:43,300
we should go, you know, we should go up to like Crystal Peak or

1712
01:15:43,300 --> 01:15:43,600
something.

1713
01:15:43,600 --> 01:15:44,800
We should go out to the mountains.

1714
01:15:45,000 --> 01:15:50,500
I'm like we can try and so like I went to a car rental place.

1715
01:15:50,500 --> 01:15:51,600
I don't remember how I got there.

1716
01:15:51,700 --> 01:15:54,100
I don't know if I took the bus or I think maybe I had somebody drive

1717
01:15:54,100 --> 01:15:56,900
me because again, I was friends with that, Microsoft executive guy and

1718
01:15:56,900 --> 01:15:59,700
their families out there, so I probably had someone maybe drop me off.

1719
01:16:00,600 --> 01:16:05,300
And when to the car rental place, I'm like, I want to rent a car and

1720
01:16:05,300 --> 01:16:08,600
I'm like, I have a valid driver's license, you know, but I'm like 16

1721
01:16:08,900 --> 01:16:10,600
and a half or 17 or something.

1722
01:16:10,600 --> 01:16:11,000
Right?

1723
01:16:12,000 --> 01:16:16,900
And so they're like, we can't rent you a car and I'm like, well, I

1724
01:16:16,900 --> 01:16:18,100
work at Microsoft.

1725
01:16:18,200 --> 01:16:21,900
I'm entering their for summer and like, Okay, and like gave me the car

1726
01:16:22,200 --> 01:16:24,900
and I'm like, alright, that's pretty amazing.

1727
01:16:25,700 --> 01:16:26,500
I don't know if this thing.

1728
01:16:26,500 --> 01:16:29,100
Microsoft's, good for it at that point or what, but they were just

1729
01:16:29,100 --> 01:16:29,900
like fine with it.

1730
01:16:29,900 --> 01:16:30,200
So we

1731
01:16:30,300 --> 01:16:32,700
Able to go with anyway, so so it turns out you actually came into car.

1732
01:16:32,700 --> 01:16:36,500
But anyway point being I'm out there and I'm living in a place that's

1733
01:16:36,500 --> 01:16:39,400
literally a block away from campus for the Microsoft campus.

1734
01:16:39,500 --> 01:16:42,500
I just walk to work every day and back and honestly, I thought it was

1735
01:16:42,500 --> 01:16:43,400
the greatest thing ever.

1736
01:16:44,200 --> 01:16:50,900
I if I had been smarter at the time a little bit smarter, I would have

1737
01:16:50,900 --> 01:16:52,200
just F and stayed like there's no way.

1738
01:16:52,200 --> 01:16:55,100
I would have gone back to high school, high school was awful and I

1739
01:16:55,100 --> 01:16:56,600
didn't have any interest in going to school anymore.

1740
01:16:56,600 --> 01:16:57,300
I hated school.

1741
01:16:57,300 --> 01:17:00,200
I just wanted to program computers for the most part and that's

1742
01:17:00,300 --> 01:17:02,700
What I got to do every day and everyone at Microsoft is smarter than

1743
01:17:02,700 --> 01:17:04,600
me and everyone there.

1744
01:17:04,600 --> 01:17:05,800
Knew more programming than me.

1745
01:17:05,900 --> 01:17:09,600
So it's like an and you can send mail and get three thousand dollars

1746
01:17:09,600 --> 01:17:11,600
worth of software delivered to your desk.

1747
01:17:11,900 --> 01:17:13,600
Like, why would you ever want to leave?

1748
01:17:13,600 --> 01:17:16,600
There's free drinks just around.

1749
01:17:16,700 --> 01:17:18,000
Like any sort of that you want?

1750
01:17:18,000 --> 01:17:18,500
Is there?

1751
01:17:18,800 --> 01:17:20,500
This cafeteria was subsidized.

1752
01:17:20,500 --> 01:17:23,500
I paid like four dollars a day to eat, right?

1753
01:17:23,900 --> 01:17:25,500
And for me, this is amazing.

1754
01:17:25,500 --> 01:17:29,400
Like this was the best thing that ever happened and I if I had any

1755
01:17:29,400 --> 01:17:30,100
clue at all.

1756
01:17:30,400 --> 01:17:33,200
I would have just like tried to be a better programmer as there.

1757
01:17:33,200 --> 01:17:35,500
And just said, can I just stay here?

1758
01:17:35,600 --> 01:17:38,400
Like, don't send me back there, don't send me back to high school

1759
01:17:38,900 --> 01:17:41,000
because unlike a lot of people, I guess I didn't have it.

1760
01:17:41,000 --> 01:17:42,700
I really liked all my friends in high school.

1761
01:17:42,700 --> 01:17:46,200
I actually liked the people that I went to high school with a lot of

1762
01:17:46,600 --> 01:17:47,600
friends of mine who are programmers.

1763
01:17:47,600 --> 01:17:49,900
Said, they had like bad experiences high school or like they were like

1764
01:17:49,900 --> 01:17:50,800
an outcast or something.

1765
01:17:50,800 --> 01:17:53,400
I don't even know, but I actually really like the people at high

1766
01:17:53,400 --> 01:17:53,600
school.

1767
01:17:53,600 --> 01:17:56,400
I think that's why I went back, but High School like sitting in

1768
01:17:56,400 --> 01:17:57,900
classes was awful.

1769
01:17:58,000 --> 01:17:59,300
It was the worst thing ever.

1770
01:17:59,500 --> 01:17:59,900
And I

1771
01:18:00,700 --> 01:18:02,300
Absolutely never wish that on anyone.

1772
01:18:02,300 --> 01:18:05,600
It was the worst thing is terrible.

1773
01:18:06,100 --> 01:18:08,600
So anyway, I didn't do that.

1774
01:18:08,600 --> 01:18:11,200
But you know, that's what I should have done the time but point being

1775
01:18:11,200 --> 01:18:15,800
getting back to the story, free food was a big deal or subsidized

1776
01:18:15,800 --> 01:18:18,500
food, I should say and there was free food, sometimes to they'd have

1777
01:18:18,500 --> 01:18:23,400
these in turn events that like HR would schedule and they would have

1778
01:18:23,400 --> 01:18:26,300
like free food for us and they would set up like volleyball and stuff.

1779
01:18:26,300 --> 01:18:30,300
I mean for somebody who's like spent their whole life programming.

1780
01:18:30,500 --> 01:18:31,200
Themselves.

1781
01:18:31,400 --> 01:18:35,800
And really the only thing that you get for that is people think that

1782
01:18:35,800 --> 01:18:38,700
you're the smart computer kid in class or whatever is really the only

1783
01:18:38,700 --> 01:18:41,800
thing that happens because you know, how to program going into an

1784
01:18:41,800 --> 01:18:44,900
environment where suddenly everyone really likes the fact that you

1785
01:18:44,900 --> 01:18:48,300
program and does all of these things for you is kind of amazing.

1786
01:18:49,100 --> 01:18:51,800
And so I think nowadays probably people take that for granted because

1787
01:18:51,800 --> 01:18:54,600
everyone just knows if you work a computer company is super fancy and

1788
01:18:54,900 --> 01:18:58,200
people Ride Scooters down the hall and you get all this free food.

1789
01:18:58,200 --> 01:18:59,800
It's like that was not.

1790
01:19:00,400 --> 01:19:01,300
Thing back then.

1791
01:19:01,300 --> 01:19:04,000
And so I was amazed and totally, it was totally awesome.

1792
01:19:04,900 --> 01:19:10,300
But when dinner chyme rolled around, there was no dinner.

1793
01:19:11,000 --> 01:19:15,000
I mean, everyone was gone, everyone left for the day, right?

1794
01:19:15,000 --> 01:19:17,500
So by 6:00 7:00, there is no one left.

1795
01:19:17,500 --> 01:19:22,700
And I'm just sitting there at my desk and I don't have any food and I

1796
01:19:22,700 --> 01:19:25,900
wasn't much of a cook and don't have a car.

1797
01:19:26,500 --> 01:19:29,600
So it's like this thing now.

1798
01:19:29,600 --> 01:19:30,300
It's like this.

1799
01:19:30,600 --> 01:19:32,500
It's like, how am I going to eat tonight?

1800
01:19:32,500 --> 01:19:35,600
You know, and I did the obvious thing.

1801
01:19:35,600 --> 01:19:38,800
I'd like just buy more food at lunch or I'd like buy food at lunch and

1802
01:19:38,800 --> 01:19:42,700
take it back with me or like a think the dude who I was rooming with

1803
01:19:42,800 --> 01:19:44,000
intern housing.

1804
01:19:44,200 --> 01:19:45,200
He like had a car.

1805
01:19:45,200 --> 01:19:46,300
So I just pay him.

1806
01:19:46,300 --> 01:19:49,600
I think and he would go to the supermarket and he would bring back

1807
01:19:49,600 --> 01:19:50,400
food for me too.

1808
01:19:51,500 --> 01:19:57,700
But eventually this is where the luck part strikes against 01 luck.

1809
01:19:57,700 --> 01:20:00,100
Was that someone asked me to come out to a student intern?

1810
01:20:00,100 --> 01:20:00,200
Am I?

1811
01:20:00,400 --> 01:20:01,600
Is off any at all.

1812
01:20:01,700 --> 01:20:04,100
That was complete luck and was not deserted.

1813
01:20:04,100 --> 01:20:06,900
Like I didn't do anything to have that happen other than the fact that

1814
01:20:06,900 --> 01:20:08,500
I had been programming computers a lot.

1815
01:20:08,800 --> 01:20:10,400
So it's complete luck that I got there.

1816
01:20:10,400 --> 01:20:11,900
And then the second thing, a complete luck.

1817
01:20:12,200 --> 01:20:13,800
Was the fact that I didn't know how to cook.

1818
01:20:13,900 --> 01:20:15,200
I didn't really know how to make dinner.

1819
01:20:15,500 --> 01:20:17,400
I love to cook now, but I didn't know anything there.

1820
01:20:17,900 --> 01:20:19,700
So, I was often at my desk late at night.

1821
01:20:19,700 --> 01:20:23,900
I had nothing to do, didn't have any dinner and I started to hear

1822
01:20:23,900 --> 01:20:27,500
noises kind of around in the building.

1823
01:20:28,700 --> 01:20:29,600
I'd hear people and

1824
01:20:30,400 --> 01:20:34,900
Walking and I see, like this weird dude with a totally messed up

1825
01:20:34,900 --> 01:20:38,800
African looking hat on his head and I probably using the wrong term.

1826
01:20:38,900 --> 01:20:41,500
I associate with an African hat because I feel like, they're there are

1827
01:20:41,500 --> 01:20:43,600
certain tribal cultures that use this kind of a hat.

1828
01:20:43,600 --> 01:20:49,500
It's like a, it's basically like a cylinder with a top and you put it

1829
01:20:49,500 --> 01:20:50,500
on your head.

1830
01:20:50,800 --> 01:20:51,400
Right?

1831
01:20:51,800 --> 01:20:55,700
And it's colorful they're kind of cool looking but I don't know the

1832
01:20:55,700 --> 01:20:58,100
culture of the various different regions of Africa.

1833
01:20:58,100 --> 01:20:59,800
It's a huge country and there's tons of different

1834
01:21:00,000 --> 01:21:00,400
Plus there.

1835
01:21:00,400 --> 01:21:04,100
But for some reason I associate that with with like, you know, some

1836
01:21:04,100 --> 01:21:08,300
kind of, some kind of a tribal decoration, tribal symbol hat or

1837
01:21:08,300 --> 01:21:08,700
something.

1838
01:21:08,900 --> 01:21:13,100
So, there's this guy walking around in that with that hat, on his

1839
01:21:13,100 --> 01:21:13,600
head.

1840
01:21:14,200 --> 01:21:17,500
And I'm like, what where is he going?

1841
01:21:17,500 --> 01:21:21,800
So I just kind of followed him I think and in he went into this

1842
01:21:21,800 --> 01:21:24,000
conference room, and there's all this food there.

1843
01:21:24,400 --> 01:21:28,700
There is like for chafing dishes of food and it's 8 o'clock or

1844
01:21:28,700 --> 01:21:29,400
something at night.

1845
01:21:29,400 --> 01:21:29,800
I don't even know it.

1846
01:21:30,000 --> 01:21:31,900
Slate, and it's all this food there.

1847
01:21:31,900 --> 01:21:32,900
And there's two other guys.

1848
01:21:32,900 --> 01:21:36,000
I think were there, at least one of the guy and I'm like, hey, you

1849
01:21:36,000 --> 01:21:36,800
know, what's going on?

1850
01:21:36,800 --> 01:21:38,200
What's all the food for it?

1851
01:21:38,200 --> 01:21:40,500
Turns out, the guy in the Hat is Chris Hecker.

1852
01:21:41,500 --> 01:21:42,900
He works there at the time.

1853
01:21:42,900 --> 01:21:45,600
He's working on wind G, which is like this game.

1854
01:21:45,700 --> 01:21:48,800
This thing to support games is like Fast bleeding on Windows machines.

1855
01:21:48,800 --> 01:21:50,400
You try to basically get games on Windows.

1856
01:21:51,900 --> 01:21:53,300
He's running a group to shift.

1857
01:21:53,300 --> 01:21:58,400
This wind G thing, under Mike Edwards, the guy who flamed out and left

1858
01:21:58,400 --> 01:21:59,800
the building and you

1859
01:22:00,000 --> 01:22:00,500
Came back.

1860
01:22:00,500 --> 01:22:02,700
He ended up coming back, two weeks later and it was this huge thing.

1861
01:22:02,700 --> 01:22:05,500
But he, you know, at that point they kind of had disciplined him for

1862
01:22:05,500 --> 01:22:06,200
this action.

1863
01:22:06,200 --> 01:22:07,900
It was, it was a little crazy, right?

1864
01:22:08,200 --> 01:22:08,900
Not important.

1865
01:22:08,900 --> 01:22:11,300
That's the details of his life and I don't know, the specifics, but

1866
01:22:11,300 --> 01:22:16,300
point being he was under Mike Edwards and I guess the flame out the

1867
01:22:16,300 --> 01:22:17,500
whole fight that Mike Edwards.

1868
01:22:17,500 --> 01:22:20,600
It had with management was over Chris's project because they weren't

1869
01:22:20,600 --> 01:22:24,200
supposed to be doing it or something, and he was kind of protecting

1870
01:22:24,200 --> 01:22:26,300
Chris's project because he thought it was a good idea and it was a

1871
01:22:26,300 --> 01:22:27,200
good idea by the way.

1872
01:22:27,600 --> 01:22:29,800
But anyway, Chris is running this project and actually

1873
01:22:29,900 --> 01:22:31,300
A working for Chris.

1874
01:22:32,200 --> 01:22:36,200
At the time I believed was was Alex st.

1875
01:22:36,200 --> 01:22:39,600
John, the guy who ended up running wild tangent, and who did the

1876
01:22:39,600 --> 01:22:41,800
DirectX evangelism if any of, you know, who that was.

1877
01:22:41,800 --> 01:22:43,400
He was Chris's evangelist.

1878
01:22:43,400 --> 01:22:44,000
Unwin G.

1879
01:22:44,000 --> 01:22:46,500
He was responsible for going around.

1880
01:22:46,700 --> 01:22:49,600
Pitching Chris's project to external game companies.

1881
01:22:49,600 --> 01:22:53,700
He used to evangelize printers printer drivers to people like mitt

1882
01:22:53,700 --> 01:22:57,100
right, your printer drivers for Windows, and he actually was working

1883
01:22:57,100 --> 01:22:59,500
for Chris at the time and in that room.

1884
01:22:59,500 --> 01:22:59,800
I think it

1885
01:23:00,000 --> 01:23:05,500
Chris, I want to say it was John Blossom, who is working with Chris on

1886
01:23:05,500 --> 01:23:05,900
Wednesday.

1887
01:23:05,900 --> 01:23:10,200
The project John Blossom later went on to do some indie games himself.

1888
01:23:10,200 --> 01:23:15,200
He also worked on Star Wars, droid works and Sim Park and stuff like

1889
01:23:15,200 --> 01:23:15,500
that.

1890
01:23:15,500 --> 01:23:15,700
I don't know.

1891
01:23:15,700 --> 01:23:16,800
He worked on a bunch of things.

1892
01:23:17,500 --> 01:23:24,400
Anyway, I was like, hey, can I like, you know, can I have some this

1893
01:23:24,400 --> 01:23:24,800
food?

1894
01:23:24,800 --> 01:23:25,900
You mind if I eat some of this food?

1895
01:23:25,900 --> 01:23:28,300
And I think they were like, sure, I probably getting the details

1896
01:23:29,100 --> 01:23:29,800
slightly wrong.

1897
01:23:29,900 --> 01:23:31,900
Because I'm a tell you one other thing in the second here and I'm not

1898
01:23:31,900 --> 01:23:34,900
sure which one of them actually happened first, but they were lecture

1899
01:23:34,900 --> 01:23:36,800
there because they had more food than they needed.

1900
01:23:36,900 --> 01:23:39,800
And basically what it was is because when G was technically in beta

1901
01:23:39,800 --> 01:23:43,700
shipping or something like this, Microsoft was providing food for them

1902
01:23:43,700 --> 01:23:44,300
and paying for it.

1903
01:23:44,300 --> 01:23:46,400
So, there is just free food every night now.

1904
01:23:46,700 --> 01:23:50,700
So, basically, every night I hung out with Chris and them and would

1905
01:23:50,700 --> 01:23:53,000
chat and whatever, and we got to be friends.

1906
01:23:54,100 --> 01:23:58,100
So I was also someone who right before then.

1907
01:23:58,100 --> 01:23:59,800
I had learned to play Doom.

1908
01:24:00,200 --> 01:24:01,900
Because we had Doom at home before.

1909
01:24:01,900 --> 01:24:06,900
I think that for the the internship and of course, Chris and John

1910
01:24:07,200 --> 01:24:10,800
often set up doom on the local network at Microsoft, because you could

1911
01:24:10,800 --> 01:24:15,300
play local network games of Doom multiplayer, which set up a local

1912
01:24:15,300 --> 01:24:18,700
network, plaything of Doom and just play it a bunch at night, when no

1913
01:24:18,700 --> 01:24:20,300
one else was there, right?

1914
01:24:20,700 --> 01:24:24,100
So, so that I don't know how much development of wengie was actually

1915
01:24:24,100 --> 01:24:28,300
happening at night between the food and the Doom, but I didn't care

1916
01:24:28,300 --> 01:24:29,500
because that was not my product.

1917
01:24:29,500 --> 01:24:29,800
I know.

1918
01:24:30,000 --> 01:24:30,600
What's going on?

1919
01:24:30,700 --> 01:24:33,500
So I just basically was like eating free food.

1920
01:24:33,500 --> 01:24:38,200
So I had some for dinner now and playing Doom at these guys and I love

1921
01:24:38,200 --> 01:24:41,200
doom and I've never played it multiplayer before, so that was awesome

1922
01:24:42,200 --> 01:24:44,800
and everything was great.

1923
01:24:44,900 --> 01:24:50,000
So anyway, that is really how I ended up getting into game programming

1924
01:24:50,000 --> 01:24:58,000
because Chris, like me well enough and he thought it would be cool if

1925
01:24:58,000 --> 01:24:59,200
we work together after that.

1926
01:24:59,200 --> 01:24:59,900
So he

1927
01:25:00,000 --> 01:25:02,400
Me to a bunch of his friends who were game mystery people.

1928
01:25:02,400 --> 01:25:06,100
And after I finished high school, I came out to Seattle to work with

1929
01:25:06,100 --> 01:25:06,500
Chris.

1930
01:25:07,200 --> 01:25:09,100
Now, the game that we worked on never shipped.

1931
01:25:09,700 --> 01:25:12,100
You never even really even got going, because he was starting a

1932
01:25:12,100 --> 01:25:15,500
company, and we kind of worked on it together, but I eventually

1933
01:25:16,300 --> 01:25:19,900
stopped and went and got a real programming job basically, but we

1934
01:25:19,900 --> 01:25:20,700
worked on it for a little while.

1935
01:25:20,700 --> 01:25:24,300
So, basically, I went with Chris and John Blossom guy from Benji and

1936
01:25:24,300 --> 01:25:27,400
another guy called John Ross, who's actually the programmer, the PC

1937
01:25:27,400 --> 01:25:29,600
programmer of SimCity 2000.

1938
01:25:29,900 --> 01:25:31,100
SimCity 2000.

1939
01:25:31,200 --> 01:25:35,000
The Mac side was written by by will write obviously, and the PC side

1940
01:25:35,000 --> 01:25:35,900
was written by this other guy.

1941
01:25:35,900 --> 01:25:38,600
John Ross, the four of us worked on a game together for a little

1942
01:25:38,600 --> 01:25:38,900
while.

1943
01:25:38,900 --> 01:25:39,800
It didn't pan out.

1944
01:25:39,800 --> 01:25:43,200
But by that time Chris had introduced me to lots of gay people.

1945
01:25:43,200 --> 01:25:48,300
So I could get a gut job in the game industry, which I did and I was

1946
01:25:48,300 --> 01:25:50,700
still an absolutely terrible program at the time.

1947
01:25:51,500 --> 01:25:55,400
I work for gas powered games for a little while, and did absolutely

1948
01:25:55,400 --> 01:25:58,900
nothing useful for them because I was allowed to programmer.

1949
01:25:59,300 --> 01:25:59,800
I then

1950
01:26:00,000 --> 01:26:04,300
To rad game tools after that and that is basically where I learned to

1951
01:26:04,300 --> 01:26:05,300
program for real.

1952
01:26:06,200 --> 01:26:07,200
Jeff Roberts.

1953
01:26:08,000 --> 01:26:10,900
The guy who basically runs Red game tools and has programmed every

1954
01:26:10,900 --> 01:26:12,900
version of Smacker and every version of Bink up too.

1955
01:26:12,900 --> 01:26:16,300
Big to where me and Fabien did work on it.

1956
01:26:17,800 --> 01:26:19,400
But basically, he had done all the work before, then.

1957
01:26:19,600 --> 01:26:21,500
It was just Jeff Roberts.

1958
01:26:23,800 --> 01:26:26,200
His wife did the accounting.

1959
01:26:26,300 --> 01:26:31,900
I think do the books, Mitch Sewell, who was a sales guy.

1960
01:26:32,800 --> 01:26:36,600
And what's his name?

1961
01:26:37,400 --> 01:26:39,800
I don't remember what the the receptionist name of Colin, the

1962
01:26:39,800 --> 01:26:43,300
receptionist and a guy named John Miles.

1963
01:26:44,300 --> 01:26:46,500
That was the entirety of rad at the time when I went to work there.

1964
01:26:46,500 --> 01:26:49,100
So I was like, it was it was basically, the only programmers were

1965
01:26:49,100 --> 01:26:49,500
Jeff.

1966
01:26:49,500 --> 01:26:50,500
John and me.

1967
01:26:51,200 --> 01:26:54,500
Now, John Mi is actually very, very famous game industry person.

1968
01:26:55,300 --> 01:26:57,800
You may not have heard of him recently because he doesn't really do

1969
01:26:57,800 --> 01:26:59,800
any game stuff anymore, but,

1970
01:27:00,900 --> 01:27:02,200
He was the guy who wrote.

1971
01:27:02,300 --> 01:27:06,000
I think a lot of the Ultima 5 engine Ultima 5 going way back.

1972
01:27:06,500 --> 01:27:09,900
He did like a lot of I think he did the texture mapper for Wing

1973
01:27:09,900 --> 01:27:14,300
Commander for the first one that actually had real 3D, you know, he

1974
01:27:14,300 --> 01:27:17,500
wrote the Mi sound system, which is what almost every game used for

1975
01:27:17,500 --> 01:27:17,800
audio.

1976
01:27:17,800 --> 01:27:18,700
At that time.

1977
01:27:19,000 --> 01:27:22,100
He was the tech director at digital Anvil the people who did like

1978
01:27:22,100 --> 01:27:27,300
starlancer and freelancer and that Chris Roberts kind of totally, I

1979
01:27:27,300 --> 01:27:29,500
guess I don't want to impinge any.

1980
01:27:30,100 --> 01:27:32,900
The ones reputation here, but like, kind of cratered and I don't think

1981
01:27:32,900 --> 01:27:34,300
it had much to do with John Miles.

1982
01:27:35,100 --> 01:27:36,700
But anyway, that was what he did before.

1983
01:27:36,700 --> 01:27:40,700
I guess he went off to Hollywood to make the movie of wing, Commander,

1984
01:27:40,700 --> 01:27:41,500
the movie or whatever.

1985
01:27:41,500 --> 01:27:42,800
Make no, I guess it was after that.

1986
01:27:42,800 --> 01:27:43,900
I don't even remember that.

1987
01:27:44,400 --> 01:27:45,600
You got to go look at the history of this.

1988
01:27:45,600 --> 01:27:46,000
I don't remember.

1989
01:27:46,000 --> 01:27:49,500
But John Miles point being was a was a very famous programmer for a

1990
01:27:49,500 --> 01:27:50,000
long time.

1991
01:27:50,000 --> 01:27:51,900
And then his first love was always Hardware.

1992
01:27:51,900 --> 01:27:54,400
So eventually he just kind of retired from software at all, and he

1993
01:27:54,400 --> 01:27:55,900
does Hardware now, Luke Harper design.

1994
01:27:57,100 --> 01:27:59,900
So anyway, I went to rad and that's where I basically spent.

1995
01:28:00,100 --> 01:28:05,100
And the rest of my career up until the point where I decided to leave

1996
01:28:05,100 --> 01:28:09,200
and do try my hand game design, one of the reasons that I say over and

1997
01:28:09,200 --> 01:28:09,400
over again.

1998
01:28:09,400 --> 01:28:12,700
I'm not doing any game design on this project.

1999
01:28:12,700 --> 01:28:15,000
I'm just gonna do very straightforward old-school game designers

2000
01:28:15,000 --> 01:28:16,800
because I am terrible game design.

2001
01:28:16,900 --> 01:28:20,300
I tried designing a game is called sushi bar, Samurai and the

2002
01:28:20,300 --> 01:28:21,600
implementation of the game went very well.

2003
01:28:21,600 --> 01:28:24,000
Because, hey, I know how to program.

2004
01:28:24,000 --> 01:28:25,500
And I also know a lot of stuff about art.

2005
01:28:25,500 --> 01:28:26,800
So I was able to make a bunch of art for the game.

2006
01:28:26,800 --> 01:28:27,500
The art looked real good.

2007
01:28:27,900 --> 01:28:30,100
The design of the game is terrible because I

2008
01:28:30,100 --> 01:28:33,400
Trying to design a new thing instead of like making an old thing that

2009
01:28:33,400 --> 01:28:34,000
I understood.

2010
01:28:34,000 --> 01:28:36,400
I try to design a new thing and I was not good enough for that.

2011
01:28:36,900 --> 01:28:40,700
I think I know enough design to design, you know, a traditional game

2012
01:28:41,000 --> 01:28:42,500
and not mess it up too badly.

2013
01:28:42,500 --> 01:28:46,900
And that is exactly what I want to do on this stream, but I clearly

2014
01:28:46,900 --> 01:28:48,900
proved to myself that designing new stuff.

2015
01:28:49,000 --> 01:28:51,500
If something better left to The Experts, so if you're going to design

2016
01:28:51,500 --> 01:28:54,700
a game that's like totally different from existing games.

2017
01:28:54,800 --> 01:28:59,300
I am not your guy that is, that is like John Blow territory or

2018
01:28:59,300 --> 01:28:59,900
genielle Bender.

2019
01:29:00,000 --> 01:29:03,200
Ah, GUI, I knew a lot of people who've got those skills, and I don't

2020
01:29:03,200 --> 01:29:03,700
have them.

2021
01:29:04,000 --> 01:29:07,400
So I still have that game and it's kind of cool.

2022
01:29:07,400 --> 01:29:09,700
Like there's some cool stuff in it and there's some cool Tech in it,

2023
01:29:09,700 --> 01:29:13,400
but the gameplay is awful and it just never really amounted to

2024
01:29:13,400 --> 01:29:13,900
anything.

2025
01:29:14,200 --> 01:29:17,100
So I table that and since then I've just basically worked on game

2026
01:29:17,100 --> 01:29:19,700
check, which I think is mostly what I'm good at is just technology for

2027
01:29:19,700 --> 01:29:20,100
games.

2028
01:29:20,500 --> 01:29:23,800
And so I worked on a project called larabee.

2029
01:29:24,800 --> 01:29:32,600
Which was Intel's attempt basically making a card that could do CPU

2030
01:29:32,600 --> 01:29:33,700
and GPU stuff.

2031
01:29:34,400 --> 01:29:36,000
So that you just have one processor.

2032
01:29:36,000 --> 01:29:38,200
That did everything essentially that, so you didn't need a separate

2033
01:29:38,200 --> 01:29:40,100
graphics card and it was a pretty cool project.

2034
01:29:40,100 --> 01:29:42,900
But it there is a number of political reasons that Intel that it

2035
01:29:42,900 --> 01:29:46,500
looked like it just was not going to work and so I left that project

2036
01:29:46,500 --> 01:29:47,900
shortly before it kind of collapsed.

2037
01:29:47,900 --> 01:29:50,600
I was I was more like I was kind of a rat off of a sinking ship at

2038
01:29:50,600 --> 01:29:54,500
some level, but it was kind of fun because I got to work on.

2039
01:29:54,600 --> 01:29:58,900
Low level implementation of Graphics like of DirectX basically.

2040
01:30:00,000 --> 01:30:03,100
That was working with like Batman binstock and Mike a Brash and Mike

2041
01:30:03,100 --> 01:30:09,200
Startin and later Fabien, but I he came on actually after I was off

2042
01:30:09,200 --> 01:30:12,800
the project to do some cleanup work with Altman because they stop sort

2043
01:30:12,800 --> 01:30:16,000
of working on the main line driver at that point that turned into

2044
01:30:16,000 --> 01:30:17,500
Intel high performance Computing.

2045
01:30:18,100 --> 01:30:20,400
So instead of making graphics card out of the thing, we were making,

2046
01:30:20,600 --> 01:30:23,200
they ended up just making a high performance Computing.

2047
01:30:23,200 --> 01:30:25,600
Part the facially used for crunching huge numbers and you can still

2048
01:30:25,600 --> 01:30:25,900
buy.

2049
01:30:25,900 --> 01:30:26,800
You can actually buy it.

2050
01:30:27,400 --> 01:30:29,400
But if you don't use it as a graphics card, basically,

2051
01:30:30,100 --> 01:30:35,300
After that, I worked on pink to with with Jeff and I basically did all

2052
01:30:35,300 --> 01:30:41,500
the like sort of research code, implementations style things if that

2053
01:30:41,500 --> 01:30:48,000
makes any sense, and so I essentially did stuff that like Jeff would

2054
01:30:48,000 --> 01:30:48,200
go.

2055
01:30:48,200 --> 01:30:51,200
I need these blisters or I need this thing, or I need a filter that

2056
01:30:51,200 --> 01:30:52,800
will do blah and I would go do those for him.

2057
01:30:52,800 --> 01:30:55,400
And I also made a debugging system called mustache, for that, which is

2058
01:30:55,400 --> 01:30:56,000
pretty cool.

2059
01:30:56,300 --> 01:30:57,600
If we're bored on the stream sometime.

2060
01:30:57,600 --> 01:30:59,100
I'll demo mustache.

2061
01:30:59,100 --> 01:30:59,800
It's a pretty cool thing.

2062
01:31:01,900 --> 01:31:04,400
And I also did after that.

2063
01:31:04,400 --> 01:31:08,400
I worked on the witness for a little while with John doing their

2064
01:31:08,400 --> 01:31:11,100
Collision detection system and upgrading the editor as well as a

2065
01:31:11,100 --> 01:31:13,600
couple other things, which I documented witness Wednesdays.

2066
01:31:14,300 --> 01:31:17,000
And that is the end.

2067
01:31:17,000 --> 01:31:19,400
And I'm now working on some stuff that I haven't announced yet, which

2068
01:31:19,400 --> 01:31:23,300
is what I do during the day and I'm doing handmade here at night and

2069
01:31:23,300 --> 01:31:24,900
that is pretty much everything.

2070
01:31:24,900 --> 01:31:28,700
I probably forgot some stuff, but that is pretty much everything.

2071
01:31:28,700 --> 01:31:29,800
So, hopefully that answered the question.

2072
01:31:29,800 --> 01:31:30,300
I'll take it.

2073
01:31:30,500 --> 01:31:30,600
Quick.

2074
01:31:30,600 --> 01:31:33,700
Look at the stream, just to see if there's anything obvious that I

2075
01:31:33,700 --> 01:31:34,700
left out.

2076
01:31:35,600 --> 01:31:36,300
See here.

2077
01:31:36,700 --> 01:31:37,900
How do I get down to the end?

2078
01:31:37,900 --> 01:31:39,000
Can I use page down?

2079
01:31:39,200 --> 01:31:39,900
There goes?

2080
01:31:40,600 --> 01:31:41,200
All right.

2081
01:31:45,600 --> 01:31:46,700
Let's see.

2082
01:31:49,900 --> 01:31:52,600
Someone said you should probably put your webcam at 100% of the screen

2083
01:31:52,600 --> 01:31:54,000
space during the Q&A session saw.

2084
01:31:54,000 --> 01:31:55,100
Yes, that would be smart.

2085
01:31:55,100 --> 01:32:00,800
That requires a certain level of sort of prowess here that I don't

2086
01:32:00,800 --> 01:32:00,900
know.

2087
01:32:00,900 --> 01:32:03,300
So I'm expecting I suspect my probably have to do some kind of

2088
01:32:04,900 --> 01:32:06,500
Some kind of like setting up multiple profiles.

2089
01:32:06,500 --> 01:32:08,700
So I'll take a look at that for next time because you're right if

2090
01:32:08,700 --> 01:32:11,000
we're going to do some kind of weird chat days, which we might want to

2091
01:32:11,000 --> 01:32:11,900
do at some point.

2092
01:32:11,900 --> 01:32:13,700
I'm going to write that down to make some way.

2093
01:32:13,700 --> 01:32:17,500
I can quick switch between the two quick switch.

2094
01:32:18,900 --> 01:32:20,600
Two full webcam.

2095
01:32:22,100 --> 01:32:25,300
All right, so, I don't know who stayed for that.

2096
01:32:25,300 --> 01:32:26,800
Ridiculous rambling, nonsense.

2097
01:32:26,800 --> 01:32:27,900
It looks like almost everyone.

2098
01:32:28,200 --> 01:32:28,600
Well.

2099
01:32:30,400 --> 01:32:31,800
That was Story Time with Casey.

2100
01:32:32,500 --> 01:32:33,600
I have to go now.

2101
01:32:33,600 --> 01:32:34,700
So thank you very much.

2102
01:32:34,700 --> 01:32:37,500
Everyone for tuning into the very last test dream.

2103
01:32:37,500 --> 01:32:39,000
I hope you had a good time.

2104
01:32:39,000 --> 01:32:43,800
I know I did, and I hope to see everyone tomorrow for the inaugural

2105
01:32:43,800 --> 01:32:47,500
stream of handmade hero.

2106
01:32:48,000 --> 01:32:50,600
And yes, I hope to see you all there.

2107
01:32:50,700 --> 01:32:54,200
If there's anything that you would like to ask, feel free to go to the

2108
01:32:54,200 --> 01:32:56,200
handmade hero website.

2109
01:32:56,600 --> 01:32:59,500
Where there is this little email question button if you want to know,

2110
01:32:59,500 --> 01:32:59,900
when we are

2111
01:33:00,000 --> 01:33:04,100
Broadcasting, the tweets button has a stream that basically all it

2112
01:33:04,100 --> 01:33:08,500
does is is send out notifications when the stream is coming every day.

2113
01:33:08,700 --> 01:33:10,100
So you can just quick look at that.

2114
01:33:10,300 --> 01:33:11,400
You don't have to subscribe to it.

2115
01:33:11,400 --> 01:33:14,300
If you don't want to, you can just literally just pop over here and

2116
01:33:14,300 --> 01:33:18,000
just look at what the what the top is and it'll tell you, and some

2117
01:33:18,000 --> 01:33:19,800
point, we'll try to have a countdown timer on here.

2118
01:33:19,800 --> 01:33:21,800
But anyway, that's it for today.

2119
01:33:22,000 --> 01:33:24,100
And I hope to see everyone here tomorrow.

2120
01:33:24,100 --> 01:33:24,900
Thanks everybody.

