1
00:00:01,100 --> 00:00:03,700
Hello, everyone, and welcome to handmade hero.

2
00:00:03,700 --> 00:00:04,900
The show where we code.

3
00:00:05,000 --> 00:00:08,700
It complete game live on stream and

4
00:00:09,800 --> 00:00:18,100
And have an increasingly baller profiler, which I typically honest

5
00:00:18,100 --> 00:00:18,900
with you, don't really remember.

6
00:00:18,900 --> 00:00:20,600
We're going to be, I think it was buttons.

7
00:00:22,300 --> 00:00:25,100
So I think we're going to do that today today is a 264.

8
00:00:25,100 --> 00:00:28,100
If you want to follow along at home day, 263 source code is what you

9
00:00:28,100 --> 00:00:28,900
want to start with.

10
00:00:29,500 --> 00:00:31,800
I'm going to go ahead and jump into it because I think what we're

11
00:00:31,800 --> 00:00:35,300
supposed to do today is buttons and there's not a lot of mystery and

12
00:00:35,300 --> 00:00:36,000
how to make a button.

13
00:00:36,000 --> 00:00:38,200
So let's have at it.

14
00:00:38,900 --> 00:00:41,000
Here's where we left off.

15
00:00:42,200 --> 00:00:44,300
Oh, ffs.

16
00:00:45,400 --> 00:00:49,600
Off we left off.

17
00:00:51,200 --> 00:00:55,300
with our profiler, we were putting the pro back into profiler if I do

18
00:00:55,300 --> 00:00:59,500
say so myself, we left off in a situation where

19
00:01:00,700 --> 00:01:04,300
Our profiler was looking pretty darn snazzy and we could do some

20
00:01:04,300 --> 00:01:09,800
things that were kind of awesome such as saying that we wanted to, you

21
00:01:09,800 --> 00:01:12,600
know, take a look at this particular thing that was happening in the

22
00:01:12,600 --> 00:01:16,900
game and say like okay here's some crazy number of events or something

23
00:01:16,900 --> 00:01:19,800
that's all happening in here and we could just go ahead and say, you

24
00:01:19,800 --> 00:01:24,100
know what, why don't you just stop for a second and let me like, you

25
00:01:24,100 --> 00:01:28,600
know, pause the debug info and kind of go around and see for any given

26
00:01:28,600 --> 00:01:29,400
frame.

27
00:01:29,600 --> 00:01:30,300
What the breakdown?

28
00:01:30,500 --> 00:01:32,800
Of the profile actually was right.

29
00:01:33,000 --> 00:01:35,900
So that's pretty awesome that we could freeze the profiler and do all

30
00:01:35,900 --> 00:01:38,100
this investigation we can do drilling down.

31
00:01:38,100 --> 00:01:43,600
Like so right but we have some stuff that's kind of a little bit

32
00:01:43,600 --> 00:01:43,900
janky.

33
00:01:43,900 --> 00:01:46,500
This point, which is that once I drill down, I can't get back.

34
00:01:46,900 --> 00:01:50,300
I can't say go back to the previous thing that you reviewing, right?

35
00:01:50,300 --> 00:01:54,300
Or like up one level in the profile, right?

36
00:01:54,300 --> 00:01:55,300
I can't do that.

37
00:01:55,600 --> 00:01:56,700
I can't.

38
00:01:58,900 --> 00:02:00,000
Restart.

39
00:02:00,300 --> 00:02:00,500
Right.

40
00:02:00,500 --> 00:02:05,700
So now that we're going in here, I have no actual way of ever

41
00:02:06,500 --> 00:02:08,199
adjusting anything at all.

42
00:02:09,100 --> 00:02:11,800
So like I basically can't, I can't do anything right?

43
00:02:11,900 --> 00:02:16,100
And the reason that I can't do anything is because we have no way of

44
00:02:16,100 --> 00:02:19,000
putting like buttons into the profiler or controls that like control,

45
00:02:19,000 --> 00:02:19,700
what's going on.

46
00:02:21,300 --> 00:02:23,000
So that's what I need to get started with today.

47
00:02:23,600 --> 00:02:27,700
I need to also we had sort of did

48
00:02:27,900 --> 00:02:31,400
Testing with low memory in the debugger and we probably don't want to

49
00:02:31,400 --> 00:02:32,200
keep that going.

50
00:02:32,200 --> 00:02:38,200
So if you remember we had a thing here where we did like we used eight

51
00:02:38,200 --> 00:02:42,900
megabytes for the debug back buffer as a test to make sure the

52
00:02:42,900 --> 00:02:44,800
recycling worked and we don't really want to do that.

53
00:02:44,800 --> 00:02:48,300
We want to be able to have enough memory to store a significant

54
00:02:48,600 --> 00:02:50,500
portion of the of the frames.

55
00:02:50,700 --> 00:02:53,700
So I'm going to go ahead and switch it back so here you can see we've

56
00:02:53,700 --> 00:02:54,700
got plenty of memory.

57
00:02:54,700 --> 00:02:57,700
Now in fact we have 83 Meg's leftover I

58
00:02:57,900 --> 00:02:59,900
I could, I could reduce it even more than that, but we might as well.

59
00:03:00,000 --> 00:03:00,700
Plenty of room.

60
00:03:01,400 --> 00:03:06,000
And so we can keep 2056 frames back and still have a healthy sort of

61
00:03:06,000 --> 00:03:09,200
amount of room remaining in our debug system, which is what we want.

62
00:03:09,600 --> 00:03:12,300
So, that's really what's happening there.

63
00:03:12,300 --> 00:03:14,900
It's kind of weird to see those things fade in and out like that.

64
00:03:15,200 --> 00:03:15,700
Anyway.

65
00:03:16,400 --> 00:03:20,100
So what I need to do now is I need to sort of add more debug controls

66
00:03:20,100 --> 00:03:23,100
here, besides just this like a play, and a pause button, and things

67
00:03:23,100 --> 00:03:26,000
like that, would be nice as well as some things.

68
00:03:29,300 --> 00:03:29,700
Excuse me.

69
00:03:32,100 --> 00:03:35,000
As well as some things for controlling the profile view a little bit

70
00:03:35,000 --> 00:03:35,400
more.

71
00:03:35,800 --> 00:03:38,800
For example, one thing that might be nice is to be able to zoom in and

72
00:03:38,800 --> 00:03:40,800
out or pan on it or something like this.

73
00:03:41,300 --> 00:03:45,300
And another thing that might be nice would be 2 again to have that

74
00:03:45,300 --> 00:03:50,200
back button and and some other buttons that could switch, you know, we

75
00:03:50,200 --> 00:03:55,200
made that that debug sort of percentage like per frame, percentage

76
00:03:55,200 --> 00:03:58,900
View, and and we don't have any way right now of bringing that back

77
00:03:58,900 --> 00:03:59,100
up.

78
00:03:59,100 --> 00:04:01,000
So all of that stuff would just be it's

79
00:04:01,200 --> 00:04:04,200
That we could be doing right now and we can't because we don't have

80
00:04:04,200 --> 00:04:05,100
any way to interact.

81
00:04:05,100 --> 00:04:08,100
So as I'm going to focus on today is just adding the ability to have

82
00:04:08,100 --> 00:04:08,900
those buttons.

83
00:04:09,400 --> 00:04:11,300
So as you know when we have

84
00:04:12,900 --> 00:04:17,200
You know, when we're sort of working the device system, we kind of had

85
00:04:17,200 --> 00:04:21,100
this idea of getting a fair bit of Leverage this, it's just a debug

86
00:04:21,100 --> 00:04:21,399
system.

87
00:04:21,500 --> 00:04:24,400
A fair bit of Leverage out of a fairly small number of things.

88
00:04:24,600 --> 00:04:28,700
So for example in our interface code, right?

89
00:04:29,200 --> 00:04:30,200
Jump to here.

90
00:04:31,500 --> 00:04:33,600
And our interface code, you know, we'll just throw something in here,

91
00:04:33,600 --> 00:04:35,900
like a, you know, frame slider or whatever.

92
00:04:36,100 --> 00:04:38,400
And then that just goes into the debug string, like everything else,

93
00:04:38,400 --> 00:04:41,300
we'd have to write any new code to like handle it or anything and then

94
00:04:41,300 --> 00:04:43,600
on the other side just gets picked up and goes, oh okay, you want the

95
00:04:43,600 --> 00:04:43,800
frame?

96
00:04:43,800 --> 00:04:45,000
Slider, put a frame slider in there.

97
00:04:46,800 --> 00:04:50,800
So, what I should be able to do here is add some of these features,

98
00:04:50,900 --> 00:04:51,300
right?

99
00:04:51,300 --> 00:04:52,900
So that they're all kind of

100
00:04:57,600 --> 00:05:02,200
So that I can add the kinds of controls that I want and have them be

101
00:05:02,500 --> 00:05:04,700
usable right now.

102
00:05:04,700 --> 00:05:06,500
There's a couple different things here.

103
00:05:06,500 --> 00:05:08,800
One is that I may want to add.

104
00:05:08,800 --> 00:05:10,900
I mean, in some sense I guess I don't know that.

105
00:05:10,900 --> 00:05:13,600
I really need to add them in here in the sense that if we know we

106
00:05:13,600 --> 00:05:16,300
always want the frame slider to have like the play and pause stuff on

107
00:05:16,300 --> 00:05:19,000
it, I can just include it in the drawing of that and same thing with

108
00:05:19,000 --> 00:05:20,300
the thread interval graph.

109
00:05:20,400 --> 00:05:24,400
So I suppose maybe the easiest thing to do here at least at first is

110
00:05:24,400 --> 00:05:27,100
to focus on how do I take an existing element that

111
00:05:27,300 --> 00:05:32,700
Wants to have some buttons associated with it, and, you know, add

112
00:05:32,700 --> 00:05:33,300
those in there.

113
00:05:33,500 --> 00:05:36,600
So you can see here like, when we get to the thread interval graph.

114
00:05:36,900 --> 00:05:38,900
Here is the thing that draws it.

115
00:05:38,900 --> 00:05:44,500
It, you know, says here's how big it's going to be and then it sort of

116
00:05:45,000 --> 00:05:47,600
puts that it draws it in here.

117
00:05:47,900 --> 00:05:51,100
And what I want to do, right, is in here, I want to be able to do

118
00:05:51,100 --> 00:05:54,200
something, which can draw either of these two, right?

119
00:05:54,200 --> 00:05:56,800
I'd like to do something where I can say, yeah.

120
00:05:57,300 --> 00:05:59,800
I Want My Graph to have like a

121
00:06:00,000 --> 00:06:00,800
Type, and maybe it.

122
00:06:00,800 --> 00:06:05,600
Maybe I even do this where I say switch graph type and then in here,

123
00:06:05,600 --> 00:06:13,100
I've got, oh, there's the, you know, there's a thread profile or debug

124
00:06:14,400 --> 00:06:16,900
graph thread profile, or something.

125
00:06:20,400 --> 00:06:23,000
and then here, there's also a debug graph

126
00:06:24,700 --> 00:06:25,500
rain bars.

127
00:06:31,600 --> 00:06:33,900
Right, I could pretty easily do.

128
00:06:37,000 --> 00:06:41,400
Something like this unfortunately I don't know what Stitch is what

129
00:06:41,400 --> 00:06:45,600
time unfortunately I think that might be making things a little too

130
00:06:45,600 --> 00:06:46,400
redundant.

131
00:06:46,900 --> 00:06:51,200
So what I'm thinking might be a more interesting option, right?

132
00:06:52,200 --> 00:06:53,900
Would be to just do something like this.

133
00:06:57,800 --> 00:07:02,200
If we actually make it be, you know, up at this level of types, the

134
00:07:02,200 --> 00:07:03,200
specificity.

135
00:07:06,400 --> 00:07:09,500
There's nothing that says I can't have this thing change, its type

136
00:07:09,500 --> 00:07:10,900
dynamically, right?

137
00:07:11,100 --> 00:07:14,100
I can just set this type field and then it sets a new type field and

138
00:07:14,100 --> 00:07:20,100
that way I can share this code and and still I can have this type of

139
00:07:20,100 --> 00:07:21,600
be mutable by the user.

140
00:07:21,600 --> 00:07:24,700
If the user would like to view this particular profile in a different

141
00:07:24,700 --> 00:07:27,300
way, but I can also have the

142
00:07:27,600 --> 00:07:32,100
Soon who's making the debug call on the other end when it's initially

143
00:07:32,100 --> 00:07:36,700
created, create it this way, right?

144
00:07:40,000 --> 00:07:42,100
I don't know if that makes sense, but hopefully it does.

145
00:07:43,200 --> 00:07:47,100
And so the way that I could do that, I suppose there's a couple

146
00:07:47,100 --> 00:07:53,100
different ways I could do that but basically what I'm thinking is when

147
00:07:53,100 --> 00:07:57,300
we create the debug element we could just create what it's type is

148
00:07:57,300 --> 00:08:00,500
there and in fact you can kind of see what we've been doing here.

149
00:08:00,500 --> 00:08:04,700
This is kind of interesting which is that when we create a debug

150
00:08:04,700 --> 00:08:11,200
element, we just use whatever its actual like whatever the event says

151
00:08:11,200 --> 00:08:13,100
that this thing is, that's what

152
00:08:13,300 --> 00:08:17,300
Do and you can kind of see, here we go, like, oh, okay, get out a

153
00:08:17,300 --> 00:08:19,600
stored event, you know, of this thing.

154
00:08:19,900 --> 00:08:22,300
And if we found a stored event, then you can render it.

155
00:08:24,200 --> 00:08:29,500
But one of the sort of nastiness is of that and I think we can sort of

156
00:08:29,500 --> 00:08:31,300
see that if we come in here, right?

157
00:08:31,700 --> 00:08:35,700
Is that if the stored event doesn't exist you end up in this nasty

158
00:08:35,700 --> 00:08:38,600
scenario where you don't draw anything.

159
00:08:39,000 --> 00:08:42,799
And so what we would probably like to do is reverse a little bit, the

160
00:08:42,799 --> 00:08:46,700
way this is working and see if we can, maybe make it a little bit more

161
00:08:46,700 --> 00:08:47,900
based on the element.

162
00:08:48,000 --> 00:08:53,000
So for example in here, I could say something like let's grab the

163
00:08:53,000 --> 00:08:53,400
stored.

164
00:08:54,400 --> 00:08:56,500
Out of this entirely.

165
00:08:59,200 --> 00:08:59,800
In fact, the

166
00:09:00,000 --> 00:09:04,500
Then the stored event is really just not that relevant to pretty much

167
00:09:04,500 --> 00:09:06,200
any of this stuff, right?

168
00:09:16,200 --> 00:09:21,100
so, if I were to do this and then take a look at the only people who

169
00:09:21,100 --> 00:09:24,600
actually used the stored event,

170
00:09:27,100 --> 00:09:29,200
Which is actually nobody I think.

171
00:09:29,900 --> 00:09:31,700
Yeah, looks like nobody.

172
00:09:34,500 --> 00:09:36,600
In fact, I'm quite certain it's nobody at this point.

173
00:09:37,000 --> 00:09:38,700
So nobody actually uses that start events.

174
00:09:38,700 --> 00:09:43,400
So from the element right, we should be able to determine what it's

175
00:09:43,400 --> 00:09:47,100
type is if we just copy that filled up when we first see it,

176
00:09:48,700 --> 00:09:53,300
And then we could switch the type of an element anytime we wanted to,

177
00:09:53,600 --> 00:09:58,200
which would be nice for things where we want it to very right.

178
00:09:59,200 --> 00:10:03,100
So, what I'm going to do here is say that in the debug element, which

179
00:10:03,100 --> 00:10:05,000
is, where did that go?

180
00:10:05,000 --> 00:10:11,900
That's not in here, that's in here in the debug element itself which

181
00:10:11,900 --> 00:10:13,600
is who knows where?

182
00:10:14,600 --> 00:10:17,400
I don't know where did it go?

183
00:10:17,500 --> 00:10:18,800
Come on, there it is.

184
00:10:19,200 --> 00:10:20,300
In the debug element.

185
00:10:20,300 --> 00:10:25,000
I think what I'll do is put the type in here as well.

186
00:10:25,900 --> 00:10:27,800
I don't remember what this is even called.

187
00:10:29,900 --> 00:10:31,100
It's just called debug type.

188
00:10:36,000 --> 00:10:39,000
so, when we actually create an element,

189
00:10:42,900 --> 00:10:44,500
I never find that function.

190
00:10:46,500 --> 00:10:48,200
Have you noticed, how many times I searched that function?

191
00:10:48,200 --> 00:10:49,000
And I never find it.

192
00:10:49,000 --> 00:10:50,700
It's get element from event.

193
00:10:50,700 --> 00:10:53,800
That's what it's actually called yet, element from event.

194
00:10:54,500 --> 00:10:56,100
When we create one of these,

195
00:10:58,500 --> 00:10:59,300
Which is here.

196
00:11:00,200 --> 00:11:01,900
Whenever we do this push direct all.

197
00:11:01,900 --> 00:11:04,600
We would really have to do is say, well, whatever created it

198
00:11:04,600 --> 00:11:07,600
initially, we'll just make that be whatever type it is.

199
00:11:08,000 --> 00:11:11,500
And then I think we should be in pretty good shape, right?

200
00:11:12,700 --> 00:11:17,400
So, this guy here, who's was drunk bitmaps.

201
00:11:17,400 --> 00:11:20,600
We haven't actually made this work again.

202
00:11:21,300 --> 00:11:25,300
What we will want to do is get the bitmap from the right frame.

203
00:11:26,400 --> 00:11:27,900
And so I think what

204
00:11:28,000 --> 00:11:31,300
Probably want to do there is this?

205
00:11:33,400 --> 00:11:36,800
Use the viewing frame, ordinal would be my guess.

206
00:11:43,100 --> 00:11:44,800
Do you bug event to text?

207
00:11:44,800 --> 00:11:46,000
So here's the event.

208
00:11:46,000 --> 00:11:48,100
This is this uses the event.

209
00:11:49,500 --> 00:11:52,300
And then the bitmap uses the event.

210
00:11:52,300 --> 00:11:57,500
So those are the only people that do ya and I suppose what I could do

211
00:11:57,500 --> 00:11:59,800
to now that I think about it is I can just get

212
00:12:00,000 --> 00:12:01,500
Up here and leave it null.

213
00:12:02,000 --> 00:12:08,300
So I could say you know, in here that we only draw this stuff if

214
00:12:11,400 --> 00:12:12,600
If there's a valid bitmap.

215
00:12:13,800 --> 00:12:14,300
Right.

216
00:12:15,200 --> 00:12:20,400
Similarly, I could say maybe something like

217
00:12:22,200 --> 00:12:26,700
none of these things really have to do with the bitmap, so I could

218
00:12:26,700 --> 00:12:32,500
actually do it this way as well, if I wanted to

219
00:12:46,100 --> 00:12:49,300
Alright, so here I am getting my stored event.

220
00:12:52,000 --> 00:12:56,500
And what I want to do here is I want to use that most recent I mean it

221
00:12:56,500 --> 00:12:59,700
started viewing frame board until to get it.

222
00:12:59,900 --> 00:13:03,300
So the way I would do this as I just go okay the element frames

223
00:13:04,700 --> 00:13:09,700
I got the viewing frame worn at all and really this is like first

224
00:13:09,700 --> 00:13:10,500
order event.

225
00:13:11,200 --> 00:13:15,300
So this is like most recent or I guess this is last most recent sort

226
00:13:15,300 --> 00:13:17,300
of it because there's multiple right?

227
00:13:17,300 --> 00:13:20,000
There's multiple storage events for any given frame.

228
00:13:20,200 --> 00:13:24,400
So maybe I'll say like boldest stored events, something like that.

229
00:13:27,800 --> 00:13:34,000
And so now when I get that, I couldn't, I can choose to if I want to

230
00:13:35,700 --> 00:13:39,800
grab some other event or whatever, or I can choose to use that

231
00:13:39,800 --> 00:13:42,600
particular one and in the case of the bitmap, I think it's fine to use

232
00:13:42,600 --> 00:13:42,800
that one.

233
00:13:42,800 --> 00:13:46,300
Because if you output multiple bitmaps at the same place, I don't know

234
00:13:46,300 --> 00:13:50,000
that we want to show them all we could Loop over them if we wanted to.

235
00:13:50,300 --> 00:13:54,000
I'm not sure how much sense that really makes, but or we could, I

236
00:13:54,000 --> 00:13:56,600
guess stack the next to each other, but I don't know that we want to

237
00:13:56,600 --> 00:13:57,100
go through that.

238
00:13:57,200 --> 00:13:58,800
Trouble, maybe we do.

239
00:14:00,900 --> 00:14:02,500
Because they could even be different sizes.

240
00:14:02,700 --> 00:14:05,200
It's quite a bit of work to go through and figure out how we would

241
00:14:05,200 --> 00:14:06,000
want to lay that out.

242
00:14:06,000 --> 00:14:06,600
Exactly.

243
00:14:06,600 --> 00:14:09,100
And I don't even know exactly what it would mean, right?

244
00:14:09,100 --> 00:14:11,100
And if there are more, we do we need to scroll them.

245
00:14:11,100 --> 00:14:11,500
I don't know.

246
00:14:11,700 --> 00:14:12,900
It seems like, that's a lot of you.

247
00:14:12,900 --> 00:14:15,000
I work a lot of UI system.

248
00:14:15,000 --> 00:14:15,400
Build out.

249
00:14:15,400 --> 00:14:18,400
We'd have to do, which would all be useful if we did it in a sort of

250
00:14:18,400 --> 00:14:20,700
generic way that we could use for other things, but it's just probably

251
00:14:20,700 --> 00:14:22,400
not something we want to spend a lot of time building.

252
00:14:22,400 --> 00:14:26,200
We don't want some awesome UI system for the debug layer of this at

253
00:14:26,200 --> 00:14:26,800
the moment.

254
00:14:27,800 --> 00:14:30,600
So I think probably what I'll do is just say we've got this one.

255
00:14:30,700 --> 00:14:31,100
Here.

256
00:14:31,100 --> 00:14:34,400
And so we'll take the oldest stored event.

257
00:14:37,000 --> 00:14:37,500
and,

258
00:14:40,100 --> 00:14:41,800
We'll just set that here.

259
00:14:42,200 --> 00:14:48,100
So if we have an old historic event, I assume that

260
00:14:49,300 --> 00:14:52,500
I assume that this is what we want, meaning the event portion of it.

261
00:14:52,900 --> 00:14:59,800
Otherwise we don't want anything and this actually needs to be

262
00:15:00,000 --> 00:15:00,900
Like that.

263
00:15:01,100 --> 00:15:02,000
That's code.

264
00:15:02,000 --> 00:15:09,800
That's valid all the time and our bitmap scale is also.

265
00:15:13,000 --> 00:15:14,400
Valid all the time.

266
00:15:14,400 --> 00:15:15,500
What is this?

267
00:15:15,500 --> 00:15:17,900
This is just goes out here.

268
00:15:19,100 --> 00:15:19,600
There we go.

269
00:15:21,900 --> 00:15:24,900
So now this doesn't really have to switch on this type anymore.

270
00:15:24,900 --> 00:15:26,500
This can switch on the element type.

271
00:15:26,500 --> 00:15:29,200
So we still want to probably do the same stuff because we're only,

272
00:15:29,200 --> 00:15:33,200
we're just going to, you know, we're going to go out to a different

273
00:15:33,200 --> 00:15:33,500
one.

274
00:15:34,200 --> 00:15:37,000
Just only at this point, all the rest of the code can be the same.

275
00:15:37,600 --> 00:15:39,600
So let's go ahead and say that's the thread interval graph.

276
00:15:39,600 --> 00:15:43,700
Let's go ahead and say that this is debug type frame bar graph.

277
00:15:44,300 --> 00:15:49,300
And now we have sort of the code flow to switch between them.

278
00:15:49,300 --> 00:15:51,000
So, all we need to do now is focus on making

279
00:15:51,700 --> 00:15:53,500
That actual button.

280
00:15:55,700 --> 00:15:57,100
This is the element.

281
00:15:57,100 --> 00:15:59,400
Ah I've got too many things called element.

282
00:15:59,500 --> 00:16:00,400
It's a bad name.

283
00:16:00,400 --> 00:16:02,000
But you know what else are you going to do?

284
00:16:03,000 --> 00:16:05,000
So you know, what would we call this?

285
00:16:05,500 --> 00:16:10,700
If we weren't going to call this, maybe maybe what I could do is call

286
00:16:10,700 --> 00:16:13,400
the layout elements, something else.

287
00:16:13,800 --> 00:16:16,100
Let's let's see what if I did this.

288
00:16:21,200 --> 00:16:22,900
not the greatest name in the world, but

289
00:16:42,900 --> 00:16:45,600
And look at already, we already have this problem here.

290
00:16:48,500 --> 00:16:49,000
Right.

291
00:16:54,300 --> 00:16:56,000
That's why we had to change that one's name.

292
00:16:56,000 --> 00:16:57,200
Let's see if that does any better.

293
00:17:02,500 --> 00:17:02,900
Oops.

294
00:17:10,500 --> 00:17:11,000
All right.

295
00:17:16,000 --> 00:17:18,700
This is not layout, that's element.

296
00:17:21,500 --> 00:17:24,700
So that looks all fine.

297
00:17:24,700 --> 00:17:29,700
And this here can do the same thing as we were doing before.

298
00:17:29,700 --> 00:17:33,000
Whereas if we got one of these guys, we can lay it out.

299
00:17:33,400 --> 00:17:34,500
Oops, that's not good.

300
00:17:38,700 --> 00:17:39,300
There we go.

301
00:17:43,300 --> 00:17:43,700
Okay.

302
00:17:46,200 --> 00:17:47,800
and,

303
00:17:49,300 --> 00:17:52,100
I guess this is a u8 and debug type.

304
00:17:52,100 --> 00:17:54,900
So we work saving space by putting that in the you ate.

305
00:17:54,900 --> 00:17:56,700
So we got a cast it back out, we knew it.

306
00:17:57,000 --> 00:17:59,800
So now my hope is that nothing changes here.

307
00:18:00,000 --> 00:18:02,900
Things should be exactly the same and it is, which is good.

308
00:18:03,300 --> 00:18:04,400
All that's good.

309
00:18:07,200 --> 00:18:08,400
I don't actually remember.

310
00:18:16,100 --> 00:18:18,400
Where was our, there's our entity.

311
00:18:23,700 --> 00:18:25,700
This is kind of funny, like, right?

312
00:18:25,700 --> 00:18:29,500
We only display those on frames where there actually is one of these.

313
00:18:30,800 --> 00:18:33,000
And I guess again, that's something we could.

314
00:18:33,600 --> 00:18:36,600
We could again as we're making this sort of improvement here, we could

315
00:18:36,600 --> 00:18:37,500
fix that as well, right?

316
00:18:37,500 --> 00:18:39,900
Because we're only displaying them when there's actually data there,

317
00:18:39,900 --> 00:18:44,000
which leads to a like, sort of a flashing that happens, but we could

318
00:18:44,000 --> 00:18:49,600
actually always sort of display it by just creating making sure that

319
00:18:49,600 --> 00:18:52,700
we have an event that always works, right?

320
00:18:52,800 --> 00:18:57,100
So we could say, like, debug event null event or something, right?

321
00:19:00,000 --> 00:19:00,500
and,

322
00:19:02,800 --> 00:19:06,100
Well, in to some degree, you know, even this probably we could upgrade

323
00:19:06,100 --> 00:19:09,800
to considerably because the are events now have multiple frames are

324
00:19:09,800 --> 00:19:12,100
German, then we could draw a little graphs on them and all kinds of

325
00:19:12,100 --> 00:19:13,600
other weird stuff too, right?

326
00:19:14,500 --> 00:19:15,500
So that's kind of a separate issue.

327
00:19:15,500 --> 00:19:19,100
But anyway if we have one of these here, where we just have some kind

328
00:19:19,100 --> 00:19:20,100
of a

329
00:19:23,800 --> 00:19:26,300
You know, just a null event thing that we're printing or whatever.

330
00:19:27,000 --> 00:19:34,300
What we could do is we could stuff the name of the event, right?

331
00:19:34,300 --> 00:19:38,400
We could stuff the grid of the event, which is mostly what we're

332
00:19:38,400 --> 00:19:42,500
printing out with whatever the elements grid was.

333
00:19:45,700 --> 00:19:48,800
We could stuff the type with whatever the elements type is.

334
00:19:51,900 --> 00:19:53,400
And we could leave it at that.

335
00:19:54,400 --> 00:19:55,400
So,

336
00:19:57,400 --> 00:20:01,600
That would mean that we can always pass an event.

337
00:20:01,800 --> 00:20:05,100
Even if we didn't have one on that frame, it just wouldn't be a very

338
00:20:05,100 --> 00:20:06,400
good one, right?

339
00:20:06,500 --> 00:20:10,300
It just would be nothing there, but that's probably better.

340
00:20:11,200 --> 00:20:16,500
And this can also be basically made to do this now, since there is no

341
00:20:16,500 --> 00:20:17,000
case,

342
00:20:18,200 --> 00:20:20,100
See where that's a problem.

343
00:20:26,600 --> 00:20:27,800
So, let's run this.

344
00:20:31,600 --> 00:20:32,700
And see.

345
00:20:37,200 --> 00:20:40,700
And so now that's much nicer right now, it just prints out zeros, if

346
00:20:40,700 --> 00:20:41,900
it doesn't know what's going on.

347
00:20:41,900 --> 00:20:46,100
Instead of flashing instead of like changing the layout here, which I

348
00:20:46,100 --> 00:20:49,900
think is, you know, strictly better to a certain extent.

349
00:20:55,100 --> 00:20:57,500
Because here's a frame for example, where there's really no data at

350
00:20:57,500 --> 00:20:58,100
all.

351
00:21:00,200 --> 00:21:04,000
I'm not sure why that's still able to print something out in this case

352
00:21:04,000 --> 00:21:05,200
because this is the collation frame.

353
00:21:05,200 --> 00:21:07,600
I guess we just happened to always have it.

354
00:21:07,600 --> 00:21:08,300
That's interesting.

355
00:21:10,700 --> 00:21:11,400
But anyway,

356
00:21:14,400 --> 00:21:15,200
I think that's better.

357
00:21:16,300 --> 00:21:22,400
So now I want to see if I can add some of these some buttons in here.

358
00:21:23,100 --> 00:21:27,200
I want to add some buttons that will do useful operations for us with

359
00:21:27,200 --> 00:21:28,200
our profiler.

360
00:21:28,900 --> 00:21:33,300
And so what I want to do is I want to do something, I guess that sets

361
00:21:33,300 --> 00:21:35,100
the element type to a new type.

362
00:21:36,400 --> 00:21:39,500
So I'm going to go ahead and create one of those.

363
00:21:45,800 --> 00:21:51,700
I don't really know probably like debug interaction set profile, graph

364
00:21:51,900 --> 00:21:54,600
or set element type, I guess is what it would be.

365
00:21:55,800 --> 00:21:58,600
And so, what I'm going to do is I'm going to make an interaction for

366
00:21:58,600 --> 00:21:59,400
these buttons.

367
00:22:00,100 --> 00:22:02,500
And what I'd like to do is just be able to kind of Stack these buttons

368
00:22:02,500 --> 00:22:05,300
up in an easy fashion.

369
00:22:05,900 --> 00:22:09,100
So here is the stuff that does begin layout rectangle for this other

370
00:22:09,100 --> 00:22:09,500
stuff.

371
00:22:09,500 --> 00:22:12,100
I want to kind of do something else where I maybe do.

372
00:22:14,600 --> 00:22:19,100
Like begin button row or something like this and button row.

373
00:22:26,800 --> 00:22:32,400
I don't know if this should be, I'm not sure what you know what

374
00:22:32,400 --> 00:22:34,500
exactly I want this to be per se.

375
00:22:37,600 --> 00:22:41,900
But I'm just kind of sketching out what I probably want to type here.

376
00:22:42,300 --> 00:22:44,600
I want to be able to say, I want to row of buttons that are going to

377
00:22:44,600 --> 00:22:48,700
do some stuff and then I want to just be able to say like you know

378
00:22:49,000 --> 00:22:53,900
layout button and I want to be able to like just put in here whatever

379
00:22:53,900 --> 00:22:54,600
I want.

380
00:22:54,700 --> 00:23:01,700
So you know, I want to be able to say like this particular thing is

381
00:23:02,000 --> 00:23:06,400
thread interval graph or like or you know what this is.

382
00:23:06,600 --> 00:23:10,700
Bubbly like an enum button or something I guess.

383
00:23:16,200 --> 00:23:19,700
Yeah, like a state like a like a Boolean button.

384
00:23:19,700 --> 00:23:21,900
I don't know what you want to call it but this is a button that can

385
00:23:21,900 --> 00:23:23,300
basically be turned on, right?

386
00:23:23,300 --> 00:23:25,900
It's like is this a threaded travel craft or not?

387
00:23:26,200 --> 00:23:29,800
And so I could I'll call it threads for now because I don't know what

388
00:23:29,800 --> 00:23:30,800
else to call it.

389
00:23:31,600 --> 00:23:36,700
And then whether or not it's on is just if this element type equals

390
00:23:36,700 --> 00:23:38,200
the thread interval graph type.

391
00:23:38,500 --> 00:23:41,100
So basically, I'm going to pass it, like I want a button, it's called

392
00:23:41,100 --> 00:23:41,800
threads.

393
00:23:41,900 --> 00:23:45,800
I want you to say if you know, the element type is equal to

394
00:23:46,000 --> 00:23:49,300
Traditional graph that says, whether or not this is like highlight,

395
00:23:49,300 --> 00:23:51,900
like it's on right now it was so it's like true or false for the

396
00:23:51,900 --> 00:23:52,600
buttons on.

397
00:23:52,900 --> 00:23:56,400
And then I want to be able to do an interaction here where I create,

398
00:23:56,400 --> 00:23:59,800
you know, a debug in a

399
00:24:00,700 --> 00:24:07,400
Set element type interaction and that's going to be for our debug ID.

400
00:24:08,100 --> 00:24:12,600
And we're going to set the element type to debug type thread interval

401
00:24:12,600 --> 00:24:13,100
graph.

402
00:24:14,200 --> 00:24:15,900
So that's just saying, I want a button.

403
00:24:15,900 --> 00:24:19,800
I want to be labeled threads, I wanted to, you know, this to be the

404
00:24:19,800 --> 00:24:22,700
criteria as to whether that's highlighted and then this is the action.

405
00:24:22,700 --> 00:24:27,200
I want you to take in the case where it gets clicked and then I want

406
00:24:27,200 --> 00:24:28,500
to be able to do this really easily.

407
00:24:28,500 --> 00:24:32,200
So I want to be able to make another one to, which just says like,

408
00:24:32,200 --> 00:24:36,700
okay, this is the frames version of this.

409
00:24:37,100 --> 00:24:40,800
This will show the frame bar graph and the same thing.

410
00:24:42,400 --> 00:24:45,800
So that seems like a pretty easy way to do buttons to me, and I like

411
00:24:45,800 --> 00:24:47,300
that, right?

412
00:24:56,700 --> 00:24:57,300
Pretty simple.

413
00:24:58,900 --> 00:25:01,700
We don't have any other settings at the moment but I do have some

414
00:25:01,700 --> 00:25:04,400
other things that I said I wanted, right?

415
00:25:08,900 --> 00:25:10,400
I'd like to be able to go up.

416
00:25:12,100 --> 00:25:12,900
In the hierarchy.

417
00:25:13,900 --> 00:25:16,600
And so I want something like

418
00:25:19,100 --> 00:25:25,500
Action button which is up and that action button would presumably do

419
00:25:25,500 --> 00:25:29,700
something like it would set the profile graph root.

420
00:25:29,700 --> 00:25:36,300
And it would set the profile graph route to like a being above where

421
00:25:36,300 --> 00:25:37,400
we were now.

422
00:25:37,400 --> 00:25:41,200
This one's a little tricky and the reason it's a little tricky is we

423
00:25:41,200 --> 00:25:43,700
don't record that piece of information.

424
00:25:43,700 --> 00:25:48,200
I don't think, I don't really remember to be honest with you, but

425
00:25:48,300 --> 00:25:49,500
I don't think we do.

426
00:25:49,900 --> 00:25:55,600
So for example in our debug elements here, right, there's no such

427
00:25:55,600 --> 00:25:57,100
thing as like a parent.

428
00:25:57,100 --> 00:26:04,900
We can't like walk to to our parent in any real case and the other

429
00:26:04,900 --> 00:26:06,500
kind of nasty thing about that.

430
00:26:08,600 --> 00:26:09,900
Is in the profile.

431
00:26:10,000 --> 00:26:16,300
We don't really even necessarily know what that parent would be per se

432
00:26:16,700 --> 00:26:20,800
because we don't know how we got here there.

433
00:26:20,800 --> 00:26:24,400
There could be many ways to get to the same place that we are viewing

434
00:26:24,400 --> 00:26:25,700
in our profile, right?

435
00:26:26,500 --> 00:26:29,400
And so that's kind of a little confusing as well.

436
00:26:30,400 --> 00:26:31,000
Now.

437
00:26:33,600 --> 00:26:35,900
I mean, I suppose one thing we could do,

438
00:26:39,700 --> 00:26:41,300
And I don't know how I feel about this.

439
00:26:45,800 --> 00:26:47,200
I'm thinking to myself,

440
00:26:48,300 --> 00:26:49,300
How I feel about it?

441
00:26:50,100 --> 00:26:54,800
One thing we could do is just do our rendering and allow ourselves to

442
00:26:54,800 --> 00:26:59,800
zoom and then instead of like clicking on individual things, we

443
00:27:00,100 --> 00:27:00,600
You know.

444
00:27:02,500 --> 00:27:08,700
We would just zoom in on them and then there's no concept of it's just

445
00:27:08,700 --> 00:27:12,800
it's just a location in the profile space which might be smarter.

446
00:27:12,800 --> 00:27:13,300
I don't know.

447
00:27:14,800 --> 00:27:15,500
But

448
00:27:19,400 --> 00:27:22,300
You know, here's so let me just do something that I know we can do

449
00:27:22,300 --> 00:27:24,700
right now because I just want some way to get back.

450
00:27:25,500 --> 00:27:29,800
So let's just put a root button in and so that's obvious what that's

451
00:27:29,800 --> 00:27:31,100
going to do, right?

452
00:27:31,100 --> 00:27:34,400
That would create an interaction that allows us to get directly back

453
00:27:34,400 --> 00:27:35,500
to the root layer.

454
00:27:35,800 --> 00:27:36,200
Oops.

455
00:27:38,600 --> 00:27:41,400
I think I just opened up the to-do list, accidentally.

456
00:27:43,600 --> 00:27:46,500
I'm not really sure how I did it, but it did.

457
00:27:47,400 --> 00:27:49,500
So I'm going to go take a look at that.

458
00:27:51,700 --> 00:27:53,400
In the, in the draw profile.

459
00:27:54,500 --> 00:27:55,200
Stuff.

460
00:27:56,600 --> 00:27:58,000
When we do the draw a profile, right?

461
00:27:58,000 --> 00:28:01,000
We were creating one of these interactions and we sort of created it

462
00:28:01,200 --> 00:28:03,900
set profile graph root like like so.

463
00:28:06,100 --> 00:28:09,400
And so I'm going to go back down here and make that happen.

464
00:28:09,900 --> 00:28:12,800
So I suppose what I could do is just do it like this.

465
00:28:15,900 --> 00:28:19,800
Say we've got, you know, Zoom root.

466
00:28:26,700 --> 00:28:29,200
And, and now we're going to say is, well, the element we want to set

467
00:28:29,200 --> 00:28:31,000
it to is none, right?

468
00:28:31,000 --> 00:28:32,100
We want to set it to zero.

469
00:28:33,300 --> 00:28:37,000
And so what I'm going to do there is just say, well, okay, that's the

470
00:28:37,000 --> 00:28:38,100
interaction for this guy.

471
00:28:41,100 --> 00:28:46,300
And then for these guys where we are sort of creating them in line and

472
00:28:46,300 --> 00:28:48,500
I guess we pretty much want to.

473
00:28:48,600 --> 00:28:53,100
Well, I guess this is what we want to be able to do is make this

474
00:28:53,900 --> 00:28:55,600
essentially a function, right?

475
00:28:55,800 --> 00:28:59,200
So we want there to be a debug interaction function that we can just

476
00:28:59,200 --> 00:29:02,600
call that right in line takes one of these.

477
00:29:03,000 --> 00:29:05,300
Makes one of these and returns it, right.

478
00:29:05,400 --> 00:29:06,500
So it makes

479
00:29:13,200 --> 00:29:16,500
It makes one of these with whatever the debug idea is that we passed

480
00:29:18,000 --> 00:29:20,200
and then it takes whatever the debug type is.

481
00:29:22,700 --> 00:29:24,300
And oops.

482
00:29:29,300 --> 00:29:29,800
Here we go.

483
00:29:33,700 --> 00:29:39,300
And just sort of sets that as a value that can be retrieved later.

484
00:29:40,600 --> 00:29:43,800
So I'm just going to go ahead and pull that out and make that be a

485
00:29:43,800 --> 00:29:45,500
little function that people can use here.

486
00:29:45,600 --> 00:29:46,200
Like so.

487
00:29:48,900 --> 00:29:49,900
And then, oops.

488
00:29:49,900 --> 00:29:51,200
Well, I got to rename this first.

489
00:29:56,600 --> 00:29:57,300
and then,

490
00:30:00,500 --> 00:30:01,700
It's got to finish up.

491
00:30:06,700 --> 00:30:11,600
Yeah, the actual UI code so that would specify all the information we

492
00:30:11,600 --> 00:30:11,900
need.

493
00:30:11,900 --> 00:30:14,800
So, all we need to do now is actually make a way that these button

494
00:30:14,800 --> 00:30:18,500
interactions will actually, you know, flow through the system.

495
00:30:19,400 --> 00:30:22,600
We've got to make, you know, a thing that will lay them out and and so

496
00:30:22,600 --> 00:30:23,000
on.

497
00:30:23,800 --> 00:30:28,300
So here is like our begin element rectangle and the sort of

498
00:30:28,300 --> 00:30:31,000
interaction stuff that we do for it and the end element and all that

499
00:30:31,000 --> 00:30:31,400
stuff.

500
00:30:31,800 --> 00:30:35,900
So, what I want to do here is I want to

501
00:30:36,500 --> 00:30:37,600
Sort of influence.

502
00:30:37,600 --> 00:30:42,500
I want to make a new way in which these things might happen and it

503
00:30:42,500 --> 00:30:46,000
occurs to me that probably I need to pass Row in as I'm going here.

504
00:30:46,600 --> 00:30:49,300
Although it technically, I guess I wouldn't necessarily have to do

505
00:30:49,300 --> 00:30:54,000
that because the if I just pass, lay out all the time, that's probably

506
00:30:54,000 --> 00:30:54,200
all.

507
00:30:54,200 --> 00:30:57,100
I actually really need now that I think about it.

508
00:30:59,400 --> 00:31:08,000
Well, but, you know, so if I come through here and I imagine that I'm

509
00:31:08,000 --> 00:31:12,700
going to be passing this, and I imagine that I've got, you know, some

510
00:31:12,700 --> 00:31:15,500
kind of a layout row thing happening here.

511
00:31:15,800 --> 00:31:17,400
These aren't really going to pass anything.

512
00:31:18,800 --> 00:31:19,300
Excuse me.

513
00:31:23,000 --> 00:31:25,500
And since they're not customrendered, I can do all the rendering

514
00:31:25,500 --> 00:31:27,800
inside these routines myself as well.

515
00:31:27,800 --> 00:31:30,800
So that basically anyone who wants to use the button system doesn't

516
00:31:30,800 --> 00:31:33,800
have to use any kind of rendering themselves, they can just make, you

517
00:31:33,800 --> 00:31:36,200
know, their own buttons work.

518
00:31:36,600 --> 00:31:39,100
They can just say I want a button and know that they get it.

519
00:31:39,900 --> 00:31:41,500
So let me just finish checking this out here.

520
00:31:41,500 --> 00:31:44,600
So we have a billion button and this is the state or like, you know,

521
00:31:44,600 --> 00:31:50,000
highlighted this is the

522
00:31:50,200 --> 00:31:51,100
Name of the button.

523
00:31:51,500 --> 00:31:52,500
The name that's on the button.

524
00:31:53,800 --> 00:31:54,600
Same here.

525
00:31:55,700 --> 00:31:56,900
This is the interaction.

526
00:31:59,500 --> 00:32:03,100
The Boolean buttons also have an interaction when you click them.

527
00:32:07,100 --> 00:32:08,600
And I think that's really it.

528
00:32:12,100 --> 00:32:13,400
So now what I need to do

529
00:32:14,900 --> 00:32:17,400
and you can kind of see the methodology that I'm going through here,

530
00:32:17,400 --> 00:32:17,900
right?

531
00:32:18,900 --> 00:32:21,700
I did what I always say that you should do if you know what the usage

532
00:32:21,700 --> 00:32:22,800
code is going to look like.

533
00:32:22,800 --> 00:32:24,300
You just write it first and that's exactly what I did.

534
00:32:24,300 --> 00:32:28,000
I was like what do I actually want this to look like and I wrote it

535
00:32:28,000 --> 00:32:31,400
out Snuffleupagus oriented programming, as I think I called it before,

536
00:32:31,500 --> 00:32:32,600
you just have an imaginary.

537
00:32:32,600 --> 00:32:36,100
You imagine, you have some system that's going to do what you want,

538
00:32:37,300 --> 00:32:39,100
you code to that system.

539
00:32:39,100 --> 00:32:41,100
And then you see what the API looks like.

540
00:32:41,100 --> 00:32:42,600
If you just imagined, you had it.

541
00:32:43,100 --> 00:32:44,000
That's what I did.

542
00:32:44,100 --> 00:32:44,400
And now,

543
00:32:44,400 --> 00:32:47,400
Now I'm going to go actually type in the code for that system and

544
00:32:47,400 --> 00:32:48,500
reverse engineer.

545
00:32:48,500 --> 00:32:53,300
What actual other information and structs I need to make that happen.

546
00:32:54,900 --> 00:32:58,000
and again, this sort of gets at this thing, I was talking about

547
00:32:58,000 --> 00:32:59,800
yesterday when I was talking about how, I don't think I've tried,

548
00:33:00,000 --> 00:33:01,100
Programming is ever useful.

549
00:33:01,500 --> 00:33:03,000
It's because I never do it right?

550
00:33:03,000 --> 00:33:04,100
I never actually do that.

551
00:33:04,200 --> 00:33:09,000
Objects will automatically appear when you follow good procedural

552
00:33:09,000 --> 00:33:12,400
programming and you know, other search techniques, the objects just

553
00:33:12,400 --> 00:33:13,200
make themselves.

554
00:33:13,200 --> 00:33:15,200
You don't have to think about them, they just occur.

555
00:33:17,500 --> 00:33:23,400
There are a byproduct of a correctly functioning system that should

556
00:33:23,400 --> 00:33:26,100
never be the starting point and never be a focus.

557
00:33:26,100 --> 00:33:28,300
It should just be incidental right?

558
00:33:29,000 --> 00:33:31,200
And that's exactly what I'm going to have happen here.

559
00:33:31,600 --> 00:33:33,900
I'm going to take a look at what I need to actually.

560
00:33:33,900 --> 00:33:39,600
Fulfill the requirements that the UI code wanted to have happen here

561
00:33:40,200 --> 00:33:44,500
and that will tell me what I need to actually store and that's all

562
00:33:44,500 --> 00:33:45,200
there is to it.

563
00:33:45,900 --> 00:33:46,500
So anyway,

564
00:33:47,900 --> 00:33:48,400
Here we go.

565
00:33:49,100 --> 00:33:53,900
I know that I can't draw a row of buttons, perhaps, until after I know

566
00:33:53,900 --> 00:33:57,600
how many buttons there are, maybe in this case, I guess that's not

567
00:33:57,600 --> 00:33:58,300
really true.

568
00:33:58,400 --> 00:34:02,300
You know, normally if I wanted to fill a specific with that would be

569
00:34:02,300 --> 00:34:05,100
true because then I have to divide by the number of buttons that there

570
00:34:05,100 --> 00:34:05,500
are.

571
00:34:06,000 --> 00:34:09,000
But in this case I don't know that I really need to do that because

572
00:34:09,100 --> 00:34:13,500
I'm just kind of going to stack buttons up along the way.

573
00:34:14,300 --> 00:34:15,900
I may not really need to do that.

574
00:34:16,000 --> 00:34:16,699
Now it's

575
00:34:17,600 --> 00:34:20,500
Possible that I still should but I'm just thinking about it, I guess I

576
00:34:20,500 --> 00:34:21,300
don't really have to.

577
00:34:21,800 --> 00:34:25,500
So when I come in here and do an action button, really, I guess all I

578
00:34:25,500 --> 00:34:29,400
need to do is lean on the existing element system to make that element

579
00:34:29,400 --> 00:34:30,699
occur, right?

580
00:34:31,900 --> 00:34:35,199
So what I can do is is do exactly this stuff.

581
00:34:35,199 --> 00:34:40,500
I can say I want an action button, I'm going to begin an element

582
00:34:40,500 --> 00:34:41,600
rectangle for it.

583
00:34:47,900 --> 00:34:52,699
I need this obviously to have the layout system in some way now

584
00:34:52,699 --> 00:34:54,400
whether it's a parameter or whether it gets passed down.

585
00:34:54,400 --> 00:34:58,200
And some other thing is part of the row situation, I don't know at the

586
00:34:58,200 --> 00:35:00,100
moment, but, you know, we'll see.

587
00:35:01,700 --> 00:35:06,000
So I'm going to go ahead and say that I get the layout there.

588
00:35:06,200 --> 00:35:07,600
I need the dimensions.

589
00:35:07,600 --> 00:35:12,300
The dimension can come from me, figuring out how big this text

590
00:35:12,300 --> 00:35:13,500
rectangle is.

591
00:35:13,700 --> 00:35:15,100
So I have a basic

592
00:35:15,700 --> 00:35:19,200
Text element thing here and you can kind of see that.

593
00:35:19,200 --> 00:35:23,800
That really all I need to do is is the code for this thing.

594
00:35:24,200 --> 00:35:27,400
Now, I don't know that I really want to use this explicitly though

595
00:35:27,900 --> 00:35:31,700
because I believe that I want to do my own kind of custom drawing and

596
00:35:31,700 --> 00:35:35,200
stuff here, but for the most part, this code will be fairly similar.

597
00:35:35,300 --> 00:35:36,500
So I'm going to start with that.

598
00:35:36,500 --> 00:35:39,700
But then I'm going to make it a bit different and it's possible that

599
00:35:39,700 --> 00:35:44,600
maybe you won't, you know what I could do to, I could just expand

600
00:35:44,600 --> 00:35:45,000
this.

601
00:35:45,200 --> 00:35:46,500
This function, right?

602
00:35:46,600 --> 00:35:49,800
What I could do is say well there's basic text element and that's

603
00:35:49,800 --> 00:35:52,800
going to actually maybe come up here, become more of a First-Class

604
00:35:52,800 --> 00:35:56,600
citizen as in the way that it works, right?

605
00:35:57,000 --> 00:35:59,600
So let's put that up here, here is basic text

606
00:36:00,300 --> 00:36:03,600
That does all the stuff that we need except putting maybe a box around

607
00:36:03,600 --> 00:36:07,700
the thing, but even that we don't necessarily need at the moment so

608
00:36:07,700 --> 00:36:11,200
we'll just hold off on this for one second and say, well okay, we

609
00:36:11,200 --> 00:36:13,200
could just call basic text element.

610
00:36:13,200 --> 00:36:16,300
We know what the interaction is, right?

611
00:36:17,300 --> 00:36:20,100
And we know that we've got to me.

612
00:36:22,100 --> 00:36:24,700
The layout and the text that it needs.

613
00:36:24,800 --> 00:36:28,200
So that's a pretty good start for making an action button, right?

614
00:36:28,500 --> 00:36:33,000
But the problem that we have is In N element, so we want a row of

615
00:36:33,000 --> 00:36:36,300
buttons, but in N element every time an element is finished, we're

616
00:36:36,300 --> 00:36:37,800
going to advance to the next line.

617
00:36:37,800 --> 00:36:40,300
You can see that happening here, right?

618
00:36:41,200 --> 00:36:46,200
So what happens is as this thing sort of draws itself, we have this

619
00:36:46,200 --> 00:36:48,200
facing why it situation happening.

620
00:36:48,800 --> 00:36:51,100
And so what I think we want to do

621
00:36:51,400 --> 00:36:57,400
Instead here is is introduced into RL our layout system.

622
00:36:57,800 --> 00:37:01,200
The concept that we don't always want an automatic sort of carriage

623
00:37:01,200 --> 00:37:02,800
return as we're stacking up Rose.

624
00:37:03,700 --> 00:37:06,600
And so what we could do is say all right, let's get rid of

625
00:37:08,400 --> 00:37:09,600
Let's get rid of that.

626
00:37:09,600 --> 00:37:13,800
So when we do begin, we could even say begin row and end row since it

627
00:37:13,800 --> 00:37:15,100
doesn't have anything to add buttons.

628
00:37:15,100 --> 00:37:18,100
Now, we could do begin row and and row.

629
00:37:18,100 --> 00:37:24,200
And what that could say is all right, the layout system is now going

630
00:37:24,200 --> 00:37:28,000
to go into, you know, a rapping mode or something like this.

631
00:37:28,000 --> 00:37:35,700
Like, you know, Auto Line Feed or no Line Feed equals true, right?

632
00:37:36,000 --> 00:37:36,900
And then

633
00:37:38,700 --> 00:37:44,100
You know, in here no Line Feed or maybe if we're being sort of amusing

634
00:37:44,100 --> 00:37:49,600
ourselves and we want to support nesting these together, we could do

635
00:37:49,600 --> 00:37:50,100
that.

636
00:37:55,900 --> 00:37:58,900
So we do begin row and we do and row.

637
00:37:58,900 --> 00:38:01,200
We're just going to say that there's going to be no line feeds

638
00:38:01,200 --> 00:38:02,000
happening now.

639
00:38:03,600 --> 00:38:06,700
And then we would do is say, all right, we make an action button.

640
00:38:06,700 --> 00:38:09,500
We just make a basic text element and maybe we make a Boolean button

641
00:38:09,500 --> 00:38:09,800
for now.

642
00:38:09,800 --> 00:38:13,500
We do exactly the same thing and then we don't even really need the

643
00:38:13,500 --> 00:38:17,100
concept that Rose even return anything, right?

644
00:38:17,100 --> 00:38:19,000
We don't even need, that's not even necessary.

645
00:38:19,400 --> 00:38:23,000
So we just do this and and we're basically done, right?

646
00:38:23,000 --> 00:38:23,700
There's nothing.

647
00:38:25,600 --> 00:38:26,700
Nothing weird going on there.

648
00:38:27,900 --> 00:38:34,700
So we could also now have a highlight for the time being that says,

649
00:38:34,700 --> 00:38:39,600
well, let's draw these things into different ways depending on the

650
00:38:39,600 --> 00:38:42,400
circumstances, so we could do that as well.

651
00:38:43,900 --> 00:38:46,800
And the other thing that I can do now is, I can go Implement that no

652
00:38:46,800 --> 00:38:51,600
Line Feed concept which I believe we have to start in here by adding

653
00:38:52,000 --> 00:38:53,300
to our layout system.

654
00:38:54,000 --> 00:38:55,000
Wherever that even is I

655
00:38:55,300 --> 00:38:59,500
Manure, that is struct layout.

656
00:39:07,400 --> 00:39:09,500
Severe is never really made it over here.

657
00:39:09,500 --> 00:39:09,800
Did that?

658
00:39:09,800 --> 00:39:11,100
Let's get those out there.

659
00:39:11,300 --> 00:39:12,800
Let's get those into the H file.

660
00:39:14,800 --> 00:39:22,300
Yeah, so what I want to do now is in these layouts, I want to have a,

661
00:39:22,400 --> 00:39:27,800
you know, an incrementer, which is essentially, just the no Line Feed

662
00:39:27,800 --> 00:39:28,400
counter.

663
00:39:29,300 --> 00:39:32,800
And so then I guess got to come back here and Port this code, to the

664
00:39:32,800 --> 00:39:37,100
new thing that I've decided it needs to be, which is, it doesn't need

665
00:39:37,100 --> 00:39:40,800
to do that, that sort of return value stuff there.

666
00:39:40,800 --> 00:39:42,400
But it needs to pass the layout everywhere.

667
00:39:43,600 --> 00:39:46,200
We also decided that it's really just begin ruin and row.

668
00:39:47,700 --> 00:39:48,400
And there we go.

669
00:39:50,200 --> 00:39:53,700
So now let's just finish up by implementing that no Line Feed thing.

670
00:39:54,000 --> 00:39:58,900
I'm going to first see what happens when I run it to so you can kind

671
00:39:58,900 --> 00:40:00,300
of see what I'm talking about here.

672
00:40:01,800 --> 00:40:06,800
So here's our profile and you can kind of see that we've got these.

673
00:40:06,800 --> 00:40:08,900
These values getting printed out here.

674
00:40:13,200 --> 00:40:19,700
Ah well, so going back to the root is a little trickier than we

675
00:40:19,700 --> 00:40:20,200
thought.

676
00:40:27,000 --> 00:40:32,800
This might want to try to say no in which oh well wait can we set it

677
00:40:32,800 --> 00:40:33,900
to the route?

678
00:40:35,100 --> 00:40:37,800
We can send it to the roof though but I suppose I'll just allow it

679
00:40:37,800 --> 00:40:38,300
anyway.

680
00:40:40,900 --> 00:40:45,400
So setting the grid 20 allows us to go back to the root.

681
00:40:47,300 --> 00:40:49,600
Gotta go fix that opengl texture submission stuff.

682
00:40:51,300 --> 00:40:51,800
All right.

683
00:40:55,600 --> 00:40:58,100
So now we can go back to the route to our hearts content.

684
00:40:58,500 --> 00:41:02,200
But we can't click on these two, for some reason, and I'm not sure.

685
00:41:02,200 --> 00:41:07,800
Whoa, I am sure why we've never implemented that case, we might as

686
00:41:07,800 --> 00:41:09,900
well Implement that case, while we're down here, right?

687
00:41:10,300 --> 00:41:13,300
So, an interactive for in, in debug interaction,

688
00:41:16,100 --> 00:41:16,800
Set.

689
00:41:18,100 --> 00:41:23,300
element type then I'll we should have to do is just say that whatever

690
00:41:23,300 --> 00:41:28,800
element we are ostensibly interacting with in this case,

691
00:41:30,200 --> 00:41:30,900
although,

692
00:41:37,600 --> 00:41:39,400
It's actually this.

693
00:41:44,700 --> 00:41:45,500
Am I right?

694
00:41:56,100 --> 00:41:57,200
Here's our debug interaction.

695
00:42:00,800 --> 00:42:01,100
Yeah.

696
00:42:01,100 --> 00:42:05,200
So it's a little janky because we can't store.

697
00:42:06,100 --> 00:42:08,500
We wouldn't be able to store the way that we've done this.

698
00:42:08,500 --> 00:42:11,300
You can't store like multiple parameters to an interaction right now

699
00:42:12,000 --> 00:42:14,500
which is kind of lame because we want to be able to store both the

700
00:42:14,500 --> 00:42:20,400
element and the the type that we want to set that element to if that

701
00:42:20,400 --> 00:42:21,100
makes sense.

702
00:42:22,800 --> 00:42:27,100
And so really, we want this to be a little bit more expansive, right?

703
00:42:27,100 --> 00:42:28,800
We don't really want this to be.

704
00:42:31,900 --> 00:42:33,700
As constrained that makes sense.

705
00:42:35,700 --> 00:42:39,000
Like I want to be able to do that which I suppose I can just do that.

706
00:42:39,000 --> 00:42:39,600
Make sense.

707
00:42:43,600 --> 00:42:46,400
Not really much of a reason why I couldn't do that.

708
00:42:47,000 --> 00:42:52,300
And so if I was to do that, I can just set whatever I want.

709
00:42:52,700 --> 00:42:55,300
I can just say I want to set this element to this type and be done

710
00:42:55,300 --> 00:42:55,700
with it.

711
00:42:57,700 --> 00:42:58,000
Give me

712
00:42:59,600 --> 00:43:00,500
let me take a look here.

713
00:43:01,600 --> 00:43:02,100
and,

714
00:43:07,200 --> 00:43:07,600
See.

715
00:43:08,200 --> 00:43:13,100
So yeah, this checks for IDs, it checks for the types, and then a

716
00:43:13,100 --> 00:43:18,500
check to see if the so this would also now just check to see if the

717
00:43:19,100 --> 00:43:20,400
elements are equal as well.

718
00:43:21,000 --> 00:43:21,800
And

719
00:43:23,600 --> 00:43:26,000
Any time someone was going to make one of these.

720
00:43:27,400 --> 00:43:30,100
It's already basically clearing that out.

721
00:43:30,200 --> 00:43:36,400
So when I do a set element type interaction, really, all I need to do

722
00:43:36,400 --> 00:43:37,300
now is just say that.

723
00:43:37,300 --> 00:43:40,500
Well you have to tell me what element you actually meant as well.

724
00:43:43,700 --> 00:43:46,500
Because that way you can basically create a generic command that can

725
00:43:46,500 --> 00:43:51,500
set any elements type regardless of who's doing it or when which seems

726
00:43:51,500 --> 00:43:52,100
better to me.

727
00:43:54,600 --> 00:43:56,000
And there's no reason not to do it.

728
00:43:56,000 --> 00:43:59,400
I mean, we're essentially sort of making a little Lambda right elect

729
00:43:59,400 --> 00:44:05,700
Poor Man's closure to do what it is that we want to do when we set

730
00:44:05,700 --> 00:44:11,400
that of course doesn't work which is also good but

731
00:44:13,800 --> 00:44:16,400
That's because again, I didn't implement it.

732
00:44:18,600 --> 00:44:21,400
So yeah, so in this case we should just be able to say well

733
00:44:25,300 --> 00:44:26,200
I want.

734
00:44:31,500 --> 00:44:37,300
whatever, my element is, I want its type to become whatever the

735
00:44:37,300 --> 00:44:38,300
parameter was

736
00:44:46,500 --> 00:44:47,500
And that's, I think it.

737
00:44:48,900 --> 00:44:52,700
And of course, I have to cast that, but I guess I could even do this.

738
00:44:54,600 --> 00:44:55,400
Because, why not?

739
00:45:05,400 --> 00:45:05,800
Oops.

740
00:45:18,400 --> 00:45:20,100
and so,

741
00:45:30,900 --> 00:45:31,600
That.

742
00:45:33,400 --> 00:45:34,500
Should be that.

743
00:45:39,000 --> 00:45:39,500
All right.

744
00:45:41,000 --> 00:45:44,200
So now, we can switch between these two pretty, pretty

745
00:45:44,200 --> 00:45:45,400
straightforwardly, right?

746
00:45:46,100 --> 00:45:50,100
But like I was saying it's not, they're not really like, you know, we

747
00:45:50,100 --> 00:45:53,600
don't want to take up lines for a button and so that I want to

748
00:45:53,600 --> 00:45:58,000
implement the row, sort of wrap wrapping situation a little bit

749
00:45:58,000 --> 00:45:58,400
differently.

750
00:45:58,400 --> 00:46:01,000
So it's easy for us to kind of switch in that way.

751
00:46:01,900 --> 00:46:05,600
So doing that is really straightforward like I said we kind of already

752
00:46:05,600 --> 00:46:09,100
set it up so that the layout system knows which which way it's in by

753
00:46:09,100 --> 00:46:10,200
looking at that.

754
00:46:10,900 --> 00:46:12,200
No Line Feed variable.

755
00:46:12,400 --> 00:46:14,200
So all we have to do is take a look at our code here.

756
00:46:14,200 --> 00:46:18,600
That does are advancing after each layout element and just say well.

757
00:46:18,600 --> 00:46:19,100
Okay,

758
00:46:20,600 --> 00:46:26,500
If we're in a no line feed mode, then we're going to advance the X.

759
00:46:33,400 --> 00:46:36,800
Otherwise we clear in advance.

760
00:46:36,800 --> 00:46:37,300
The why.

761
00:46:38,300 --> 00:46:39,500
So in this case,

762
00:46:42,100 --> 00:46:42,900
Where we have?

763
00:46:46,400 --> 00:46:47,400
The return happening.

764
00:46:49,600 --> 00:46:51,400
I suppose the other thing we need to do is

765
00:46:52,900 --> 00:46:55,300
Pull this out into sort of a separate thing and I'll show you why in a

766
00:46:55,300 --> 00:46:55,800
second.

767
00:47:11,200 --> 00:47:11,600
Hmm.

768
00:47:11,800 --> 00:47:13,600
Well, I take that back.

769
00:47:23,800 --> 00:47:24,300
Yeah.

770
00:47:26,500 --> 00:47:29,700
So, what I want to do is I want to be able to pass the dimension here.

771
00:47:31,600 --> 00:47:39,000
To advance by like so and that way I can call it after the row is over

772
00:47:39,200 --> 00:47:44,200
because if I otherwise we'll get it so that it won't advance after the

773
00:47:44,200 --> 00:47:47,000
it won't go back, it won't do the carriage return, it'll print the

774
00:47:47,000 --> 00:47:50,300
graph and then do the carriage return which is not what we want.

775
00:47:50,600 --> 00:47:56,900
So I need a way of calling Advance element when you end a row as well.

776
00:47:57,100 --> 00:47:59,900
So I'm going to call Advanced element here with total

777
00:48:00,900 --> 00:48:05,600
Which will do sort of what it has been doing and then when we need to

778
00:48:05,600 --> 00:48:09,700
do an end row, I'll just call Advanced element and I'll just pass it.

779
00:48:09,700 --> 00:48:10,800
No bounds at all.

780
00:48:11,100 --> 00:48:15,500
And so and and well not quite no bounds at all.

781
00:48:15,700 --> 00:48:16,400
So,

782
00:48:21,700 --> 00:48:23,400
That's actually a rectangle.

783
00:48:25,700 --> 00:48:26,400
Right.

784
00:48:26,900 --> 00:48:29,800
And so what I need to do here is just create a rectangle that

785
00:48:29,800 --> 00:48:33,500
essentially doesn't have any bounds.

786
00:48:35,100 --> 00:48:36,500
so, it would be

787
00:48:37,800 --> 00:48:42,200
The rectangle at the current location which is rectangle min-max.

788
00:48:54,400 --> 00:48:55,300
Sorry rectangle, too.

789
00:49:01,100 --> 00:49:02,600
Don't know why I put layout element there.

790
00:49:07,900 --> 00:49:10,500
All right, now, this isn't quite right yet.

791
00:49:11,100 --> 00:49:14,200
And I guess we'll see that in a second and then we'll fix it and kind

792
00:49:14,200 --> 00:49:15,000
of move forwards.

793
00:49:16,600 --> 00:49:20,200
But anyway, so if we have new line feed, then what we want to do is

794
00:49:20,200 --> 00:49:24,400
just move the layout at X rather than the layout at y.

795
00:49:24,400 --> 00:49:26,400
So the layout at why would stay the same.

796
00:49:26,700 --> 00:49:32,000
And what we'd want to do is get the max corner of the X and add the

797
00:49:32,000 --> 00:49:38,600
spacing X2 it right, and we don't have a current concept of spacing X.

798
00:49:38,600 --> 00:49:39,500
I don't think.

799
00:49:41,600 --> 00:49:42,200
Or do we?

800
00:49:42,200 --> 00:49:44,100
I don't actually know where these things come from.

801
00:49:48,000 --> 00:49:49,000
They just come to the layout.

802
00:49:49,000 --> 00:49:51,400
So I don't know if we have a spacing X.

803
00:49:54,600 --> 00:49:57,000
I don't even know what that is supposed to be.

804
00:50:00,900 --> 00:50:02,900
So, I'm going to go ahead and change this around a little bit.

805
00:50:03,400 --> 00:50:03,800
There we go.

806
00:50:05,000 --> 00:50:08,000
So we haven't defined a spacing x yet, which is a problem.

807
00:50:08,400 --> 00:50:11,100
So we're going to have to make one of those and that's what again,

808
00:50:11,100 --> 00:50:14,900
whatever we want that spacing to be, but that's pretty easy.

809
00:50:15,600 --> 00:50:17,900
So, we can just do spacing X here.

810
00:50:19,500 --> 00:50:25,400
And then, whenever we Define spacing, why we can Define spacing acts,

811
00:50:25,400 --> 00:50:28,000
and I don't know what it should be, I don't really care, we can always

812
00:50:28,000 --> 00:50:28,700
adjust it.

813
00:50:32,300 --> 00:50:33,600
So that's about that.

814
00:50:33,900 --> 00:50:38,600
Now, when we actually create this, and in fact, I guess that's sort

815
00:50:38,600 --> 00:50:45,000
of, when you can see down here when we create this initially, we also

816
00:50:45,000 --> 00:50:48,800
have a slight problem, which is that this layout doesn't actually know

817
00:50:48,800 --> 00:50:51,300
what its original X Baseline is.

818
00:50:51,700 --> 00:50:56,900
So, if you take a look in here, where we've got sort of this layout,

819
00:50:56,900 --> 00:50:58,600
and we've got this app parameter,

820
00:51:00,000 --> 00:51:04,000
Really, we've kind of want that to be an offset in some way, or we

821
00:51:04,000 --> 00:51:07,100
want to track the two values separately, right?

822
00:51:07,100 --> 00:51:09,800
And there's two and I, you know, there's there's equivalent ways that

823
00:51:09,800 --> 00:51:10,700
we could do that.

824
00:51:11,400 --> 00:51:18,100
So what I think we should probably do is say there's like a base

825
00:51:18,600 --> 00:51:22,800
corner or something like this and an at, I don't know, something like

826
00:51:22,800 --> 00:51:25,900
that or we can set a left margin.

827
00:51:28,900 --> 00:51:29,800
Anything like this.

828
00:51:31,900 --> 00:51:32,400
303.

829
00:51:32,400 --> 00:51:35,200
I'm not really sure how we were processing depth properly.

830
00:51:35,200 --> 00:51:38,500
I guess we just increment by depth automatically as we kind of go.

831
00:51:40,900 --> 00:51:44,800
But anyway, point being I'm just going to set this.

832
00:51:46,900 --> 00:51:50,800
So we know what our left margin was, and that's important because in

833
00:51:50,800 --> 00:51:52,800
order to Line Feed, that's the only way we're gonna be able to get

834
00:51:52,800 --> 00:51:54,700
back to it, if that makes sense.

835
00:51:55,700 --> 00:51:57,000
So, let's see here.

836
00:52:01,600 --> 00:52:04,800
In this case, I'm just going to set this to base Corner X.

837
00:52:10,300 --> 00:52:15,200
We know whether they don't really know what that function is called.

838
00:52:19,300 --> 00:52:23,200
All right, so first things first, make sure everything's still working

839
00:52:23,200 --> 00:52:26,700
properly and it appears to be so that's all good.

840
00:52:27,000 --> 00:52:29,700
And then you can see, we're already a little closer to correct.

841
00:52:29,700 --> 00:52:32,000
Because now these are at least on the same line, but we still have

842
00:52:32,000 --> 00:52:34,500
some more stuff that's not correct about.

843
00:52:34,500 --> 00:52:38,000
So the first thing is the one that I was talking about before, which

844
00:52:38,000 --> 00:52:42,400
is you, notice how it doesn't that carriage return is not quite the

845
00:52:42,400 --> 00:52:47,000
correct thing and the reason for that is because we haven't tracked

846
00:52:47,000 --> 00:52:49,000
what the lowest point in y is

847
00:52:49,100 --> 00:52:50,100
On that line.

848
00:52:50,700 --> 00:52:52,700
So this code here.

849
00:52:52,700 --> 00:52:56,500
Remember I mentioned this write this code here is not going to be

850
00:52:56,500 --> 00:53:00,800
correct anymore because get min quarter dim why we were previously

851
00:53:00,800 --> 00:53:04,100
using that value because we knew we were just rendering one thing and

852
00:53:04,100 --> 00:53:06,500
then going to the next line we knew that the only thing we need to

853
00:53:06,500 --> 00:53:09,000
know was how low that thing went.

854
00:53:09,000 --> 00:53:11,600
But now if we're going to stock up many things on a row, we

855
00:53:11,600 --> 00:53:15,600
essentially need to keep track of what the lowest thing actually was.

856
00:53:15,900 --> 00:53:18,900
So in advance element, we always have to do something here.

857
00:53:19,000 --> 00:53:25,200
Here, which is going to say that like the layout next y base, or

858
00:53:25,200 --> 00:53:27,600
something like this, right next?

859
00:53:27,600 --> 00:53:33,500
Why line is going to have to equal, whatever the minimum value was of

860
00:53:33,500 --> 00:53:35,200
our current best one.

861
00:53:38,900 --> 00:53:43,000
And the one that we you know, are sort of using are seeing now.

862
00:53:43,700 --> 00:53:50,500
And then when we come through here and we're going to set our our why

863
00:53:50,500 --> 00:53:53,800
layout we want to set that to be whatever.

864
00:53:53,800 --> 00:53:57,600
That next why line was regardless of what the current element that

865
00:53:57,600 --> 00:53:58,900
we're advancing for is.

866
00:54:00,100 --> 00:54:03,100
and then, when we're done with that, we want to clear that next, why I

867
00:54:03,100 --> 00:54:04,000
line out

868
00:54:07,000 --> 00:54:08,900
So, we don't have to worry about it, right now.

869
00:54:08,900 --> 00:54:11,000
We'd also probably like this to be 0.

870
00:54:11,700 --> 00:54:15,000
So, rather than looking at it this way, what I'd probably say is,

871
00:54:15,000 --> 00:54:17,100
well, let's take a look at what our at.

872
00:54:17,100 --> 00:54:18,000
Why is

873
00:54:20,700 --> 00:54:21,300
Right.

874
00:54:21,600 --> 00:54:25,200
And say, what is the difference between these two?

875
00:54:27,200 --> 00:54:31,900
So if you were to try to go to them in corner from where we were, how

876
00:54:32,000 --> 00:54:33,400
far would that be right?

877
00:54:33,400 --> 00:54:34,400
Like what's the Delta?

878
00:54:34,800 --> 00:54:35,700
If that makes sense.

879
00:54:37,100 --> 00:54:38,400
And then we just keep

880
00:54:39,700 --> 00:54:43,700
We keep that and this is really like next y, Delta or something.

881
00:54:47,500 --> 00:54:48,200
That makes sense.

882
00:54:48,400 --> 00:54:52,700
That way in it 2-0 still works for this guy and so when we get this

883
00:54:52,700 --> 00:54:56,500
next why line, then what we'd say is like oh okay it's actually just

884
00:54:56,500 --> 00:55:00,100
going to add to wherever we currently were will add whatever that

885
00:55:00,100 --> 00:55:03,200
Delta is and then we'll be in good shape and when we clear it would

886
00:55:03,200 --> 00:55:04,200
just clear, it 2-0.

887
00:55:06,500 --> 00:55:09,100
Easy peasy lemon squeezy as Jeff likes to say.

888
00:55:10,800 --> 00:55:16,100
And so now we've just got another thing in here which is R32 next.

889
00:55:16,100 --> 00:55:16,500
Why line

890
00:55:18,300 --> 00:55:20,200
And that should now check that, whoops.

891
00:55:20,300 --> 00:55:21,300
Next slide Delta

892
00:55:33,900 --> 00:55:34,300
Okay.

893
00:55:36,500 --> 00:55:39,200
so now when you take a look you can see that now, we actually have

894
00:55:39,200 --> 00:55:42,100
these properly leaving the space that you would have expected them to

895
00:55:42,100 --> 00:55:47,700
leave you know before this this guy comes in and we can toggle these

896
00:55:47,700 --> 00:55:51,700
guys nicely and all that stuff works but unfortunately we don't really

897
00:55:51,700 --> 00:55:52,300
have

898
00:55:54,800 --> 00:55:56,800
Spacing here, that makes a whole lot of sense.

899
00:55:57,500 --> 00:56:00,400
And so, what we want to do is take a look with our

900
00:56:02,400 --> 00:56:04,300
Sort of with our text element stuff here.

901
00:56:04,600 --> 00:56:07,300
Where we're doing Advanced element on the total bounds and figure out

902
00:56:07,300 --> 00:56:10,800
why our total bands is advancing so much more than it should.

903
00:56:11,400 --> 00:56:12,200
Now

904
00:56:14,300 --> 00:56:17,300
I'm not certain.

905
00:56:21,100 --> 00:56:22,600
This is not really dim.

906
00:56:23,300 --> 00:56:25,900
This is like the element wrecked.

907
00:56:27,500 --> 00:56:28,200
first of all,

908
00:56:29,300 --> 00:56:30,000
I'm pretty sure.

909
00:56:31,700 --> 00:56:35,300
It's a name that a little clearer so that it's not confusing.

910
00:56:36,500 --> 00:56:40,100
So, the thing that I'm not sure about is, this seems like it should be

911
00:56:40,100 --> 00:56:43,900
correct, like, whatever the maximum coroner was of the thing that we

912
00:56:43,900 --> 00:56:45,900
were using is where we would be now.

913
00:56:46,800 --> 00:56:52,700
And so I think the problem I suspect is that we have our depth value

914
00:56:53,200 --> 00:56:59,100
like our indentation value is kind of janky, right?

915
00:57:00,000 --> 00:57:03,600
We're taking this indent and I think we're implying that indent each

916
00:57:03,600 --> 00:57:05,200
time here, right?

917
00:57:05,800 --> 00:57:07,500
Because that indents like baked in

918
00:57:09,100 --> 00:57:13,000
And so what we really want to do is we really want to make it so that

919
00:57:13,000 --> 00:57:15,900
the indent only happens on advance.

920
00:57:16,800 --> 00:57:20,600
So that depth, wherever that is actually happening, which I assume is

921
00:57:20,600 --> 00:57:22,200
in here somewhere.

922
00:57:28,400 --> 00:57:29,300
So there it is.

923
00:57:30,300 --> 00:57:33,500
When you look at total Min corner, you can see this nonsense

924
00:57:33,600 --> 00:57:34,500
happening, right?

925
00:57:35,200 --> 00:57:39,000
And what we really want to do is say that's not something we actually

926
00:57:39,000 --> 00:57:40,000
want in here.

927
00:57:40,200 --> 00:57:44,400
That's something we want to do when we actually do our line advance.

928
00:57:44,900 --> 00:57:48,700
So, when we do Advanced elements in here, is really the part.

929
00:57:48,700 --> 00:57:51,400
And so when we do, when we go back to the base Corner, then we would

930
00:57:51,400 --> 00:57:52,000
do this.

931
00:57:52,000 --> 00:57:54,700
This sort of addition based on the depth.

932
00:57:56,600 --> 00:57:59,900
So now that seems a little more reasonable.

933
00:57:59,900 --> 00:58:02,800
Of course, we wouldn't handle the very first one properly, which you

934
00:58:02,800 --> 00:58:05,600
can see here, although I don't, I don't know why the depth is

935
00:58:05,600 --> 00:58:08,500
considered to be non zero through here.

936
00:58:09,200 --> 00:58:12,300
That's a little bit weird but now these things are tightly packed

937
00:58:12,300 --> 00:58:13,600
which is what we would expect.

938
00:58:13,600 --> 00:58:15,900
Now, maybe we want to make a little bit of space between them so we

939
00:58:15,900 --> 00:58:18,100
can see the difference in them, but that's our prerogative.

940
00:58:18,100 --> 00:58:20,900
Now rather than something that's required which we don't actually

941
00:58:20,900 --> 00:58:21,500
want.

942
00:58:24,300 --> 00:58:25,400
So yeah, get a little better.

943
00:58:25,400 --> 00:58:28,600
This ghost and to be cleaned up a little bit, but definitely getting a

944
00:58:28,600 --> 00:58:29,300
little bit better.

945
00:58:29,800 --> 00:58:32,700
Now, the other thing that we probably want to do is take a look at

946
00:58:32,900 --> 00:58:38,600
basic text element situation here and say that we want this to be a

947
00:58:38,600 --> 00:58:44,000
little bit probably cleaner or a little bit more responsive.

948
00:58:44,000 --> 00:58:45,000
I guess is what I should say.

949
00:58:45,300 --> 00:58:47,600
So we know whether this interaction is hot

950
00:58:54,700 --> 00:58:56,400
Where is the, is it this way?

951
00:58:56,400 --> 00:58:57,900
I don't really remember how we do this.

952
00:59:04,800 --> 00:59:05,700
That seem right.

953
00:59:08,100 --> 00:59:14,300
Is hot, interaction is hot, that's what I wanted.

954
00:59:20,400 --> 00:59:22,200
so, what I really want to say I guess is

955
00:59:24,700 --> 00:59:25,600
Is hot.

956
00:59:26,900 --> 00:59:30,800
Equals interaction is hot.

957
00:59:33,300 --> 00:59:38,800
Okay, so if I know this is hot then what I could do is say there's an

958
00:59:38,800 --> 00:59:42,300
item color and a hot color, right?

959
00:59:42,500 --> 00:59:46,700
And I suppose, the person who's calling me could also do that but I

960
00:59:46,700 --> 00:59:47,600
think it's a little bit more.

961
00:59:47,600 --> 00:59:53,000
Interesting if that's just passed in here and maybe by default, this

962
00:59:53,000 --> 00:59:54,900
actually does do that.

963
00:59:54,900 --> 00:59:57,700
So maybe by default, you know, it's this sort of thing.

964
01:00:00,200 --> 01:00:04,800
And, and then I can just say well if it's hot then we use the item.

965
01:00:04,800 --> 01:00:07,700
I'm going to use the hot color, otherwise we use yet bar.

966
01:00:11,100 --> 01:00:13,700
And and that seems good.

967
01:00:14,200 --> 01:00:18,200
So then, you know, we get a little bit of highlighting here, which is

968
01:00:18,200 --> 01:00:20,700
good and

969
01:00:23,000 --> 01:00:26,300
These don't really have interactions so I should probably make it so

970
01:00:26,300 --> 01:00:28,400
that hot interactions are a little less.

971
01:00:32,000 --> 01:00:35,900
A little less highlight e there because I assume that that interaction

972
01:00:35,900 --> 01:00:37,100
is a null interaction.

973
01:00:37,700 --> 01:00:41,300
So I think probably and I don't even know like I feel like that should

974
01:00:41,300 --> 01:00:44,600
probably be something that we check for.

975
01:00:45,000 --> 01:00:47,800
So I feel like saying interactions are equal.

976
01:00:47,900 --> 01:00:52,200
We should possibly also say you know if the interaction that we're

977
01:00:52,200 --> 01:00:53,200
talking about

978
01:00:57,000 --> 01:00:58,300
Is not real.

979
01:01:04,000 --> 01:01:10,900
So interaction type, if there isn't an interaction, then it can't be

980
01:01:10,900 --> 01:01:11,500
hot.

981
01:01:15,300 --> 01:01:15,900
Right.

982
01:01:19,500 --> 01:01:22,900
Because you can only really be a hot interaction if there is an

983
01:01:22,900 --> 01:01:23,800
interaction at all.

984
01:01:24,700 --> 01:01:28,200
So at that point, it's like, you know, makes a little more sense of

985
01:01:28,200 --> 01:01:31,200
course, for some reason, again, that didn't seem to actually change

986
01:01:31,200 --> 01:01:32,500
it, which it should.

987
01:01:32,500 --> 01:01:33,000
Right.

988
01:01:33,700 --> 01:01:35,500
I mean, that should be failing.

989
01:01:35,500 --> 01:01:40,200
The is hot test because anything that's another Direction shouldn't

990
01:01:40,200 --> 01:01:43,000
actually work.

991
01:01:46,200 --> 01:01:47,100
What am I missing there?

992
01:01:54,400 --> 01:01:55,600
Oh, I know what I'm missing.

993
01:01:56,400 --> 01:01:58,400
Those are probably set to auto.

994
01:02:00,200 --> 01:02:05,800
That's a little tricky since those are set to Auto, we don't know

995
01:02:05,800 --> 01:02:07,700
whether they're going to have an interaction or not.

996
01:02:12,800 --> 01:02:13,900
It's an interesting dilemma.

997
01:02:15,300 --> 01:02:18,200
Anyway I'll end it there because we did what we wanted to do.

998
01:02:19,000 --> 01:02:21,800
And we've got a little more work to do but but you know it's a good

999
01:02:21,800 --> 01:02:22,700
place to stop.

1000
01:02:23,400 --> 01:02:25,300
So we'll take about 10 minutes of Q&A.

1001
01:03:10,000 --> 01:03:13,900
And by the way, lemon and T is like the total right thing to put in t

1002
01:03:13,900 --> 01:03:16,000
I'm not sure why there's even a discussion about that.

1003
01:03:17,100 --> 01:03:18,400
It's way better tea.

1004
01:03:18,400 --> 01:03:19,400
Tea with lemon is awesome.

1005
01:03:19,400 --> 01:03:20,700
It's way better than tea with milk.

1006
01:03:24,100 --> 01:03:24,800
Kubrick Caleb.

1007
01:03:24,800 --> 01:03:25,600
Not a serious question.

1008
01:03:25,600 --> 01:03:29,300
Why not just import npm and use left pad to indent the strings?

1009
01:03:29,700 --> 01:03:33,900
That is a very good point certainly that would have led to increased

1010
01:03:33,900 --> 01:03:35,600
robustness for handmade hero.

1011
01:03:47,000 --> 01:03:52,800
It's Isaac.

1012
01:03:52,800 --> 01:03:55,800
I think you were selecting the ground as an entity.

1013
01:03:58,300 --> 01:04:01,900
Is that bad for some reason?

1014
01:04:06,900 --> 01:04:10,000
Pseudonym 73 posted a PDF.

1015
01:04:13,400 --> 01:04:14,400
What is the PDF say?

1016
01:04:15,900 --> 01:04:16,600
Oh cool.

1017
01:04:16,800 --> 01:04:17,800
A length Arc.

1018
01:04:17,800 --> 01:04:20,200
Length, parameterization of spline curves.

1019
01:04:25,400 --> 01:04:26,200
That's kind of fun.

1020
01:04:26,200 --> 01:04:30,300
So it tries to re parametrized the Sprites flying so that it's

1021
01:04:30,900 --> 01:04:33,800
distance is equal is constant.

1022
01:04:35,100 --> 01:04:35,900
That's pretty cool.

1023
01:04:45,000 --> 01:04:46,000
I really have time to read this.

1024
01:04:46,000 --> 01:04:47,800
All right now, but I'm just kind of skimming it.

1025
01:04:54,800 --> 01:04:58,900
so it's basically an iterative sub divider, that attempts to produce a

1026
01:04:59,200 --> 01:05:02,700
constant parameter ization set of splines from a non from one that's

1027
01:05:02,700 --> 01:05:03,200
non

1028
01:05:04,400 --> 01:05:06,500
Which seems like a totally reasonable approach, right?

1029
01:05:29,700 --> 01:05:32,900
Sean McGrath, you know, how if you add one letter to how you get IBM,

1030
01:05:32,900 --> 01:05:37,000
did you know if you add one letter to VMS?

1031
01:05:37,400 --> 01:05:39,400
You get Windows NT.

1032
01:05:39,700 --> 01:05:41,000
Yes, I did know that.

1033
01:05:41,800 --> 01:05:44,900
I don't know if that's why they did it but I did know.

1034
01:05:44,900 --> 01:05:47,900
I have heard that sort of urban legend at least.

1035
01:05:55,000 --> 01:05:56,000
Jesse Mayer.

1036
01:05:56,000 --> 01:05:59,400
So this interface system is a very simple immediate mode design.

1037
01:06:01,900 --> 01:06:06,800
Not really you could do a much simpler one if you wanted to.

1038
01:06:06,900 --> 01:06:12,200
We use interaction storing, which means that we don't have a frame of

1039
01:06:12,200 --> 01:06:15,600
latency when you interact with the system,

1040
01:06:20,200 --> 01:06:26,300
We do have a frame of latency when you for highlighting, but not for

1041
01:06:26,300 --> 01:06:28,900
interaction, if that makes sense.

1042
01:06:30,500 --> 01:06:36,800
So you could actually do a much simpler kind of immediate mode

1043
01:06:37,300 --> 01:06:39,800
structure, which doesn't?

1044
01:06:39,800 --> 01:06:44,600
Which just does the if any action right in line if that makes sense.

1045
01:06:48,000 --> 01:06:50,900
If you had to, why are there some blue lines outside the profile

1046
01:06:50,900 --> 01:06:51,300
window signs?

1047
01:06:51,300 --> 01:06:57,200
So those are remember, normally we've got this guy which shows all the

1048
01:06:57,200 --> 01:06:59,200
threads separately if that makes sense.

1049
01:06:59,600 --> 01:07:04,100
And so if you have a really long thread that's like doing asset

1050
01:07:04,100 --> 01:07:08,700
loading, that takes multiple that you know, exists across a frame

1051
01:07:08,700 --> 01:07:13,700
boundary, you wouldn't really notice that because it only flashes for

1052
01:07:13,700 --> 01:07:17,900
a second in here, if you have a long asset load, that takes a long

1053
01:07:17,900 --> 01:07:18,000
time.

1054
01:07:18,100 --> 01:07:18,500
Time.

1055
01:07:18,600 --> 01:07:22,900
You could start an asset load in this Frame and have it last into the

1056
01:07:22,900 --> 01:07:24,400
other room because it's on a separate thread.

1057
01:07:24,500 --> 01:07:28,200
So it if that thread has no notion of frames and doesn't care about

1058
01:07:28,200 --> 01:07:30,500
frames at all, it just started was doing its thing.

1059
01:07:38,500 --> 01:07:41,000
So, you can easily go outside the profile window.

1060
01:07:41,700 --> 01:07:46,200
We don't make any attempt to stop that and I'm not sure I want to stop

1061
01:07:46,200 --> 01:07:48,400
it because it's correct in that sense.

1062
01:07:48,600 --> 01:07:50,100
Since this is debug view, I don't care.

1063
01:07:50,100 --> 01:07:51,500
Really how pretty it is.

1064
01:07:52,200 --> 01:07:53,700
And that is what actually happened.

1065
01:07:53,700 --> 01:07:58,300
It started in this Frame and went you know, to the next frame and I

1066
01:07:58,300 --> 01:08:01,900
don't really have much of a plan for if I don't have a thing in mind

1067
01:08:01,900 --> 01:08:04,100
where I'm like, how would I like to see that, you know,

1068
01:08:57,800 --> 01:08:59,300
Dude, in basement 1.

1069
01:09:00,000 --> 01:09:00,899
Visual Studio 2015.

1070
01:09:00,899 --> 01:09:02,300
You can use clang as a compiler.

1071
01:09:02,300 --> 01:09:03,300
Can you though?

1072
01:09:04,800 --> 01:09:08,200
I mean, I don't think you can because it obviously doesn't handle.

1073
01:09:11,500 --> 01:09:13,200
Deco Speck in Trends.

1074
01:09:13,200 --> 01:09:18,100
So decals stuck in type, so it can't compile actual windows.

1075
01:09:19,000 --> 01:09:19,700
Declaration.

1076
01:09:19,700 --> 01:09:23,300
So I'm not sure how it would work, unless I'm missing something.

1077
01:09:56,800 --> 01:09:58,600
Can you have are using clang CL?

1078
01:09:58,600 --> 01:09:59,700
Yes, I was.

1079
01:10:24,100 --> 01:10:26,100
All right, so any other questions?

1080
01:10:28,000 --> 01:10:29,200
Does not look like it.

1081
01:10:44,100 --> 01:10:47,700
Jesse Meyer you were mentioning before about objects are rising as a

1082
01:10:47,700 --> 01:10:51,000
natural consequence of properly engineered code as a system requires.

1083
01:10:51,600 --> 01:10:56,500
But do you do not mean a C++ object so what do you mean as an object?

1084
01:10:58,000 --> 01:11:02,600
Well, so an object is obviously a nebulous term.

1085
01:11:05,100 --> 01:11:06,300
But to give you an example.

1086
01:11:09,200 --> 01:11:11,200
Let's say we have this thing here.

1087
01:11:13,000 --> 01:11:13,800
Right.

1088
01:11:14,400 --> 01:11:20,000
So handmade render group is basically like a system that we use that

1089
01:11:20,000 --> 01:11:21,000
does our rendering, right?

1090
01:11:21,000 --> 01:11:25,400
It's how our rendering its buffered and processed and at no time

1091
01:11:25,400 --> 01:11:29,100
during the development of this did we sit down and go let's think

1092
01:11:29,100 --> 01:11:32,300
about what the struts are going to be.

1093
01:11:32,500 --> 01:11:36,100
Because that's really important, or what functions go with, which

1094
01:11:36,100 --> 01:11:40,800
structs because it's irrelevant to programming, it literally is

1095
01:11:40,800 --> 01:11:41,600
completely irrelevant.

1096
01:11:41,700 --> 01:11:45,300
It it does not it's not a thing that you ever have to think about for

1097
01:11:45,300 --> 01:11:46,000
any reason.

1098
01:11:48,200 --> 01:11:51,200
So what I mean by the objects fall out of it is when you actually just

1099
01:11:51,200 --> 01:11:56,000
focus on what the code actually has to do you just find out by what

1100
01:11:56,000 --> 01:11:58,400
you wrote and what it had to do.

1101
01:11:58,500 --> 01:11:59,800
What needs to get stored where

1102
01:12:00,400 --> 01:12:03,700
We know that object transform and render group are two different

1103
01:12:03,700 --> 01:12:07,800
things because we found that out when we wrote the code, it was just

1104
01:12:07,800 --> 01:12:12,700
much better when we separated this piece of information out as

1105
01:12:12,700 --> 01:12:14,900
something that could be talked about separate from this one.

1106
01:12:16,600 --> 01:12:17,100
Right?

1107
01:12:18,900 --> 01:12:20,300
And that's so crucial.

1108
01:12:20,600 --> 01:12:21,700
That's the core thing.

1109
01:12:21,700 --> 01:12:25,000
I mean when I say that object-oriented programming is a bad idea, you

1110
01:12:25,000 --> 01:12:27,100
never think about objects.

1111
01:12:27,800 --> 01:12:30,800
They are not a thing that you conceptualize in your head.

1112
01:12:30,800 --> 01:12:35,700
If you're programming properly, I literally have never seen anyone do

1113
01:12:35,700 --> 01:12:39,200
programming that I thought was good with that mentality.

1114
01:12:40,700 --> 01:12:44,000
What you do is you focus on what the code actually has to accomplish

1115
01:12:44,000 --> 01:12:48,700
and then you find out how the data is bundled automatically from what

1116
01:12:48,700 --> 01:12:49,800
you had to do.

1117
01:12:50,100 --> 01:12:53,100
What pieces, the algorithms actually had to draw from

1118
01:12:54,400 --> 01:12:55,400
And that is crucial.

1119
01:12:55,600 --> 01:12:58,100
So it doesn't even really matter to me.

1120
01:12:58,100 --> 01:13:00,900
What you want to call an object, those are the critical things.

1121
01:13:01,200 --> 01:13:05,600
What data gets bundled together semantically, which are structs and

1122
01:13:05,600 --> 01:13:08,800
what do our functions actually do, right?

1123
01:13:08,900 --> 01:13:13,700
Which are, you know, the action, which is the actual content of the

1124
01:13:13,700 --> 01:13:14,200
code.

1125
01:13:17,300 --> 01:13:20,700
That is the entirety of the determination of the architecture of the

1126
01:13:20,700 --> 01:13:21,200
system.

1127
01:13:22,400 --> 01:13:26,000
And you come at that by figuring out what the code needs to do and

1128
01:13:26,000 --> 01:13:28,800
figuring out what data needs to be bundled in.

1129
01:13:28,900 --> 01:13:32,100
You know what, the most efficient bundling of the data is to make

1130
01:13:32,100 --> 01:13:34,900
those functions work, the way they need to work, and the people who

1131
01:13:34,900 --> 01:13:38,600
call them be able to use them the way that they want and that's the

1132
01:13:38,600 --> 01:13:39,200
end of it.

1133
01:13:40,800 --> 01:13:44,900
So, if at any time you switch your focus over to something of the

1134
01:13:44,900 --> 01:13:45,600
form.

1135
01:13:45,700 --> 01:13:48,300
Well, a render entry bitmap.

1136
01:13:48,400 --> 01:13:51,900
Really like people who use a render entry bitmap.

1137
01:13:52,200 --> 01:13:57,600
Should not know that like there's some members of this thing and I've

1138
01:13:57,600 --> 01:14:02,400
got to like, you know, make sort of a private way of making rendering

1139
01:14:02,400 --> 01:14:03,000
to get massive.

1140
01:14:03,000 --> 01:14:07,600
Only some people can do and you start creating this concept that the

1141
01:14:07,600 --> 01:14:10,000
object is somehow an important thing.

1142
01:14:10,000 --> 01:14:13,500
And I need to start focusing on properties of the object.

1143
01:14:14,500 --> 01:14:20,800
Is just a very inefficient and error-prone method of architecting your

1144
01:14:20,800 --> 01:14:21,200
system.

1145
01:14:21,200 --> 01:14:23,600
And it does not result in good systems.

1146
01:14:24,400 --> 01:14:29,700
So typically if you want to go from a state like we haven't handmade

1147
01:14:29,700 --> 01:14:32,500
hero where you know, we're making the code and we're going fairly

1148
01:14:32,500 --> 01:14:35,600
efficiently along, but we're not stopping to make any of these things.

1149
01:14:35,600 --> 01:14:37,200
Like, bulletproof or reusable.

1150
01:14:37,200 --> 01:14:43,100
We're not like trying to ship a sort of a standalone system using any

1151
01:14:43,100 --> 01:14:44,100
of these particular components.

1152
01:14:44,600 --> 01:14:48,700
Um, the end people ask me this question of time, like, does this

1153
01:14:48,700 --> 01:14:50,100
change with larger teams?

1154
01:14:50,100 --> 01:14:51,500
Are all this other nonsense?

1155
01:14:51,500 --> 01:14:54,300
And the answer is always, no it doesn't, it's the same thing.

1156
01:14:54,900 --> 01:14:58,400
What you do, if you want to start making this code, into something

1157
01:14:58,400 --> 01:14:59,800
that's more reusable more.

1158
01:15:00,000 --> 01:15:04,000
Like that can be shared out to multiple people without causing

1159
01:15:04,000 --> 01:15:07,500
problems so on you don't do anything differently than what I just did.

1160
01:15:07,600 --> 01:15:11,100
All you do is you start moving code out of the each file into the CPP

1161
01:15:11,100 --> 01:15:15,000
file and you only put in the H file to things that they need to see.

1162
01:15:16,100 --> 01:15:16,900
That's all you do.

1163
01:15:17,100 --> 01:15:21,200
That's it, that's the end of it because then they're not bothered with

1164
01:15:21,200 --> 01:15:23,600
like, you know, maybe they don't need to know what a render entry

1165
01:15:23,600 --> 01:15:26,400
direct entry rectangle is so we just move it out of the h-file end of

1166
01:15:26,400 --> 01:15:28,200
the story, right?

1167
01:15:28,200 --> 01:15:29,900
And they take, you know, they just

1168
01:15:30,000 --> 01:15:31,700
See, they just see this.

1169
01:15:32,900 --> 01:15:40,200
You know, instead of this and now they don't have that things to pick

1170
01:15:40,200 --> 01:15:40,700
to them.

1171
01:15:40,700 --> 01:15:43,600
They don't go looking in it, they know they're not really supposed to

1172
01:15:43,600 --> 01:15:47,200
unless it's something important where they would go digging into your

1173
01:15:47,200 --> 01:15:47,700
code, right?

1174
01:15:47,700 --> 01:15:50,900
And we take only the functions from here that we have thought about

1175
01:15:50,900 --> 01:15:53,400
and made sure we Define the functions to work.

1176
01:15:53,400 --> 01:15:53,600
Exactly.

1177
01:15:53,600 --> 01:15:54,100
They should.

1178
01:15:54,100 --> 01:15:57,500
And we take that and we put those functions in the H file.

1179
01:15:57,500 --> 01:16:02,400
That is how you ship good architectures that are easy to use the last

1180
01:16:02,400 --> 01:16:02,800
a long time.

1181
01:16:02,900 --> 01:16:03,900
I'm etcetera, etcetera.

1182
01:16:04,200 --> 01:16:06,400
There is no other part of it.

1183
01:16:06,800 --> 01:16:09,200
There's nothing else about it.

1184
01:16:09,200 --> 01:16:12,000
If that makes sense, you have a typo in the comment for object

1185
01:16:12,000 --> 01:16:13,300
transform that's probably true.

1186
01:16:13,700 --> 01:16:15,500
You probably have a lot of typos in a lot of things.

1187
01:16:22,800 --> 01:16:23,800
There is no typos.

1188
01:16:24,900 --> 01:16:27,400
Actually, that particular case.

1189
01:16:54,100 --> 01:16:57,800
Yeah, just to be clear Thang is intentional like its own thing.

1190
01:16:58,800 --> 01:17:02,000
Sometimes there's just an accent, you know, sometimes you're going to

1191
01:17:02,000 --> 01:17:04,900
move this out to its own thing, but other times they're going to move

1192
01:17:04,900 --> 01:17:06,300
this out to its own thing.

1193
01:17:07,600 --> 01:17:08,200
that's,

1194
01:17:10,900 --> 01:17:11,600
So that is.

1195
01:17:14,400 --> 01:17:15,900
All right, I'm going to close it down.

1196
01:17:21,300 --> 01:17:22,800
Up there unsaved changes.

1197
01:17:23,000 --> 01:17:25,100
Well, I guess I change this.

1198
01:17:25,100 --> 01:17:26,000
What did I change?

1199
01:17:27,700 --> 01:17:29,900
Oh right, I see, I didn't really change anything.

1200
01:17:29,900 --> 01:17:34,000
I was just sort of typing while I was complaining about how people

1201
01:17:34,000 --> 01:17:35,400
shouldn't use of trade program.

1202
01:17:35,900 --> 01:17:36,600
All right.

1203
01:17:41,500 --> 01:17:44,600
Thank you, everyone for tuning in for another episode of handmade

1204
01:17:44,600 --> 01:17:45,000
hero.

1205
01:17:45,400 --> 01:17:48,300
If you would like to follow along at home with the source code, you

1206
01:17:48,300 --> 01:17:50,700
can always fear to the game about Hammer here at or it comes to the

1207
01:17:50,700 --> 01:17:53,400
source code that I update every night so you can be up to date.

1208
01:17:54,500 --> 01:17:57,200
We also have a forum you can go to to answer questions.

1209
01:17:57,400 --> 01:17:59,900
Hopefully a forum that will soon get a facelift do.

1210
01:18:00,000 --> 01:18:03,900
Impending release of handmade Network, which I believe is happening.

1211
01:18:03,900 --> 01:18:07,600
Later this month, there's also a patreon page and go to the most part,

1212
01:18:07,600 --> 01:18:10,700
the video series and a tweet Baht, which I will have to go start.

1213
01:18:10,700 --> 01:18:13,500
Now, as we talked about in the pre stream, anytime they reboot my

1214
01:18:13,500 --> 01:18:17,600
server, I have not actually gone and figured out how I put things in

1215
01:18:17,600 --> 01:18:21,000
the startup sequence, in this particular flavor of Unix.

1216
01:18:21,200 --> 01:18:23,900
So every time they wrote my server, have to go manually restart the

1217
01:18:23,900 --> 01:18:27,500
Tweet bot, which is probably not what I should be doing.

1218
01:18:27,500 --> 01:18:29,900
I should find out where they actually start up sequences and

1219
01:18:30,000 --> 01:18:30,300
It in there.

1220
01:18:30,300 --> 01:18:33,800
But Unix probably fifty thousand places.

1221
01:18:33,800 --> 01:18:37,200
It could be depending on the particular release of the particular

1222
01:18:37,200 --> 01:18:37,800
distribution.

1223
01:18:37,800 --> 01:18:39,100
So, you know it is.

1224
01:18:39,600 --> 01:18:41,600
Anyway, that's about it.

1225
01:18:41,700 --> 01:18:42,500
I'll be back here tomorrow.

1226
01:18:42,500 --> 01:18:43,000
5:00 p.m.

1227
01:18:43,000 --> 01:18:44,600
Pacific Daylight time.

1228
01:18:44,900 --> 01:18:46,000
Hope to see you back here.

1229
01:18:47,100 --> 01:18:50,700
We're seems like we're getting pretty far along on the debug code.

1230
01:18:50,700 --> 01:18:54,700
So I feel like we should be kind of being able to bolt everything up

1231
01:18:55,000 --> 01:18:55,800
relatively soon here.

1232
01:18:55,800 --> 01:18:57,500
I mean, feels like things are kind of converging.

1233
01:18:57,500 --> 01:18:59,800
We're adding some nice features and and stuff.

1234
01:19:00,000 --> 01:19:00,600
Feels pretty good.

1235
01:19:00,600 --> 01:19:03,200
So it's kind of seems like we'll be able to

1236
01:19:04,500 --> 01:19:07,900
Wrap that up this week maybe and move on some of the other items on

1237
01:19:07,900 --> 01:19:11,100
our to-do list until tomorrow.

1238
01:19:11,200 --> 01:19:14,200
I hope you have some other programming that you might be doing and I

1239
01:19:14,200 --> 01:19:21,200
hope it goes well if not well there's always tomorrow.

1240
01:19:21,800 --> 01:19:26,200
So take it easy everyone and I will see you back here until then have

1241
01:19:26,200 --> 01:19:26,400
fun.

1242
01:19:26,400 --> 01:19:28,100
Programming else you on the internet, take it easy.

