1
00:00:02,100 --> 00:00:05,100
Okay, hello everyone and welcome to handmade.

2
00:00:05,100 --> 00:00:08,100
Here are the show recode complete game live on Twitch.

3
00:00:08,100 --> 00:00:09,800
No library's new engines.

4
00:00:09,800 --> 00:00:10,900
It's just us.

5
00:00:12,100 --> 00:00:18,800
And we are in the middle of sort of straightening out our asset or

6
00:00:18,800 --> 00:00:19,800
assets story.

7
00:00:19,900 --> 00:00:23,500
If you will thus far on handmade hero because we've been working on

8
00:00:23,500 --> 00:00:24,000
engine stuff.

9
00:00:24,000 --> 00:00:28,400
We haven't thought very hard about how we want our assets to actually

10
00:00:28,400 --> 00:00:30,800
be stored and loaded in the real shipping version.

11
00:00:31,400 --> 00:00:32,000
Of the game.

12
00:00:32,000 --> 00:00:35,500
And so one of the things that we have to do, before we can call the

13
00:00:35,500 --> 00:00:39,600
sort of underlying layers of the game done, is we have to figure out

14
00:00:39,600 --> 00:00:42,800
how the assets are going to be stored and how the game talks about

15
00:00:42,800 --> 00:00:46,700
those assets so that it can retrieve them and make meaningful use of

16
00:00:46,700 --> 00:00:46,800
them.

17
00:00:46,800 --> 00:00:50,200
So it knows like what is what, and it knows what to put on the screen

18
00:00:50,200 --> 00:00:53,900
where and all these sorts of things, it needs information about what

19
00:00:53,900 --> 00:00:55,300
assets, it has available to it.

20
00:00:55,300 --> 00:00:58,200
And so that's why we started doing yesterday just because kind of one

21
00:00:58,200 --> 00:01:00,800
thing led to another we had done assets tree

22
00:01:00,900 --> 00:01:04,000
Aiming work and I was kind of saying, well in order to go any further

23
00:01:04,000 --> 00:01:07,500
on this, we kind of have to have some idea of like what the asset

24
00:01:07,500 --> 00:01:08,900
table is and all these are the certain things.

25
00:01:08,900 --> 00:01:11,600
So that is what we're in the middle of doing right now.

26
00:01:11,600 --> 00:01:13,300
And so I'm going to go ahead and jump into that.

27
00:01:13,800 --> 00:01:17,600
Just before I do today is day 1, 34, which means that if you are

28
00:01:17,600 --> 00:01:19,900
trying to follow along at home and you have pre-ordered, the game on

29
00:01:19,900 --> 00:01:24,200
handmade hero dot-org, you will want to unzip day 133, out of the

30
00:01:24,200 --> 00:01:24,600
sources.

31
00:01:24,600 --> 00:01:28,000
IP that is the source code that I am starting with right now.

32
00:01:28,200 --> 00:01:30,800
And that is what you should start with if you want to be editing.

33
00:01:31,000 --> 00:01:33,500
Same code that I am in order to follow along.

34
00:01:34,700 --> 00:01:39,900
All right, so if I remember correctly, we only just had gotten started

35
00:01:40,000 --> 00:01:42,400
because we were actually working on finishing up some asset streaming

36
00:01:42,400 --> 00:01:43,000
stuff yesterday.

37
00:01:43,000 --> 00:01:47,800
So we only just barely started talking about the game asset stuff and

38
00:01:47,800 --> 00:01:51,600
what we might want to do in terms of how that stuff was organized.

39
00:01:51,700 --> 00:01:55,700
We had this concept here of an asset tag and asset bitmap, info, and

40
00:01:55,700 --> 00:01:59,200
asset group, and stuff, the group hadn't really come to fruition much.

41
00:01:59,200 --> 00:02:02,100
We hadn't really talked about that very much, but we were kind of

42
00:02:02,100 --> 00:02:03,800
saying, like, yeah, I don't know about this.

43
00:02:03,800 --> 00:02:04,400
It's hard.

44
00:02:04,500 --> 00:02:07,800
Say, but I wrote kind of a little example or Timur.

45
00:02:07,800 --> 00:02:11,600
It's like oh imagine if I had these tags on assets and I wanted to

46
00:02:12,000 --> 00:02:15,100
pick, you know, certain assets out of out of a hat or something like

47
00:02:15,100 --> 00:02:15,400
this.

48
00:02:18,600 --> 00:02:23,100
You know, this might be the kind of way that I could Envision doing it

49
00:02:23,200 --> 00:02:27,900
and so you can kind of see me doing this, this sort of tag-based

50
00:02:27,900 --> 00:02:31,900
matching and waiting thing here to figure out, you know, what would be

51
00:02:31,900 --> 00:02:33,900
out of a set you know, of a

52
00:02:34,400 --> 00:02:39,700
A set of assets, which of the assets would best match some example

53
00:02:40,500 --> 00:02:44,600
where I was saying, I want these particular values or whatever, right?

54
00:02:45,300 --> 00:02:48,900
And so I don't know, I don't know how much likes that has.

55
00:02:48,900 --> 00:02:51,800
It was just something that I kind of pulled out of thin air.

56
00:02:52,200 --> 00:02:55,400
But what I'm trying to do with this and where I'm trying to go with

57
00:02:55,400 --> 00:02:59,900
this is, I need to have some way for the game to talk about

58
00:03:00,500 --> 00:03:03,300
The assets that are in the asset file without actually necessarily

59
00:03:03,300 --> 00:03:04,000
knowing what they are.

60
00:03:04,000 --> 00:03:08,000
And the reason that I say it that way is because let's say that we

61
00:03:08,000 --> 00:03:12,500
want to do something like have some trees, right?

62
00:03:12,600 --> 00:03:15,400
We've got trees in the game right now, we have one Sprite it's just a

63
00:03:15,400 --> 00:03:16,400
tree, right?

64
00:03:16,400 --> 00:03:20,100
And you know, if I go over here and the Run the game as it exists at

65
00:03:20,100 --> 00:03:23,700
the moment you can see that there are these little trees that are

66
00:03:23,700 --> 00:03:26,500
lining kind of the the play area there.

67
00:03:27,200 --> 00:03:29,800
We just kind of we kind of wanted to make like in the shape of a room.

68
00:03:30,000 --> 00:03:32,000
So we just stuck some trees down there, right?

69
00:03:32,200 --> 00:03:34,400
But as we go forward and we want to make more interesting

70
00:03:34,400 --> 00:03:38,500
environments, obviously, we won't necessarily just want to have one

71
00:03:38,500 --> 00:03:40,200
single tree Sprite.

72
00:03:40,200 --> 00:03:42,200
We might want to have like several trees, right?

73
00:03:42,200 --> 00:03:45,200
And we might want to have like Forest have different types of trees in

74
00:03:45,200 --> 00:03:45,400
them.

75
00:03:45,400 --> 00:03:49,500
And furthermore, we might mop those forests to have different types of

76
00:03:49,500 --> 00:03:51,300
trees, depending on where they are in the world.

77
00:03:51,300 --> 00:03:53,700
So that there can be different types of trees and different types of

78
00:03:53,700 --> 00:03:55,800
forests and all these other sorts of things, right?

79
00:03:55,800 --> 00:03:59,700
So you can imagine that there could be a fairly wide notion of what is

80
00:03:59,700 --> 00:03:59,800
8.

81
00:04:00,000 --> 00:04:03,700
Free Sprite even inside just this one game.

82
00:04:03,700 --> 00:04:08,000
And so, for that reason, we need a way of talking about tree Sprites

83
00:04:08,200 --> 00:04:12,300
in some way that's different and more expressive than just, what I

84
00:04:12,300 --> 00:04:13,900
kind of did to Simply Port.

85
00:04:13,900 --> 00:04:17,800
What we had right now, which was to just have a single, you know, a

86
00:04:17,800 --> 00:04:18,500
single token.

87
00:04:18,500 --> 00:04:22,000
Basically that says, I want a tree and the asset system gets me back a

88
00:04:22,000 --> 00:04:23,100
tree, right?

89
00:04:23,100 --> 00:04:26,400
So what I would rather do is I would rather have something where the

90
00:04:26,400 --> 00:04:28,000
asset system can say something.

91
00:04:28,000 --> 00:04:29,800
Like, get me back a tree.

92
00:04:29,900 --> 00:04:30,400
Tree.

93
00:04:30,700 --> 00:04:35,400
And I want a tree with these properties, and I don't really need to

94
00:04:35,400 --> 00:04:40,800
know how many trees Sprites you have or what their characteristics

95
00:04:40,800 --> 00:04:41,200
are.

96
00:04:41,400 --> 00:04:46,400
I just know what I'm looking for in terms of a tree and you give me

97
00:04:46,400 --> 00:04:49,100
back something that matches as close as possible.

98
00:04:49,100 --> 00:04:50,300
What I actually wanted.

99
00:04:50,500 --> 00:04:53,300
And the reason that this is kind of nice, is it because it means that

100
00:04:53,300 --> 00:04:58,100
without actually changing the game code, you can upgrade the set of

101
00:04:58,100 --> 00:04:59,800
visual representations that are

102
00:05:00,000 --> 00:05:03,000
With the game just by updating the data pack, right?

103
00:05:03,500 --> 00:05:07,100
So, if you action is only delivered, you know, one tree or five trees

104
00:05:07,100 --> 00:05:08,000
to me or whatever.

105
00:05:08,100 --> 00:05:11,600
And I put them in the data pack and I write the game code and later we

106
00:05:11,600 --> 00:05:14,800
go and see like, oh, we really wish there was a little more variety in

107
00:05:14,800 --> 00:05:16,500
this type of Forest, right?

108
00:05:17,300 --> 00:05:20,700
It's kind of nice to have a system where I don't really have to do any

109
00:05:20,700 --> 00:05:24,300
real work in the code, to be able to just start adding more tree

110
00:05:24,300 --> 00:05:25,600
Sprites to it, right?

111
00:05:25,800 --> 00:05:29,300
And furthermore, this allows kind of some easy modding to happen as

112
00:05:29,300 --> 00:05:29,700
well.

113
00:05:29,900 --> 00:05:32,300
It means that if people want to add their own tree Sprites to the

114
00:05:32,300 --> 00:05:35,700
game, the game engine doesn't have to be recompiled just to allow

115
00:05:35,700 --> 00:05:39,400
someone to add some more tree variety or to make trees that are more

116
00:05:39,400 --> 00:05:43,100
specific to an area where that didn't actually exist before, right?

117
00:05:46,000 --> 00:05:46,500
So,

118
00:05:47,700 --> 00:05:48,700
That is.

119
00:05:50,000 --> 00:05:51,100
That is the idea.

120
00:05:51,800 --> 00:05:54,400
All right, that's that's what we're going for here.

121
00:05:56,200 --> 00:05:59,900
So, I'm going to go ahead and talk about.

122
00:06:00,000 --> 00:06:00,900
Easy part of it.

123
00:06:01,600 --> 00:06:05,200
And we'll come to the harder part a little bit later.

124
00:06:05,500 --> 00:06:10,700
Okay, so if I take a look here into the data directory, right?

125
00:06:11,200 --> 00:06:15,400
If we if we go into the handmade gyro data directory, we have two

126
00:06:15,400 --> 00:06:15,900
things, right?

127
00:06:15,900 --> 00:06:20,900
We've got test where we've kind of got this this stuff where we're

128
00:06:20,900 --> 00:06:22,400
starting with version of just the hero.

129
00:06:23,000 --> 00:06:25,700
And some layer example, things like from the startup screen or

130
00:06:25,700 --> 00:06:26,800
whatever, right?

131
00:06:27,200 --> 00:06:29,900
And then we also have this test to which had some very

132
00:06:30,000 --> 00:06:33,500
Variants on things as grasses that had some grounds, right?

133
00:06:33,800 --> 00:06:36,000
And then we had some rocks here, right?

134
00:06:36,800 --> 00:06:42,000
And what I kind of want to do is take one of these, which is like the

135
00:06:42,000 --> 00:06:46,700
Rocks seem to be the most varied, although the trees I guess the

136
00:06:46,700 --> 00:06:48,700
trees, we could also kind of do as well.

137
00:06:49,300 --> 00:06:50,200
If we wanted to

138
00:06:51,400 --> 00:06:54,400
But the trees in the rocks, have this sort of thing where I can

139
00:06:54,400 --> 00:06:57,600
pretend even though they're not really set up for it quite yet, but, I

140
00:06:57,600 --> 00:07:00,100
could pretend that these guys had certain properties, right?

141
00:07:00,100 --> 00:07:02,300
Like, for example, this is a rougher rock.

142
00:07:02,500 --> 00:07:05,500
This is a smoother Rock and maybe that one's in between right and this

143
00:07:05,500 --> 00:07:08,300
one's a Flat Rock and so on, right?

144
00:07:08,500 --> 00:07:12,100
So, you can imagine me, sort of classifying these guys, with some tags

145
00:07:12,100 --> 00:07:15,100
that say, what their properties are in addition to the fact that like,

146
00:07:15,100 --> 00:07:17,200
he's a tree, right?

147
00:07:17,700 --> 00:07:20,500
And so one way we could potentially,

148
00:07:21,100 --> 00:07:25,700
Our sort of setting this up because we could think about the tags as

149
00:07:25,700 --> 00:07:30,100
sort of having maybe one sort of Primal identifier that says, what?

150
00:07:30,100 --> 00:07:33,600
The actual like, sort of type of the thing is, you know, this is a

151
00:07:33,600 --> 00:07:34,200
tree.

152
00:07:35,800 --> 00:07:40,100
And then we could have an additional piece, which says, here are the

153
00:07:40,100 --> 00:07:43,800
tags which just kind of talk about what the quality of this tree

154
00:07:44,100 --> 00:07:49,500
actually is right and seemingly for that type where we have that.

155
00:07:49,500 --> 00:07:54,000
The type part I could also sort of say, you know, we could do that for

156
00:07:54,000 --> 00:07:57,600
tags as well because one thing that you could imagine is you know

157
00:07:57,600 --> 00:08:02,200
let's say that I have trying to think of what would be a good example

158
00:08:02,200 --> 00:08:05,500
here but let's say that I have something like the hero

159
00:08:06,100 --> 00:08:09,000
Well, there's three or four parts to the hero, there's like the hero

160
00:08:09,000 --> 00:08:12,400
head, there's a hero torso and there's the hero cape.

161
00:08:13,900 --> 00:08:20,600
And if I think about those pieces, I could imagine maybe wanting those

162
00:08:20,600 --> 00:08:22,000
to be subdivided.

163
00:08:22,000 --> 00:08:27,100
So I could sort of say, Okay, I want to hear, oh, I don't know how

164
00:08:27,100 --> 00:08:29,000
many parts a hero has.

165
00:08:29,200 --> 00:08:32,700
So I'm just going to trust that you will tell me how many parts of

166
00:08:32,700 --> 00:08:37,100
hero has and those parts themselves could potentially be classified on

167
00:08:37,100 --> 00:08:38,000
something, right?

168
00:08:38,200 --> 00:08:41,100
And that would be the assembly part of things that we were talking

169
00:08:41,100 --> 00:08:41,500
about.

170
00:08:41,500 --> 00:08:42,900
So we have a bunch of stuff there.

171
00:08:43,200 --> 00:08:43,600
I

172
00:08:43,900 --> 00:08:45,900
I feel like we want to kind of tackle all that stuff.

173
00:08:45,900 --> 00:08:48,700
I feel like it'll be useful for us to tackle that stuff.

174
00:08:48,700 --> 00:08:51,300
So I'm going to start with the simplest one.

175
00:08:51,300 --> 00:08:55,800
Which is just that sort of flavor matching that sort of I know that I

176
00:08:55,800 --> 00:08:59,400
want a rock and I need you to sort of find a rock that fits this

177
00:09:00,000 --> 00:09:00,700
The criteria.

178
00:09:00,900 --> 00:09:02,600
That's what I would like to do first.

179
00:09:04,800 --> 00:09:07,100
And so that is what I'm going to try now.

180
00:09:07,900 --> 00:09:08,500
Okay.

181
00:09:08,500 --> 00:09:13,000
So since we kind of have this, I'm going to go ahead and say we've got

182
00:09:13,000 --> 00:09:14,800
a thing here which is, you know what?

183
00:09:14,800 --> 00:09:15,900
I'll just have Rock in here.

184
00:09:15,900 --> 00:09:18,300
I'm going to go ahead and add that in.

185
00:09:18,300 --> 00:09:22,300
And then what I want to do is say that when I actually go ahead and

186
00:09:22,300 --> 00:09:27,200
get out a game asset, when I pull out a game asset like rock, what I'd

187
00:09:27,200 --> 00:09:32,200
like to do is I'd like to make it so that that game asset which I

188
00:09:32,200 --> 00:09:35,300
guess in this case, you know we have this called a game assets lat and

189
00:09:35,300 --> 00:09:37,900
maybe what I kind of want to do instead is just actually go ahead and

190
00:09:38,000 --> 00:09:42,100
Call that a game asset like so right and to some degree I don't even

191
00:09:42,100 --> 00:09:46,000
know if we really need to call it a game asset, it could just be

192
00:09:46,000 --> 00:09:46,800
called an asset.

193
00:09:46,800 --> 00:09:50,400
I mean, there's nothing else in here besides assets, right?

194
00:09:50,400 --> 00:09:53,400
I mean I'm sorry there's nothing else in here besides the game so it's

195
00:09:53,400 --> 00:09:56,400
probably stupid for me to call it a game asset when we kind of all

196
00:09:56,400 --> 00:09:57,800
know what it is.

197
00:09:58,100 --> 00:10:00,900
Similarly I could just call this assets but you know, either way

198
00:10:01,800 --> 00:10:05,200
So any or maybe the asset, you know, system and manager who knows

199
00:10:05,200 --> 00:10:05,700
whatever you want.

200
00:10:05,700 --> 00:10:07,000
But anyway we'll leave that aside.

201
00:10:07,000 --> 00:10:12,500
We have now this concept of the asset ID that we bring back stuff as

202
00:10:12,500 --> 00:10:15,700
and I'm going to go ahead and say that this is you know, an assets are

203
00:10:15,700 --> 00:10:20,700
a right like like so and the assets array is going to be something

204
00:10:20,700 --> 00:10:25,300
where this is the sort of the primary word that you use to talk about

205
00:10:25,300 --> 00:10:25,800
stuff.

206
00:10:25,800 --> 00:10:30,100
So when we say that, we want something in the game we're going to have

207
00:10:30,100 --> 00:10:31,700
to say one of these sort of

208
00:10:31,800 --> 00:10:34,300
Fixed asset ID types, right?

209
00:10:36,100 --> 00:10:38,800
We're going to have to say, and I guess, you know, now that I think

210
00:10:38,800 --> 00:10:43,100
about it to maybe these really should be asset type IDs in that sense

211
00:10:43,100 --> 00:10:48,400
as well, because we kind of have to say, you know, we kind of have to

212
00:10:48,400 --> 00:10:52,800
say which ones, it's not an individual asset, right.

213
00:10:52,800 --> 00:10:56,800
It's a particular set class of assets, right?

214
00:10:57,600 --> 00:11:01,100
And so we have the assets and then we also have in addition to the

215
00:11:01,100 --> 00:11:01,600
assets

216
00:11:01,700 --> 00:11:05,600
We kind of have other tables here that mirror the previous table.

217
00:11:05,600 --> 00:11:08,800
So, although we were using Game asset ID to previously talked about

218
00:11:08,800 --> 00:11:13,900
bitmaps, we probably actually want to have in this here.

219
00:11:13,900 --> 00:11:16,100
The asset slop stuff.

220
00:11:17,200 --> 00:11:22,700
We probably want to talk about this as like assets lot for bitmaps.

221
00:11:22,700 --> 00:11:25,500
You probably want to have that, but we don't actually know how many

222
00:11:25,500 --> 00:11:26,900
there are going to be, right?

223
00:11:27,000 --> 00:11:29,300
Because we were using the system where we where we passed around

224
00:11:29,300 --> 00:11:30,300
bitmask by d's.

225
00:11:30,400 --> 00:11:31,600
We still want to be able to do that.

226
00:11:31,800 --> 00:11:32,700
For asset loading.

227
00:11:33,400 --> 00:11:36,000
So really we want to keep that that notion around.

228
00:11:36,200 --> 00:11:39,700
But now I think what we want to do is it have some notion of a bitmap

229
00:11:39,700 --> 00:11:41,000
count, right?

230
00:11:41,100 --> 00:11:44,100
We want to have some notion of how many there are and we don't

231
00:11:44,100 --> 00:11:49,400
actually know how many there are till we load our asset file, okay?

232
00:11:50,800 --> 00:11:51,900
So we want to do that.

233
00:11:53,700 --> 00:11:56,500
And and so this is going to be sort of a blind pointer.

234
00:11:56,500 --> 00:11:59,800
And so when we go to load the initial asset table off of disk,

235
00:12:00,100 --> 00:12:03,800
That is something that we will grab is all of those bitmap infos in

236
00:12:03,800 --> 00:12:09,800
here and yeah, so we will get that they won't have the assets and the

237
00:12:09,800 --> 00:12:14,800
assets, of course, in them will have sort of some notion of how to get

238
00:12:14,800 --> 00:12:15,100
to that.

239
00:12:15,100 --> 00:12:21,900
So we're going to have so asset is probably the wrong word.

240
00:12:21,900 --> 00:12:26,000
If this is asset type here, right then what we're going to have is

241
00:12:26,000 --> 00:12:29,200
something like an asset type, you know,

242
00:12:30,000 --> 00:12:31,500
To falls off the asset type ID.

243
00:12:31,800 --> 00:12:34,400
The asset type will be the thing that will actually be looking at

244
00:12:34,400 --> 00:12:38,000
into, and that's where we can get out our numbers.

245
00:12:38,100 --> 00:12:38,600
Right?

246
00:12:38,600 --> 00:12:43,600
So basically say, like here are asset types, we can pull those out and

247
00:12:43,600 --> 00:12:47,600
once we get an asset type, then inside there, it will tell us all of

248
00:12:47,600 --> 00:12:51,600
the options that we have, for that particular asset type that seems

249
00:12:51,600 --> 00:12:52,500
pretty reasonable to me.

250
00:12:52,600 --> 00:12:53,900
So this would be something.

251
00:12:53,900 --> 00:12:56,500
And again, we'll have to go write the usage code to actually know

252
00:12:56,500 --> 00:12:57,400
exactly what's going to be.

253
00:12:57,400 --> 00:12:59,900
But I'm just kind of brainstorming out here into the

254
00:13:00,000 --> 00:13:00,400
Jealousy.

255
00:13:00,400 --> 00:13:01,500
Like what the date is that?

256
00:13:01,500 --> 00:13:02,500
I actually have.

257
00:13:03,200 --> 00:13:06,700
So I would need something like the number of these, right?

258
00:13:06,700 --> 00:13:09,700
Like how many I have of a particular asset type.

259
00:13:09,800 --> 00:13:17,500
And then I would need some notion of of of where they all were, right.

260
00:13:17,700 --> 00:13:20,500
I'm trying to think now for asset types,

261
00:13:22,000 --> 00:13:23,400
Asset types.

262
00:13:25,300 --> 00:13:30,100
I wonder if I actually want to do split these because there's going to

263
00:13:30,100 --> 00:13:33,100
be audio assets and bitmap assets.

264
00:13:34,700 --> 00:13:37,200
I'm trying to think of whether I want them split.

265
00:13:38,300 --> 00:13:39,600
I might.

266
00:13:42,300 --> 00:13:47,100
Even though they're pretty much going to be roughly the same, you

267
00:13:47,100 --> 00:13:52,300
know, we're in other words, we're going to have something that feels

268
00:13:52,300 --> 00:13:54,300
something like this, right?

269
00:13:54,500 --> 00:13:57,500
We're going to have we're going to have this sort of thing, right?

270
00:13:58,000 --> 00:14:01,000
And so when we go to look up an asset type, and we say, you know, I

271
00:14:01,000 --> 00:14:01,900
want to rock.

272
00:14:02,700 --> 00:14:05,900
The question is, do we have two different asset type tables as well,

273
00:14:06,200 --> 00:14:08,600
or do we just have one and they're all in here.

274
00:14:08,600 --> 00:14:10,300
So the sounds also come in here.

275
00:14:10,500 --> 00:14:13,000
To like, hit guy or whatever, right?

276
00:14:14,100 --> 00:14:15,000
That sort of thing.

277
00:14:15,500 --> 00:14:16,300
So I don't know.

278
00:14:21,700 --> 00:14:23,500
I'm not sure exactly what we want to do there.

279
00:14:26,400 --> 00:14:28,700
You know, we're only going to be looking up one or the other.

280
00:14:30,100 --> 00:14:32,100
But since they're very, very similar.

281
00:14:32,500 --> 00:14:34,700
I do wonder if maybe we just want to leave it the same.

282
00:14:34,700 --> 00:14:36,400
So I think I'm going to do it that way.

283
00:14:37,000 --> 00:14:41,900
I think I'm going to I think I'm going to go ahead and actually do it

284
00:14:41,900 --> 00:14:46,000
that way and and maybe I will call this a an asset type ID.

285
00:14:46,300 --> 00:14:51,400
Maybe I'll do asset type like that or I could do a tea.

286
00:14:52,300 --> 00:14:54,400
I don't know what, I don't know what I want to do for this.

287
00:14:54,400 --> 00:14:58,000
It's hard to say, usually I like to prefix them with something.

288
00:14:59,000 --> 00:14:59,600
But I'm not sure.

289
00:14:59,600 --> 00:14:59,900
Exactly.

290
00:15:00,000 --> 00:15:04,600
But in this particular instance, asset type backdrop.

291
00:15:05,000 --> 00:15:05,900
That's the type Shadow.

292
00:15:05,900 --> 00:15:07,900
Yeah I could I could live with that.

293
00:15:09,800 --> 00:15:13,900
So anyway, in here, where we've got the asset types that's going to

294
00:15:13,900 --> 00:15:17,800
give us something like count and then inside there, we would need to

295
00:15:17,800 --> 00:15:23,200
have some kind of an index into one of the the info arrays, right?

296
00:15:23,600 --> 00:15:25,800
And there's going to be two different types of infrared Rays.

297
00:15:26,000 --> 00:15:33,100
So, yeah, I mean, again, it's unclear in terms of the matching how we

298
00:15:33,100 --> 00:15:38,000
would actually want to do it, but this part is specific to a bitmap,

299
00:15:38,300 --> 00:15:38,800
right?

300
00:15:39,100 --> 00:15:39,200
But

301
00:15:39,500 --> 00:15:43,800
This part isn't, so you could imagine something like, you know, we

302
00:15:43,800 --> 00:15:45,600
actually have the asset here.

303
00:15:46,100 --> 00:15:50,200
You could imagine something like the asset has the set of tags on it,

304
00:15:50,300 --> 00:15:54,600
like so that sort of conform to that matching stuff that we did.

305
00:15:55,400 --> 00:15:58,600
So we have this is a tag ID, right?

306
00:15:58,900 --> 00:16:00,100
This is a tag ID.

307
00:16:02,900 --> 00:16:06,000
So we would have up here and asset tag ID.

308
00:16:06,100 --> 00:16:08,300
Oh, but that's both are 80.

309
00:16:16,400 --> 00:16:18,000
So frustrating.

310
00:16:19,900 --> 00:16:21,500
I guess we'll just call these tags.

311
00:16:22,700 --> 00:16:26,000
And we'll call these assets that made the decision for me.

312
00:16:27,200 --> 00:16:29,600
That's how we want to do it, I guess.

313
00:16:34,200 --> 00:16:36,700
And I won't bother putting in asset type there.

314
00:16:36,700 --> 00:16:41,400
I guess, even though that's really what it is and this is also that.

315
00:16:41,400 --> 00:16:47,100
But anyway, so we'll have tags here and the tags will just be, you

316
00:16:47,100 --> 00:16:47,400
know.

317
00:16:51,300 --> 00:16:53,300
the stuff that we actually want to put in there, so

318
00:16:55,100 --> 00:16:56,400
We can call it smoothness.

319
00:16:58,700 --> 00:17:01,400
Was basically what I was saying about the Rocks, right?

320
00:17:02,300 --> 00:17:07,099
There's a smoothness and then maybe a height, something like that, or

321
00:17:07,099 --> 00:17:07,800
flatness.

322
00:17:08,900 --> 00:17:10,800
And that would be example of some tags.

323
00:17:10,800 --> 00:17:13,599
So we could have on our rocks, right?

324
00:17:14,800 --> 00:17:15,500
So yeah.

325
00:17:15,599 --> 00:17:20,300
So let's see if we have those tags on the Rocks, we have the asset

326
00:17:20,300 --> 00:17:22,000
type ideas to get the rock out.

327
00:17:22,000 --> 00:17:25,800
We could get the rock out by finding one of these assets, which has

328
00:17:25,800 --> 00:17:26,300
the tags.

329
00:17:26,300 --> 00:17:27,800
And then finally, if

330
00:17:27,900 --> 00:17:28,700
As tags match.

331
00:17:28,700 --> 00:17:32,500
Right, we need to know what we would actually do to get it.

332
00:17:32,500 --> 00:17:36,200
And so, the final thing that we would need to do, there is just

333
00:17:36,200 --> 00:17:41,900
whatever the actual ideas into the into one of the slots, right?

334
00:17:42,200 --> 00:17:45,900
So, this would be at slot ID and you would just be required to know

335
00:17:46,600 --> 00:17:47,700
which one of these two arrays.

336
00:17:47,700 --> 00:17:50,200
You were looking up into bitmaps or sounds because you're only going

337
00:17:50,200 --> 00:17:51,300
to be playing one of the other.

338
00:17:51,300 --> 00:17:55,100
So that's really never a danger in my mind and so that would be

339
00:17:55,100 --> 00:17:56,700
roughly the structure that we would have.

340
00:17:57,400 --> 00:17:59,900
okay, so that seems

341
00:18:00,000 --> 00:18:00,900
Pretty reasonable.

342
00:18:01,700 --> 00:18:07,200
So we'd have something like, you know, first asset index and one

343
00:18:07,200 --> 00:18:09,400
passed last asset in the X.

344
00:18:09,800 --> 00:18:13,200
And this would basically be something that if we wanted to.

345
00:18:13,200 --> 00:18:17,800
We could load directly off of disk because these are actually fairly

346
00:18:19,400 --> 00:18:19,600
right.

347
00:18:19,600 --> 00:18:23,000
These could all be something that we could save directly to disk and

348
00:18:23,000 --> 00:18:26,200
borrowing, Indian this conversion we could actually just load it flat

349
00:18:26,400 --> 00:18:27,900
and use it directly, right?

350
00:18:27,900 --> 00:18:29,900
So we could do one big flat load and have

351
00:18:30,000 --> 00:18:36,200
A11 sort of giant set of asset information things here and that would

352
00:18:36,200 --> 00:18:36,900
pretty much do it.

353
00:18:36,900 --> 00:18:44,000
So, so let's go ahead and let's go ahead and take the Bold step of

354
00:18:44,000 --> 00:18:46,700
going out and making handmade asset dot h.

355
00:18:47,000 --> 00:18:50,800
And I'm just going to pull this stuff out and I'm going to put it in

356
00:18:50,800 --> 00:18:51,100
here.

357
00:18:51,100 --> 00:18:55,600
And again, there's no real reason or Rhyme or Reason for any of this,

358
00:18:56,000 --> 00:18:59,800
in terms of why I tend to pull things out in this way.

359
00:19:00,500 --> 00:19:05,300
It really just has to do with my mental ability to keep things

360
00:19:05,300 --> 00:19:06,100
separated.

361
00:19:06,100 --> 00:19:10,800
Sometimes I just like to have stuff come out into separate files so

362
00:19:10,800 --> 00:19:14,700
that I don't look at it or think about it when I'm doing other stuff.

363
00:19:14,700 --> 00:19:17,300
I kind of put it away in another file, right?

364
00:19:17,900 --> 00:19:22,000
And so, there really isn't any kind of code reason as far as I'm

365
00:19:22,000 --> 00:19:22,600
concerned.

366
00:19:22,600 --> 00:19:26,500
If you can, remember it all, or your editor is good, unlike, you know,

367
00:19:26,500 --> 00:19:30,000
Emax, maybe it has really good ability to kind of Jump Around.

368
00:19:30,100 --> 00:19:33,200
Didn't think about things of you things then you could just have it

369
00:19:33,200 --> 00:19:36,000
all in one CPP file like, there really is no reason for H's or

370
00:19:36,000 --> 00:19:36,500
anything.

371
00:19:38,400 --> 00:19:43,300
Or multiple files unless you really like them for some reason, right?

372
00:19:43,300 --> 00:19:45,600
Or your source code controls merge is really lousy.

373
00:19:46,100 --> 00:19:52,900
So anyway, if I go ahead and do that then in the game state, I'm sorry

374
00:19:52,900 --> 00:19:54,900
in the in the transient state, right?

375
00:19:55,300 --> 00:19:58,500
When we have one of these game assets, things it'll sort of store.

376
00:19:58,500 --> 00:20:00,800
This stuff will expect that to be kind of loaded.

377
00:20:00,900 --> 00:20:05,900
And what I'll do in the meantime is that kind of pretend that we have

378
00:20:05,900 --> 00:20:07,800
a function that loads these guys in.

379
00:20:08,700 --> 00:20:12,100
But that doesn't actually live these guys in, right?

380
00:20:12,800 --> 00:20:19,700
So, you know, like at startup where we would go ahead and ask the, you

381
00:20:19,700 --> 00:20:24,600
know, ask the platform layer to load in for us a pack file.

382
00:20:24,600 --> 00:20:28,200
Like you know, directory kind of structure thing that says all the

383
00:20:28,200 --> 00:20:29,500
stuff that we have instead.

384
00:20:29,500 --> 00:20:30,500
I'm just going to say

385
00:20:31,600 --> 00:20:35,300
Call a function that will create one as if we had loaded it in.

386
00:20:35,500 --> 00:20:40,000
So that in the future, when we're ready for that, I can go ahead and

387
00:20:41,200 --> 00:20:43,500
And replace it with a call to something that actually loads it.

388
00:20:43,600 --> 00:20:44,000
Right?

389
00:20:44,900 --> 00:20:46,100
So let's go ahead and do that.

390
00:20:46,100 --> 00:20:48,100
So I want to say trance State.

391
00:20:49,700 --> 00:20:51,100
What is this assets?

392
00:20:51,700 --> 00:20:52,300
Right?

393
00:20:53,300 --> 00:20:57,800
And so do we, we must at the moment.

394
00:21:00,000 --> 00:21:03,600
Actually, because the that guy has a sub Arena, right?

395
00:21:03,600 --> 00:21:05,100
That it's actually allocating from.

396
00:21:05,900 --> 00:21:09,500
So at the moment, we're actually are using that.

397
00:21:09,500 --> 00:21:14,200
So I think what I might do instead of that being embedded, I'm going

398
00:21:14,200 --> 00:21:17,900
to go ahead and make it a little clearer about when this happens here,

399
00:21:18,700 --> 00:21:19,400
right?

400
00:21:19,400 --> 00:21:22,100
I'm going to go ahead and say that game assets.

401
00:21:22,100 --> 00:21:23,700
There's like a pointer to it here.

402
00:21:23,900 --> 00:21:27,200
And what I'm going to do is right here in trance State.

403
00:21:27,200 --> 00:21:29,800
When translates getting initialized, I'm going to say,

404
00:21:30,000 --> 00:21:31,300
Say that trance State.

405
00:21:31,800 --> 00:21:37,800
Oops, trance State assets equals allocate game assets or something

406
00:21:37,800 --> 00:21:38,400
like this.

407
00:21:40,000 --> 00:21:40,500
Right.

408
00:21:41,400 --> 00:21:45,600
And that'll like, load this guy up and, and it'll do the sub.

409
00:21:46,200 --> 00:21:50,500
It'll do like this sub stuff here, and whatever as well, right?

410
00:21:51,600 --> 00:21:55,400
So, I feel like that should probably the task stuff should probably

411
00:21:55,400 --> 00:22:00,200
come first because tasks are kind of a primal private primary sort of

412
00:22:00,200 --> 00:22:01,000
concept.

413
00:22:01,000 --> 00:22:02,400
So those should be in there.

414
00:22:02,700 --> 00:22:06,400
I feel like the high priority queue and the low priority queue should

415
00:22:06,400 --> 00:22:07,700
also be primary things.

416
00:22:07,700 --> 00:22:09,700
So I feel like these guys should be in

417
00:22:09,900 --> 00:22:10,400
As well.

418
00:22:10,700 --> 00:22:13,800
The only thing that I'm a little bit nervous about is actually, I feel

419
00:22:13,800 --> 00:22:18,100
like those maybe should be things that always happen just all the time

420
00:22:18,400 --> 00:22:23,000
whether or not the trance state is initialized or not, seems like a

421
00:22:23,000 --> 00:22:23,500
good idea.

422
00:22:23,500 --> 00:22:26,200
Meaning this sort of seems like kind of thing that should always be

423
00:22:26,200 --> 00:22:29,900
copied in in case during hot loading, the cues.

424
00:22:31,100 --> 00:22:32,700
Oh, but the queues can't change.

425
00:22:33,100 --> 00:22:33,600
Never mind.

426
00:22:33,600 --> 00:22:36,100
The cues are not saying the change during hop floating, so that's not

427
00:22:36,100 --> 00:22:36,900
actually necessary.

428
00:22:37,000 --> 00:22:37,700
I take it back.

429
00:22:39,000 --> 00:22:41,500
All right, so yeah, that's all good.

430
00:22:41,500 --> 00:22:42,100
We got the task.

431
00:22:42,100 --> 00:22:44,200
That's setup will allocate the game assets.

432
00:22:44,900 --> 00:22:48,000
And in order to allocate the game assets, we would need to pass in a

433
00:22:48,000 --> 00:22:50,900
couple things here and maybe one of the things that we passing is how

434
00:22:50,900 --> 00:22:52,500
big we want that to be.

435
00:22:54,000 --> 00:22:57,800
I'm not entirely certain, but let's go ahead and take a look in here.

436
00:22:58,900 --> 00:23:04,000
Let's see in game hoops and made assets that age.

437
00:23:05,000 --> 00:23:08,600
So, in the CPP file, we would have something like allocate game assets

438
00:23:09,000 --> 00:23:11,800
and that returns one of these guys game assets.

439
00:23:13,600 --> 00:23:17,800
And that is going to take one of these Arenas.

440
00:23:17,800 --> 00:23:21,900
Right because it's got to do all this stuff down.

441
00:23:23,200 --> 00:23:30,200
So game assets assets, that's going to be a push struct.

442
00:23:31,400 --> 00:23:34,700
That's going to go on to whatever Arena that we're told to use.

443
00:23:35,400 --> 00:23:37,400
And we're going to create one of these.

444
00:23:37,900 --> 00:23:39,800
We're also going to take the

445
00:23:41,600 --> 00:23:43,800
Submarine out of that right?

446
00:23:44,600 --> 00:23:51,600
Oops assets Arena like so and then this will probably, like I said, be

447
00:23:51,600 --> 00:23:54,500
something that we actually pass in here, right?

448
00:23:54,800 --> 00:23:58,100
So our trance State Arena, oops megabytes

449
00:24:00,500 --> 00:24:04,400
Our translate arena is what we want this game assets to allocate from.

450
00:24:05,000 --> 00:24:08,800
We want the sort of MB here to be 64.

451
00:24:09,900 --> 00:24:12,700
That's going to be the size that this thing is going to use.

452
00:24:12,700 --> 00:24:18,300
So here's our memory Rina, here's the thing.

453
00:24:18,300 --> 00:24:19,200
What do we call this?

454
00:24:19,200 --> 00:24:21,600
We call this a memory index.

455
00:24:22,700 --> 00:24:24,300
I don't love that name.

456
00:24:24,800 --> 00:24:25,500
But what you gonna do?

457
00:24:26,700 --> 00:24:29,500
So we're going to allocate however, much it tells us to allocate as

458
00:24:29,500 --> 00:24:33,100
our sort of sub arena for making space for things.

459
00:24:33,700 --> 00:24:38,400
And then we need to know a couple quick things about how we're going

460
00:24:38,400 --> 00:24:39,600
to do work here, right?

461
00:24:40,200 --> 00:24:42,400
And so we need the trance state.

462
00:24:42,800 --> 00:24:47,900
So I suppose we will have to pass that in and we need the debug

463
00:24:47,900 --> 00:24:49,600
platform beat entire file for now though.

464
00:24:49,600 --> 00:24:52,500
Hopefully that will be replaced with something else.

465
00:24:52,900 --> 00:24:54,200
Eventually, right?

466
00:24:54,200 --> 00:24:55,500
So we have to translate in there.

467
00:24:55,500 --> 00:24:56,100
We got that.

468
00:24:56,100 --> 00:25:00,200
So this is the transient State date.

469
00:25:02,400 --> 00:25:03,300
Trance State.

470
00:25:03,300 --> 00:25:08,100
And then we have the debug read entire file.

471
00:25:11,100 --> 00:25:11,300
Huh.

472
00:25:15,000 --> 00:25:16,500
Where is my game assets?

473
00:25:18,500 --> 00:25:19,200
Where are you?

474
00:25:20,900 --> 00:25:21,500
There it is.

475
00:25:22,300 --> 00:25:23,500
Could remember the type of this guy?

476
00:25:26,600 --> 00:25:28,000
Read entire file.

477
00:25:31,600 --> 00:25:34,800
And that should just about do it.

478
00:25:35,000 --> 00:25:35,900
That seems good.

479
00:25:35,900 --> 00:25:41,800
All right, so let's go ahead and patch up all of the nastiness that

480
00:25:41,800 --> 00:25:44,700
this is going to create having move that stuff out here.

481
00:25:45,400 --> 00:25:50,600
So I'll go ahead and include handmade asset dot h.

482
00:25:51,500 --> 00:25:59,600
And then, in the CPP, I will add in that handmade asset CBP and then I

483
00:25:59,600 --> 00:26:00,700
got to figure out how to

484
00:26:00,800 --> 00:26:02,400
You sort of calm down.

485
00:26:02,500 --> 00:26:06,500
All my compiler errors and let's take a look.

486
00:26:06,500 --> 00:26:08,300
Okay, here a bit Maps.

487
00:26:08,700 --> 00:26:11,100
I did not actually mean to move that out yet.

488
00:26:12,400 --> 00:26:16,600
So why did that get moved out because that's here in game assets,

489
00:26:16,700 --> 00:26:17,100
right?

490
00:26:17,200 --> 00:26:17,700
All right.

491
00:26:17,700 --> 00:26:18,500
Well, that's fine.

492
00:26:19,600 --> 00:26:23,800
Suppose we can move that in here for now, since it's going to become

493
00:26:23,800 --> 00:26:28,500
part of this anyway, in sort of the near future,

494
00:26:30,400 --> 00:26:35,000
All right, so game asset ID is now an asset type ID, right?

495
00:26:35,600 --> 00:26:39,900
So that's fine asset type ID.

496
00:26:42,100 --> 00:26:43,000
And let's see.

497
00:26:43,000 --> 00:26:48,100
So these These are technically not going to be game asset ideas

498
00:26:48,100 --> 00:26:48,600
anymore.

499
00:26:48,600 --> 00:26:55,300
And in fact really, this load asset is not what we want anymore.

500
00:26:55,300 --> 00:26:57,700
So really, we're going to have two of these, right?

501
00:26:57,800 --> 00:26:59,500
We're going to have low bitmap.

502
00:27:00,000 --> 00:27:01,100
And load sound.

503
00:27:02,500 --> 00:27:07,000
Those are the two, you know, sort of not sure what you want to call

504
00:27:07,000 --> 00:27:07,200
them.

505
00:27:07,200 --> 00:27:17,400
Those are the two audiovisuals AV AV resources were going to have

506
00:27:19,200 --> 00:27:22,000
So the sound system will call this one when it needs something and the

507
00:27:22,100 --> 00:27:24,200
renderer would call this one when it needs something.

508
00:27:24,800 --> 00:27:28,500
And these are not going to be passed, that they're simply going to be

509
00:27:28,500 --> 00:27:31,500
passed straight up IDs right.

510
00:27:31,500 --> 00:27:37,600
That are, you know, for sounds or 44, pit maps, that would be looking

511
00:27:37,600 --> 00:27:40,300
into the sounds of the bitmap arrays, right?

512
00:27:41,000 --> 00:27:44,200
So, that's how that actually is going to go now, I don't actually

513
00:27:44,200 --> 00:27:45,000
know.

514
00:27:45,000 --> 00:27:46,300
Do we move that over yet?

515
00:27:46,300 --> 00:27:48,600
I don't think we did soloed asset, right?

516
00:27:50,300 --> 00:27:53,900
It's in here and as is the stuff that does the work.

517
00:27:54,300 --> 00:27:57,800
So what I'd like to do, I guess is go ahead and sort of grab that out

518
00:27:58,300 --> 00:28:02,000
and we'll have to grab a few other things out as well.

519
00:28:03,000 --> 00:28:03,900
Put that in here.

520
00:28:06,300 --> 00:28:11,000
So yeah, what we want to do here is take load asset.

521
00:28:11,100 --> 00:28:12,800
It is not really load asset.

522
00:28:12,800 --> 00:28:14,900
Its load bitmap, right?

523
00:28:15,800 --> 00:28:20,600
And it takes the Unit 32 ID, it does exactly what this does.

524
00:28:20,600 --> 00:28:23,000
So this is all still totally what we want.

525
00:28:23,000 --> 00:28:24,700
That's all good, right?

526
00:28:25,600 --> 00:28:30,100
So nothing particularly needs to change their and then we would also

527
00:28:30,100 --> 00:28:33,800
have again a very similar one that would be responsible for pulling a

528
00:28:33,800 --> 00:28:35,700
sound out of the sound.

529
00:28:36,800 --> 00:28:37,900
So that's all good to.

530
00:28:39,300 --> 00:28:39,700
All right.

531
00:28:39,700 --> 00:28:44,100
So when we do push bitmap, again this is going to be a un 32 ID,

532
00:28:44,100 --> 00:28:46,200
that's some bitmap ID that we have.

533
00:28:47,300 --> 00:28:50,800
We could if we wanted to try to make this a little bit more robust by

534
00:28:50,800 --> 00:28:56,300
just introducing a fake type for that, I don't know if we really want

535
00:28:56,300 --> 00:29:00,000
to do that or not but I can show you what that would look like.

536
00:29:00,000 --> 00:29:03,600
So you know it would just be this, right?

537
00:29:05,100 --> 00:29:07,400
Something this this straightforward as well.

538
00:29:07,400 --> 00:29:08,300
I'm talking about.

539
00:29:09,100 --> 00:29:13,800
And so this would literally just be hey to make sure that people pass

540
00:29:13,800 --> 00:29:16,400
these things around typed a little bit more.

541
00:29:16,900 --> 00:29:20,200
It's literally just a little bit of an extra insulation there could

542
00:29:20,200 --> 00:29:22,900
compile time checking to make sure that it doesn't like cast to

543
00:29:22,900 --> 00:29:26,200
something automatically and someone accidentally try to specify the

544
00:29:26,200 --> 00:29:29,900
height and they end up specifying a bitmap ID and all everything.

545
00:29:29,900 --> 00:29:32,700
You know goes goes pear-shaped as they say.

546
00:29:34,200 --> 00:29:37,000
So we could do something like that and then in here, we would do a

547
00:29:37,000 --> 00:29:39,000
load bitmap call like that.

548
00:29:40,800 --> 00:29:44,800
And so that's, that's all relatively well, and good.

549
00:29:44,800 --> 00:29:50,200
And in here, what instead of an asset ID, which I think, are we so

550
00:29:50,200 --> 00:29:50,500
sorry?

551
00:29:50,500 --> 00:29:52,300
No, we don't even have to store the ssids ever.

552
00:29:52,300 --> 00:29:54,000
So, so that's what it would look like.

553
00:29:54,400 --> 00:29:58,700
And then, in the load bitmap called, wait, where was that was?

554
00:29:58,700 --> 00:29:59,600
I'm handmade of H.

555
00:29:59,600 --> 00:29:59,800
Okay.

556
00:30:00,000 --> 00:30:02,800
Those should also be moved out as well.

557
00:30:03,200 --> 00:30:10,300
Those should be moved out to here like so and I can go ahead and move

558
00:30:10,300 --> 00:30:11,900
these out a little bit as well.

559
00:30:11,900 --> 00:30:13,500
So we have the bitmap ID there.

560
00:30:14,100 --> 00:30:18,500
So when we call get bitmap or expecting a Fifth map ID, there we go.

561
00:30:18,900 --> 00:30:23,900
That would get are loaded bitmaps out by the ID value, okay?

562
00:30:25,000 --> 00:30:28,600
So all right, so let's keep going on the compile errors, assume we do

563
00:30:28,600 --> 00:30:29,800
load asset work.

564
00:30:30,400 --> 00:30:34,200
Instead here what we what this is actually this is load bitmap work,

565
00:30:34,300 --> 00:30:35,600
it's not load asset work.

566
00:30:36,200 --> 00:30:39,800
It specifically the thing that loads a bitmap so it's going to have a

567
00:30:39,800 --> 00:30:40,800
bitmap ID.

568
00:30:42,000 --> 00:30:44,400
And this is going to be low bitmap work as a function.

569
00:30:45,100 --> 00:30:47,200
It goes ahead and uses one of those little bit map.

570
00:30:47,200 --> 00:30:47,700
Work.

571
00:30:48,300 --> 00:30:52,100
Things does it's little fancy dance here.

572
00:30:52,400 --> 00:30:56,300
Debug load bitmap of course should also probably be in the asset

573
00:30:56,300 --> 00:30:56,600
system.

574
00:30:56,600 --> 00:31:02,900
Now, write debug little bit map so that should kind of get pulled.

575
00:31:03,200 --> 00:31:04,400
Let's pull that out.

576
00:31:05,100 --> 00:31:05,800
There we go.

577
00:31:07,200 --> 00:31:10,500
And yeah, there is

578
00:31:11,900 --> 00:31:13,000
And what else?

579
00:31:13,000 --> 00:31:14,200
We need bitmap.

580
00:31:14,300 --> 00:31:15,800
Header cast to come in there.

581
00:31:15,800 --> 00:31:16,800
There it is.

582
00:31:17,800 --> 00:31:23,200
And all right, so what stuff down a line, top down a line is just

583
00:31:23,700 --> 00:31:27,200
something for doing that sort of faux alignment stuff.

584
00:31:28,000 --> 00:31:32,400
So okay, so in here when we have to actually use the the IDS now we

585
00:31:32,400 --> 00:31:34,400
have to access them because they're actual structs.

586
00:31:34,800 --> 00:31:39,600
That's all good and tasked with memory and begin test with memory are

587
00:31:39,600 --> 00:31:44,800
things that now have to actually things that actually have to be

588
00:31:44,800 --> 00:31:46,400
called outside.

589
00:31:47,700 --> 00:31:52,000
So I don't know where we want to put these exactly in temporary memory

590
00:31:52,000 --> 00:31:53,800
complete previous rights to asking use.

591
00:31:54,300 --> 00:31:57,100
I don't think that needs to be inlined in any particular way.

592
00:31:57,400 --> 00:32:00,600
So I'm just going to go ahead and make these be things that we just

593
00:32:00,600 --> 00:32:03,800
pull out like so.

594
00:32:05,300 --> 00:32:08,700
Load asset work is now load bitmap work.

595
00:32:09,200 --> 00:32:10,100
Like we said,

596
00:32:11,800 --> 00:32:16,300
And work ID is going to be tidy.

597
00:32:16,400 --> 00:32:16,900
So,

598
00:32:19,600 --> 00:32:21,100
Map ID value.

599
00:32:22,700 --> 00:32:27,300
And switch id, id that value again.

600
00:32:28,000 --> 00:32:32,400
So these guys are now just asset right guy underscore as asset

601
00:32:32,400 --> 00:32:36,500
underscore so that's not much of a big deal.

602
00:32:37,100 --> 00:32:39,400
Load asset work is now load bitmap work.

603
00:32:41,000 --> 00:32:44,700
And read entire file is getting passed in here.

604
00:32:44,700 --> 00:32:46,500
What is the problem?

605
00:32:46,500 --> 00:32:49,600
People problem is trance State.

606
00:32:49,800 --> 00:32:53,000
It's not actually supposed to be used for their and I didn't mean to

607
00:32:53,000 --> 00:32:54,900
use it but there you go.

608
00:32:55,400 --> 00:32:58,600
So there we have it first tag index.

609
00:32:58,600 --> 00:32:59,000
Okay.

610
00:32:59,000 --> 00:32:59,700
So our pick

611
00:33:00,200 --> 00:33:03,300
spring is not really a function yet, so I'm just going to get rid of

612
00:33:03,300 --> 00:33:04,600
that temporarily

613
00:33:06,500 --> 00:33:11,600
Our allocate render group, what does this taking the game assets,

614
00:33:11,600 --> 00:33:11,900
right?

615
00:33:11,900 --> 00:33:13,400
It needs to take them like that.

616
00:33:14,100 --> 00:33:18,000
We've got the grass here assets.

617
00:33:18,000 --> 00:33:22,900
Arrow grass is what we actually want and again these will be sort of

618
00:33:23,300 --> 00:33:25,100
very soon now be transitioned over.

619
00:33:25,100 --> 00:33:29,800
So this is actually kind of not that interesting but we should you

620
00:33:29,800 --> 00:33:33,200
know again want to kind of get everything ported over.

621
00:33:33,200 --> 00:33:35,900
So it's worth spending a little extra time to take stuff that

622
00:33:36,700 --> 00:33:39,800
You know is is going to get changed and still Port it over, just so we

623
00:33:39,800 --> 00:33:40,900
can have things running on it.

624
00:33:42,300 --> 00:33:43,300
So

625
00:33:45,800 --> 00:33:47,000
Is it Tran Arena?

626
00:33:47,600 --> 00:33:48,000
Yeah.

627
00:33:48,500 --> 00:33:52,800
So all of these are assets that they should be assets Arrow.

628
00:33:56,600 --> 00:33:58,800
Yeah, well good.

629
00:33:59,600 --> 00:34:04,000
This allocate render group still needs to be changed over and then all

630
00:34:04,000 --> 00:34:08,199
of these guys who are GI underscore should be asset type underscore.

631
00:34:10,300 --> 00:34:10,400
No.

632
00:34:10,400 --> 00:34:13,699
No actually just asset underscore my bad.

633
00:34:20,000 --> 00:34:21,699
So yeah.

634
00:34:22,600 --> 00:34:23,800
Yeah.

635
00:34:26,300 --> 00:34:28,900
So we have a problem here, right?

636
00:34:29,500 --> 00:34:32,300
Which is because we haven't quite ported things over yet.

637
00:34:32,300 --> 00:34:35,400
These are not bitmap IDs actually so that did just catch the bug that

638
00:34:35,400 --> 00:34:38,300
I was saying is why you might want to introduce a bitmap ID, right?

639
00:34:38,600 --> 00:34:40,900
I type that in there, not really thinking about it and that's not a

640
00:34:40,900 --> 00:34:41,500
bitmap ID.

641
00:34:41,500 --> 00:34:44,699
That's an asset ID which is like a family of bitmap potentially.

642
00:34:48,199 --> 00:34:49,400
So yeah.

643
00:34:52,500 --> 00:34:55,900
That's, you know, something about.

644
00:34:56,000 --> 00:34:56,800
That's all I'm saying.

645
00:34:57,700 --> 00:34:59,900
So in this particular circumstance, right?

646
00:35:00,100 --> 00:35:04,600
Where we're drawing these things, I guess what we need to do is have

647
00:35:04,600 --> 00:35:07,600
some way that we can translate just reporting purposes.

648
00:35:08,000 --> 00:35:10,000
So we want to do something like, you know,

649
00:35:12,700 --> 00:35:19,500
Get first bitmap, something like this where we can talk about you know

650
00:35:19,600 --> 00:35:23,800
the game assets or something like this and we'd get the first bitmap

651
00:35:23,800 --> 00:35:26,700
ID that was in there.

652
00:35:27,300 --> 00:35:31,900
Again just totally for porting purposes so it would be.

653
00:35:32,000 --> 00:35:35,600
So it would be something like get first bit by D and then we would

654
00:35:35,600 --> 00:35:37,700
pass the the game assets, right?

655
00:35:37,700 --> 00:35:38,800
So, trance state

656
00:35:39,900 --> 00:35:45,100
Assets like so and this would just be something that allows us to do

657
00:35:45,100 --> 00:35:47,500
that translation pretty quickly, right?

658
00:35:48,100 --> 00:35:55,100
So in here, we'd have something like internal bitmap ID,

659
00:35:56,900 --> 00:35:57,500
Right.

660
00:35:58,600 --> 00:35:59,800
And this would be our game.

661
00:36:00,000 --> 00:36:07,400
Sets and this would be whatever the game asset ID is so asset type ID.

662
00:36:10,200 --> 00:36:15,900
And this would just go ahead and translate that into some sort of

663
00:36:15,900 --> 00:36:16,300
bitmap.

664
00:36:16,300 --> 00:36:20,100
Now, what we can do again at startup is make it so that literally,

665
00:36:20,100 --> 00:36:27,200
it's just is just whatever the asset type ID is right.

666
00:36:27,200 --> 00:36:28,200
We can make the mirror

667
00:36:33,800 --> 00:36:37,700
That's some spelling right there so at the outset we can make it.

668
00:36:37,700 --> 00:36:39,000
So it's just direct translation.

669
00:36:39,000 --> 00:36:42,000
But then we will make it get better as we go, right?

670
00:36:42,800 --> 00:36:45,200
And so now what we need to do is just go ahead and translate the rest

671
00:36:45,200 --> 00:36:48,500
of these to that, like so,

672
00:36:50,200 --> 00:36:52,000
See here, asset.

673
00:36:53,000 --> 00:36:53,700
That.

674
00:36:55,700 --> 00:36:56,300
That.

675
00:36:58,000 --> 00:36:58,700
There we go.

676
00:37:00,900 --> 00:37:01,500
All right.

677
00:37:04,500 --> 00:37:06,100
so, I think

678
00:37:07,800 --> 00:37:09,600
Allocate game assets.

679
00:37:09,600 --> 00:37:10,600
Must return a value.

680
00:37:10,600 --> 00:37:11,300
You are correct.

681
00:37:11,300 --> 00:37:12,400
It must

682
00:37:15,000 --> 00:37:17,200
Oops, I guess the game was still running.

683
00:37:17,600 --> 00:37:18,700
I didn't even remember that.

684
00:37:18,700 --> 00:37:23,000
The game is still running but apparently it was okay.

685
00:37:23,000 --> 00:37:26,900
And so now what I want to do is again in here I want to create sort of

686
00:37:26,900 --> 00:37:31,600
a fake circumstance, I'll come actually back over here.

687
00:37:31,600 --> 00:37:34,700
First of all, to cut out some of the other stuff that was in here,

688
00:37:34,700 --> 00:37:39,000
like this asset prep stuff, this is all now stuff that should be in

689
00:37:39,000 --> 00:37:40,000
here, right?

690
00:37:40,100 --> 00:37:42,000
Loading the bitmaps and all that stuff.

691
00:37:42,300 --> 00:37:43,300
So this kind of sets up the

692
00:37:43,500 --> 00:37:47,800
Is these things which will eventually go away in the asset type table.

693
00:37:47,800 --> 00:37:50,500
Now, what we're going to do in the asset type table,

694
00:37:52,000 --> 00:37:53,800
Well actually guess we'll just leave that for a second.

695
00:37:53,900 --> 00:37:56,700
What we'll do is we'll set up the bitmap and sound count stuff.

696
00:37:57,100 --> 00:38:01,500
So we'll just say okay, the assets bitmap count is going to be equal

697
00:38:01,500 --> 00:38:11,400
to the asset count and the assets bitmaps is going to be a something

698
00:38:11,400 --> 00:38:13,500
that's that that's that big right?

699
00:38:13,500 --> 00:38:17,600
So it can so it can hold that many things, right?

700
00:38:17,600 --> 00:38:19,500
And so we just have that many assets.

701
00:38:19,500 --> 00:38:21,400
Lots, they're the same.

702
00:38:21,600 --> 00:38:25,400
Thing will be true of the sounds, but at the moment, we don't have any

703
00:38:25,400 --> 00:38:25,700
sound.

704
00:38:25,700 --> 00:38:27,200
So you have one sound.

705
00:38:27,200 --> 00:38:31,000
Let's say, we don't actually have one sound but if we did, you put it

706
00:38:31,000 --> 00:38:31,300
in there.

707
00:38:32,400 --> 00:38:39,900
And and so that would allocate this the table for sounds and you know,

708
00:38:40,300 --> 00:38:43,100
the asset type array is just the asset type array.

709
00:38:43,100 --> 00:38:47,300
And we'll have to deal with that a little bit later on when we when we

710
00:38:47,300 --> 00:38:48,600
get a little further, right?

711
00:38:50,100 --> 00:38:58,800
All right, so I think that is sufficient, right?

712
00:39:01,500 --> 00:39:03,300
I think that is sufficient.

713
00:39:03,400 --> 00:39:07,700
And so right now, this is still switching on basically a totally bogus

714
00:39:07,700 --> 00:39:12,200
value because like I said, these we haven't really kind of gotten to

715
00:39:12,200 --> 00:39:16,100
the point where we're being a little more thoughtful about it yet, but

716
00:39:16,100 --> 00:39:17,000
that's just the way it goes.

717
00:39:17,000 --> 00:39:17,600
Sometimes.

718
00:39:18,900 --> 00:39:20,300
Let's, what did I do here?

719
00:39:21,200 --> 00:39:23,300
Bitmap count Arena.

720
00:39:23,300 --> 00:39:24,900
Push array.

721
00:39:27,200 --> 00:39:31,000
So, what is the Syntax for push array and made out h?

722
00:39:31,900 --> 00:39:34,100
Push array Arena.

723
00:39:34,900 --> 00:39:37,300
It is the count first and then the type

724
00:39:42,100 --> 00:39:42,500
urgh.

725
00:39:45,900 --> 00:39:46,300
What else?

726
00:39:46,300 --> 00:39:47,100
We got?

727
00:39:47,600 --> 00:39:48,500
Thread.

728
00:39:49,100 --> 00:39:49,700
The thread thing.

729
00:39:49,700 --> 00:39:53,400
Just seems to have been a complete waste of everyone's time.

730
00:39:55,400 --> 00:39:57,200
I had a reason why I was going to do that.

731
00:40:01,400 --> 00:40:02,900
And it really just didn't materialize.

732
00:40:03,800 --> 00:40:07,100
So I think I may just say that we're going to need that and if we want

733
00:40:07,100 --> 00:40:10,900
it, we'll put it back in later but it's just going to go away.

734
00:40:13,100 --> 00:40:16,000
It was a stupid idea to add something before I needed it.

735
00:40:16,600 --> 00:40:19,800
That's kind of the opposite of what I always say to do and

736
00:40:19,800 --> 00:40:21,200
unsurprisingly.

737
00:40:23,600 --> 00:40:25,600
If you have a rule, that's a good Rule.

738
00:40:25,600 --> 00:40:27,400
And you don't actually follow it.

739
00:40:27,700 --> 00:40:29,000
You quickly find

740
00:40:30,300 --> 00:40:34,600
That you wasted your time because you can always go back and add

741
00:40:34,600 --> 00:40:35,600
things in, right?

742
00:40:35,900 --> 00:40:38,200
And when you go back and add things in, you know, how you actually

743
00:40:38,200 --> 00:40:40,900
needed them, right?

744
00:40:41,000 --> 00:40:45,600
Which is way better than trying to guess how you were going to need

745
00:40:45,600 --> 00:40:45,900
them.

746
00:40:46,200 --> 00:40:48,100
Which is not so useful, right?

747
00:40:50,200 --> 00:40:51,800
So yeah, so that was stupid.

748
00:40:52,300 --> 00:40:55,600
And we are going to Nuke it right now.

749
00:40:56,900 --> 00:40:58,000
So where is thread?

750
00:40:58,800 --> 00:41:02,500
Red comma, it's just getting good.

751
00:41:02,500 --> 00:41:06,400
Bide everywhere it existed before it's gone.

752
00:41:07,700 --> 00:41:08,800
Nobody loves it.

753
00:41:09,100 --> 00:41:10,100
Nobody cares about it.

754
00:41:10,100 --> 00:41:14,500
Also, I don't know why I'm even bothering to pass this around, right?

755
00:41:15,300 --> 00:41:17,700
So we should probably get rid of that as well.

756
00:41:18,800 --> 00:41:24,000
Because we already have this notion that we can do these Global calls

757
00:41:24,000 --> 00:41:24,500
here.

758
00:41:24,800 --> 00:41:28,100
So, really what we should have done, especially because this is a

759
00:41:28,100 --> 00:41:32,300
debug call, is this should have just been a global variable, for debug

760
00:41:32,300 --> 00:41:33,800
read entire file, right?

761
00:41:34,000 --> 00:41:35,500
And then we just delete it later.

762
00:41:37,500 --> 00:41:38,900
To find all the places that it was called.

763
00:41:38,900 --> 00:41:41,700
And then, you know, make sure that they're gone, probably what we

764
00:41:41,700 --> 00:41:44,100
should have done a long time ago.

765
00:41:45,400 --> 00:41:49,600
So let's take a look, let's take a look at read entire file.

766
00:41:50,400 --> 00:41:54,000
Where is everywhere that that's used and let us get rid of it.

767
00:41:54,000 --> 00:41:56,400
So goodbye to you.

768
00:41:57,300 --> 00:41:59,800
You're gone, that's fine.

769
00:42:00,700 --> 00:42:05,300
Give a glow bitmap is just going to use this directly, right?

770
00:42:06,000 --> 00:42:08,200
So this is just debug read entire file.

771
00:42:09,600 --> 00:42:14,200
Let's keep on going read entire file, debug bitmap, just takes the

772
00:42:14,200 --> 00:42:14,700
file name.

773
00:42:14,700 --> 00:42:17,000
Now, it doesn't take that, right?

774
00:42:17,000 --> 00:42:19,900
That's just kind of stupid.

775
00:42:20,100 --> 00:42:27,800
So we'll get rid of this and this and this

776
00:42:31,500 --> 00:42:32,600
What else?

777
00:42:34,000 --> 00:42:35,100
What else?

778
00:42:36,100 --> 00:42:40,800
The assets read entire file, goodbye read entire file.

779
00:42:40,900 --> 00:42:42,100
Also goodbye.

780
00:42:42,800 --> 00:42:46,000
See this just how it should have looked in the first place.

781
00:42:49,100 --> 00:42:52,600
But sometimes you know you just sometimes you don't clean things up

782
00:42:52,600 --> 00:42:56,200
until you should until you kind of like get sick of it and you're

783
00:42:56,200 --> 00:42:57,200
like, you know what?

784
00:42:58,100 --> 00:42:59,000
This is, just a bad idea.

785
00:42:59,000 --> 00:42:59,900
Let's clean that up.

786
00:43:02,400 --> 00:43:03,100
So there we go.

787
00:43:03,100 --> 00:43:05,900
Specially with a debug call, it's just not worth the time right.

788
00:43:05,900 --> 00:43:09,800
It's not worth spending your time passing this pointer around for no

789
00:43:09,800 --> 00:43:10,100
reason.

790
00:43:10,100 --> 00:43:13,400
It's a debug call, you might as well just set it.

791
00:43:14,200 --> 00:43:16,900
There's really no point in not doing so right.

792
00:43:17,500 --> 00:43:21,500
I can't really think of a single reason why you would do that yet.

793
00:43:21,500 --> 00:43:22,400
That's what I did.

794
00:43:23,600 --> 00:43:25,200
I think they're just sort of like a

795
00:43:27,000 --> 00:43:30,300
I tend to not introduce Global variables very often in that sense, and

796
00:43:30,300 --> 00:43:33,700
so maybe that's just like, kind of residual like you tend to not

797
00:43:33,700 --> 00:43:36,800
introduce them even maybe sometimes when you should have.

798
00:43:37,400 --> 00:43:39,400
But that's another issue I guess.

799
00:43:40,400 --> 00:43:40,800
All right.

800
00:43:40,800 --> 00:43:44,600
So anyway, keep going with that.

801
00:43:45,000 --> 00:43:46,100
Read entire file.

802
00:43:46,700 --> 00:43:48,700
There's one during to on file.

803
00:43:48,700 --> 00:43:49,600
That's good.

804
00:43:49,600 --> 00:43:50,900
That is not good.

805
00:43:51,000 --> 00:43:51,800
Go away.

806
00:43:52,800 --> 00:43:55,500
That is good and

807
00:43:55,700 --> 00:43:56,400
It's good.

808
00:43:56,400 --> 00:44:00,200
Okay, so we're back to, I think pretty good shape here.

809
00:44:01,500 --> 00:44:04,400
So let's go ahead and and jump back.

810
00:44:04,900 --> 00:44:07,400
Actually, let me jump back here.

811
00:44:07,900 --> 00:44:10,300
So let's let's now just make sure that we set that.

812
00:44:10,900 --> 00:44:14,600
So, in handmade dot CPP, when we're setting our callbacks right,

813
00:44:16,800 --> 00:44:17,800
Right at the top here.

814
00:44:17,900 --> 00:44:21,900
When we sweat our call backs up, we just copied them out from from

815
00:44:21,900 --> 00:44:22,200
here.

816
00:44:28,400 --> 00:44:32,900
Yeah, I guess I could call that debug platform read, entire file, deep

817
00:44:33,500 --> 00:44:35,100
platform, read, entire file.

818
00:44:37,700 --> 00:44:39,500
And that's a little nicer.

819
00:44:39,900 --> 00:44:40,500
All right.

820
00:44:41,200 --> 00:44:45,300
So yes set top down a line.

821
00:44:45,300 --> 00:44:47,600
Something that should probably have been in here.

822
00:44:48,900 --> 00:44:50,500
So let's go ahead and put that in.

823
00:44:52,100 --> 00:44:53,200
And there we go.

824
00:44:53,200 --> 00:44:55,900
Alright so now thread goes away.

825
00:44:56,600 --> 00:44:58,300
There should be no thread.

826
00:45:00,700 --> 00:45:02,800
Brad should just be eliminated entirely.

827
00:45:04,600 --> 00:45:07,500
So now we've got rid of it so that's all good.

828
00:45:08,800 --> 00:45:11,600
Yeah, and now, man, we just did a lot of stuff.

829
00:45:11,600 --> 00:45:15,800
So we got to go here ahead here, and take a look at what we're doing.

830
00:45:16,500 --> 00:45:18,900
So, those are totally wrong, right?

831
00:45:18,900 --> 00:45:22,200
Those are not supposed to be going, trance State assets.

832
00:45:22,200 --> 00:45:26,300
Those are just supposed to be straight up assets, right?

833
00:45:26,300 --> 00:45:28,400
Wheat or sorry.

834
00:45:28,400 --> 00:45:29,800
Kill rectangle.

835
00:45:32,500 --> 00:45:33,700
So that's good.

836
00:45:34,500 --> 00:45:38,500
Let's see what else we got going on here again, tomorrow, we got a lot

837
00:45:38,500 --> 00:45:41,200
of Trance state, so let's need to get rid of that.

838
00:45:45,300 --> 00:45:46,100
There we go.

839
00:45:48,100 --> 00:45:49,200
All right, so that's good.

840
00:45:49,200 --> 00:45:51,600
We're back up and running so that's all fine.

841
00:45:54,300 --> 00:45:56,400
Nothing particularly unusual happening there.

842
00:45:57,000 --> 00:45:59,600
So so yeah, so that's all good.

843
00:46:00,600 --> 00:46:01,500
A lot of cleanup today.

844
00:46:01,500 --> 00:46:02,700
This is this is getting good.

845
00:46:03,600 --> 00:46:07,000
Alright so we've only got about 30 minutes left.

846
00:46:07,200 --> 00:46:08,900
So I'd like to do is kind of push.

847
00:46:09,000 --> 00:46:12,800
See if I can get to sort of the final step of flipping this thing over

848
00:46:12,800 --> 00:46:17,500
into the, the new structure not for these other guys here, the red

849
00:46:17,500 --> 00:46:21,600
guys yet will tackle those tomorrow but just for the other guys who

850
00:46:22,200 --> 00:46:25,400
are right now, just getting translated by the ID directly.

851
00:46:25,400 --> 00:46:30,300
So what I want to do is I want to make it so that these guys are

852
00:46:31,000 --> 00:46:33,600
Kind of loading out of out of these.

853
00:46:33,600 --> 00:46:37,000
These various file names here, this is going to be totally temporary.

854
00:46:39,800 --> 00:46:42,400
Because again, there are not going to be any file names.

855
00:46:44,900 --> 00:46:48,100
So yeah, so what I want to do is I want to make it now so that we can

856
00:46:48,100 --> 00:46:55,400
actually set up that asset array which is this got the asset types

857
00:46:55,500 --> 00:46:57,300
situation thing, right?

858
00:46:58,100 --> 00:47:01,700
And so what I want to do is set up one for each of these guys and

859
00:47:01,700 --> 00:47:03,800
we'll set it up just fake, right?

860
00:47:04,700 --> 00:47:08,800
So we can have, you know, backdrop equals assets.

861
00:47:11,400 --> 00:47:15,100
And it's going to be a crap assets.

862
00:47:17,400 --> 00:47:18,300
Asset types.

863
00:47:20,500 --> 00:47:25,700
Like, so, when we grab that out, we can then set that to something.

864
00:47:25,700 --> 00:47:29,500
So, the asset type backdrop, you can see it has here.

865
00:47:29,600 --> 00:47:34,600
What we can say is, you know, we have to obviously introduce an array

866
00:47:34,600 --> 00:47:35,800
to store these other things.

867
00:47:35,800 --> 00:47:40,000
We have two other things, we have asset tags and assets, right?

868
00:47:41,100 --> 00:47:47,900
And so, if I go ahead and say I have assets, so a set count,

869
00:47:49,600 --> 00:47:54,100
There we have it and I've got tag count.

870
00:47:58,200 --> 00:47:59,800
Now, I've got sort of all of the things.

871
00:48:00,000 --> 00:48:04,600
Scented in here that are, you know, that we're kind of saying our part

872
00:48:04,600 --> 00:48:05,900
of this asset system.

873
00:48:06,900 --> 00:48:09,700
And so I can allocate those.

874
00:48:09,800 --> 00:48:12,300
I can say the assets.

875
00:48:12,300 --> 00:48:16,600
Arrow assets is kind of a little bit weird you have to admit, but I'm

876
00:48:16,600 --> 00:48:17,600
not sure.

877
00:48:20,600 --> 00:48:22,800
Yeah, I'm not sure what else to do about it.

878
00:48:22,800 --> 00:48:23,900
So we'll just leave it that way.

879
00:48:26,100 --> 00:48:28,700
So I'm going to go ahead and push on an array of assets.

880
00:48:28,700 --> 00:48:31,600
Here, I happen to want one per bitmap at the moment.

881
00:48:31,600 --> 00:48:34,900
So I'm just going to use the bitmap count, right?

882
00:48:35,500 --> 00:48:36,600
So that

883
00:48:36,800 --> 00:48:39,300
Change when we actually load off disk or for now, we're just going to

884
00:48:39,300 --> 00:48:40,500
use however many bitmaps we have.

885
00:48:40,500 --> 00:48:41,700
That's my assets, we have.

886
00:48:43,000 --> 00:48:45,700
And then the tags were not going to actually allocate it all at the

887
00:48:45,700 --> 00:48:46,400
moment.

888
00:48:46,800 --> 00:48:51,400
So we have tag count, I'm going to say zero and the tags are also zero

889
00:48:52,100 --> 00:48:53,900
and so those will come in a little bit later.

890
00:48:54,500 --> 00:49:01,600
So when we grab a backdrop, the backdrop, right, this the asset type

891
00:49:01,600 --> 00:49:05,400
here, it says, how many there are, and where the first one is and

892
00:49:05,400 --> 00:49:06,500
where the one passed.

893
00:49:06,700 --> 00:49:07,700
Last one is, right?

894
00:49:07,900 --> 00:49:09,300
So if I have a backdrop

895
00:49:18,600 --> 00:49:20,500
I'm going to set the count equal to 1.

896
00:49:20,500 --> 00:49:25,800
I'm going to set the first asset index equal to, you know, asset index

897
00:49:25,800 --> 00:49:31,000
something, some kind of rolling value backdrop, one past less last.

898
00:49:32,600 --> 00:49:35,400
Asset index is also going to be this.

899
00:49:35,400 --> 00:49:38,400
So again, I'm just kind of basically making the database manually here

900
00:49:38,400 --> 00:49:39,200
if that makes sense.

901
00:49:40,000 --> 00:49:44,900
Because, you know, until we actually write 12 disc, I need something

902
00:49:44,900 --> 00:49:46,300
to kind of sit in its place.

903
00:49:47,600 --> 00:49:52,000
All right, so one pass last asset index and that index those will both

904
00:49:52,000 --> 00:49:56,900
be set there and then I need to do the asset for backdrop and so I

905
00:49:56,900 --> 00:49:57,500
guess I'll do it.

906
00:49:57,500 --> 00:50:04,000
You know, I'll do it this way, type type type and then this will be

907
00:50:04,000 --> 00:50:08,300
asset asset equals assets.

908
00:50:09,400 --> 00:50:16,000
Assets plus tight, first acid and EXO will take that particular asset

909
00:50:16,300 --> 00:50:18,900
this asset first High index.

910
00:50:20,700 --> 00:50:23,200
Zero and one pass.

911
00:50:23,200 --> 00:50:29,800
Last time is 20 and its slot ID is just going to be whatever its asset

912
00:50:29,800 --> 00:50:31,900
index actually was right.

913
00:50:33,500 --> 00:50:38,000
Like so so that just basically makes you know, for the backdrop and I

914
00:50:38,000 --> 00:50:40,300
guess I can just go ahead and do this for all of them, right?

915
00:50:40,300 --> 00:50:49,400
I can say bitmap id0 bitmap ID is less than asset count bitmap ID.

916
00:50:50,100 --> 00:50:53,900
And so really, it's just I guess I should say asset ID.

917
00:50:56,600 --> 00:50:59,500
For each one of these, it's just going to do.

918
00:51:00,200 --> 00:51:00,900
The tape.

919
00:51:02,200 --> 00:51:04,300
Setting it up 1 to 1, right?

920
00:51:05,100 --> 00:51:06,700
So nothing particularly interesting happening.

921
00:51:06,700 --> 00:51:07,800
They're just setting up.

922
00:51:07,800 --> 00:51:12,500
Basically done Mighty dummy, tables for everything and then I guess I

923
00:51:12,500 --> 00:51:13,700
don't even need, right?

924
00:51:13,700 --> 00:51:18,300
I don't even need this because we know what it is, so that's all all

925
00:51:18,300 --> 00:51:18,900
fine as well.

926
00:51:20,100 --> 00:51:21,200
Oops, asset ID.

927
00:51:24,500 --> 00:51:29,100
Past last tag index So that's its up that table.

928
00:51:29,400 --> 00:51:33,900
And now in theory, we would should be able to actually implement this

929
00:51:33,900 --> 00:51:35,200
function, right?

930
00:51:35,600 --> 00:51:42,500
Which is to say that if we have a bitmap ID, say this is the result,

931
00:51:43,300 --> 00:51:47,000
it'll be set to 0, we should probably have a null bitmap now that I

932
00:51:47,000 --> 00:51:49,900
think about it and a null asset, right?

933
00:51:52,300 --> 00:51:53,100
You know what I'm saying?

934
00:51:56,100 --> 00:51:58,400
That seems like a good idea idea.

935
00:51:58,400 --> 00:51:59,700
So something like asset.

936
00:51:59,700 --> 00:52:00,100
None.

937
00:52:01,000 --> 00:52:04,200
You know, I'm saying and then the bitmaps there's also like a dummy

938
00:52:04,200 --> 00:52:04,800
bitmaps.

939
00:52:04,800 --> 00:52:08,400
I feel like always having zero being sort of a reserve slot for like

940
00:52:08,400 --> 00:52:11,700
nothing is kind of a good idea, right?

941
00:52:12,400 --> 00:52:16,600
And in here we could also do when you call load bitmap, if for some

942
00:52:16,600 --> 00:52:20,700
reason you're trying to load bitmap id0, it just doesn't do it.

943
00:52:20,700 --> 00:52:21,800
So you know,

944
00:52:24,000 --> 00:52:27,700
If not I do value and right.

945
00:52:28,100 --> 00:52:29,500
So it's basically like

946
00:52:32,100 --> 00:52:35,200
saying I need a valid bitmap idea.

947
00:52:35,200 --> 00:52:37,300
Otherwise I'm not going to try to load the bitmap.

948
00:52:37,300 --> 00:52:38,300
I'm just going to ignore you.

949
00:52:38,300 --> 00:52:42,200
When you say to because we never need to load the null bitmap, right?

950
00:52:43,300 --> 00:52:44,300
It's just going to be no.

951
00:52:45,500 --> 00:52:47,300
So that seems good.

952
00:52:48,700 --> 00:52:54,300
Yeah that all seems good so that does that the way we want.

953
00:52:54,300 --> 00:52:59,900
So this starts out with the null bitmap there and then what we'll do

954
00:52:59,900 --> 00:53:02,200
is we'll actually try to do the look up now.

955
00:53:02,200 --> 00:53:05,600
So we'll go asset types right with the type ID.

956
00:53:06,100 --> 00:53:09,400
This gives us back the asset type

957
00:53:11,200 --> 00:53:15,000
And then from that asset type, we can grab the first asset very

958
00:53:15,000 --> 00:53:15,600
easily.

959
00:53:23,500 --> 00:53:24,000
so,

960
00:53:25,800 --> 00:53:26,200
Jimmy.

961
00:53:27,200 --> 00:53:32,100
So from there, we can say, you know, the asset equals the type first

962
00:53:32,100 --> 00:53:33,000
asset index.

963
00:53:38,100 --> 00:53:40,100
Yeah, so that's assets.

964
00:53:41,200 --> 00:53:42,000
Assets.

965
00:53:44,200 --> 00:53:49,200
So now we've grabbed out the first asset and then assuming that there

966
00:53:49,200 --> 00:53:55,300
actually is any, you know this this thing actually has any at all

967
00:53:55,700 --> 00:53:58,600
because it's possible that there were no assets of this type.

968
00:53:58,600 --> 00:53:59,800
But assuming that there were any

969
00:54:00,600 --> 00:54:05,000
Then the resulting bitmap value is just the assets slot ID, right?

970
00:54:05,200 --> 00:54:06,500
Like, wherever that guy is

971
00:54:08,000 --> 00:54:08,800
and that's it.

972
00:54:09,900 --> 00:54:10,900
Let's see what happens.

973
00:54:10,900 --> 00:54:12,900
Here, asset types.

974
00:54:14,700 --> 00:54:16,000
What did I do?

975
00:54:16,000 --> 00:54:17,300
That's supposed to do that.

976
00:54:17,500 --> 00:54:19,600
Plus getting tired.

977
00:54:19,800 --> 00:54:23,600
Been a long day, being a long day.

978
00:54:25,400 --> 00:54:30,400
I am going to go out a limb here, pun intended and say that we have a

979
00:54:30,400 --> 00:54:34,000
problem somewhere because I don't know about you, but I'm not seeing a

980
00:54:34,000 --> 00:54:36,200
lot of trees there, right?

981
00:54:36,200 --> 00:54:38,400
Not seeing a lot of trees there.

982
00:54:39,600 --> 00:54:41,100
All right, so let's okay.

983
00:54:41,400 --> 00:54:45,400
Let's go ahead and step through it and figure out what's going on.

984
00:54:46,200 --> 00:54:47,700
Make sure everything is kosher.

985
00:54:49,300 --> 00:54:52,800
Looks like, you know, for a type particular asset ID.

986
00:54:52,800 --> 00:54:54,500
It's the count, 14 sites.

987
00:54:54,700 --> 00:54:55,100
Nexus.

988
00:54:55,100 --> 00:54:58,600
Whatever the ID is one pass last one.

989
00:54:59,200 --> 00:55:01,000
Oh wait.

990
00:55:03,000 --> 00:55:03,500
What?

991
00:55:05,900 --> 00:55:10,400
Why is there a count and what doesn't make any sense?

992
00:55:11,600 --> 00:55:14,200
Why would there be a count and arrange?

993
00:55:14,300 --> 00:55:17,000
Does anyone know what I was thinking about when we did that?

994
00:55:17,000 --> 00:55:19,400
That's that doesn't make any sense.

995
00:55:19,500 --> 00:55:20,600
That's what this is.

996
00:55:23,100 --> 00:55:24,100
That doesn't make any sense.

997
00:55:24,400 --> 00:55:27,000
I would either have first asset in this and account.

998
00:55:28,900 --> 00:55:30,800
Or not right?

999
00:55:31,500 --> 00:55:32,300
Yeah, I don't know.

1000
00:55:32,600 --> 00:55:34,100
Alright, that's kind of dumb.

1001
00:55:34,800 --> 00:55:38,000
Well, pretend we didn't see that and we'll decide whether you want to

1002
00:55:38,000 --> 00:55:40,600
count or one passed a little bit later, we can always change between

1003
00:55:40,600 --> 00:55:40,700
them.

1004
00:55:40,700 --> 00:55:43,400
It's not too big a deal but I don't know why they were multiples of

1005
00:55:43,400 --> 00:55:43,700
this.

1006
00:55:44,700 --> 00:55:48,800
So what I wanted to do was actually this, right?

1007
00:55:48,800 --> 00:55:49,500
I wanted to do.

1008
00:55:49,500 --> 00:55:53,200
If first us at index is not equal to type one passed last I said

1009
00:55:53,200 --> 00:55:58,100
Index, right then get the thing out now that

1010
00:55:58,200 --> 00:56:01,000
Shouldn't have caused our bug at all, but that was just dumb.

1011
00:56:01,600 --> 00:56:04,100
So we want to get rid of that.

1012
00:56:04,900 --> 00:56:14,300
So this asset ID, this is so it's one asset ID that all looks good to

1013
00:56:14,300 --> 00:56:14,900
me.

1014
00:56:16,400 --> 00:56:20,000
And yeah, so that all that all looks fine.

1015
00:56:20,300 --> 00:56:22,500
All right, so let's go ahead and step into this.

1016
00:56:22,500 --> 00:56:24,500
We, let's take a look at what happens.

1017
00:56:25,100 --> 00:56:26,900
First of all, let's take a look at the table.

1018
00:56:28,900 --> 00:56:30,600
To make sure that those are reasonable.

1019
00:56:31,300 --> 00:56:33,100
So here is our assets.

1020
00:56:33,400 --> 00:56:33,800
Oops.

1021
00:56:37,100 --> 00:56:38,500
Assets is undefined.

1022
00:56:38,600 --> 00:56:43,800
Something tells me we need to switch to the debug build compiler.

1023
00:56:43,800 --> 00:56:45,000
Can't find anything.

1024
00:56:45,900 --> 00:56:48,600
Well, the debugger can't find it but probably come out until it was.

1025
00:56:49,400 --> 00:56:49,800
All right?

1026
00:56:49,800 --> 00:56:54,400
So if we take a look in here, we've got seven bitmaps and seven

1027
00:56:54,400 --> 00:56:54,800
assets.

1028
00:56:54,800 --> 00:56:59,800
That's what we wanted essentially, and in the asset table.

1029
00:57:00,300 --> 00:57:04,400
Oops, that's not what I wanted in the asset types table, right?

1030
00:57:04,500 --> 00:57:08,400
First asset index, first asset index, one pass last.

1031
00:57:08,400 --> 00:57:13,000
So these kind of go up as they should in the assets, First tag index.

1032
00:57:13,000 --> 00:57:15,200
Let's see what it looks like.

1033
00:57:15,200 --> 00:57:19,400
If we take a look at all of these right slot.

1034
00:57:19,400 --> 00:57:25,900
ID, First tag, index one passed last tag index that's all fine, and

1035
00:57:25,900 --> 00:57:28,500
the slot IDs look like they roughly go.

1036
00:57:28,500 --> 00:57:29,800
What 0 1 2 3 4 5,

1037
00:57:30,000 --> 00:57:30,400
6.

1038
00:57:30,400 --> 00:57:32,400
So they do reference the bitmaps properly.

1039
00:57:32,400 --> 00:57:35,100
I would think so that seems.

1040
00:57:35,100 --> 00:57:39,900
Okay, let's see what happens when we actually try to get one of these

1041
00:57:39,900 --> 00:57:43,100
guys which is get first bitmap ID.

1042
00:57:44,000 --> 00:57:44,800
So let's see what happens.

1043
00:57:44,800 --> 00:57:46,700
We coming here, we're asking for a tree.

1044
00:57:48,000 --> 00:57:52,200
So we pull out the one that corresponds to tree for assets in index is

1045
00:57:52,200 --> 00:57:53,300
3, 1 passed.

1046
00:57:53,300 --> 00:57:55,000
Last is for, right?

1047
00:57:55,300 --> 00:57:56,200
They are not equal.

1048
00:57:56,200 --> 00:57:56,900
So that's good.

1049
00:57:56,900 --> 00:57:59,300
We grab out an asset.

1050
00:57:59,500 --> 00:58:00,400
What is the asset?

1051
00:58:00,400 --> 00:58:02,000
The asset has a slot idea of 3.

1052
00:58:02,400 --> 00:58:04,100
So we set the result value.

1053
00:58:04,900 --> 00:58:06,300
So what is that actually equal?

1054
00:58:06,300 --> 00:58:10,700
That's a value of 3 and that is I assume what we actually would expect

1055
00:58:10,700 --> 00:58:14,500
it to be and it is because where they're lined up at the moment so we

1056
00:58:14,500 --> 00:58:15,600
go ahead and get that.

1057
00:58:16,200 --> 00:58:16,900
That's good.

1058
00:58:17,800 --> 00:58:22,700
When to push bitmap, push back bats going to call get bitmap with that

1059
00:58:22,700 --> 00:58:24,200
function, right?

1060
00:58:25,000 --> 00:58:29,400
It should return null because we haven't loaded it yet and we should

1061
00:58:29,400 --> 00:58:30,500
ask to load it.

1062
00:58:31,000 --> 00:58:35,900
So we come in here if not ID value which should be true.

1063
00:58:37,200 --> 00:58:37,500
Oh,

1064
00:58:39,800 --> 00:58:42,800
Oh yeah, P naught ID value.

1065
00:58:42,800 --> 00:58:45,300
It should be Heidi value.

1066
00:58:46,200 --> 00:58:48,800
Yeah, it has been a long day, all right.

1067
00:58:50,800 --> 00:58:52,500
That's probably the bug.

1068
00:58:54,200 --> 00:58:55,400
One would assume.

1069
00:58:58,300 --> 00:58:58,900
Yep.

1070
00:58:59,900 --> 00:59:00,600
Yep.

1071
00:59:01,200 --> 00:59:02,700
That was the problem.

1072
00:59:03,800 --> 00:59:04,500
It is true.

1073
00:59:05,700 --> 00:59:09,600
Let's make sure we didn't have, I guess we should double check.

1074
00:59:09,600 --> 00:59:13,300
Make sure we don't have any weird performance things going on there

1075
00:59:13,600 --> 00:59:16,300
because we were running it in the other mode was nice and Zippy.

1076
00:59:16,300 --> 00:59:17,900
Yeah, it looks nice and Zippy.

1077
00:59:18,800 --> 00:59:20,100
All right, so that's good.

1078
00:59:20,400 --> 00:59:21,500
We got all that stuff set up.

1079
00:59:21,500 --> 00:59:25,500
So now, we are properly going through that in Direction, which means

1080
00:59:25,500 --> 00:59:29,500
now we can start to actually use that indirection on tomorrow stream,

1081
00:59:30,000 --> 00:59:30,700
which will be good.

1082
00:59:30,700 --> 00:59:32,000
So, I think that's good.

1083
00:59:32,000 --> 00:59:33,400
We're starting to get a little

1084
00:59:33,500 --> 00:59:37,100
A bit of a database structure here to things where we can kind of, you

1085
00:59:37,100 --> 00:59:40,000
know, essentially have our own version of, you know, a query.

1086
00:59:40,100 --> 00:59:43,500
If you will where we can say, hey, I need you to get me back asset

1087
00:59:43,500 --> 00:59:47,100
that follows this criteria, it'll do a match, it will come back to us,

1088
00:59:47,700 --> 00:59:48,900
and so we're getting there.

1089
00:59:49,300 --> 00:59:52,100
We got a little bit further to go, but we're getting there.

1090
00:59:52,800 --> 00:59:53,200
All right.

1091
00:59:53,200 --> 00:59:58,900
So why don't we go ahead and go to the Q&A?

1092
01:00:00,700 --> 01:00:01,300
Like so.

1093
01:00:05,400 --> 01:00:06,100
This way.

1094
01:00:11,100 --> 01:00:14,300
All right, so if anyone has any questions about what we're doing,

1095
01:00:14,300 --> 01:00:21,100
please go ahead and put a q: in front of it and type it in, so I can

1096
01:00:21,100 --> 01:00:21,600
see it.

1097
01:00:21,600 --> 01:00:26,300
And please keep it to stuff that we are doing so that it's kind of

1098
01:00:26,300 --> 01:00:27,400
something that's on topic.

1099
01:00:27,400 --> 01:00:33,500
And, and while I wait, I might do one really quick thing that somebody

1100
01:00:33,500 --> 01:00:34,000
pointed out.

1101
01:00:38,200 --> 01:00:41,400
Well actually, I'll just do the Q&A and if we have extra time that qao

1102
01:00:41,400 --> 01:00:42,800
I'll go do one more thing.

1103
01:00:44,200 --> 01:00:44,800
Let's see.

1104
01:00:47,500 --> 01:00:51,400
Abner coin Bray, you won't be using any formal database for the game.

1105
01:00:51,400 --> 01:00:52,000
Correct.

1106
01:00:52,100 --> 01:00:52,600
Why?

1107
01:00:53,900 --> 01:01:00,500
So the reason why is they're actually quite complicated right?

1108
01:01:01,500 --> 01:01:06,900
Because there are many many reasons why a formal database like

1109
01:01:06,900 --> 01:01:07,300
something.

1110
01:01:07,300 --> 01:01:09,100
That would be like a SQL database, right?

1111
01:01:09,100 --> 01:01:12,600
Or something would not be useful for the game and it's kind of

1112
01:01:12,600 --> 01:01:14,500
difficult to cover what they all are.

1113
01:01:16,100 --> 01:01:16,700
But

1114
01:01:18,100 --> 01:01:22,400
It all kind of boils down to the fact that we have a very specific way

1115
01:01:23,300 --> 01:01:26,100
in which we want to retrieve things.

1116
01:01:26,800 --> 01:01:30,400
And it's very easy for us to code that by hand in a way that is very

1117
01:01:30,400 --> 01:01:31,200
fast.

1118
01:01:32,000 --> 01:01:36,100
And to know that if we need to get more sort of acceleration out of it

1119
01:01:36,100 --> 01:01:39,600
that we can custom build it around the one kind of query, which that

1120
01:01:39,600 --> 01:01:40,100
we do.

1121
01:01:41,300 --> 01:01:45,100
Whereas if you use a database, that's something off the shelf.

1122
01:01:46,200 --> 01:01:50,000
You are constantly trying to shoehorn your access pattern into its

1123
01:01:50,000 --> 01:01:56,600
semantics and it really just causes all of these headaches for you

1124
01:01:57,600 --> 01:02:01,000
that you wouldn't otherwise have and so in a lot of the things that

1125
01:02:01,000 --> 01:02:06,500
database does for you like Atomic operations or you know distributed

1126
01:02:06,500 --> 01:02:09,400
storage and all these things we can't take advantage of.

1127
01:02:10,200 --> 01:02:14,300
So you're basically just accepting a huge amount of risk.

1128
01:02:15,300 --> 01:02:18,100
And gaining basically nothing back, right?

1129
01:02:19,400 --> 01:02:23,800
And so, you know, that's, that's the sort of short part of it, but the

1130
01:02:23,800 --> 01:02:26,000
longer part is actually a lot more in-depth.

1131
01:02:26,700 --> 01:02:31,300
There's, there's a lot, I actually studied databases for a long time.

1132
01:02:31,400 --> 01:02:32,900
I've written my own databases.

1133
01:02:33,100 --> 01:02:36,500
I wrote a game that runs on databases entirely, and so, I have a lot

1134
01:02:36,500 --> 01:02:40,700
to say about that, but it is not something that can even fit in like,

1135
01:02:41,600 --> 01:02:45,400
The whole QA, it would kind of have to be like a very long series of

1136
01:02:45,400 --> 01:02:49,100
talks about like here is what databases do and don't do and do and

1137
01:02:49,100 --> 01:02:53,800
don't understand and here is why they're bad for things and here is

1138
01:02:53,800 --> 01:02:55,500
what would be better and that sort of stuff.

1139
01:02:55,500 --> 01:02:56,000
But

1140
01:02:57,900 --> 01:02:59,800
for this particular case, I think,

1141
01:03:01,200 --> 01:03:03,400
A lot of that stuff is not necessary to understand.

1142
01:03:03,900 --> 01:03:05,700
It's not even a sorry to understand databases.

1143
01:03:06,400 --> 01:03:13,400
It's simply a case of them having far, too much bulk and far too much

1144
01:03:13,800 --> 01:03:14,300
domain.

1145
01:03:14,300 --> 01:03:16,900
Mismatch for the case that we're trying to do,

1146
01:03:18,000 --> 01:03:22,100
And so, while you could try to implement something like a weighted tag

1147
01:03:22,100 --> 01:03:28,900
match on top of a database, you would basically be fighting it to get

1148
01:03:28,900 --> 01:03:29,400
the performance.

1149
01:03:29,400 --> 01:03:33,600
You probably could have just gotten by writing it yourself in, not

1150
01:03:33,600 --> 01:03:34,300
that much time.

1151
01:03:34,300 --> 01:03:37,600
Like the amount of time you would probably spend dealing with it over

1152
01:03:37,600 --> 01:03:37,900
the car.

1153
01:03:37,900 --> 01:03:42,900
So the product, you know, would make it so that you really weren't you

1154
01:03:42,900 --> 01:03:45,400
worried, you're getting a net loss as opposed to just in planning

1155
01:03:45,400 --> 01:03:46,000
yourself.

1156
01:03:46,500 --> 01:03:46,900
So, yeah.

1157
01:03:46,900 --> 01:03:47,700
So this is not

1158
01:03:47,800 --> 01:03:53,200
Case, like sometimes on handmade hero, you know, with like the bitmap

1159
01:03:53,200 --> 01:03:54,600
loading code or something, right?

1160
01:03:54,700 --> 01:03:57,300
Sometimes I am a hero, we write something ourselves, just because the

1161
01:03:57,300 --> 01:03:59,400
idea is to show how to write things from scratch.

1162
01:03:59,400 --> 01:04:00,100
That's what we're doing.

1163
01:04:00,100 --> 01:04:01,400
It's educational, right?

1164
01:04:02,000 --> 01:04:05,200
In this case, I'm not writing this myself to be educational.

1165
01:04:05,200 --> 01:04:07,100
I'm writing this myself because we actually need it.

1166
01:04:07,900 --> 01:04:11,400
A database would not serve our purposes very well, if that makes

1167
01:04:11,400 --> 01:04:11,800
sense.

1168
01:04:13,700 --> 01:04:16,100
And it's just because there's just a really big mismatch between what

1169
01:04:16,100 --> 01:04:19,800
it does and what we do and how much it does and how much we need it to

1170
01:04:19,800 --> 01:04:20,100
do.

1171
01:04:30,300 --> 01:04:32,700
Is there any way I can download these episodes to watch on the go?

1172
01:04:32,700 --> 01:04:33,000
Yes.

1173
01:04:33,000 --> 01:04:33,900
Absolutely.

1174
01:04:35,200 --> 01:04:38,700
If you would like to download them if you go to handmade here a DOT

1175
01:04:38,700 --> 01:04:41,400
org, you can go to the forum's button.

1176
01:04:42,400 --> 01:04:49,300
And if you open up that forums page, there is a code discussion forum

1177
01:04:49,300 --> 01:04:51,800
here in the code discussion forum.

1178
01:04:51,800 --> 01:04:55,800
There is a downloading videos using BitTorrent sync, option.

1179
01:04:56,300 --> 01:04:59,200
And as you can see Martin's,

1180
01:04:59,600 --> 01:05:01,800
Is actually kind of a ninja.

1181
01:05:01,800 --> 01:05:04,500
He like answers, everyone's questions on the forums.

1182
01:05:04,900 --> 01:05:07,800
I don't actually know what he does for a living, but he must be a very

1183
01:05:07,800 --> 01:05:08,500
knowledgeable coder.

1184
01:05:08,500 --> 01:05:13,000
It seems like he's always answering people's questions before I even

1185
01:05:13,000 --> 01:05:13,500
see them.

1186
01:05:14,300 --> 01:05:18,100
But he basically set up a BitTorrent sync, and what I do is I send the

1187
01:05:18,100 --> 01:05:22,500
Raw videos to Martin's and he puts them on his BitTorrent sync.

1188
01:05:22,500 --> 01:05:25,700
So those are actually even better than the ones you can get on YouTube

1189
01:05:25,700 --> 01:05:28,600
because they've never been recompressed their direct recordings from

1190
01:05:28,600 --> 01:05:29,200
obs.

1191
01:05:30,000 --> 01:05:32,500
So if you do want to download them, you can do this.

1192
01:05:32,500 --> 01:05:35,000
I believe Martin's keeps it up to date but I don't know because I

1193
01:05:35,000 --> 01:05:36,400
don't actually have BitTorrent sync.

1194
01:05:36,400 --> 01:05:39,500
So I'm not sure what the status is but I believe that's the most

1195
01:05:39,500 --> 01:05:41,300
efficient way to do it.

1196
01:05:47,500 --> 01:05:52,400
why could you see as opposed to Java are so we're doing like basically

1197
01:05:52,400 --> 01:05:56,600
low-level educational programming, where we show how everything works,

1198
01:05:56,600 --> 01:05:59,800
and Java runs through a VM and is garbage collected and blah, blah

1199
01:05:59,800 --> 01:05:59,900
blah,

1200
01:06:00,000 --> 01:06:00,400
A boss.

1201
01:06:00,400 --> 01:06:03,700
So that's not really a very good language to teach how like to program

1202
01:06:03,700 --> 01:06:04,400
a CPU.

1203
01:06:04,700 --> 01:06:07,900
Java is like, too, abstract for our purposes would basically the way

1204
01:06:07,900 --> 01:06:08,500
to say it.

1205
01:06:14,200 --> 01:06:17,300
Assets include compressed, Sprite, sheets, audio video, and Bone

1206
01:06:17,300 --> 01:06:17,800
Riggs.

1207
01:06:18,400 --> 01:06:22,400
Yes, if we were going to have those, we will probably not have bone

1208
01:06:22,400 --> 01:06:23,700
rigs or video.

1209
01:06:24,300 --> 01:06:26,900
We will have Sprite sheets and audio because since our animation is

1210
01:06:26,900 --> 01:06:29,100
going to be procedural as much as possible.

1211
01:06:29,700 --> 01:06:32,500
There's never going to be an animator, actually rigging and animating

1212
01:06:32,500 --> 01:06:32,700
things.

1213
01:06:32,700 --> 01:06:35,300
We kind of have to do that in code, if that makes sense.

1214
01:06:36,500 --> 01:06:41,200
But if you had an animator who was making bone rigs, then they would

1215
01:06:41,200 --> 01:06:42,100
be an asset.

1216
01:06:43,100 --> 01:06:43,300
Which

1217
01:06:43,400 --> 01:06:46,200
You could choose to put in the asset system, you wouldn't necessarily

1218
01:06:46,200 --> 01:06:46,800
have to.

1219
01:06:46,900 --> 01:06:49,700
You could choose to make all bone Rigsby, like a resident thing that

1220
01:06:49,700 --> 01:06:51,500
gets loaded at startup or something if you want to.

1221
01:06:51,500 --> 01:06:55,100
But yeah, I mean typically I would put them in there so they can get

1222
01:06:55,100 --> 01:06:57,300
streamed in and out in case they're large or whatever.

1223
01:07:01,900 --> 01:07:03,100
Any more questions?

1224
01:07:23,900 --> 01:07:27,700
Well, since there are no questions at the moment, I'm going to do

1225
01:07:27,700 --> 01:07:30,200
something that someone brought up on the stream.

1226
01:07:30,500 --> 01:07:34,200
It's a very minor thing but I thought it was interesting.

1227
01:07:34,200 --> 01:07:37,300
So I kind of wanted to address it, that made sense.

1228
01:07:38,800 --> 01:07:40,900
So here we go.

1229
01:07:41,700 --> 01:07:46,400
So if you recall all the way back to, when we very first started

1230
01:07:46,400 --> 01:07:48,300
programming, like the first week or something.

1231
01:07:49,300 --> 01:07:52,700
What we have, you know, we've got the sort of hot code loading stuff

1232
01:07:52,700 --> 01:07:53,100
that works.

1233
01:07:53,100 --> 01:07:53,600
So you can like

1234
01:07:53,900 --> 01:07:56,700
You know, you don't have to reload the game to change the code, you

1235
01:07:56,700 --> 01:08:00,300
can just change the code while it's running and that's cool.

1236
01:08:00,300 --> 01:08:05,600
But we had a thing that I kind of vacillated about if you remember and

1237
01:08:05,600 --> 01:08:07,200
it was is initialized.

1238
01:08:08,500 --> 01:08:13,000
And basically what I said was, well, should we pass is initialized in?

1239
01:08:13,000 --> 01:08:13,900
Or should the game?

1240
01:08:13,900 --> 01:08:18,200
Just look at the first bite of the permanent storage and if it's like

1241
01:08:18,200 --> 01:08:20,200
zero then it knows that it wasn't initialize.

1242
01:08:20,200 --> 01:08:22,200
And so then it should set it to True, right?

1243
01:08:22,700 --> 01:08:25,000
And I didn't really have a strong way of doing either way.

1244
01:08:25,000 --> 01:08:29,100
So I was like, all right, we'll just do it this way and I think I said

1245
01:08:29,100 --> 01:08:31,700
like, well this way it could force the game to reinitialize or

1246
01:08:31,700 --> 01:08:36,300
something, or I don't know, I didn't have a good reason, one way, one

1247
01:08:36,300 --> 01:08:36,899
way, or the other.

1248
01:08:37,500 --> 01:08:38,800
What somebody pointed out on the forums?

1249
01:08:38,800 --> 01:08:44,399
Was the technically, we currently have a bug, it's not a bug in the

1250
01:08:44,399 --> 01:08:47,600
actual game, but it's a bug in our sort of debug system, right?

1251
01:08:47,800 --> 01:08:51,800
Which is that, since we allow allow that lie, looped live recording.

1252
01:08:52,300 --> 01:08:57,399
If you hit the loop live recording start before, the game has actually

1253
01:08:57,399 --> 01:08:59,100
even ever been called once.

1254
01:09:00,200 --> 01:09:07,600
Then it will record the zero doubt memory call the game, the game will

1255
01:09:07,600 --> 01:09:09,200
initialize itself and it will go.

1256
01:09:09,300 --> 01:09:09,899
Right?

1257
01:09:10,200 --> 01:09:13,800
Then later when you when you hit the loop point it will go back and

1258
01:09:13,800 --> 01:09:17,300
properly, initialize everything to Zero by loading it off of disk, but

1259
01:09:17,300 --> 01:09:20,399
is initialized, will still be set to true because that never gets

1260
01:09:20,399 --> 01:09:21,100
changed.

1261
01:09:22,000 --> 01:09:24,500
Which means that there's technically a bug there, which is that, you

1262
01:09:24,500 --> 01:09:27,000
know, the game thinks it's initialize but it wasn't and it'll crash or

1263
01:09:27,000 --> 01:09:27,899
something, right?

1264
01:09:29,399 --> 01:09:32,800
So that means it is much better to make the other architectural

1265
01:09:32,800 --> 01:09:36,000
decision than the one I made which is that this should not be passed

1266
01:09:36,000 --> 01:09:40,899
in and it should Simply Be incumbent on the game to have its own is

1267
01:09:40,899 --> 01:09:41,800
initialized.

1268
01:09:41,800 --> 01:09:44,399
That's baked into its actual data.

1269
01:09:44,500 --> 01:09:48,300
So that if it restores a zero doubt version

1270
01:09:49,600 --> 01:09:51,600
It will work, right?

1271
01:09:52,399 --> 01:09:53,800
So that's like way better.

1272
01:09:54,200 --> 01:09:57,600
So now we know and that's the reason I wanted to cover that was like,

1273
01:09:57,600 --> 01:10:02,100
cuz that's sort of exactly the kind of programming that I like, we had

1274
01:10:02,100 --> 01:10:02,800
an architect session.

1275
01:10:02,800 --> 01:10:04,800
We didn't know what decision to make.

1276
01:10:04,800 --> 01:10:06,800
So we just made one later on.

1277
01:10:06,800 --> 01:10:12,400
We've got actual real data about a real bug, and we haven't seen

1278
01:10:12,400 --> 01:10:16,800
anything else to suggest that our old way was somehow better.

1279
01:10:17,400 --> 01:10:18,900
So now we totally know how,

1280
01:10:19,100 --> 01:10:19,900
Should work.

1281
01:10:19,900 --> 01:10:23,900
Like we kind of know the right way now because we have a proof

1282
01:10:23,900 --> 01:10:29,100
positive bug that happens because of the way we chose to do it, that

1283
01:10:29,100 --> 01:10:32,000
we would have to work around whereas if we just done it the other

1284
01:10:32,000 --> 01:10:34,800
architectural way, it would have just worked, right?

1285
01:10:36,400 --> 01:10:37,600
So basically this

1286
01:10:38,700 --> 01:10:39,300
Right.

1287
01:10:39,500 --> 01:10:45,200
This is what we wanted and and that's way better, right?

1288
01:10:48,800 --> 01:10:52,600
and so yeah, so that's like a better way to do it and now I believe

1289
01:10:52,900 --> 01:10:56,600
I'm not 100% certain, oops, when I do there,

1290
01:10:59,400 --> 01:11:04,100
Actually also how did that compile?

1291
01:11:06,700 --> 01:11:07,800
Is initialized.

1292
01:11:07,800 --> 01:11:08,200
Okay?

1293
01:11:08,200 --> 01:11:10,600
Because it just lets it be set to 0 by default.

1294
01:11:10,800 --> 01:11:11,000
Yeah.

1295
01:11:11,300 --> 01:11:12,300
Okay, that makes sense.

1296
01:11:13,800 --> 01:11:15,500
All right, civil a second.

1297
01:11:15,500 --> 01:11:17,500
Let me get this working properly.

1298
01:11:17,500 --> 01:11:20,500
So this looks at memory permanent storage.

1299
01:11:20,900 --> 01:11:21,400
It looks to see.

1300
01:11:21,400 --> 01:11:25,600
If game, state is initialized, it should be if not initialized, there

1301
01:11:25,600 --> 01:11:28,000
we go, and off we go.

1302
01:11:28,800 --> 01:11:33,600
So I think that correctly, fixes the bug again, not a bug in the game,

1303
01:11:33,600 --> 01:11:36,400
but bug in the debug layer and I think it sort of definitive

1304
01:11:36,600 --> 01:11:39,400
The answer is that architectural question and so I just wanted to

1305
01:11:39,400 --> 01:11:40,100
bring that up.

1306
01:11:40,600 --> 01:11:42,000
Alright so there we go.

1307
01:11:50,000 --> 01:11:51,400
How on Earth do you procedurally?

1308
01:11:51,400 --> 01:11:53,300
Generate character movement?

1309
01:11:54,400 --> 01:11:59,600
You would be very surprised at how much you can do with procedural.

1310
01:12:00,000 --> 01:12:06,900
Movement, I will point you to a fantastic example of it.

1311
01:12:10,900 --> 01:12:13,400
I guess I don't know if you guys know him, there's a fellow named

1312
01:12:13,400 --> 01:12:15,400
David Rosen, he made.

1313
01:12:15,900 --> 01:12:17,700
Well, he kind of started the Humble Bundle.

1314
01:12:17,700 --> 01:12:23,700
I think, actually I want to say I'm with some people but he runs

1315
01:12:23,700 --> 01:12:29,600
wolfire games and he made like loup-garou and he like overgrowth.

1316
01:12:29,600 --> 01:12:30,600
He's working on now.

1317
01:12:31,700 --> 01:12:39,300
But if you take a look here, he gave a talk, which hopefully the GDC

1318
01:12:39,300 --> 01:12:40,500
Vault will let out of it.

1319
01:12:40,700 --> 01:12:43,000
Secret vault, long enough for you to watch it.

1320
01:12:43,700 --> 01:12:44,200
Oh cool.

1321
01:12:44,200 --> 01:12:46,100
Keep it looks like maybe he posted it.

1322
01:12:47,300 --> 01:12:53,400
So, if you watch this, I think that will give you an idea of just how

1323
01:12:53,400 --> 01:12:59,600
much animation you can do without ever actually having any real art

1324
01:12:59,600 --> 01:13:00,200
happen.

1325
01:13:00,500 --> 01:13:08,100
He uses a couple key frames but like only a very few key frames and

1326
01:13:08,200 --> 01:13:10,500
you'd be kind of shocked at how much animation he

1327
01:13:10,600 --> 01:13:12,900
Gets out of them and it looks pretty decent to.

1328
01:13:14,200 --> 01:13:17,400
So I would I would check that out if you're interested in it, but, you

1329
01:13:17,400 --> 01:13:20,100
know, we'll be doing it later on the stream.

1330
01:13:20,100 --> 01:13:20,500
So,

1331
01:13:24,100 --> 01:13:25,900
Can you run clock again?

1332
01:13:28,700 --> 01:13:30,300
I always forget how to run it.

1333
01:13:31,200 --> 01:13:34,100
Is it clock handmade code?

1334
01:13:35,300 --> 01:13:36,000
Is that?

1335
01:13:38,000 --> 01:13:38,900
So, how you do it?

1336
01:13:38,900 --> 01:13:39,700
I don't

1337
01:13:42,200 --> 01:13:42,900
I think that's it.

1338
01:13:46,900 --> 01:13:48,500
Yeah, we're getting up to the 10K.

1339
01:13:48,500 --> 01:13:49,100
Mark.

1340
01:13:49,900 --> 01:13:51,100
It's crawling up there.

1341
01:13:52,000 --> 01:13:54,900
I'm not sure how game big the game would be when it shifts.

1342
01:13:54,900 --> 01:13:55,700
Good question.

1343
01:13:56,400 --> 01:13:57,700
Hopefully not too large.

1344
01:13:58,300 --> 01:14:00,600
You want to try and keep your code kind of tiny, you know?

1345
01:14:03,100 --> 01:14:03,600
So yeah.

1346
01:14:19,700 --> 01:14:21,300
Have you ever used unity3d?

1347
01:14:21,400 --> 01:14:22,500
No, I have not.

1348
01:14:24,800 --> 01:14:26,800
What advice do you have for relatively new programmers, who are trying

1349
01:14:26,800 --> 01:14:30,100
to ditch the oop mindset and move on to things like data oriented

1350
01:14:30,100 --> 01:14:31,600
design and compressor oriented design.

1351
01:14:31,600 --> 01:14:35,000
So the advice that I would have

1352
01:14:36,800 --> 01:14:38,300
Depends on the person.

1353
01:14:39,400 --> 01:14:46,200
So, if you are somebody who learned to program and then learned

1354
01:14:46,200 --> 01:14:48,100
object-oriented programming and it messed you up,

1355
01:14:49,300 --> 01:14:52,500
then what I would say is just go back to the old way you programmed

1356
01:14:52,600 --> 01:14:54,800
and start again from there, that's what I did.

1357
01:14:55,000 --> 01:14:59,800
And it works really well and just focus on sort of

1358
01:15:00,000 --> 01:15:02,300
Programming the old school way, where you're the sat down and tried to

1359
01:15:02,300 --> 01:15:06,300
get something to work and then add on to that the compression oriented

1360
01:15:06,300 --> 01:15:07,400
steps where you go.

1361
01:15:07,400 --> 01:15:08,600
Like, okay.

1362
01:15:09,200 --> 01:15:11,600
Now I'm going to pull some stuff out and now I'm going to try and make

1363
01:15:11,600 --> 01:15:16,200
some things that like, you know, are repeatable things that I've seen

1364
01:15:16,200 --> 01:15:17,100
myself doing often.

1365
01:15:17,100 --> 01:15:19,200
I'm going to make repeatable pieces out of those, right?

1366
01:15:20,900 --> 01:15:25,000
But if you're somebody who never learned how to program on their own

1367
01:15:25,000 --> 01:15:27,300
and was taught poop first,

1368
01:15:29,200 --> 01:15:33,000
then I'm afraid, I don't know because I've never been in that position

1369
01:15:33,000 --> 01:15:33,600
myself.

1370
01:15:33,600 --> 01:15:35,400
I don't know what the right thing to say is.

1371
01:15:36,000 --> 01:15:41,400
I think what I would say is try to put the notion of the programming

1372
01:15:41,400 --> 01:15:48,500
language out of your brain and try to think about the computer.

1373
01:15:50,400 --> 01:15:55,300
What does the computer need to do to solve the problem that you have?

1374
01:15:55,600 --> 01:15:56,000
Right?

1375
01:15:56,500 --> 01:16:01,000
What are the literal steps that the CPU must do to solve the problem?

1376
01:16:01,300 --> 01:16:04,300
Write that as simply as possible?

1377
01:16:05,000 --> 01:16:07,100
That is the foundation of coding.

1378
01:16:08,300 --> 01:16:12,400
And everything that is structural language wise that builds up should

1379
01:16:12,400 --> 01:16:16,300
build up from that and not lose sight of that, right?

1380
01:16:18,500 --> 01:16:21,200
And so, that's just something that people who learn to program by

1381
01:16:21,200 --> 01:16:23,400
themselves without anyone ever telling about object-oriented

1382
01:16:23,400 --> 01:16:24,000
programming.

1383
01:16:25,200 --> 01:16:26,500
That's what they naturally did.

1384
01:16:26,500 --> 01:16:29,400
Because when you naturally sit down and try to learn to program and

1385
01:16:29,400 --> 01:16:32,300
you're just kind of like hacking around on a machine and just kind of

1386
01:16:32,300 --> 01:16:35,900
poking at it, you always are coming from that mindset.

1387
01:16:35,900 --> 01:16:38,600
When you were learning, you were like, oh, I want the computer to like

1388
01:16:38,600 --> 01:16:39,900
put a red dot here.

1389
01:16:40,100 --> 01:16:41,200
How do I do that?

1390
01:16:41,300 --> 01:16:43,600
And that's what you were thinking, but in your brain you weren't

1391
01:16:43,600 --> 01:16:47,000
thinking, like, oh, do I need to like, abstract the concept of us?

1392
01:16:47,200 --> 01:16:51,600
Green and red should read be an object that oh what is this?

1393
01:16:51,600 --> 01:16:52,800
The pixel an object.

1394
01:16:52,800 --> 01:16:54,200
Or is it a group of objects?

1395
01:16:54,200 --> 01:16:55,200
Is there a container?

1396
01:16:55,300 --> 01:16:58,400
Do I have to ask a factory to get me a color and that color is red,

1397
01:16:58,400 --> 01:17:01,800
you know, like all of those things just weren't in your head.

1398
01:17:01,900 --> 01:17:03,900
So you learned how to program the right way?

1399
01:17:03,900 --> 01:17:04,600
First?

1400
01:17:05,700 --> 01:17:09,000
And then what happened is, when you started getting up into things,

1401
01:17:09,000 --> 01:17:12,300
where your programs were pretty big, and you were like, I need ways to

1402
01:17:12,300 --> 01:17:13,200
manage this.

1403
01:17:13,300 --> 01:17:16,200
Then you like, kind of found Hooper something and it kind of ruined

1404
01:17:16,200 --> 01:17:17,200
everything, right.

1405
01:17:17,400 --> 01:17:20,000
And so, what you want to do is just try to get up to that point right

1406
01:17:20,000 --> 01:17:23,900
before the ooh, pruning, throw away, the oop and realize that.

1407
01:17:24,000 --> 01:17:25,600
That first part was all correct.

1408
01:17:25,700 --> 01:17:26,900
You don't need to rethink it.

1409
01:17:26,900 --> 01:17:28,700
You actually we're doing exactly the right thing.

1410
01:17:28,800 --> 01:17:32,400
The only thing that you need to do is change the way you do, your

1411
01:17:32,400 --> 01:17:34,000
higher level organization.

1412
01:17:34,000 --> 01:17:35,300
Don't think about soup instead.

1413
01:17:35,500 --> 01:17:40,400
Just think about how can we reuse little chunks of this code, right?

1414
01:17:40,700 --> 01:17:43,600
And when you start thinking about that, you just naturally, pull out

1415
01:17:43,600 --> 01:17:46,700
the pieces that are reusable and those pieces then can have pieces

1416
01:17:46,700 --> 01:17:48,500
that are pulled out that are reusable, right?

1417
01:17:48,600 --> 01:17:50,200
And again you just compress compress.

1418
01:17:50,200 --> 01:17:51,500
Compress right?

1419
01:17:52,700 --> 01:17:55,300
And it's not like it's magic, you can't just do it.

1420
01:17:55,300 --> 01:17:58,000
You have to like, practice that to and learn all of the different

1421
01:17:58,000 --> 01:17:58,300
ways.

1422
01:17:58,300 --> 01:17:59,700
You can try to compress things.

1423
01:18:01,000 --> 01:18:02,800
But that is the right way to do it.

1424
01:18:03,000 --> 01:18:05,300
And then that way you don't have to think about objects.

1425
01:18:05,300 --> 01:18:07,000
You don't have to think about those sorts of things.

1426
01:18:07,000 --> 01:18:10,100
Are all sort of, these really kind of extraneous Concepts that really

1427
01:18:10,100 --> 01:18:11,500
don't have that much to do with programming.

1428
01:18:12,000 --> 01:18:18,600
And instead, you'll see that the closely related forms the parts of

1429
01:18:18,600 --> 01:18:22,000
poop that worked at all, which are not many.

1430
01:18:22,000 --> 01:18:26,600
But the parts that did will naturally arise, you don't have to plan

1431
01:18:26,600 --> 01:18:27,300
for them.

1432
01:18:27,700 --> 01:18:29,900
You don't have to plan for objects anymore.

1433
01:18:30,200 --> 01:18:35,700
Objects will naturally appear because they are the pieces that as they

1434
01:18:35,700 --> 01:18:36,500
got compressed.

1435
01:18:36,500 --> 01:18:39,900
They were the thing that is sort of encapsulated the data that this

1436
01:18:39,900 --> 01:18:41,700
thing needed to work, right?

1437
01:18:42,400 --> 01:18:48,100
And so you can even arrived at the same like basically the same

1438
01:18:48,100 --> 01:18:53,800
program even sometimes from an object-oriented mindset and a

1439
01:18:53,800 --> 01:18:55,200
compression oriented mindset.

1440
01:18:56,000 --> 01:18:58,700
The difference is the compression, origin mindset, Took a ton of the

1441
01:18:58,700 --> 01:18:59,900
work out of it, right?

1442
01:19:00,100 --> 01:19:00,300
Right?

1443
01:19:01,600 --> 01:19:04,900
But most of the time you end up in very different places, but that's

1444
01:19:04,900 --> 01:19:05,100
good.

1445
01:19:05,100 --> 01:19:09,600
Because usually, the odd place is a bad place and the cop places a

1446
01:19:09,600 --> 01:19:10,600
good place, right?

1447
01:19:11,300 --> 01:19:13,600
But yet, and so, and so that's the thing.

1448
01:19:13,600 --> 01:19:15,600
And again, I want to emphasize that like

1449
01:19:17,900 --> 01:19:19,200
Object-oriented programming.

1450
01:19:19,500 --> 01:19:22,900
The problem with it is not the concept that there could be an object,

1451
01:19:23,000 --> 01:19:23,500
right?

1452
01:19:24,000 --> 01:19:26,700
The problem is, is the fact that you're orienting your program.

1453
01:19:26,700 --> 01:19:29,000
It's exactly what it says object oriented programming.

1454
01:19:29,300 --> 01:19:33,300
It's the object oriented the whole word, that's the problem, right?

1455
01:19:33,400 --> 01:19:36,500
An object may not be a problem, like it's not a problem.

1456
01:19:36,500 --> 01:19:38,900
If an object suddenly appears in your code, like oh my God, I gotta

1457
01:19:38,900 --> 01:19:41,700
get rid of this object, this is a disaster, right?

1458
01:19:41,700 --> 01:19:45,200
Because data gets bundled all the time, right?

1459
01:19:45,200 --> 01:19:47,500
That's a, you know that was before object, you're probably right.

1460
01:19:47,800 --> 01:19:51,900
To programming as a concept ever occurred, data got bundled and there

1461
01:19:51,900 --> 01:19:53,700
are algorithms which operate on the data.

1462
01:19:53,700 --> 01:19:57,100
And you could choose to link those two things together.

1463
01:19:57,100 --> 01:19:58,700
You could do all sorts of things, right?

1464
01:19:59,400 --> 01:20:02,800
And so the problem with object-oriented programming is the fact that

1465
01:20:02,800 --> 01:20:07,600
you are orienting the thinking around the objects, not the functions,

1466
01:20:08,400 --> 01:20:10,300
that's the problem, right?

1467
01:20:10,300 --> 01:20:14,600
So it's the orientation that's bad about it, not whether you end up

1468
01:20:14,600 --> 01:20:17,500
with an object that's a really important distinction to understand.

1469
01:20:17,600 --> 01:20:21,200
and because it's

1470
01:20:23,200 --> 01:20:26,300
I don't want people to get in this habit of thinking that, so if I

1471
01:20:26,300 --> 01:20:29,200
ended up with a bundle of data somehow that was bad because that's not

1472
01:20:29,200 --> 01:20:30,800
bad data does get bundled together.

1473
01:20:30,800 --> 01:20:33,700
It's a way of reducing the number of things that you have to talk

1474
01:20:33,700 --> 01:20:35,500
about in a particular piece of code, right?

1475
01:20:37,800 --> 01:20:41,100
And so, where the problem starts coming, is all this, the sort of

1476
01:20:41,100 --> 01:20:43,700
object orientation start where you start to say, like, oh, things have

1477
01:20:43,700 --> 01:20:47,200
to be objects, which are always encapsulated and they have private

1478
01:20:47,200 --> 01:20:49,700
member functions, which are the only things that are private, remember

1479
01:20:49,700 --> 01:20:52,300
functions that can operate on their private data, which are the only

1480
01:20:52,300 --> 01:20:54,200
things that are allowed to do that and that's important.

1481
01:20:54,200 --> 01:20:56,100
Like, all of that stuff is actually not important.

1482
01:20:56,100 --> 01:20:58,000
That's like bad ideas, right?

1483
01:20:59,200 --> 01:20:59,800
And so you want to get

1484
01:21:00,000 --> 01:21:06,200
Of those but you don't want to necessarily get rid of the concept that

1485
01:21:06,200 --> 01:21:07,500
you might have bundles of data.

1486
01:21:07,500 --> 01:21:11,200
And there's functions that kind of go long with those in the in a sort

1487
01:21:11,200 --> 01:21:12,900
of way that you maybe say, okay.

1488
01:21:12,900 --> 01:21:15,300
I'm going to sort of put this aside as a library.

1489
01:21:15,300 --> 01:21:16,400
So make that right?

1490
01:21:16,600 --> 01:21:19,800
Because C library still exists and you know, the C library is not

1491
01:21:19,800 --> 01:21:21,800
object oriented by any stretch of the imagination.

1492
01:21:21,800 --> 01:21:25,100
But it has something like a Time structure that has day month and

1493
01:21:25,100 --> 01:21:25,600
year.

1494
01:21:25,600 --> 01:21:28,100
And it has some functions that operate on that, right?

1495
01:21:28,400 --> 01:21:29,800
And the difference is that the

1496
01:21:30,000 --> 01:21:35,400
the functions are Primal and they can operate across many different

1497
01:21:35,400 --> 01:21:36,300
types of things.

1498
01:21:36,300 --> 01:21:40,000
They don't have any particular adherence to any sort of like, Oh, I'm

1499
01:21:40,000 --> 01:21:42,800
a friend of this, or I can only accept the private of this or, oh,

1500
01:21:42,800 --> 01:21:45,100
we've got to pass messages around or any of this sort of things,

1501
01:21:45,100 --> 01:21:45,600
right?

1502
01:21:47,200 --> 01:21:51,100
They just have certain bundles that they do use to talk about in those

1503
01:21:51,100 --> 01:21:54,500
bundles, are units of information that we found to be convenient

1504
01:21:54,500 --> 01:21:56,700
rather than having to pass everything in and everything out all the

1505
01:21:56,700 --> 01:21:57,100
time.

1506
01:21:57,100 --> 01:21:57,600
Right?

1507
01:21:58,500 --> 01:21:59,800
And so hopefully, that gives a little bit of

1508
01:22:00,000 --> 01:22:03,800
Effective on how those sorts of things shake out and what is and is

1509
01:22:03,800 --> 01:22:06,300
not important in the various models, right?

1510
01:22:21,100 --> 01:22:22,400
All right, looks like we're all done.

1511
01:22:28,800 --> 01:22:30,000
No more questions.

1512
01:22:34,400 --> 01:22:35,800
Looks like we got no more questions.

1513
01:22:36,600 --> 01:22:39,800
All right, so I will go ahead and wrap things up.

1514
01:22:40,800 --> 01:22:42,600
Let's close down here.

1515
01:22:43,400 --> 01:22:43,900
Boop.

1516
01:22:45,800 --> 01:22:46,300
Loop.

1517
01:22:48,700 --> 01:22:49,300
All right.

1518
01:22:51,500 --> 01:22:52,500
Let's see.

1519
01:22:52,700 --> 01:22:53,500
And what was our clock?

1520
01:22:53,500 --> 01:22:56,300
70 7400, I guess.

1521
01:22:57,500 --> 01:22:57,900
It's

1522
01:22:59,200 --> 01:23:02,200
Does it actually say how many are oh that's the actual lines of code.

1523
01:23:02,200 --> 01:23:04,300
I see but there's comments and other things.

1524
01:23:04,500 --> 01:23:08,300
So the actual total number is these like added together if you just

1525
01:23:08,300 --> 01:23:12,500
want actual lines, wait,

1526
01:23:16,100 --> 01:23:16,700
oh,

1527
01:23:20,000 --> 01:23:21,100
I guess I don't understand.

1528
01:23:21,200 --> 01:23:25,000
So why is this a 76,000 lines?

1529
01:23:25,300 --> 01:23:26,400
Oh, that's the speed.

1530
01:23:26,400 --> 01:23:27,200
That always gets me.

1531
01:23:27,400 --> 01:23:27,600
I'm sorry.

1532
01:23:27,700 --> 01:23:28,200
All right.

1533
01:23:28,600 --> 01:23:29,100
Never mind.

1534
01:23:29,300 --> 01:23:30,800
All right, now we can wrap it up.

1535
01:23:31,300 --> 01:23:33,100
Thank you, everyone for joining me for another episode of handmade

1536
01:23:33,100 --> 01:23:33,300
here.

1537
01:23:33,300 --> 01:23:34,400
It's been a pleasure coding with you.

1538
01:23:34,400 --> 01:23:38,800
As always, if you would like to follow along with the code, you can

1539
01:23:38,800 --> 01:23:41,300
always pre-order the game and handmade here at org and it comes to the

1540
01:23:41,300 --> 01:23:41,900
source code.

1541
01:23:41,900 --> 01:23:45,200
So, if you would like to follow along with the source code and play

1542
01:23:45,200 --> 01:23:47,900
around with it at home, you can always do that by pre-ordering the

1543
01:23:47,900 --> 01:23:48,100
game.

1544
01:23:48,100 --> 01:23:49,100
I upload it every

1545
01:23:49,200 --> 01:23:51,000
night so that you can use the latest one.

1546
01:23:51,200 --> 01:23:51,900
The next day.

1547
01:23:52,900 --> 01:23:55,900
We also have you go to hear me here at our org patreon page.

1548
01:23:55,900 --> 01:23:58,600
You subscribe to if you want to support the video series, there is a

1549
01:23:58,600 --> 01:23:59,100
forum site.

1550
01:23:59,100 --> 01:23:59,900
You can go to ask

1551
01:24:00,000 --> 01:24:02,700
Enter get ports to Mac and Linux looking to anti-deficit guide other

1552
01:24:02,700 --> 01:24:03,900
good things like that.

1553
01:24:04,100 --> 01:24:07,900
There's a tweet box, you can use if you want to know, like, when the

1554
01:24:07,900 --> 01:24:11,100
streams to me live at tweets, the schedule and that sort of stuff, and

1555
01:24:11,100 --> 01:24:13,100
then finally, we also have a little Live Now button.

1556
01:24:13,100 --> 01:24:14,000
That was contributed basically.

1557
01:24:14,000 --> 01:24:17,500
It says, when, you know, this like a countdown timer till the next

1558
01:24:17,500 --> 01:24:17,800
dream.

1559
01:24:17,800 --> 01:24:19,600
So if you're just curious, how long it's going to be two were on

1560
01:24:19,600 --> 01:24:20,900
again, you can always check that out too.

1561
01:24:21,600 --> 01:24:22,600
So check all that stuff out.

1562
01:24:22,600 --> 01:24:28,500
It's all pretty useful and yeah until tomorrow we'll be back here, 5

1563
01:24:28,500 --> 01:24:28,700
p.m.

1564
01:24:28,700 --> 01:24:29,800
Pacific Daylight time tomorrow.

1565
01:24:30,000 --> 01:24:32,600
How to do a little bit more work on the asset system.

1566
01:24:32,700 --> 01:24:35,800
I hope to see you all there and hopefully I will maybe do a little bit

1567
01:24:35,800 --> 01:24:36,700
of that tag matching.

1568
01:24:36,700 --> 01:24:37,800
See how that system kind of works.

1569
01:24:37,800 --> 01:24:40,500
So yeah we like it and make some decisions about where we want to go

1570
01:24:40,500 --> 01:24:41,000
from there.

1571
01:24:41,000 --> 01:24:44,700
So thanks everyone for joining me and until next time, happy coding.

