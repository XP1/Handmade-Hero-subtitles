1
00:00:00,500 --> 00:00:01,700
Exactly that.

2
00:00:02,400 --> 00:00:06,500
Welcome everyone to handmade hero the show, where we build an entire

3
00:00:06,500 --> 00:00:07,400
game from scratch.

4
00:00:07,400 --> 00:00:08,300
No libraries.

5
00:00:08,300 --> 00:00:11,100
No engine basically, for two reasons, one.

6
00:00:11,100 --> 00:00:14,900
Because it's a lot of fun and two, because it is pretty educational.

7
00:00:14,900 --> 00:00:15,400
I think.

8
00:00:15,800 --> 00:00:19,200
I'm I've always been very happy that I knew how all of the stuff

9
00:00:19,200 --> 00:00:22,000
worked in at a low level for all of game development stuff.

10
00:00:22,000 --> 00:00:25,200
Even when I did stuff that wasn't low level, I was working on projects

11
00:00:25,200 --> 00:00:29,100
where, you know, we were using libraries or that sort of thing.

12
00:00:29,100 --> 00:00:29,700
It's just

13
00:00:30,000 --> 00:00:30,900
It's really good.

14
00:00:30,900 --> 00:00:33,800
I feel like to know absolutely everything that happens in the full

15
00:00:33,800 --> 00:00:36,200
stack of a game because it just makes you a lot more powerful.

16
00:00:36,200 --> 00:00:40,200
And basically, you know, it lets you have complete control when you

17
00:00:40,200 --> 00:00:40,500
need it.

18
00:00:40,500 --> 00:00:42,500
It lets you know, that no matter what happens.

19
00:00:42,500 --> 00:00:44,300
You can always go down to the engine source code.

20
00:00:44,300 --> 00:00:45,900
You can always go make your own stuff.

21
00:00:45,900 --> 00:00:48,700
If you need to work around something, because you kind of know how

22
00:00:48,700 --> 00:00:51,400
everything works instead of having to sort of be beholden to whatever

23
00:00:51,400 --> 00:00:55,600
someone else makes, and having to live with, whatever problems might

24
00:00:55,600 --> 00:00:57,100
exist in something that you're using.

25
00:00:58,100 --> 00:00:59,700
So I'm having a blast so far and we

26
00:01:00,000 --> 00:01:02,400
We got to what I think is the much more fun part of things.

27
00:01:02,400 --> 00:01:06,900
Because basically, we spent basically, I think we estimated it was

28
00:01:06,900 --> 00:01:11,000
about 25 hours worth of time working on a winter day to prototyping

29
00:01:11,000 --> 00:01:13,200
layer because we've basically got to give ourselves some Services.

30
00:01:13,200 --> 00:01:16,000
We can use, we got to write those ourselves that can do things, like

31
00:01:16,000 --> 00:01:19,300
display bitmap and play sound and get user input so that we have

32
00:01:19,300 --> 00:01:21,600
something to make our game on, but we have done that.

33
00:01:21,700 --> 00:01:24,300
And now we're we are in a position to make our game.

34
00:01:24,300 --> 00:01:24,500
Now.

35
00:01:24,500 --> 00:01:27,100
We haven't actually done the shipping version of the of that platform

36
00:01:27,100 --> 00:01:27,300
layer.

37
00:01:27,300 --> 00:01:27,800
Obviously yet.

38
00:01:27,800 --> 00:01:29,800
We only did just a prototype version so it's not

39
00:01:29,900 --> 00:01:32,700
Not the a fantastic platform or anything, but it is plenty good enough

40
00:01:32,700 --> 00:01:36,200
for our purposes of getting the game running and developing the game

41
00:01:36,200 --> 00:01:37,500
to a certain point.

42
00:01:37,500 --> 00:01:43,400
So with that in mind today, I would like, to actually start doing the

43
00:01:43,400 --> 00:01:47,100
game development proper, which I think is really cool, because that's

44
00:01:47,100 --> 00:01:49,600
going to be a lot more fun than monkeying with win32.

45
00:01:49,600 --> 00:01:54,200
So, if you pre-ordered the game on handmade hero dot-org, you should

46
00:01:54,200 --> 00:01:58,900
have gotten a link, an email with a link in it, that email link will

47
00:01:58,900 --> 00:01:59,900
allow you to download the source code.

48
00:02:00,000 --> 00:02:03,000
Road and the source code comes as a giant zip file, which has every

49
00:02:03,000 --> 00:02:04,900
day's state every day.

50
00:02:04,900 --> 00:02:08,000
The source tree like sort of snapshot at every day.

51
00:02:08,300 --> 00:02:10,699
So, if you want to follow along, we are on day 27.

52
00:02:10,800 --> 00:02:14,800
So, unzip Day 26 has source code because that is what I am starting

53
00:02:14,800 --> 00:02:15,100
with.

54
00:02:15,200 --> 00:02:16,600
You always start with the previous day.

55
00:02:16,700 --> 00:02:20,500
So unzip Day 26 is and you will be starting exactly where I am

56
00:02:20,500 --> 00:02:21,900
starting right now.

57
00:02:22,200 --> 00:02:22,700
Okay.

58
00:02:23,100 --> 00:02:25,900
So first things first, let's go to the little diagram.

59
00:02:25,900 --> 00:02:28,500
I did a bunch of talking yesterday, just to kind of get everyone on

60
00:02:28,500 --> 00:02:29,800
the same page about what

61
00:02:29,900 --> 00:02:31,300
Texture is, and that sort of stuff.

62
00:02:31,500 --> 00:02:32,200
And today.

63
00:02:32,200 --> 00:02:36,100
I want to talk very briefly, you know, maybe spend about 10 minutes

64
00:02:36,100 --> 00:02:40,000
here, talking about how we go about doing architecture.

65
00:02:40,000 --> 00:02:42,800
Because yesterday, I basically just tried to get across the fact that

66
00:02:43,000 --> 00:02:46,300
a lot of the things that typically happen with with crazy, like

67
00:02:46,300 --> 00:02:52,400
upfront architecture, and all that stuff is is basically like a

68
00:02:52,400 --> 00:02:55,800
confusing and perhaps non productive way to go about things.

69
00:02:55,900 --> 00:02:59,800
So I kind of wanted people to understand what sort of the you know,

70
00:03:00,800 --> 00:03:03,700
What the basic concepts of architecture are and sort of like how to

71
00:03:03,700 --> 00:03:04,100
approach it.

72
00:03:04,100 --> 00:03:06,800
How to think about it, frame it in your mind, but we didn't actually

73
00:03:06,800 --> 00:03:09,300
do any architecture yesterday or any sort of work like that and I

74
00:03:09,300 --> 00:03:11,000
didn't really explain how we would go about that.

75
00:03:11,000 --> 00:03:13,900
So today, I guess I wanted to take the first part of the stream to

76
00:03:13,900 --> 00:03:16,900
kind of explain that part of it and then start doing it.

77
00:03:16,900 --> 00:03:20,700
So basically, we'll sort of say what we're trying to do and how I

78
00:03:20,700 --> 00:03:23,400
think about the process of doing it and then we will do it.

79
00:03:23,700 --> 00:03:26,500
And then this will be a process that continues for like essentially

80
00:03:26,500 --> 00:03:30,100
the entire length of the stream where we're constantly sort of

81
00:03:30,300 --> 00:03:33,600
Think about as we as we do more code, how it's lots and the

82
00:03:33,600 --> 00:03:35,700
architecture, how we might watch, change the architecture, how we need

83
00:03:35,700 --> 00:03:37,800
to revise things, that sort of stuff.

84
00:03:38,200 --> 00:03:38,600
Okay.

85
00:03:39,800 --> 00:03:42,400
So I want to introduce a concept here.

86
00:03:42,400 --> 00:03:47,700
I guess, if you've, if you've watched my lecture on API design, then

87
00:03:47,700 --> 00:03:50,100
you kind of already know this, but I'm just going to say it here on

88
00:03:50,100 --> 00:03:52,500
the stream because a lot of people probably haven't seen that.

89
00:03:52,800 --> 00:03:55,900
So what I want to talk about here is just a mental model for

90
00:03:55,900 --> 00:03:59,700
understanding the way that projects develop over time.

91
00:04:00,500 --> 00:04:04,600
And what I want you to do is, is put on your imagination cap.

92
00:04:04,600 --> 00:04:08,200
You're a little like a fantasy and Matt like unicorns running around

93
00:04:08,200 --> 00:04:09,700
and trolls under bridges.

94
00:04:09,700 --> 00:04:13,100
And I don't know a wing and Pegasus certainly obviously those would be

95
00:04:13,100 --> 00:04:14,600
there as would a griffin.

96
00:04:15,400 --> 00:04:20,899
Imagine that that fantasy land that we call project.

97
00:04:22,100 --> 00:04:26,100
State space and I know it sounds a little fancy.

98
00:04:26,300 --> 00:04:29,600
But all I want to do is basically just have a geometric

99
00:04:29,600 --> 00:04:30,400
representation.

100
00:04:30,400 --> 00:04:34,800
Just some, totally abstract representation of basically saying you are

101
00:04:34,800 --> 00:04:36,200
here on a project.

102
00:04:36,300 --> 00:04:39,200
So days, zero of a project which is essentially what we're at here.

103
00:04:39,200 --> 00:04:41,300
We made a prototyping layer itself contains.

104
00:04:41,300 --> 00:04:44,600
So we can pretty much think of today, as like, the starting point for

105
00:04:44,600 --> 00:04:48,400
the actual game, the the like the engine of the game, and the game

106
00:04:48,400 --> 00:04:49,100
itself.

107
00:04:49,200 --> 00:04:50,800
That is what we're starting today.

108
00:04:51,100 --> 00:04:51,300
So,

109
00:04:51,700 --> 00:04:55,100
You can think about it as like kind of this product State space as a

110
00:04:55,100 --> 00:04:58,900
like you are here kind of a thing where we have absolutely nothing.

111
00:04:58,900 --> 00:05:00,400
We have nothing right?

112
00:05:00,600 --> 00:05:03,500
And in our imaginary project State space.

113
00:05:03,600 --> 00:05:08,500
There is some like n State up here, right?

114
00:05:08,500 --> 00:05:10,300
Which is what we will ship.

115
00:05:10,500 --> 00:05:10,800
Right?

116
00:05:10,800 --> 00:05:14,700
So there's some you know, imaginary geography of projects and the and

117
00:05:14,700 --> 00:05:17,700
the state of the project what's in it and how it's designed and all

118
00:05:17,700 --> 00:05:21,500
that stuff where we start somewhere and we go and

119
00:05:21,700 --> 00:05:22,800
And we end up somewhere else.

120
00:05:22,800 --> 00:05:23,100
Right?

121
00:05:23,100 --> 00:05:24,800
And that that somewhere is the Finish.

122
00:05:24,800 --> 00:05:27,800
That's that's the full on completed project.

123
00:05:28,200 --> 00:05:31,100
Now as anyone who's ever done a project knows, but of course, some

124
00:05:31,100 --> 00:05:33,600
people have our may be doing products of the big problem for the first

125
00:05:33,600 --> 00:05:36,100
time on this stream, but you know, a lot of people probably have

126
00:05:36,100 --> 00:05:38,800
experience with some kind of programming if they're following the

127
00:05:38,800 --> 00:05:42,800
stream, you know, that it doesn't look like a straight path, right?

128
00:05:42,800 --> 00:05:46,400
It's not like you start with nothing Day Zero, you know, this is this

129
00:05:46,400 --> 00:05:50,500
is day 0 of your project and this is day, you know, who knows what 700

130
00:05:50,500 --> 00:05:51,500
or something, right?

131
00:05:52,000 --> 00:05:53,600
And you're talking about, okay.

132
00:05:53,700 --> 00:05:55,600
I just it's a linear path every day.

133
00:05:55,600 --> 00:05:56,500
I do a little bit of work.

134
00:05:56,500 --> 00:05:58,500
I get closer to that ship State and I'm just done.

135
00:05:58,900 --> 00:05:59,800
That's not

136
00:06:00,000 --> 00:06:01,500
All how projects tend to go.

137
00:06:01,700 --> 00:06:04,100
If you think about how projects go, there's often.

138
00:06:04,100 --> 00:06:07,400
There's a lot of this sort of thing that happens, right?

139
00:06:07,400 --> 00:06:11,100
Like, you know, you know, there's there's all sorts of Meandering and

140
00:06:11,100 --> 00:06:14,900
you go around and and you know, you you make changes that maybe get

141
00:06:14,900 --> 00:06:17,400
you even further away and that was a mistake and you kind of kind of

142
00:06:17,400 --> 00:06:20,300
come back and that sort of stuff and eventually you end up at the ship

143
00:06:20,300 --> 00:06:24,200
thing, but it's not this, it's not this perfect line of sight at day

144
00:06:24,200 --> 00:06:24,600
0.

145
00:06:24,600 --> 00:06:27,300
You often don't even know what this thing looks like, right?

146
00:06:27,300 --> 00:06:29,900
You don't you don't have a perfect vision for

147
00:06:30,000 --> 00:06:30,300
Actly.

148
00:06:30,300 --> 00:06:30,800
What the code?

149
00:06:30,800 --> 00:06:31,200
You're going to ship?

150
00:06:31,200 --> 00:06:33,900
Looks like you have nothing and you have a vague idea of what it

151
00:06:33,900 --> 00:06:37,300
probably looks like but if it's a project of any complexity if it's

152
00:06:37,300 --> 00:06:38,700
not, you know, hello world.

153
00:06:38,800 --> 00:06:42,400
You probably don't really have an idea of what that actually looks

154
00:06:42,400 --> 00:06:42,800
like.

155
00:06:43,600 --> 00:06:49,000
So what I want to talk about this diagram is just how to

156
00:06:49,000 --> 00:06:51,400
conceptualize, what you are doing.

157
00:06:51,400 --> 00:06:55,000
Every day in that drive toward ship, as far as architecture is

158
00:06:55,000 --> 00:06:58,100
concerned and even to some degree as far as just individual pieces of

159
00:06:58,100 --> 00:06:59,800
code are concerned because really the code in the

160
00:07:00,000 --> 00:07:02,100
Texture, you know, it's a it's a blurry line.

161
00:07:02,100 --> 00:07:03,200
They're like What's the architecture?

162
00:07:03,200 --> 00:07:03,800
What's the code?

163
00:07:03,900 --> 00:07:06,000
They're really just what level we're talking about.

164
00:07:06,000 --> 00:07:08,100
Whether we're talking about the fine grain, or whether we're talking

165
00:07:08,100 --> 00:07:10,100
about the coarse grain of how the coop code operates.

166
00:07:10,100 --> 00:07:12,300
So it's almost a Continuum at some level.

167
00:07:13,200 --> 00:07:17,700
So what I want to talk about is the fact that when you are at a

168
00:07:17,700 --> 00:07:19,700
particular time, it doesn't have to be day.

169
00:07:19,700 --> 00:07:22,400
Zero could be any day, like we could be somewhere a little further

170
00:07:22,400 --> 00:07:25,500
along, you know, maybe we're on day 100 or something like this, right?

171
00:07:26,200 --> 00:07:27,500
At any given point.

172
00:07:27,800 --> 00:07:29,800
You can basically think about what you're

173
00:07:29,900 --> 00:07:34,800
Going to do as picking, you know as driving towards some new location

174
00:07:34,800 --> 00:07:38,100
in the state space and you don't actually know where this is.

175
00:07:38,100 --> 00:07:40,800
You don't know the actual ending location of this, right?

176
00:07:40,800 --> 00:07:43,500
You just have some vague notion and maybe you maybe you have a range

177
00:07:43,500 --> 00:07:46,400
you're like, oh, it's I think the thing we want to ship kind of looks

178
00:07:46,400 --> 00:07:48,100
a little bit like something that would be in here.

179
00:07:48,100 --> 00:07:51,000
Right, but you don't actually know where that final destination is.

180
00:07:51,000 --> 00:07:53,600
So, you know, you might aim for something over here.

181
00:07:53,700 --> 00:07:56,800
And then when you start to kind of get towards it, maybe you realize

182
00:07:56,800 --> 00:07:59,400
that what you really needed was was the thing that you end up shipping

183
00:07:59,400 --> 00:07:59,800
right in it.

184
00:08:00,000 --> 00:08:01,400
End up back over there, whatever.

185
00:08:01,400 --> 00:08:01,600
Right?

186
00:08:01,600 --> 00:08:03,600
So you don't really know this like a vague idea of what you're trying

187
00:08:03,600 --> 00:08:04,100
to get to.

188
00:08:04,300 --> 00:08:05,800
You have some conceptions in your head.

189
00:08:05,800 --> 00:08:08,600
But especially if it's something that you haven't done a lot before

190
00:08:08,600 --> 00:08:11,000
you don't really know and this could be a very wide and amorphous

191
00:08:11,000 --> 00:08:14,000
thing, you're aiming towards and you'll it kind of shrinks down over

192
00:08:14,000 --> 00:08:15,300
time as you get closer to it.

193
00:08:15,300 --> 00:08:16,600
You can start to sort of see.

194
00:08:16,600 --> 00:08:20,200
Oh, you know, it looks it looks narrower and narrower where I'm

195
00:08:20,200 --> 00:08:23,100
actually aiming for but at first it could be very broad, you know, you

196
00:08:23,100 --> 00:08:26,700
may have no idea really where that final piece of what that final

197
00:08:26,700 --> 00:08:27,600
structure looks like.

198
00:08:28,200 --> 00:08:29,800
So on any given day, which are sort of doing,

199
00:08:29,900 --> 00:08:32,500
Doing is you're doing like a dead reckoning and going?

200
00:08:32,600 --> 00:08:36,799
Okay from where I'm at now and given the code that I'm trying to write

201
00:08:36,799 --> 00:08:40,200
right now, whatever it is, like maybe I'm trying to upgrade the object

202
00:08:40,200 --> 00:08:42,799
system because it can't handle some of the things that we wanted to do

203
00:08:42,799 --> 00:08:43,700
in the design right now.

204
00:08:43,700 --> 00:08:45,000
Like it or it's really inefficient.

205
00:08:45,000 --> 00:08:46,400
We're trying to optimize who knows.

206
00:08:46,700 --> 00:08:52,200
So we're trying to do something and what you're doing at that point

207
00:08:52,400 --> 00:08:54,500
when you sort of sit down and start coding for the day, is you're

208
00:08:54,500 --> 00:08:57,100
driving towards some new point, right?

209
00:08:57,100 --> 00:08:59,500
In this state space, your kind of like going

210
00:09:00,000 --> 00:09:03,300
Something depending on what you decide to do that day.

211
00:09:04,200 --> 00:09:07,500
And then when you finish that that step, however, much that takes your

212
00:09:07,500 --> 00:09:09,800
going to be at a new point and you're gonna do the same thing again,

213
00:09:09,800 --> 00:09:12,400
you're going to choose to do something and that something drives you

214
00:09:12,400 --> 00:09:13,100
in a direction.

215
00:09:13,300 --> 00:09:16,400
And in that way, you kind of build this path that sort of meanders

216
00:09:16,400 --> 00:09:20,300
towards ship and the better you are with your dead reckoning.

217
00:09:20,300 --> 00:09:23,800
The the sort of less wasted work, the less switchbacks.

218
00:09:23,800 --> 00:09:24,600
There are on this path.

219
00:09:24,600 --> 00:09:27,000
The less, you know of that kind of thing is happening, but that's

220
00:09:27,000 --> 00:09:28,200
basically what's going on here.

221
00:09:29,200 --> 00:09:35,400
So the reason again that I think that just to sort of cement what's

222
00:09:35,400 --> 00:09:39,000
going on here, the reason that I really like again, compression

223
00:09:39,000 --> 00:09:41,800
oriented programming where we just kind of like write code see how it

224
00:09:41,800 --> 00:09:44,800
works at the low level and then sort of Loft it up into designs as we

225
00:09:44,800 --> 00:09:49,700
go and not try to do a whole lot of pre-planning it specifically

226
00:09:49,700 --> 00:09:53,100
because pre-planning assumes, you know what this thing looks like

227
00:09:53,100 --> 00:09:55,000
already, you know what the code is going to look like?

228
00:09:55,000 --> 00:09:57,900
Because think about it, if you have to do a bunch of planning on how

229
00:09:57,900 --> 00:09:58,800
the code will go, the

230
00:09:59,000 --> 00:10:03,300
Way you basically have to say, I know where this is and I'm making the

231
00:10:03,300 --> 00:10:06,800
waypoints along the way that we're going to go to for the design,

232
00:10:06,800 --> 00:10:07,500
right?

233
00:10:08,200 --> 00:10:09,800
If you don't know what this is.

234
00:10:09,800 --> 00:10:12,300
There's really no way to do these, right?

235
00:10:12,300 --> 00:10:15,200
So, usually, what happens when people do a lot of upfront design, is

236
00:10:15,200 --> 00:10:16,700
they pick totally wrong stuff.

237
00:10:16,700 --> 00:10:17,500
They're like, okay.

238
00:10:17,500 --> 00:10:20,200
This is how this is our path, guys.

239
00:10:20,200 --> 00:10:21,200
It's going to be great.

240
00:10:21,300 --> 00:10:23,600
We just go to cure and then we go to here and then we go to hear the,

241
00:10:23,600 --> 00:10:25,400
we go to here and then we ship it, right?

242
00:10:25,500 --> 00:10:28,800
And when you what you do is you end up going to, they're doing it.

243
00:10:29,000 --> 00:10:30,700
And you do it and you're like the whole way you're like, oh this

244
00:10:30,700 --> 00:10:31,300
doesn't feel right.

245
00:10:31,300 --> 00:10:32,700
Okay, things are getting pretty janky.

246
00:10:32,700 --> 00:10:35,800
And by the time you get to hear your like this is a disaster like

247
00:10:35,800 --> 00:10:36,200
this.

248
00:10:36,300 --> 00:10:37,300
This code is awful.

249
00:10:37,300 --> 00:10:40,700
It's we're fighting the design of the architecture of the whole way.

250
00:10:40,900 --> 00:10:44,100
And either you end up shipping something that's kind of crappy and not

251
00:10:44,100 --> 00:10:47,300
even close to what probably would have been optimal or at some point.

252
00:10:47,300 --> 00:10:50,600
You realize your mistakes and you try to start course-correcting,

253
00:10:50,700 --> 00:10:51,200
right?

254
00:10:52,100 --> 00:10:57,500
And so upfront design is basically putting in way points on this map.

255
00:10:57,500 --> 00:10:58,900
But you're putting in waypoints.

256
00:10:58,900 --> 00:11:00,600
Would you don't know the destination?

257
00:11:00,800 --> 00:11:02,400
And that just doesn't work, right?

258
00:11:02,400 --> 00:11:04,100
It just plain doesn't work.

259
00:11:04,500 --> 00:11:07,700
So, what I want to encourage and the way we will be approaching

260
00:11:07,700 --> 00:11:10,400
everything and we have already been approaching things this way to a

261
00:11:10,400 --> 00:11:11,100
large extent.

262
00:11:11,100 --> 00:11:13,000
Although, like I said, it was kind of cheating on the platform there

263
00:11:13,000 --> 00:11:16,200
because I've done it so many times, I kind of know what the end result

264
00:11:16,200 --> 00:11:16,300
is.

265
00:11:16,300 --> 00:11:20,000
So I do really know what this is so I could kind of set waypoints.

266
00:11:20,400 --> 00:11:21,600
And like I said that

267
00:11:21,800 --> 00:11:24,800
Just isn't an interesting architectural problem because that's more

268
00:11:24,800 --> 00:11:27,100
like just cut and pasting from your brain.

269
00:11:27,100 --> 00:11:28,100
It's not even waypoints.

270
00:11:28,100 --> 00:11:29,000
It's just I know what it is.

271
00:11:29,000 --> 00:11:29,700
I'm going to write it.

272
00:11:29,700 --> 00:11:30,200
Right.

273
00:11:30,700 --> 00:11:34,500
So the much more interesting architectural thing in the skills that I

274
00:11:34,500 --> 00:11:37,700
hope to show and encourage you to develop over the course of the

275
00:11:37,700 --> 00:11:41,400
stream is what to do when you don't, when you haven't written the

276
00:11:41,400 --> 00:11:43,300
thing before, that's the hard thing.

277
00:11:43,300 --> 00:11:45,900
That's where the real architecture work exists because if you've

278
00:11:45,900 --> 00:11:49,700
already written it many times before and you're totally know exactly

279
00:11:49,700 --> 00:11:50,500
how you want to do it.

280
00:11:50,500 --> 00:11:51,500
Then that's that's not.

281
00:11:51,700 --> 00:11:54,300
Architecture, that's just, you know, it's regurgitation.

282
00:11:54,300 --> 00:11:55,000
And it's good.

283
00:11:55,000 --> 00:11:57,000
I mean, it's great to go into something and go, you know what?

284
00:11:57,000 --> 00:11:57,900
I know exactly how to do this.

285
00:11:57,900 --> 00:11:58,600
Just bam.

286
00:11:58,600 --> 00:11:59,200
There it is, right.

287
00:11:59,200 --> 00:11:59,900
That's always great.

288
00:12:00,700 --> 00:12:04,800
But that's not being a code architect because you, you were the code

289
00:12:04,800 --> 00:12:05,200
architect.

290
00:12:05,200 --> 00:12:06,400
You were doing that before.

291
00:12:06,800 --> 00:12:07,900
When you learned how to do it.

292
00:12:07,900 --> 00:12:08,400
Right?

293
00:12:08,500 --> 00:12:11,700
And so what I want to talk about is is or about when I talk about what

294
00:12:11,700 --> 00:12:14,400
we're going to constantly, sort of focus on as we go through the

295
00:12:14,400 --> 00:12:15,600
stream and have opportunities to do.

296
00:12:15,600 --> 00:12:19,800
So, is focusing on how to actually do this process, much more

297
00:12:19,800 --> 00:12:20,200
efficiently.

298
00:12:20,200 --> 00:12:24,600
And again, what I want to encourage is not to set those bogus

299
00:12:24,600 --> 00:12:27,300
waypoints, not to look too far ahead.

300
00:12:27,300 --> 00:12:30,000
So what we are constantly going to do is we're constantly

301
00:12:30,100 --> 00:12:36,200
Going to basically a take a sort of an Explorer and then lock

302
00:12:36,200 --> 00:12:36,700
approach.

303
00:12:36,700 --> 00:12:40,000
We're basically going to do the opposite of that way point instead of

304
00:12:40,000 --> 00:12:43,900
picking a set of things that we think are the directions to go right?

305
00:12:43,900 --> 00:12:46,500
Which may turn out to be wrong head of time instead.

306
00:12:46,500 --> 00:12:48,700
What we're going to do is we're going to take our space wherever it

307
00:12:48,700 --> 00:12:48,800
is.

308
00:12:48,800 --> 00:12:54,600
We're going to explore around the space and we're going to see what we

309
00:12:54,600 --> 00:12:56,200
find in that space.

310
00:12:56,200 --> 00:12:59,600
When we find something that we feel is along the path to

311
00:13:00,100 --> 00:13:00,300
Ting.

312
00:13:00,700 --> 00:13:05,000
We will lock that in and make that our new location and then we will

313
00:13:05,000 --> 00:13:06,100
repeat the process.

314
00:13:06,400 --> 00:13:06,900
Right?

315
00:13:07,000 --> 00:13:09,800
So we're constantly going to, I don't know why that just went crazy

316
00:13:09,800 --> 00:13:10,100
there.

317
00:13:10,200 --> 00:13:15,400
So we are constantly going to look at things as this two-stage process

318
00:13:15,400 --> 00:13:19,900
that repeats itself over and over which is start from where we are, do

319
00:13:20,000 --> 00:13:21,900
Explorations that are just us writing.

320
00:13:21,900 --> 00:13:24,800
Whatever code comes to mind for the thing that we need to implement.

321
00:13:24,800 --> 00:13:28,000
So if we need a tile map today or whatever it is, we're just going to

322
00:13:28,000 --> 00:13:29,900
try just flat coating and tile map with

323
00:13:30,100 --> 00:13:31,600
No thought to the architecture whatsoever.

324
00:13:31,600 --> 00:13:33,000
It's going to do whatever comes to mind.

325
00:13:33,100 --> 00:13:36,100
We're gonna explore and see what works in the code.

326
00:13:37,000 --> 00:13:39,000
When we find something that we are happy with that.

327
00:13:39,000 --> 00:13:40,100
We think worked pretty well.

328
00:13:40,300 --> 00:13:41,100
We'll lock that in.

329
00:13:41,100 --> 00:13:43,500
We'll call that the point that we're going to start from now and then

330
00:13:43,500 --> 00:13:45,300
we'll start on the next problem.

331
00:13:45,600 --> 00:13:50,400
And in that way, what we hope to do is basically assume that there is,

332
00:13:50,600 --> 00:13:55,200
you know, sort of a gradient along the path to shipping that you can

333
00:13:55,200 --> 00:13:59,200
learn to sense as you gain, good programming skills that you can learn

334
00:13:59,200 --> 00:13:59,900
to sense when our

335
00:14:00,100 --> 00:14:01,600
Architectures are good and bad.

336
00:14:01,600 --> 00:14:04,800
And you can basically say that there's kind of this trough that goes

337
00:14:04,800 --> 00:14:05,500
to shipping.

338
00:14:05,600 --> 00:14:05,800
Right?

339
00:14:05,800 --> 00:14:07,700
There's there's a like a Hillclimb.

340
00:14:07,700 --> 00:14:11,400
You can do where you can basically say that like this just disappears

341
00:14:11,400 --> 00:14:12,000
to be good.

342
00:14:12,000 --> 00:14:15,900
When we look at the code and this is like, okay and this is may be

343
00:14:15,900 --> 00:14:21,000
fair and this is like bad, you know, and and this is like

344
00:14:21,000 --> 00:14:22,300
object-oriented over here something.

345
00:14:22,300 --> 00:14:22,500
Okay.

346
00:14:22,500 --> 00:14:23,000
I'm kidding.

347
00:14:23,000 --> 00:14:23,600
I'm kidding.

348
00:14:23,700 --> 00:14:24,500
I've drained people.

349
00:14:24,500 --> 00:14:27,400
I'm sorry, you know, I joke at you a little bit there's bad and then

350
00:14:27,400 --> 00:14:29,900
there's you know, just awful is over here, whatever, right?

351
00:14:31,500 --> 00:14:34,500
And so, I guess what I'm saying, is that what we will assume is that

352
00:14:34,500 --> 00:14:38,000
generally as you become a better programmer and have more experience

353
00:14:38,000 --> 00:14:39,400
with code in general.

354
00:14:40,400 --> 00:14:43,600
You will learn how to do this sort of sensing of where you are so that

355
00:14:43,600 --> 00:14:45,900
you can path find to these things.

356
00:14:45,900 --> 00:14:49,600
Even though you don't know the destination by doing an exploration and

357
00:14:49,600 --> 00:14:51,500
accepting step, right?

358
00:14:51,500 --> 00:14:54,100
Such that when you do architectures, that are new that you've never

359
00:14:54,100 --> 00:14:56,100
done before for things that you've never done before.

360
00:14:56,400 --> 00:14:59,800
You can still leverage all of the experience you've had doing

361
00:15:00,000 --> 00:15:03,100
Other things to get you to a good point, right?

362
00:15:03,200 --> 00:15:04,800
And so that's kind of the model.

363
00:15:04,800 --> 00:15:06,300
I want you to think about in your head.

364
00:15:06,500 --> 00:15:09,100
I don't think you can do way points for an architecture, you've never

365
00:15:09,100 --> 00:15:09,700
done before.

366
00:15:09,700 --> 00:15:12,400
I've never seen it work, and I just don't think it probably does.

367
00:15:12,700 --> 00:15:15,200
But what you can do is once you've had some experience programming,

368
00:15:15,200 --> 00:15:19,000
you can learn to sense the gradient, you can learn to sense where you

369
00:15:19,000 --> 00:15:23,200
are, and you can constantly kind, of course, correct to stay in that

370
00:15:23,200 --> 00:15:28,000
trough of good design all the way to the end, so that you minimize the

371
00:15:28,000 --> 00:15:29,800
degrees out into the bad area.

372
00:15:30,000 --> 00:15:33,200
Has that you would have had if you know you predefined your Waypoint

373
00:15:33,200 --> 00:15:36,000
to be here and drove towards it and just had disaster Zone the whole

374
00:15:36,000 --> 00:15:37,000
time, right?

375
00:15:37,800 --> 00:15:40,900
So this is how I want you to conceptualize what we are doing.

376
00:15:41,100 --> 00:15:42,500
As this project State space.

377
00:15:42,500 --> 00:15:44,100
It's got a channel to good.

378
00:15:44,100 --> 00:15:44,600
Right?

379
00:15:44,700 --> 00:15:46,200
And our goal is to constantly sense.

380
00:15:46,200 --> 00:15:47,800
Whether we are in the channel too good.

381
00:15:47,800 --> 00:15:50,600
And when we sent ourselves going outside, it we just going to try to

382
00:15:50,600 --> 00:15:52,600
course-correct back in and make sure that we stay there.

383
00:15:52,800 --> 00:15:53,300
Okay.

384
00:15:54,700 --> 00:15:56,700
Now, of course, this is all hypothetical.

385
00:15:56,700 --> 00:15:59,400
This is all just my experience of programming talking.

386
00:16:00,000 --> 00:16:03,100
No one has ever proved or analyzed any of this thing.

387
00:16:03,600 --> 00:16:06,500
Nobody whoever does design ever proves her analyzes anything,

388
00:16:06,500 --> 00:16:10,100
unfortunately, so we have no formalism to back us up.

389
00:16:10,200 --> 00:16:11,500
But neither does anyone else?

390
00:16:11,600 --> 00:16:14,000
And so all I can say is in my experience.

391
00:16:14,000 --> 00:16:17,900
This has been the truest thing I have ever found in terms of how to

392
00:16:17,900 --> 00:16:23,700
conceptualize developing the structure of code set with that in mind.

393
00:16:24,000 --> 00:16:25,600
Let's get started on things.

394
00:16:26,000 --> 00:16:29,800
I'm going to quickly say, sort of what our goals are for our game.

395
00:16:29,900 --> 00:16:31,400
Engine at this point.

396
00:16:31,500 --> 00:16:35,300
I'm just in general because since you guys don't know what the game

397
00:16:35,300 --> 00:16:39,700
design is, and I do now is time for me to Carnot sort of say a little

398
00:16:39,700 --> 00:16:40,600
bit about that.

399
00:16:40,700 --> 00:16:43,400
Now, I want to save a lot of the game design stuff for a little later

400
00:16:43,400 --> 00:16:43,600
on.

401
00:16:43,600 --> 00:16:46,100
I'm I want to keep most of things a surprise but

402
00:16:49,300 --> 00:16:53,300
But what I will say is, I'm going to talk a little bit about sort of

403
00:16:53,400 --> 00:16:58,200
how the game looks and plays so that we can understand what we are

404
00:16:58,200 --> 00:17:00,300
building in terms of an engine to support him.

405
00:17:00,400 --> 00:17:00,900
Right?

406
00:17:01,700 --> 00:17:06,800
So I've mentioned Legend of Zelda in the past and I am a big fan of

407
00:17:06,800 --> 00:17:08,599
the original Legend of Zelda.

408
00:17:09,000 --> 00:17:10,500
And I mean, like, original original.

409
00:17:10,500 --> 00:17:14,800
Like the one that was on the Nintendo Entertainment System that you

410
00:17:14,800 --> 00:17:17,000
played with one of those little controllers that looked like a

411
00:17:17,099 --> 00:17:17,599
rectangular.

412
00:17:17,800 --> 00:17:24,000
Rick, I'm a big fan of it because it basically just dropped you down

413
00:17:25,099 --> 00:17:29,800
in a world that had a lot of richness and interest in it, but it

414
00:17:29,800 --> 00:17:36,100
didn't give you any constraints or dictates about what you were trying

415
00:17:36,100 --> 00:17:36,400
to do.

416
00:17:36,400 --> 00:17:39,500
There wasn't like this, you know, little fairy that shows up like

417
00:17:39,500 --> 00:17:42,800
there aren't later Zelda's, who's like, don't go into that Forest yet

418
00:17:42,800 --> 00:17:44,000
because you're not ready to go there.

419
00:17:44,000 --> 00:17:46,100
First, go help the blacksmith.

420
00:17:46,600 --> 00:17:47,600
Smite his, you know,

421
00:17:47,700 --> 00:17:51,300
Make his Smith is little sword and you go to the blacks with a

422
00:17:51,300 --> 00:17:51,900
blacksmith select.

423
00:17:51,900 --> 00:17:55,700
I would love to submit the sword, but I can't because I don't have any

424
00:17:55,700 --> 00:17:59,100
water for my wheel and then the fairy pops up and goes, we should get

425
00:17:59,100 --> 00:17:59,800
him water for his.

426
00:18:00,000 --> 00:18:03,800
Like those kind of Ruin Zelda for me, and I can appreciate the fact

427
00:18:03,800 --> 00:18:06,000
that game design is obviously a personal preference.

428
00:18:06,000 --> 00:18:08,600
So there's probably lots of people who like that sort of thing.

429
00:18:08,800 --> 00:18:09,500
And that's fine.

430
00:18:09,500 --> 00:18:11,200
So, I don't want to say that that's bad.

431
00:18:11,200 --> 00:18:12,900
And like I said, I only need a game designer.

432
00:18:13,000 --> 00:18:16,400
So I'm not trying to, I'm not trying to tell you anything about that

433
00:18:17,200 --> 00:18:21,300
from any kind of objective standpoint, but personally, that really

434
00:18:21,300 --> 00:18:24,700
ruins the Zelda to me, and I don't even play him anymore, because what

435
00:18:24,700 --> 00:18:28,400
I liked about that very original one, that very first Legend of Zelda

436
00:18:28,400 --> 00:18:29,800
was that sort of

437
00:18:30,700 --> 00:18:34,100
That feeling of exploration that you get when you really just have no

438
00:18:34,100 --> 00:18:36,200
idea what's coming next.

439
00:18:36,300 --> 00:18:39,600
And you know, you have this freedom to explore and think about what

440
00:18:39,600 --> 00:18:41,700
you want to do on your own.

441
00:18:41,900 --> 00:18:47,200
And so that is the sort of core concept that I want in the game

442
00:18:47,200 --> 00:18:47,500
design.

443
00:18:47,500 --> 00:18:49,400
That is the main thing that I'm going for.

444
00:18:50,000 --> 00:18:55,500
And I want to kind of, since Legend of Zelda is a very classic game

445
00:18:55,500 --> 00:18:58,700
written in the classic style there, you know, obviously it was a Kart

446
00:18:58,700 --> 00:18:59,800
game on a very limited system.

447
00:18:59,900 --> 00:19:02,800
I think it's kind of appropriate for handmade hero to look to that as

448
00:19:02,800 --> 00:19:03,700
kind of a model.

449
00:19:04,300 --> 00:19:05,700
What I sort of want to do is go.

450
00:19:05,700 --> 00:19:08,100
Okay, what would we do though?

451
00:19:08,100 --> 00:19:12,600
If we wanted to kind of modernize everything that goes on in one of

452
00:19:12,600 --> 00:19:15,400
those kind of old games where I have the you know, Sprite guy, who

453
00:19:15,400 --> 00:19:18,200
walks around a tile map and walks off the top of the screen and walks

454
00:19:18,200 --> 00:19:21,500
onto like another screen and can explore the map and so on.

455
00:19:22,300 --> 00:19:23,100
What would we do?

456
00:19:23,100 --> 00:19:26,800
If we want to Modern all's Nuys, all of that stuff, but still stay

457
00:19:26,800 --> 00:19:29,800
true to sort of the feeling the positive feelings.

458
00:19:29,900 --> 00:19:34,700
Is of exploration and, and sort of the no hand-holding approach and,

459
00:19:34,700 --> 00:19:35,800
and all that sort of stuff.

460
00:19:36,800 --> 00:19:41,600
So, basically, that's the game design that I've been working on in and

461
00:19:42,000 --> 00:19:45,300
that, you know, again, I'll be sort of talking about more later as we

462
00:19:45,300 --> 00:19:48,100
start to talk about actual specifics of game design, but what it

463
00:19:48,100 --> 00:19:52,000
implies for engine is, I want a bunch of things that are going to

464
00:19:52,000 --> 00:19:55,900
support me in, making that kind of experience.

465
00:19:56,300 --> 00:19:59,700
So what I do want to do, right, is I want to have a way for us to

466
00:19:59,700 --> 00:19:59,800
base.

467
00:20:00,000 --> 00:20:03,000
We make a tile map kind of a thing.

468
00:20:03,100 --> 00:20:03,400
Right?

469
00:20:03,400 --> 00:20:06,200
I want to be able to make screens that are like the old Zelda that

470
00:20:06,200 --> 00:20:07,900
have like a tile map on them, right.

471
00:20:08,200 --> 00:20:10,600
Where we have stuff like, you know, this is a water Thailand.

472
00:20:10,600 --> 00:20:12,000
This is a land Thailand.

473
00:20:12,000 --> 00:20:15,500
This is, you know, shopkeeper or whatever and everything, you know,

474
00:20:15,500 --> 00:20:17,000
and this is grass or something.

475
00:20:17,000 --> 00:20:18,200
I don't know, right?

476
00:20:18,700 --> 00:20:24,000
I want to be able to make that kind of a game where it has that feel

477
00:20:24,000 --> 00:20:29,500
of the old sort of Classics, but I don't really want to have to do

478
00:20:29,500 --> 00:20:29,800
tile.

479
00:20:29,900 --> 00:20:31,200
All mapped Graphics, right?

480
00:20:31,200 --> 00:20:35,300
I don't I feel like tilemap Graphics are possibly something that

481
00:20:35,300 --> 00:20:37,800
doesn't really need to be preserved from the old days.

482
00:20:37,800 --> 00:20:40,900
I think that that was mostly just because that's what they could do.

483
00:20:41,100 --> 00:20:46,400
I don't think that necessarily needs to be in a modern game design for

484
00:20:46,400 --> 00:20:47,900
the game design to be good.

485
00:20:47,900 --> 00:20:48,500
Right?

486
00:20:50,000 --> 00:20:56,200
I do however, think there's something perhaps important about the, the

487
00:20:56,200 --> 00:20:59,500
tile map design like

488
00:21:00,000 --> 00:21:04,600
Player understanding that they are on a tile map.

489
00:21:04,600 --> 00:21:09,500
And that like if this tile is blocked and this tile is blocked and

490
00:21:09,500 --> 00:21:13,000
there's a pushable thing here that, you know, they can push it this

491
00:21:13,000 --> 00:21:17,300
way and it ends up here that like leads to important, understanding of

492
00:21:17,300 --> 00:21:21,300
puzzles and it like it simplifies things in the mind of the player in

493
00:21:21,300 --> 00:21:21,700
a way.

494
00:21:21,700 --> 00:21:23,200
That's kind of important.

495
00:21:23,300 --> 00:21:28,000
We're if I just said, okay, scrap the whole tilemap thing entirely and

496
00:21:28,000 --> 00:21:29,800
we're just going to have a free floating world.

497
00:21:30,000 --> 00:21:33,000
You know where everything is just at X random X and Y position.

498
00:21:33,000 --> 00:21:34,600
So if there's something to push, it's here.

499
00:21:34,900 --> 00:21:37,100
I just don't feel like that is worked as well.

500
00:21:37,300 --> 00:21:42,100
I feel like there's something concrete and gamey that gets lost.

501
00:21:42,200 --> 00:21:45,900
When you try to go a little too far in the direction of completely

502
00:21:45,900 --> 00:21:46,500
generic.

503
00:21:47,000 --> 00:21:51,700
So basically what I am going to try and design our engine to do is to

504
00:21:51,900 --> 00:21:57,500
create a playable game on a tile map, but where the tile map is not

505
00:21:57,500 --> 00:21:59,800
rendered directly as a tile map.

506
00:22:00,000 --> 00:22:02,900
Is rendered as something a little more flexible than a tile map that

507
00:22:02,900 --> 00:22:05,600
just Vans take sort of the shape of a tile map.

508
00:22:05,600 --> 00:22:09,200
But so that you don't see like, big obvious repeating tiles, where

509
00:22:09,200 --> 00:22:12,700
it's like, okay, here's the like one tree that we had and here's the

510
00:22:12,700 --> 00:22:13,600
tree again, right?

511
00:22:13,600 --> 00:22:14,100
Or whatever.

512
00:22:14,400 --> 00:22:17,100
So, something that looks a little more flexible, maybe even has a

513
00:22:17,100 --> 00:22:18,600
little bit of smoothing around it.

514
00:22:18,600 --> 00:22:22,700
So it's not 100% hard when I walk into these things, but that still

515
00:22:22,700 --> 00:22:24,800
can preserve the properties of a tile map.

516
00:22:24,800 --> 00:22:29,500
Where the gameplay logic is kind of operating on the tile map.

517
00:22:29,900 --> 00:22:32,000
For a certain set of objects.

518
00:22:32,000 --> 00:22:34,000
Anyway, like maybe there are some objects.

519
00:22:34,000 --> 00:22:36,300
I mean, well we know there are because even the original Legend of

520
00:22:36,300 --> 00:22:40,600
Zelda, for example, your character could move not aligned with the

521
00:22:40,600 --> 00:22:41,700
boundary, right?

522
00:22:41,700 --> 00:22:44,800
So pushable objects had to stay on the Tom app, but the character

523
00:22:44,800 --> 00:22:50,100
didn't have to write and so we will allow certain things to just kind

524
00:22:50,100 --> 00:22:53,700
of be free floating around as necessary and those will probably like

525
00:22:53,700 --> 00:22:57,300
enemies and the main guy or whatever, but then we want to be able to

526
00:22:57,300 --> 00:22:58,900
kind of have this concept of a tile map.

527
00:22:58,900 --> 00:22:59,800
That's understandable.

528
00:23:00,000 --> 00:23:03,800
The player so that they can see it, and we can base sort of gameplay

529
00:23:03,800 --> 00:23:07,600
things on the tile map that are easy to understand for a player and

530
00:23:07,700 --> 00:23:09,500
easy to execute, right?

531
00:23:10,400 --> 00:23:12,500
So I want that, that is the basic thing.

532
00:23:12,500 --> 00:23:13,400
They're going to be doing.

533
00:23:13,400 --> 00:23:15,100
So we need to base the construct.

534
00:23:15,100 --> 00:23:20,600
Something that allows us to have, you know, a tile map underneath,

535
00:23:20,900 --> 00:23:21,500
right?

536
00:23:21,700 --> 00:23:22,700
That can be rendered.

537
00:23:22,700 --> 00:23:27,500
It has to have, you know, stuff that moves around moves on top, right?

538
00:23:27,500 --> 00:23:28,900
Moves on tile map.

539
00:23:31,200 --> 00:23:32,600
Oops tile map.

540
00:23:33,300 --> 00:23:35,000
So we need those things obviously.

541
00:23:35,500 --> 00:23:36,700
And so that's a very traditional thing.

542
00:23:36,700 --> 00:23:41,400
But we're also going to do kind of like a fancy fancy renderer, right?

543
00:23:41,400 --> 00:23:42,900
Or a fancy compositor.

544
00:23:42,900 --> 00:23:44,000
However, you want to talk about it.

545
00:23:44,100 --> 00:23:45,800
We're going to get fancier here.

546
00:23:46,000 --> 00:23:48,800
So these, maybe a little traditional, these will be, like, basically

547
00:23:48,800 --> 00:23:50,100
upgraded versions of exactly.

548
00:23:50,100 --> 00:23:52,700
The kind of stuff you would have seen the snez in as Gamers.

549
00:23:52,700 --> 00:23:56,400
And as game where will, you know, will probably do a better job than

550
00:23:56,400 --> 00:23:59,600
they could have because they had a lot more limited resources, but

551
00:24:00,000 --> 00:24:01,700
This part will be a complete departure.

552
00:24:01,700 --> 00:24:05,600
So when we get to how we're actually gonna present the visuals will go

553
00:24:05,600 --> 00:24:08,600
way, we'll go in a totally different direction than they ever would

554
00:24:08,600 --> 00:24:10,000
have or could have for that matter.

555
00:24:11,000 --> 00:24:12,100
So we want to do that.

556
00:24:13,200 --> 00:24:17,600
And what I would like to do is, I would like to make this game totally

557
00:24:17,600 --> 00:24:18,400
procedural.

558
00:24:18,600 --> 00:24:24,400
So, I want everything to be generated by essentially, a an algorithm

559
00:24:24,500 --> 00:24:28,700
of some kind that will produce totally new worlds, every time.

560
00:24:28,900 --> 00:24:32,600
So I want it to be the case that essentially, for the most part

561
00:24:32,700 --> 00:24:36,400
nothing that we do will ever be like a hard-coded screen.

562
00:24:36,500 --> 00:24:39,100
There will never be like screens, you know, unless they're just like,

563
00:24:39,100 --> 00:24:42,200
the starting screen or the ending screen, you know, some very specific

564
00:24:42,200 --> 00:24:42,800
screens.

565
00:24:43,200 --> 00:24:45,800
That we want to hard code for some reason for the most part, every

566
00:24:45,800 --> 00:24:48,900
last little thing should be procedural.

567
00:24:49,000 --> 00:24:53,400
Such that when you play it you are you are seeing new a new map every

568
00:24:53,400 --> 00:24:54,400
time that you go in.

569
00:24:54,900 --> 00:24:55,300
Okay.

570
00:24:56,300 --> 00:24:57,200
So why do that?

571
00:24:58,100 --> 00:25:02,800
And when I say that also again have I learned anything?

572
00:25:02,900 --> 00:25:04,200
Let's see if I've learned anything.

573
00:25:04,500 --> 00:25:06,100
I want to try and clear out.

574
00:25:06,100 --> 00:25:10,600
Just just this one region will see if my if my working with krita

575
00:25:10,700 --> 00:25:12,400
yesterday has paid off at all.

576
00:25:13,000 --> 00:25:16,400
Can I can I do, like just draw around here?

577
00:25:19,400 --> 00:25:21,500
Hey, we're getting pretty good here.

578
00:25:21,500 --> 00:25:21,800
People.

579
00:25:21,800 --> 00:25:23,100
Wouldn't you say I think?

580
00:25:23,100 --> 00:25:23,600
So.

581
00:25:24,400 --> 00:25:25,000
All right.

582
00:25:25,000 --> 00:25:28,200
So what I wanted to talk about in addition to that, that, that should

583
00:25:28,200 --> 00:25:30,200
hopefully be pretty obvious what we're trying to do here, right?

584
00:25:30,200 --> 00:25:33,400
So nothing, you know, nothing particularly confusing about these

585
00:25:33,400 --> 00:25:35,200
goals, maybe this, this fancy render.

586
00:25:35,200 --> 00:25:37,900
A thing may be pretty confusing to implement because we're kind of

587
00:25:38,100 --> 00:25:39,700
maybe blazing a little bit of a new Trail.

588
00:25:39,700 --> 00:25:42,400
There were some of the things that I'm thinking about trying to do but

589
00:25:42,400 --> 00:25:42,800
on the

590
00:25:43,200 --> 00:25:44,700
You can hopefully this is pretty understandable.

591
00:25:44,700 --> 00:25:47,500
We want to totally procedural tile map, based world.

592
00:25:47,500 --> 00:25:50,900
We want stuff to move on top of the tile map and interact cleanly with

593
00:25:50,900 --> 00:25:51,200
it.

594
00:25:51,200 --> 00:25:52,800
We want a renderer that's much fancier.

595
00:25:52,800 --> 00:25:54,500
So that the thing doesn't look like a town map.

596
00:25:54,500 --> 00:25:57,900
It looks you know kind of more organic and nice and pretty but that

597
00:25:57,900 --> 00:26:00,400
still understandable as a time after the player so that they can

598
00:26:00,400 --> 00:26:02,900
understand puzzles that are based on the time a poor things like this.

599
00:26:03,400 --> 00:26:03,800
Okay.

600
00:26:04,600 --> 00:26:06,400
So the totally procedural part

601
00:26:07,200 --> 00:26:12,300
I would like to basically maintain the sort of Zelda style

602
00:26:12,300 --> 00:26:14,500
conceptualization of a game world.

603
00:26:14,600 --> 00:26:18,200
So I would like to have an Overworld map, right?

604
00:26:18,800 --> 00:26:22,700
Which you walk around on and then I would like Dungeons that are in

605
00:26:22,700 --> 00:26:22,900
there.

606
00:26:22,900 --> 00:26:27,900
So I want to be able to generate something that essentially produces

607
00:26:28,100 --> 00:26:30,800
some kind of Overworld map with these tile.

608
00:26:30,800 --> 00:26:34,300
Without of you know tilemap portions out of which you're viewing a

609
00:26:34,300 --> 00:26:35,100
small one.

610
00:26:35,100 --> 00:26:36,900
You know, you're viewing this one at a time and when you walk

611
00:26:37,000 --> 00:26:37,800
Off the end of it.

612
00:26:37,800 --> 00:26:39,400
You come on to the next one.

613
00:26:39,400 --> 00:26:40,100
Right?

614
00:26:40,600 --> 00:26:46,500
I want to be able to do that and on certain locations on here, right?

615
00:26:46,600 --> 00:26:51,200
I want you to be able to enter something that will then be a dungeon

616
00:26:51,500 --> 00:26:55,600
map that, you know, has another map that you kind of walk around on

617
00:26:55,600 --> 00:26:56,300
that sort of stuff.

618
00:26:57,700 --> 00:26:59,800
Now, I'm not sure.

619
00:27:00,000 --> 00:27:03,000
Exactly what Tak I want to take, but I believe.

620
00:27:03,000 --> 00:27:07,100
So I'm going to put this up here because I this is what I would like

621
00:27:07,100 --> 00:27:10,500
to try first of all, because I don't think there's any reason not to.

622
00:27:10,800 --> 00:27:12,800
So I'm just going to write it down here.

623
00:27:13,100 --> 00:27:15,700
I want to try and make a completely consistent space.

624
00:27:15,700 --> 00:27:22,100
However, so rather than this map and the dungeon map being separate,

625
00:27:22,100 --> 00:27:22,700
essentially.

626
00:27:22,700 --> 00:27:24,600
I want them to all be the same.

627
00:27:25,000 --> 00:27:27,700
So, when you come here, right?

628
00:27:27,700 --> 00:27:30,000
And they're there won't be

629
00:27:30,000 --> 00:27:34,300
Be like this dungeon that's, you know, tons of screens long and why

630
00:27:34,300 --> 00:27:37,300
that just happens to all occupy like one space on the map.

631
00:27:37,300 --> 00:27:42,100
It'll actually be something more like you go down, you know, a ladder

632
00:27:42,100 --> 00:27:45,300
or tunnel you go down into the dungeon through the entrance and the

633
00:27:45,300 --> 00:27:47,000
dungeon is actually like underneath.

634
00:27:47,000 --> 00:27:51,800
So the dungeon tiles actually are underneath the actual real map.

635
00:27:51,800 --> 00:27:53,800
So these are like happening below, right?

636
00:27:53,800 --> 00:27:54,900
And it could be many levels deep.

637
00:27:54,900 --> 00:27:57,700
Let's say, but, you know, they could come back up.

638
00:27:57,700 --> 00:27:59,600
So there could be like another entrance to it here and

639
00:28:00,100 --> 00:28:03,300
If you went into this entrance and followed it through and came out,

640
00:28:03,300 --> 00:28:06,400
you would actually be in exactly the same space that you would think

641
00:28:06,400 --> 00:28:08,100
you would be on the world map.

642
00:28:08,200 --> 00:28:11,800
So I kind of want I want to kind of make the space, be 100% spatially

643
00:28:11,800 --> 00:28:12,600
consistent.

644
00:28:12,600 --> 00:28:18,600
So there's never like any kind of a unrealistic shrinking or expanding

645
00:28:18,600 --> 00:28:20,800
of what a tile is tiles.

646
00:28:20,800 --> 00:28:24,300
Should always be the same size and they all have to actually fit where

647
00:28:24,300 --> 00:28:24,900
they are.

648
00:28:25,300 --> 00:28:28,100
And so the only time that I would want to break that is if we had some

649
00:28:28,100 --> 00:28:29,800
kind of magical thing we were like,

650
00:28:30,000 --> 00:28:32,700
It would, if we were going to break that, it would have to be inside

651
00:28:32,700 --> 00:28:35,500
of some magical context where it was clear, that it was supposed to be

652
00:28:35,500 --> 00:28:36,100
broken.

653
00:28:36,200 --> 00:28:36,700
Right?

654
00:28:38,000 --> 00:28:39,200
And so, furthermore.

655
00:28:39,600 --> 00:28:42,400
I want basically no Dimension limits.

656
00:28:43,600 --> 00:28:46,200
This is a pretty important one to talk about.

657
00:28:46,600 --> 00:28:51,100
So, basically, I don't want to have to say that the whole map or

658
00:28:51,100 --> 00:28:56,900
something fits inside, you know, something that's that's 256 screens

659
00:28:56,900 --> 00:28:59,800
by 256 screens by 256 greens or something.

660
00:29:00,000 --> 00:29:02,200
It's like a giant voxel array or anything like this, right?

661
00:29:02,300 --> 00:29:04,400
I don't want there to be a dimension limit.

662
00:29:04,400 --> 00:29:06,200
There could be a dimension limit.

663
00:29:06,200 --> 00:29:07,700
That's just impractical.

664
00:29:07,800 --> 00:29:14,500
Like, say if, if it was, you know 4 billion by 4 billion by 4 billion

665
00:29:14,500 --> 00:29:15,100
or something.

666
00:29:15,300 --> 00:29:16,400
I'm okay with that.

667
00:29:16,400 --> 00:29:19,700
If that's the ACT, if that's a limitation, because we know that, the

668
00:29:19,700 --> 00:29:22,000
player could never walk across four billion things.

669
00:29:22,000 --> 00:29:28,500
So, I'm okay with basically a limitation, if it's never something we

670
00:29:28,500 --> 00:29:29,800
could ever possibly hit.

671
00:29:29,900 --> 00:29:33,500
It, but I'm not okay, with the limitation of something like this.

672
00:29:33,500 --> 00:29:35,800
So we're not going to do anything where we'd have to like, pack

673
00:29:35,800 --> 00:29:38,300
coordinates into something that would only fit in a 32-bit integer or

674
00:29:38,300 --> 00:29:38,600
any of us.

675
00:29:38,600 --> 00:29:42,900
We're not going to allow anything that would restrict our ability to

676
00:29:42,900 --> 00:29:47,700
basically create worlds that are as large as we want with the

677
00:29:47,700 --> 00:29:48,100
Restriction.

678
00:29:48,100 --> 00:29:49,800
Being that it's okay.

679
00:29:50,100 --> 00:29:54,600
If we know that a single continuous line from one end to the other is

680
00:29:54,600 --> 00:29:58,900
longer than a player could ever hope to walk in, you know, in less

681
00:29:58,900 --> 00:29:59,800
than a week.

682
00:30:00,000 --> 00:30:01,200
Continuous play or something, right?

683
00:30:01,200 --> 00:30:04,100
So if we can determine that that I'm okay with that limitation, but

684
00:30:04,100 --> 00:30:05,600
I'm not okay with any limitations that.

685
00:30:05,600 --> 00:30:09,500
Might actually constrain how the world gets generated in a practical

686
00:30:09,500 --> 00:30:09,800
sense.

687
00:30:15,400 --> 00:30:20,500
Okay, so I think that's mostly everything.

688
00:30:20,500 --> 00:30:23,400
We need to start going in and working on the actual game.

689
00:30:24,000 --> 00:30:27,600
I don't think there's much more that I need to say about it.

690
00:30:27,600 --> 00:30:30,900
But basically, you know, this is this is a pretty straightforward

691
00:30:31,100 --> 00:30:33,500
concrete specification of what I want to do.

692
00:30:34,300 --> 00:30:37,200
I want to make it so we can generate the world.

693
00:30:37,300 --> 00:30:39,500
I don't want them to be really any constraints on how we generate the

694
00:30:39,500 --> 00:30:43,400
world so we can generate giant worlds if you want to and and

695
00:30:43,700 --> 00:30:47,000
No, do whatever we want, especially this procedural, you know, if we

696
00:30:47,000 --> 00:30:49,900
want to, for some reason, say, please generate me this, this insanely

697
00:30:49,900 --> 00:30:51,600
huge world, we could do that.

698
00:30:51,600 --> 00:30:55,000
So I want to allow that and I want to be a consistent space.

699
00:30:55,000 --> 00:30:58,000
So there's that, you know, there's a, everything kind of fits

700
00:30:58,000 --> 00:31:02,600
together, and I want them to kind of based on an underlying tilemap,

701
00:31:02,600 --> 00:31:04,100
but just doesn't render like a tile map.

702
00:31:04,200 --> 00:31:08,300
I want to be able to have a bunch of things that happen on top of, you

703
00:31:08,300 --> 00:31:10,200
know, on top of that tile map.

704
00:31:10,300 --> 00:31:13,500
And then I want to be told a procedural now because this

705
00:31:13,600 --> 00:31:18,200
This is a well both because I want this in the game.

706
00:31:18,200 --> 00:31:20,200
I think it'll be cool as a general thing.

707
00:31:20,400 --> 00:31:24,500
But also because of, this is a series about teaching you how to

708
00:31:24,500 --> 00:31:26,900
program complex architectural issues.

709
00:31:27,500 --> 00:31:30,500
I also obviously, and we don't need to sort of get into this now

710
00:31:30,500 --> 00:31:32,100
because it'll be a little further down the road.

711
00:31:32,100 --> 00:31:36,200
But eventually the core game engine.

712
00:31:36,400 --> 00:31:40,700
I want to support like sort of an insane level of combinatorics.

713
00:31:41,200 --> 00:31:43,500
And what I mean by that is all of the things in this world.

714
00:31:43,600 --> 00:31:47,600
Old, whether their tiles or the things that move on top of the tiles,

715
00:31:47,600 --> 00:31:50,100
whatever is anything that's interactive in any way.

716
00:31:51,000 --> 00:31:56,100
I basically want it to be extremely combinatorially rich, such that

717
00:31:56,100 --> 00:32:00,200
anything, that you can any property that you can imagine about that

718
00:32:00,200 --> 00:32:04,900
thing can be dealt with, in a consistent way that interacts with other

719
00:32:04,900 --> 00:32:05,500
properties.

720
00:32:05,700 --> 00:32:11,200
So, for example, you know, if there's such a thing as a Monster, who,

721
00:32:12,700 --> 00:32:13,300
Has a brain.

722
00:32:13,300 --> 00:32:16,200
Any monster that's like actually has a brain of some kind, right?

723
00:32:16,200 --> 00:32:17,300
That's walking around or whatever.

724
00:32:17,700 --> 00:32:21,700
And there are things that have effects, like, fear or whatever, right?

725
00:32:21,900 --> 00:32:26,300
I always want you to be able to if there should be a reason why the

726
00:32:26,300 --> 00:32:28,800
monster got hit with something that should cause them fear.

727
00:32:28,800 --> 00:32:32,500
I want them to become fearful and this should work entirely through

728
00:32:32,500 --> 00:32:35,700
the pipeline in the sense that if for some reason we eventually give

729
00:32:35,700 --> 00:32:39,500
you something that's like a scepter that allows you to cast spells on

730
00:32:39,500 --> 00:32:42,300
a tile in the environment and the scepter can be

731
00:32:42,400 --> 00:32:43,100
ODed with gems.

732
00:32:43,100 --> 00:32:46,100
And this gem is a fear gem, then if you load the fear gem into the

733
00:32:46,100 --> 00:32:49,400
scepter and you cast the some, you know, you do a cast with the

734
00:32:49,400 --> 00:32:51,800
scepter onto the tile, it should put fear on the tile and if the

735
00:32:51,800 --> 00:32:54,200
monster walks into the tile, you should become fearful.

736
00:32:54,400 --> 00:32:58,100
And if there's cross effects, we're like anybody who's both fearful

737
00:32:58,200 --> 00:32:59,800
and weak suddenly.

738
00:33:00,100 --> 00:33:03,300
You know, runs away immediately or something like this, then that

739
00:33:03,300 --> 00:33:04,100
should happen to him.

740
00:33:04,100 --> 00:33:07,600
If he was a creature whose head was already had weakness, those sorts

741
00:33:07,600 --> 00:33:08,100
of things.

742
00:33:08,200 --> 00:33:08,700
Right?

743
00:33:09,200 --> 00:33:15,500
So we're going to be focusing on combinatorics a lot because they're

744
00:33:15,500 --> 00:33:18,400
the hardest thing to program in a game engine by far.

745
00:33:19,300 --> 00:33:22,900
And so, not only do I think they make for very interesting games.

746
00:33:23,500 --> 00:33:26,400
But I also think that they're going to make for a very interesting

747
00:33:26,400 --> 00:33:27,100
programming.

748
00:33:27,100 --> 00:33:29,800
And so watching me have to deal with

749
00:33:30,400 --> 00:33:34,200
A lot of those Comet or X I think is is mostly what I want to have

750
00:33:34,200 --> 00:33:36,800
happen in the later stages of working on this game.

751
00:33:37,700 --> 00:33:41,200
And so so we're going to focus on that a lot, but we're not probably

752
00:33:41,200 --> 00:33:42,600
going to get to that real soon.

753
00:33:42,600 --> 00:33:45,900
This is we want to try and focus on generating worlds that we can walk

754
00:33:45,900 --> 00:33:49,300
around in first just to make just to get ourselves up and running and

755
00:33:49,300 --> 00:33:54,700
so that we have something to use to drive our renderer design first,

756
00:33:54,700 --> 00:33:57,500
but once all that stuff is working, then we will kind of move on to

757
00:33:57,500 --> 00:33:58,900
the actual game development.

758
00:33:58,900 --> 00:33:59,800
Game design side.

759
00:34:00,000 --> 00:34:00,400
Things.

760
00:34:00,400 --> 00:34:02,500
And this, this will really be where we're spending.

761
00:34:02,500 --> 00:34:04,800
Almost all of our time will be on here.

762
00:34:05,500 --> 00:34:06,000
Okay.

763
00:34:06,100 --> 00:34:07,900
So, how am I going to approach this?

764
00:34:08,900 --> 00:34:12,400
Like I said, Remember the diagram that I drew earlier today where

765
00:34:12,400 --> 00:34:14,900
we're in a space and we're going to try explore around it.

766
00:34:14,900 --> 00:34:16,800
So I know that's what I'm going for.

767
00:34:16,800 --> 00:34:18,800
I know that this is, I have this in my head.

768
00:34:18,800 --> 00:34:22,000
I'm like I can sort of see the game that I want to make, right?

769
00:34:22,500 --> 00:34:24,300
But I have no idea what the code looks like.

770
00:34:24,300 --> 00:34:24,800
At the end.

771
00:34:24,800 --> 00:34:29,800
I've never made even a Legend of Zelda clone let alone.

772
00:34:29,900 --> 00:34:33,100
Own a completely new game whose design is, you know, very different

773
00:34:33,100 --> 00:34:35,600
from something like Legend of Zelda that just happens to be in the

774
00:34:35,600 --> 00:34:37,600
same genre, which is what we're making here.

775
00:34:38,199 --> 00:34:41,000
And certainly Legend of Zelda, had none of that combinatoric stuff

776
00:34:41,000 --> 00:34:43,900
really, so that's all totally new as well.

777
00:34:44,199 --> 00:34:47,800
So we just have a ton of stuff that's totally unknown at this point.

778
00:34:47,800 --> 00:34:52,400
And I don't have a plan for how I'm going to write it at all and I

779
00:34:52,400 --> 00:34:53,500
don't even have a plan.

780
00:34:53,500 --> 00:34:55,600
I don't even know how I want to do this.

781
00:34:55,600 --> 00:34:56,500
Tilemap stuff.

782
00:34:56,500 --> 00:34:59,800
I can you know, I again have a lot of experience.

783
00:35:00,000 --> 00:35:00,700
Lots of different things.

784
00:35:00,700 --> 00:35:02,500
So I could brainstorm right now.

785
00:35:02,500 --> 00:35:06,600
A number of ways that we could imagine implementing tilemap stuff and

786
00:35:06,600 --> 00:35:07,500
all that sort of thing.

787
00:35:07,600 --> 00:35:08,900
So that's certainly true.

788
00:35:09,100 --> 00:35:12,800
But I do not have I haven't written like 50 games that are like this

789
00:35:12,800 --> 00:35:15,300
before and where I can sit down and say, look, I know what works.

790
00:35:15,300 --> 00:35:15,500
I know.

791
00:35:15,500 --> 00:35:16,100
It doesn't work.

792
00:35:16,100 --> 00:35:17,000
You do it like this.

793
00:35:17,300 --> 00:35:19,400
I don't have that for most of the things in this game.

794
00:35:19,400 --> 00:35:24,100
And so I am in the that position that I was talking about the original

795
00:35:24,100 --> 00:35:25,400
diagram Day Zero.

796
00:35:25,400 --> 00:35:27,900
We're not sure where the shipping code is or what it looks like,

797
00:35:28,100 --> 00:35:28,700
right?

798
00:35:28,900 --> 00:35:29,800
And so I'm going to do

799
00:35:29,900 --> 00:35:30,500
Exactly.

800
00:35:30,500 --> 00:35:32,900
The thing that I said, we're going to start here on Day Zero with

801
00:35:32,900 --> 00:35:33,400
nothing.

802
00:35:33,800 --> 00:35:37,700
We're going to start by exploring around the space by just looking at

803
00:35:37,700 --> 00:35:40,300
what it takes to implement basic versions.

804
00:35:40,300 --> 00:35:42,400
How do I get a rectangle moving around on a tile map?

805
00:35:42,400 --> 00:35:43,700
How do I make a tile map?

806
00:35:43,700 --> 00:35:47,700
That's got rectangles are like colored by, you know, what kind of tile

807
00:35:47,700 --> 00:35:48,300
they're supposed to be.

808
00:35:48,300 --> 00:35:50,300
How do I move from one screen to the next screen?

809
00:35:50,300 --> 00:35:51,200
And like change, which one?

810
00:35:51,200 --> 00:35:51,600
I'm on.

811
00:35:51,800 --> 00:35:53,900
Let's just go try it.

812
00:35:54,200 --> 00:35:56,900
We'll see what starts to emerge and we will let sort of the

813
00:35:56,900 --> 00:35:59,100
architecture work itself up from there.

814
00:35:59,100 --> 00:35:59,800
So that each time we saw.

815
00:36:00,000 --> 00:36:02,000
Get something that feels like it's working pretty well.

816
00:36:02,100 --> 00:36:02,600
We'll say.

817
00:36:02,600 --> 00:36:05,300
Okay, that is you know, how will lock that down?

818
00:36:10,600 --> 00:36:14,300
All right, so that's about it for the drawings.

819
00:36:14,300 --> 00:36:14,800
I think.

820
00:36:16,200 --> 00:36:17,300
Let's clear that out.

821
00:36:18,000 --> 00:36:21,900
And let's start, we've got about a half-hour left roughly and so we

822
00:36:21,900 --> 00:36:23,600
should be able to do that.

823
00:36:23,600 --> 00:36:27,400
Probably not a whole lot, but we should be able to do a little bit of

824
00:36:27,400 --> 00:36:29,700
coding here to get ourselves started.

825
00:36:30,600 --> 00:36:35,100
So I did remember there was one thing that we never passed to the game

826
00:36:35,100 --> 00:36:38,700
Loop, by the way, that we wanted, which I don't know if we actually

827
00:36:38,700 --> 00:36:42,400
need to use it at all today, but we might, I wanted to mention that.

828
00:36:42,500 --> 00:36:45,100
I don't know if you remember when we were doing the win32 coding.

829
00:36:46,000 --> 00:36:47,900
Did like the target game?

830
00:36:48,000 --> 00:36:52,000
There's like a Target seconds per frame thing that we computed this

831
00:36:52,000 --> 00:36:55,000
thing right here, which is how much the game was going to update by

832
00:36:55,000 --> 00:36:55,800
every frame.

833
00:36:56,100 --> 00:36:58,800
We never actually passed that value to the game.

834
00:36:59,500 --> 00:37:03,800
Like, the game has this game, input thing, and, and we even have the

835
00:37:03,800 --> 00:37:07,300
to do insert clock values here and we never did it.

836
00:37:07,800 --> 00:37:10,100
So, we want that thing, right?

837
00:37:10,200 --> 00:37:12,600
We want, you know, Target s for frame.

838
00:37:12,600 --> 00:37:15,800
We basically want s to advance, right?

839
00:37:15,900 --> 00:37:17,800
Right over time.

840
00:37:17,800 --> 00:37:20,200
Step or over update.

841
00:37:20,700 --> 00:37:22,700
We basically want to pass that value there.

842
00:37:23,400 --> 00:37:24,700
Because that is the thing.

843
00:37:24,700 --> 00:37:28,300
That's that's actually going to let the game be run on any frame rate

844
00:37:28,300 --> 00:37:28,600
you want.

845
00:37:28,600 --> 00:37:29,900
So I'm going to go ahead and just pass it.

846
00:37:29,900 --> 00:37:31,000
Like I said, we've already got it.

847
00:37:31,000 --> 00:37:31,700
We did all the work.

848
00:37:31,700 --> 00:37:33,000
We just, I don't know.

849
00:37:33,000 --> 00:37:35,100
I probably just because we had so much stuff.

850
00:37:35,100 --> 00:37:37,400
We were looking at, you know, and doing audio and video and all these

851
00:37:37,400 --> 00:37:38,800
sorts of things bouncing around.

852
00:37:39,100 --> 00:37:41,800
We probably just, you know, I'm sure it just slipped my mind.

853
00:37:41,800 --> 00:37:44,600
I was like, you know, because we like I said, we computed it we put in

854
00:37:44,600 --> 00:37:45,800
the timing code and

855
00:37:45,900 --> 00:37:48,800
We never actually bothered to, to ever actually do it.

856
00:37:48,800 --> 00:37:50,900
So for now we're just going to always pass it the same one.

857
00:37:51,500 --> 00:37:56,200
So where's our game input into here game input?

858
00:37:56,600 --> 00:37:57,000
Okay.

859
00:37:57,000 --> 00:38:01,400
So basically I think all I really need to do is just say new input,

860
00:38:01,600 --> 00:38:03,200
Target seconds per frame.

861
00:38:03,600 --> 00:38:06,100
Sorry turns our fingers that so that that we will just pass that in

862
00:38:06,100 --> 00:38:07,800
there and that's, that's all I really wanted.

863
00:38:08,100 --> 00:38:11,900
All right, so I think that's the end of

864
00:38:14,600 --> 00:38:17,400
I think that's the end of the things that I was reminded that I was

865
00:38:17,400 --> 00:38:20,300
like, we never actually put that in there and we need it.

866
00:38:20,800 --> 00:38:24,000
So what I would like to do now is just take a look at what we've got

867
00:38:24,000 --> 00:38:26,600
here and sort of clean this out a bit because we have a bunch of test

868
00:38:26,600 --> 00:38:29,300
code in here that we don't really need anymore or rather.

869
00:38:29,300 --> 00:38:31,500
We don't really want to run anymore because we're, you know, we're

870
00:38:31,500 --> 00:38:33,800
currently generating some weird gradient thing.

871
00:38:34,100 --> 00:38:36,400
For those of you have been following along we were doing like a test

872
00:38:36,400 --> 00:38:37,300
pattern on here.

873
00:38:38,000 --> 00:38:38,200
Right?

874
00:38:38,200 --> 00:38:43,200
So, we have this sort of, we have this thing going on and that's not

875
00:38:43,200 --> 00:38:44,200
all something that we

876
00:38:44,300 --> 00:38:46,000
Actually want anymore.

877
00:38:46,200 --> 00:38:50,900
So, we certainly don't want it to be playing that sort of tone or

878
00:38:50,900 --> 00:38:51,600
anything like that.

879
00:38:51,600 --> 00:38:55,700
So I'm going to actually say that this is debug game output sound

880
00:38:56,000 --> 00:38:59,800
right now, and well, I guess I can even just leave it at that.

881
00:39:00,000 --> 00:39:01,300
It is because we had a switch in there.

882
00:39:01,500 --> 00:39:04,800
So first thing I'm going to do is I'm going to go ahead and say from

883
00:39:04,800 --> 00:39:06,300
now on let's just output zero.

884
00:39:06,300 --> 00:39:07,900
So it should be completely silent.

885
00:39:08,100 --> 00:39:10,600
And also, I suppose, since we're no longer working on the platform

886
00:39:10,600 --> 00:39:11,000
layer.

887
00:39:11,000 --> 00:39:15,300
I can actually do I believe I can actually just do this from now on,

888
00:39:15,700 --> 00:39:16,200
right?

889
00:39:16,200 --> 00:39:19,900
I can just do, leave the game running and then recompile and it should

890
00:39:19,900 --> 00:39:21,000
just magically work.

891
00:39:21,000 --> 00:39:22,200
Yeah, perfect.

892
00:39:22,400 --> 00:39:23,100
So anyway,

893
00:39:25,100 --> 00:39:26,600
The hot loading, dll thing is so nice.

894
00:39:26,600 --> 00:39:27,600
You never have to do anything.

895
00:39:27,600 --> 00:39:30,900
It just it's just always there and my little guy is still moving

896
00:39:30,900 --> 00:39:31,200
around.

897
00:39:31,200 --> 00:39:31,900
So everything's good.

898
00:39:31,900 --> 00:39:32,800
Yeah, there we go.

899
00:39:33,400 --> 00:39:35,100
Not if I drop the controller, it's not good.

900
00:39:35,500 --> 00:39:36,000
Come back.

901
00:39:36,000 --> 00:39:36,200
Mr.

902
00:39:36,200 --> 00:39:36,900
Controller.

903
00:39:37,200 --> 00:39:38,000
What happened?

904
00:39:38,800 --> 00:39:41,500
Oh, no, everything is falling over here on the stream.

905
00:39:41,500 --> 00:39:42,400
That's no good at all.

906
00:39:42,400 --> 00:39:43,600
That's no good.

907
00:39:43,800 --> 00:39:44,800
That's no good.

908
00:39:44,900 --> 00:39:45,100
All right.

909
00:39:45,100 --> 00:39:45,600
There we go.

910
00:39:48,400 --> 00:39:54,300
So all I really need to do here is get rid of our gradients.

911
00:39:54,400 --> 00:39:56,900
So the render weird gradient call that we were calling.

912
00:39:57,700 --> 00:39:59,500
These will just no longer call.

913
00:39:59,700 --> 00:40:00,900
We'll get rid of that guy.

914
00:40:00,900 --> 00:40:07,000
And so if I, if I, oops, if I do that well, so I don't like this

915
00:40:07,000 --> 00:40:09,400
warning because we're going to have unreferenced local function.

916
00:40:09,400 --> 00:40:11,100
So I think I'm going to turn that guy off.

917
00:40:11,100 --> 00:40:15,900
If you guys don't mind 4505 because I have functions that I don't call

918
00:40:15,900 --> 00:40:18,000
and that's just, you know, that's just part of life.

919
00:40:18,400 --> 00:40:19,900
You know, I might want to call them later.

920
00:40:20,400 --> 00:40:24,400
So we're going to say w 4505 going to say that that's gone too.

921
00:40:24,500 --> 00:40:28,400
Yeah, so now in theory, yeah, we're not drawing anything.

922
00:40:28,400 --> 00:40:31,300
So you can see that the back buffer is not cleared anymore.

923
00:40:31,400 --> 00:40:32,700
Now that I made that change.

924
00:40:33,700 --> 00:40:38,600
So I get rid of the that thing we've got the to render players there

925
00:40:38,600 --> 00:40:41,200
and looks like, we're still rendering a stuff for Mouse testing.

926
00:40:41,200 --> 00:40:43,000
That's what those were up there in the corner.

927
00:40:43,100 --> 00:40:44,000
These guys right here.

928
00:40:44,300 --> 00:40:46,200
So we don't need that anymore, either.

929
00:40:46,600 --> 00:40:47,800
That's that's not.

930
00:40:48,100 --> 00:40:49,000
Important at all.

931
00:40:50,000 --> 00:40:53,500
These guys are sort of showing us the location of.

932
00:40:53,500 --> 00:40:55,200
Yeah, so we don't really care about that.

933
00:40:55,200 --> 00:40:56,600
We don't need any of this stuff.

934
00:40:56,800 --> 00:40:58,000
This is all just test code.

935
00:40:58,000 --> 00:40:58,600
Looks like.

936
00:40:59,100 --> 00:41:01,000
So we have our read entire file stuff.

937
00:41:01,000 --> 00:41:05,200
We don't need any of this at all.

938
00:41:05,900 --> 00:41:12,100
Yeah, this this just looks, this just looks entirely not necessary, so

939
00:41:12,100 --> 00:41:13,700
that can go away.

940
00:41:13,700 --> 00:41:15,300
All of this stuff can go away.

941
00:41:16,800 --> 00:41:18,000
See if there's anything in my

942
00:41:18,100 --> 00:41:19,600
Same structure here.

943
00:41:19,600 --> 00:41:20,400
Game State.

944
00:41:21,000 --> 00:41:21,200
Yeah.

945
00:41:21,200 --> 00:41:24,100
So these things don't need to be there.

946
00:41:24,300 --> 00:41:26,400
None of this stuff needs to be there at all.

947
00:41:27,000 --> 00:41:28,400
And then we've also got.

948
00:41:28,400 --> 00:41:31,400
So, yeah, I'm really all I'm doing is just cleaning out all the stuff

949
00:41:31,400 --> 00:41:31,900
that we had.

950
00:41:31,900 --> 00:41:32,600
I can leave this.

951
00:41:32,600 --> 00:41:36,500
This guy in here, obviously, but maybe I'll move them down kind of out

952
00:41:36,500 --> 00:41:38,400
of the way just in case.

953
00:41:39,000 --> 00:41:40,800
Just in case we want to render a weird gradient.

954
00:41:40,800 --> 00:41:41,200
Again.

955
00:41:41,300 --> 00:41:45,100
I don't know, maybe we don't even need, maybe we don't even need that.

956
00:41:45,400 --> 00:41:47,300
Let's see anything else.

957
00:41:47,500 --> 00:41:47,900
So we got the

958
00:41:48,100 --> 00:41:51,500
the render player call will probably use that because we're turn that

959
00:41:51,500 --> 00:41:52,500
into a rectangle call.

960
00:41:52,500 --> 00:41:53,400
That'll be good.

961
00:41:53,600 --> 00:41:55,800
So we have our initialization thing here.

962
00:41:57,100 --> 00:41:59,900
We have our controller reading which

963
00:42:00,500 --> 00:42:04,800
I guess we're just going to kind of get rid of these things entirely.

964
00:42:05,800 --> 00:42:09,300
Let's see and we don't need any of this or that.

965
00:42:09,300 --> 00:42:11,900
So this is this is really where we're at.

966
00:42:11,900 --> 00:42:15,100
I think if I'm not very much an error.

967
00:42:15,100 --> 00:42:16,100
So let's see here.

968
00:42:16,700 --> 00:42:20,000
This is now not going to be updated either.

969
00:42:21,100 --> 00:42:24,200
And that should be good to go.

970
00:42:24,200 --> 00:42:26,100
So gamestate tone hurts.

971
00:42:26,100 --> 00:42:29,800
We'll just go ahead and say that, that's it.

972
00:42:30,000 --> 00:42:34,800
It's that that is just hard locked to 400 or something.

973
00:42:34,800 --> 00:42:35,200
I don't know.

974
00:42:35,700 --> 00:42:38,200
So now we have something that does absolutely nothing.

975
00:42:38,200 --> 00:42:40,300
We are back to square one, right?

976
00:42:40,500 --> 00:42:45,400
And and what another thing that I guess, I'm not sure exactly what we

977
00:42:45,700 --> 00:42:50,300
want to do with but I should probably think about just in terms of

978
00:42:50,300 --> 00:42:51,900
when we're starting to do testing here.

979
00:42:52,200 --> 00:42:55,200
I should probably think about what resolution we want this game to run

980
00:42:55,200 --> 00:42:55,500
in.

981
00:42:59,100 --> 00:43:00,300
With 3D games.

982
00:43:01,500 --> 00:43:04,700
You don't really have to think very hard about what resolution you're

983
00:43:04,700 --> 00:43:09,000
going to run in because everything is always resampled, right?

984
00:43:09,000 --> 00:43:12,400
You're mapping polygons, you're mapping textures on a polygons and

985
00:43:12,400 --> 00:43:13,200
that sort of stuff.

986
00:43:13,700 --> 00:43:17,400
So you don't really have a need to think about what the target

987
00:43:17,400 --> 00:43:20,200
resolution is other than to think about how dense those textures,

988
00:43:20,200 --> 00:43:22,500
probably have to be versus how closely they're going to be seen and

989
00:43:22,500 --> 00:43:23,400
stuff like that.

990
00:43:24,200 --> 00:43:28,500
But for this game since we are doing a 2-D game, we may want

991
00:43:28,500 --> 00:43:30,200
especially for background elements.

992
00:43:30,500 --> 00:43:31,100
We kind of

993
00:43:31,400 --> 00:43:36,400
The elements to be drawn so that they're the size that they will

994
00:43:36,400 --> 00:43:37,300
appear on the screen.

995
00:43:37,300 --> 00:43:40,100
So that the pixels will be crisp in the cases where the artist wants

996
00:43:40,100 --> 00:43:43,800
to kind of be very specific about what it should look like or things

997
00:43:43,800 --> 00:43:44,400
like that.

998
00:43:45,200 --> 00:43:48,600
So I guess what I would say is we probably want to think about what we

999
00:43:48,600 --> 00:43:52,400
want to run on and I would say we probably want to do like a 1920 by

1000
00:43:52,400 --> 00:43:53,200
1080.

1001
00:43:54,300 --> 00:43:59,000
So, you know, a 1080p Target resolution for the game and for our

1002
00:43:59,000 --> 00:44:01,100
software renderer since that's going to be a lot slower.

1003
00:44:01,200 --> 00:44:02,700
Lower than using the GPU.

1004
00:44:02,800 --> 00:44:05,400
We would probably want to just, you know, do like half size or

1005
00:44:05,400 --> 00:44:06,000
something.

1006
00:44:06,300 --> 00:44:07,300
Well, we're getting things working.

1007
00:44:07,300 --> 00:44:12,900
But basically what I'm thinking is is that, you know, we probably want

1008
00:44:12,900 --> 00:44:15,100
to take 1920 by 1080, right?

1009
00:44:15,100 --> 00:44:16,700
That's the that's the resolution.

1010
00:44:17,400 --> 00:44:20,800
If you think about like an HDTV, right?

1011
00:44:21,800 --> 00:44:24,800
What we would probably ship this game on for people who play on a

1012
00:44:24,800 --> 00:44:25,900
normal setup.

1013
00:44:26,100 --> 00:44:31,000
They're probably going to play it on a 1920 by 1080 by 60 her.

1014
00:44:31,200 --> 00:44:33,200
It's display, right?

1015
00:44:33,200 --> 00:44:37,600
So when we're running on GPU, we would probably be targeting to try

1016
00:44:37,600 --> 00:44:38,800
and hit that right?

1017
00:44:38,800 --> 00:44:40,700
A nice 60 frames, a second.

1018
00:44:41,100 --> 00:44:46,000
Full 1080p HD, sort of a graphics system, right?

1019
00:44:46,300 --> 00:44:49,300
So for our purposes, since we're going to be doing our own renderer

1020
00:44:49,300 --> 00:44:51,300
and it will be much lower than a GPU.

1021
00:44:51,300 --> 00:44:51,900
Obviously.

1022
00:44:52,600 --> 00:44:56,500
I was thinking maybe we just do essentially what amounts to eight

1023
00:44:56,500 --> 00:44:59,000
times less than what this does, right?

1024
00:44:59,000 --> 00:44:59,700
We do.

1025
00:45:00,000 --> 00:45:04,700
Hurts for our, you know, for this this for the non GPU version.

1026
00:45:04,700 --> 00:45:05,900
This is the software version.

1027
00:45:07,900 --> 00:45:10,700
We do half of each of these, right?

1028
00:45:10,700 --> 00:45:14,200
So this is actually going to be what is that half of 80 sets Nia?

1029
00:45:14,200 --> 00:45:16,900
That's, that's 960.

1030
00:45:16,900 --> 00:45:17,600
Is that right?

1031
00:45:17,800 --> 00:45:22,800
960 by had the calculator up and then I and then I closed it.

1032
00:45:22,800 --> 00:45:23,700
Why did I do that?

1033
00:45:24,300 --> 00:45:26,300
So let's see here, right.

1034
00:45:26,400 --> 00:45:28,800
I always check my math because I'm horrible at Mental Math.

1035
00:45:28,900 --> 00:45:29,700
Yeah, 960

1036
00:45:30,300 --> 00:45:34,800
And then and then oops, why did I why did that turn into a?

1037
00:45:35,700 --> 00:45:37,600
Why is this a help me?

1038
00:45:37,800 --> 00:45:39,800
Why is it a okay.

1039
00:45:39,800 --> 00:45:40,900
I guess the cursor was just wrong.

1040
00:45:41,500 --> 00:45:44,900
So half of this guy obviously is 540.

1041
00:45:45,100 --> 00:45:46,500
So 960 by.

1042
00:45:46,500 --> 00:45:50,600
540 is a is what we're shooting here by 30 Hertz.

1043
00:45:50,800 --> 00:45:54,900
So in terms of the number of pixels per second, we have to fill right?

1044
00:45:55,500 --> 00:45:56,600
This is half.

1045
00:45:56,800 --> 00:45:59,000
This is half and this is half.

1046
00:45:59,000 --> 00:45:59,800
So ideally

1047
00:46:00,000 --> 00:46:03,300
This would be 18, the work, right?

1048
00:46:04,200 --> 00:46:08,800
So you could think about it as we're writing a 8 times slower.

1049
00:46:10,000 --> 00:46:13,200
We're targeting something 8, times slower than a GPU and hopefully we

1050
00:46:13,200 --> 00:46:15,000
can make that work for our software.

1051
00:46:15,000 --> 00:46:15,300
Renderer.

1052
00:46:15,300 --> 00:46:16,300
If we can't, it's no big deal.

1053
00:46:16,300 --> 00:46:18,300
Because again, we don't have to ship the software under, it's for

1054
00:46:18,300 --> 00:46:19,400
educational purposes.

1055
00:46:19,900 --> 00:46:22,200
But you know, I mean we're going to try to do some optimization and

1056
00:46:22,200 --> 00:46:22,400
stuff.

1057
00:46:22,400 --> 00:46:26,600
So I feel like that would be a reasonable goal to try and hit on a

1058
00:46:26,600 --> 00:46:29,600
modern CPU is if we can manage to do something.

1059
00:46:30,200 --> 00:46:31,400
Comparable to the GPU.

1060
00:46:31,400 --> 00:46:36,000
That's just downscaled by half in in all the dimensions in width and

1061
00:46:36,000 --> 00:46:38,200
height and in time, right?

1062
00:46:39,400 --> 00:46:43,600
So 960 by 540 I think is roughly what I might like to do.

1063
00:46:44,100 --> 00:46:47,600
Let's just say that it is for now because I don't have a better idea.

1064
00:46:48,000 --> 00:46:53,100
So 960 by 540 by 30 Hertz were already at 30 Hertz and I believe we

1065
00:46:53,100 --> 00:46:56,000
just have a thing in here where we can just basically flat out say

1066
00:46:56,500 --> 00:46:59,100
what the actual size of the thing is.

1067
00:46:59,100 --> 00:46:59,800
I think it's just that

1068
00:47:00,000 --> 00:47:00,800
That's it right there.

1069
00:47:01,200 --> 00:47:04,900
So if I want to, I can say we're just past the game, at 960 by 540

1070
00:47:04,900 --> 00:47:05,600
display.

1071
00:47:05,700 --> 00:47:08,200
That's what it's always going to be and we'll just work on that for

1072
00:47:08,200 --> 00:47:08,600
now.

1073
00:47:09,500 --> 00:47:15,000
All right, so I believe that is something that I will have to restart

1074
00:47:15,000 --> 00:47:16,900
the app for because that's in the win32 platform.

1075
00:47:16,900 --> 00:47:19,500
Layer if I'm not very much in in error.

1076
00:47:19,800 --> 00:47:22,300
So we'll go ahead and compile that will run it.

1077
00:47:22,600 --> 00:47:23,300
And there we go.

1078
00:47:23,300 --> 00:47:28,700
So, there is our, there is our our Target, our Target play field size

1079
00:47:28,700 --> 00:47:29,800
is about that big.

1080
00:47:29,900 --> 00:47:30,300
Right.

1081
00:47:31,400 --> 00:47:31,900
Okay.

1082
00:47:32,200 --> 00:47:37,300
So first things first, in order to sort of get things working.

1083
00:47:37,500 --> 00:47:41,800
I am going to write some kind of a rectangle function where you can

1084
00:47:41,800 --> 00:47:46,400
pass a color right, and draw a rectangle on the screen.

1085
00:47:46,600 --> 00:47:49,800
And that rectangle will be, you know, properly clipped.

1086
00:47:49,800 --> 00:47:53,600
Like I won't crash if I go outside of the of the region or whatever,

1087
00:47:54,200 --> 00:47:56,700
so I want to basically make a simple function keys to draw a

1088
00:47:56,700 --> 00:47:59,700
rectangle, just so I can have some way of drawing something on the

1089
00:47:59,700 --> 00:47:59,800
screen.

1090
00:48:00,000 --> 00:48:03,600
As we start to build things, so I'm going to take this render player

1091
00:48:03,600 --> 00:48:07,800
call, which basically was drawing a rectangle and I'm going to turn it

1092
00:48:07,800 --> 00:48:11,100
into something that is officially trying to draw a rectangle.

1093
00:48:11,800 --> 00:48:18,000
So it's going to be something that looks like, you know, draw rect

1094
00:48:18,000 --> 00:48:22,100
tangle and draw, a rectangle will take that off screen buffer that's

1095
00:48:22,100 --> 00:48:26,300
supposed to drive to and it will take some integer coordinates.

1096
00:48:26,300 --> 00:48:26,900
I guess.

1097
00:48:27,200 --> 00:48:27,800
I'm you know, what?

1098
00:48:27,800 --> 00:48:29,800
I'm going to say that it takes floating Point coordinates.

1099
00:48:30,400 --> 00:48:33,900
Because I would like to always be able to take floating Point

1100
00:48:33,900 --> 00:48:34,900
coordinates for reasons.

1101
00:48:34,900 --> 00:48:35,700
We will see a little later.

1102
00:48:38,900 --> 00:48:43,100
But basically, when we start to cover render a topics, a little later

1103
00:48:43,100 --> 00:48:46,700
on, you'll see why I might want to start having things, always be in

1104
00:48:46,700 --> 00:48:49,600
floating point, because we'll actually be able to do SUB pixel

1105
00:48:49,600 --> 00:48:54,600
positioning of Sprites by using, you know, basically interpolation of

1106
00:48:54,600 --> 00:48:55,400
colors and stuff.

1107
00:48:55,600 --> 00:49:00,000
So, I'm going to say that we're going to pass, you know, an x, a y.

1108
00:49:00,000 --> 00:49:02,700
And I think for starting off.

1109
00:49:02,700 --> 00:49:06,000
Let's do Min X Min, y Max.

1110
00:49:06,100 --> 00:49:07,900
X, max wide.

1111
00:49:08,100 --> 00:49:12,900
And there's an interesting thing that happens with rectangles here.

1112
00:49:12,900 --> 00:49:15,300
And this is the sort of thing that I'm awful at.

1113
00:49:15,400 --> 00:49:18,300
This is the kind of thing where you really want Shawn Barrett to do a

1114
00:49:18,300 --> 00:49:19,300
stream or something.

1115
00:49:21,000 --> 00:49:24,200
Although the last time I said, we should ask them to do a stream on

1116
00:49:24,300 --> 00:49:25,200
software synthesis.

1117
00:49:25,200 --> 00:49:27,600
He steadfastly refused.

1118
00:49:27,600 --> 00:49:31,500
So, maybe I'm barking up the wrong tree, but there's, there's things

1119
00:49:31,500 --> 00:49:34,300
to be aware of and we'll kind of go over them in the render stuff

1120
00:49:34,300 --> 00:49:34,500
more.

1121
00:49:34,500 --> 00:49:36,000
But I will probably even have to do some

1122
00:49:36,100 --> 00:49:40,600
Fresher stuff for my own self for them because there's all these sorts

1123
00:49:40,600 --> 00:49:43,000
of complexities that come into play.

1124
00:49:44,200 --> 00:49:47,800
Basically, you have to understand that any time you're working with

1125
00:49:47,800 --> 00:49:52,700
very specific things like rendering there is sort of the precise

1126
00:49:52,700 --> 00:49:54,700
definition of what you want.

1127
00:49:54,800 --> 00:49:56,500
Actually matters quite a bit.

1128
00:49:57,100 --> 00:49:58,800
So if you think about it,

1129
00:50:00,000 --> 00:50:07,800
Like if this is my pixel grid, I should probably make a thing.

1130
00:50:07,800 --> 00:50:09,900
That just gets us a pixel Grid in the future.

1131
00:50:10,100 --> 00:50:13,200
If you something, I remember to do, see a pixel grid that we can

1132
00:50:13,200 --> 00:50:14,800
quickly get to pixel grid.

1133
00:50:17,800 --> 00:50:20,500
If you think about something like a pixel grid, right?

1134
00:50:21,200 --> 00:50:23,000
Then how you specify how you want.

1135
00:50:23,000 --> 00:50:27,700
It filled is actually kind of complicated because let's say that I

1136
00:50:27,800 --> 00:50:29,300
number these locations, right?

1137
00:50:29,300 --> 00:50:31,800
Like a standard thing like you learned in math class, right?

1138
00:50:31,800 --> 00:50:32,100
1?

1139
00:50:32,100 --> 00:50:37,100
2 3 4 0 1 2 3 4 5 6 7.

1140
00:50:37,200 --> 00:50:40,300
Well, it's pretty easy for me to talk about a specific pixel at that

1141
00:50:40,300 --> 00:50:43,900
point because I can just say well whatever the two numbers are.

1142
00:50:43,900 --> 00:50:44,700
Here's the X.

1143
00:50:44,700 --> 00:50:45,400
Here's the why.

1144
00:50:45,700 --> 00:50:46,400
So 0.

1145
00:50:46,400 --> 00:50:47,100
Comma 0.

1146
00:50:47,100 --> 00:50:51,700
Is this one, you know, and 3 comma 2 is this one, right?

1147
00:50:51,700 --> 00:50:52,700
Or something like that?

1148
00:50:53,200 --> 00:50:57,300
That's not so hard, right, but when you start to say, I want to feel

1149
00:50:57,300 --> 00:50:59,800
something in you end up with.

1150
00:51:00,300 --> 00:51:04,600
Little bit of confusion because when I specify the pixels, am I

1151
00:51:04,600 --> 00:51:07,900
talking about them being inclusive or exclusive?

1152
00:51:07,900 --> 00:51:11,400
If I tell you to fill from 11 to 3 3, right?

1153
00:51:11,500 --> 00:51:16,100
So if I tell you to fill from this to this, am I talking about filling

1154
00:51:16,500 --> 00:51:22,400
these and not the the outer bound or am I talking about including that

1155
00:51:22,400 --> 00:51:23,200
outer bound?

1156
00:51:23,400 --> 00:51:24,000
Right?

1157
00:51:24,600 --> 00:51:28,000
And that may not seem like it's very complicated to understand and get

1158
00:51:28,000 --> 00:51:29,900
right and get

1159
00:51:30,000 --> 00:51:31,300
Right is kind of a confusing term here.

1160
00:51:31,300 --> 00:51:31,900
There are.

1161
00:51:31,900 --> 00:51:33,300
When we get again to the rendering stuff.

1162
00:51:33,300 --> 00:51:34,700
I'll talk a little bit more about in detail.

1163
00:51:34,700 --> 00:51:36,100
What are the things that are reasons for that?

1164
00:51:36,100 --> 00:51:38,800
You would care about things in terms of rightness, as opposed to just

1165
00:51:38,800 --> 00:51:41,800
whatever you want it to be things.

1166
00:51:41,800 --> 00:51:45,900
Get a lot more confusing when you start to allow stuff to move around

1167
00:51:46,000 --> 00:51:47,400
sub-pixel on the grid.

1168
00:51:47,600 --> 00:51:51,700
So for example, if I have a Sprite and at the Sprite is 3 pixels by 3

1169
00:51:51,700 --> 00:51:52,300
pixels.

1170
00:51:52,400 --> 00:51:53,700
Well, it's pretty obvious.

1171
00:51:53,700 --> 00:51:57,600
What would happen if the Sprite is is lined up exactly like that,

1172
00:51:57,600 --> 00:51:58,100
right?

1173
00:51:58,600 --> 00:51:59,800
But if the Sprite isn't

1174
00:52:00,000 --> 00:52:01,200
End up exactly like that.

1175
00:52:01,200 --> 00:52:05,100
Let's say the Sprite is slightly off center of the pixels, right?

1176
00:52:05,500 --> 00:52:06,700
You have to understand.

1177
00:52:06,700 --> 00:52:10,300
You have to have a good convention for understanding exactly how it

1178
00:52:10,300 --> 00:52:13,100
writes into each of these pixels, how much it contributes, and how

1179
00:52:13,100 --> 00:52:14,400
this is specified, right?

1180
00:52:14,400 --> 00:52:19,400
Because now, if I was to specify that rectangle draw of draw from 32

1181
00:52:19,900 --> 00:52:24,400
to 65, well, you didn't actually want to fully draw all of these,

1182
00:52:24,400 --> 00:52:24,900
right?

1183
00:52:24,900 --> 00:52:27,600
You were talking about only draw, you know, only contributing a

1184
00:52:27,600 --> 00:52:29,800
portion of the color of each of these sorts.

1185
00:52:29,900 --> 00:52:30,500
Of things.

1186
00:52:30,600 --> 00:52:33,600
And so there's just a lot of kind of finicky - that goes on there.

1187
00:52:34,900 --> 00:52:39,100
So I just wanted to kind of point out that this is a this what I'm

1188
00:52:39,100 --> 00:52:41,800
doing this draw a rectangle here, there's a lot of things you would

1189
00:52:41,800 --> 00:52:44,900
think about if this were actually if we were really going to do a draw

1190
00:52:44,900 --> 00:52:45,500
rectangle call.

1191
00:52:45,500 --> 00:52:46,800
That's our final draw a rectangle call.

1192
00:52:46,800 --> 00:52:47,900
I'm not going to do those.

1193
00:52:48,400 --> 00:52:50,400
I'm just thinking about purely.

1194
00:52:51,000 --> 00:52:51,700
Okay.

1195
00:52:51,800 --> 00:52:52,600
What should this?

1196
00:52:52,600 --> 00:52:53,400
What does should this do?

1197
00:52:53,400 --> 00:52:55,800
Just to get us something roughly that's working.

1198
00:52:55,900 --> 00:52:57,300
So I'm going to say that.

1199
00:52:57,300 --> 00:52:58,500
Basically, it does.

1200
00:53:00,100 --> 00:53:02,400
It does a rounding, right?

1201
00:53:02,400 --> 00:53:05,100
So it'll basically it'll take them in X in the Min y.

1202
00:53:05,200 --> 00:53:06,800
It will round those two, an integer.

1203
00:53:07,900 --> 00:53:09,600
Should it rounder show truncate?

1204
00:53:09,900 --> 00:53:13,100
I'm going to round, I must say it roused to integer ill around these

1205
00:53:13,100 --> 00:53:17,200
to an integer and then it will fill up to but not including whatever

1206
00:53:17,200 --> 00:53:18,100
the final one is.

1207
00:53:18,300 --> 00:53:19,800
I think that's roughly what I'm gonna do.

1208
00:53:20,000 --> 00:53:24,500
So basically, if you were to do the tile map, you would do like you

1209
00:53:24,500 --> 00:53:28,000
would fill from 10 to 20 if they were 10 pixels wide.

1210
00:53:28,100 --> 00:53:31,000
The next one you would fill from 10 to 30, right?

1211
00:53:31,000 --> 00:53:32,300
So, that they're inclusive that way.

1212
00:53:32,300 --> 00:53:37,100
I'm not going to do ten to twenty two like 1922.

1213
00:53:37,600 --> 00:53:38,000
30.

1214
00:53:38,500 --> 00:53:41,600
And the reason that I'm not going to do that is again because of that

1215
00:53:41,600 --> 00:53:42,600
floating point in this.

1216
00:53:43,400 --> 00:53:43,700
Really.

1217
00:53:43,700 --> 00:53:46,700
If you think about it, it makes it a little bit difficult to talk

1218
00:53:46,700 --> 00:53:49,600
about what happens in between 19 and 20.

1219
00:53:50,200 --> 00:53:52,600
If you start to think about these things, I've actually having

1220
00:53:52,600 --> 00:53:53,600
fractional values.

1221
00:53:53,800 --> 00:53:56,900
So I want to make it so that you can pass two rectangles that are but

1222
00:53:56,900 --> 00:53:58,600
perfectly, right.

1223
00:53:58,700 --> 00:53:59,800
So I want to make sure that

1224
00:54:00,200 --> 00:54:05,800
The the rule for how you feel them, doesn't draw over that.

1225
00:54:05,800 --> 00:54:09,400
That common, you know, in this case doesn't draw over 20.

1226
00:54:09,500 --> 00:54:13,600
So that only one person is responsible for filling thing, 20, right?

1227
00:54:13,700 --> 00:54:16,400
So, I'm just going to that's just the rule that I'm going to use for

1228
00:54:16,400 --> 00:54:16,600
this.

1229
00:54:16,600 --> 00:54:18,900
But again, this is a debug once it doesn't have to be perfect.

1230
00:54:20,000 --> 00:54:20,800
It can be whatever.

1231
00:54:21,700 --> 00:54:28,800
Alright, so basically we've got this is this is our real version of

1232
00:54:28,800 --> 00:54:29,300
these.

1233
00:54:29,600 --> 00:54:33,100
We've got our real men's in our real Max's and I want to give us

1234
00:54:33,100 --> 00:54:36,700
something where we can basically turn those into integers.

1235
00:54:36,900 --> 00:54:43,700
So I am going to do arm in X here is going to be the real men ax but I

1236
00:54:43,700 --> 00:54:44,800
need to round it.

1237
00:54:44,800 --> 00:54:48,500
So I need to round a real 322 an inch 32, right?

1238
00:54:48,600 --> 00:54:49,700
I want to I want to I want to

1239
00:54:49,800 --> 00:54:50,100
Out it.

1240
00:54:50,100 --> 00:54:51,900
We haven't written that function yet, but we will.

1241
00:54:52,500 --> 00:54:53,400
So got my Min acts.

1242
00:54:53,400 --> 00:54:55,800
I got our Max X bar, Max y.

1243
00:54:56,000 --> 00:54:57,600
So, I'm going to go ahead and do those.

1244
00:54:58,200 --> 00:55:00,800
Let's see their ex ex.

1245
00:55:00,800 --> 00:55:01,300
There we go.

1246
00:55:02,000 --> 00:55:06,100
So Min ex real manex been why real men watch them is rounding all of

1247
00:55:06,100 --> 00:55:07,500
the values, right?

1248
00:55:07,900 --> 00:55:12,500
Once I have these values, rounded one thing you will notice is that

1249
00:55:14,900 --> 00:55:20,900
These could be anywhere and the buffer we are going to again that

1250
00:55:20,900 --> 00:55:24,600
buffer is just a chunk of memory that we write into where each 32-bit

1251
00:55:24,600 --> 00:55:26,700
value in the buffer is a pixel color.

1252
00:55:27,700 --> 00:55:31,300
So what we need to make sure we do is we can't ever right outside of

1253
00:55:31,300 --> 00:55:33,000
the legal boundary of the buffer.

1254
00:55:33,300 --> 00:55:33,800
Right?

1255
00:55:34,400 --> 00:55:40,100
So what we want to do now is we want to clip essentially to to the

1256
00:55:40,100 --> 00:55:41,000
actual screen.

1257
00:55:41,100 --> 00:55:43,900
So if this is the screen, right, and this is 0 0,

1258
00:55:44,100 --> 00:55:45,300
Simple coordinate system here.

1259
00:55:45,300 --> 00:55:45,800
Right?

1260
00:55:45,800 --> 00:55:48,600
And this is the width and the height of that screen.

1261
00:55:49,300 --> 00:55:51,600
If you pass me a rectangle that's like that.

1262
00:55:51,700 --> 00:55:54,900
Well, what I want to do is I want to just fill the actual part that we

1263
00:55:54,900 --> 00:55:59,200
can fill and never right to the part out here because the part out

1264
00:55:59,200 --> 00:56:00,900
here would be invalid memory.

1265
00:56:01,300 --> 00:56:04,700
Well, in the way, we've got a bitmap set up this part would crash

1266
00:56:05,000 --> 00:56:07,700
attempting to write to that part with just flat-out, crash and

1267
00:56:07,700 --> 00:56:10,800
attempting to write to that part would actually that is actually back

1268
00:56:10,800 --> 00:56:12,200
here, right?

1269
00:56:13,200 --> 00:56:13,900
Because you think that

1270
00:56:14,000 --> 00:56:16,800
The memories laid out in a stripe, right?

1271
00:56:16,800 --> 00:56:18,600
It's kind of looks like this.

1272
00:56:19,100 --> 00:56:22,900
So going backwards off the left Edge, Wraps you around to the right

1273
00:56:22,900 --> 00:56:24,500
Edge on the previous line.

1274
00:56:24,900 --> 00:56:28,600
So anyway, so yeah, so I just want to clip it and you can see that

1275
00:56:28,600 --> 00:56:33,500
clipping a rectangle in that sense is very easy because basically, all

1276
00:56:33,500 --> 00:56:37,500
you're doing is saying, if the x value is less than that boundary,

1277
00:56:37,600 --> 00:56:40,400
whatever the left side, boundary is you just move it to the left side

1278
00:56:40,400 --> 00:56:43,200
boundary because the thing that it produces is still a rectangle, so

1279
00:56:43,200 --> 00:56:43,800
you're basically just

1280
00:56:44,100 --> 00:56:50,500
Getting and making sure that you push the outer extents to the outer

1281
00:56:50,500 --> 00:56:50,900
sense.

1282
00:56:50,900 --> 00:56:57,300
And then the, the your, the minimums get clipped 20 and the maxims get

1283
00:56:57,300 --> 00:56:59,000
clipped to the width and height, right?

1284
00:56:59,000 --> 00:56:59,800
That's all we really have.

1285
00:57:00,000 --> 00:57:02,400
To make sure our rectangle comes out fully clip.

1286
00:57:02,400 --> 00:57:07,400
So all I really need to do here is say that if Min X is less than 0,

1287
00:57:07,600 --> 00:57:10,000
then X is going to be equal to 0, right.

1288
00:57:10,200 --> 00:57:14,800
I'm just saying if it if that rectangle extended before the leftmost

1289
00:57:14,800 --> 00:57:18,000
side of the screen, then we just go ahead and and make it not do that.

1290
00:57:18,000 --> 00:57:21,000
And then similarly for the Min Y is exactly the same.

1291
00:57:21,400 --> 00:57:24,000
And then for the Max's, I need to do the same thing as well.

1292
00:57:24,000 --> 00:57:28,100
The mac sex, if that's going to be greater than this time.

1293
00:57:30,000 --> 00:57:32,800
If that's going to be greater than the buffer.

1294
00:57:32,800 --> 00:57:34,900
And I believe the buffer has the width in it.

1295
00:57:34,900 --> 00:57:38,300
So we know what, what size it actually is.

1296
00:57:38,800 --> 00:57:39,500
Yeah, there it is.

1297
00:57:39,500 --> 00:57:42,600
So with if it's greater than the width than it equals the width,

1298
00:57:43,000 --> 00:57:43,500
right?

1299
00:57:43,900 --> 00:57:46,300
And if it's greater Loops, that's good.

1300
00:57:46,400 --> 00:57:49,900
And if it's greater on the Whi, same thing, if that's greater than the

1301
00:57:49,900 --> 00:57:51,300
height that it equals the height, right?

1302
00:57:51,300 --> 00:57:55,400
All we're doing is clamping those values to something valid, right?

1303
00:57:55,700 --> 00:57:56,300
And

1304
00:57:57,700 --> 00:58:01,900
What I want to do here again, when I'm doing this, you'll notice that

1305
00:58:01,900 --> 00:58:02,800
I left them.

1306
00:58:03,300 --> 00:58:06,800
I left it so that it was actually right on the boundary.

1307
00:58:06,900 --> 00:58:07,200
Now.

1308
00:58:07,200 --> 00:58:09,600
Normally, that wouldn't be a valid pixel, right?

1309
00:58:09,600 --> 00:58:15,900
Because if the width is, let's say 8 then 0, 1 2 3 4 5 6 7, the last

1310
00:58:15,900 --> 00:58:18,900
valid pixel, I could fill his seven trying to fill eight would right

1311
00:58:18,900 --> 00:58:20,000
off the end of the buffer.

1312
00:58:20,500 --> 00:58:20,900
Yet.

1313
00:58:20,900 --> 00:58:22,800
I am allowing this to be equal to 8.

1314
00:58:22,800 --> 00:58:25,000
Essentially if the buffer was eight wide.

1315
00:58:25,000 --> 00:58:25,800
Why is that?

1316
00:58:25,900 --> 00:58:27,400
Well, it's because I just said before.

1317
00:58:28,100 --> 00:58:31,700
That I'm not going to write the rectangles going to fill up to but not

1318
00:58:31,700 --> 00:58:33,700
including that final row.

1319
00:58:33,800 --> 00:58:36,300
So that's actually okay, if that makes sense.

1320
00:58:37,200 --> 00:58:37,500
All right.

1321
00:58:37,500 --> 00:58:40,600
So now in order to fill this guy, I'm going to need a color to fill

1322
00:58:40,600 --> 00:58:41,800
them with, right?

1323
00:58:41,900 --> 00:58:45,400
And so in order to pass the color, I'm going to pass a real value

1324
00:58:45,400 --> 00:58:45,700
again.

1325
00:58:45,700 --> 00:58:48,100
R, g, and B, and we're going too fast.

1326
00:58:48,100 --> 00:58:50,300
So I'm going to go a little bit over to the community.

1327
00:58:50,300 --> 00:58:53,000
I just want to finish this one function since we're already here, but

1328
00:58:53,000 --> 00:58:54,900
then we'll keep it will keep it brief.

1329
00:58:57,500 --> 00:58:59,800
So, what I need to do now is I need to.

1330
00:58:59,900 --> 00:59:00,700
Well, you know what?

1331
00:59:01,000 --> 00:59:01,600
That's not true.

1332
00:59:02,500 --> 00:59:03,300
That's not true at all.

1333
00:59:03,600 --> 00:59:04,800
I don't have to do the color.

1334
00:59:05,300 --> 00:59:07,300
I'll just use white for now.

1335
00:59:08,000 --> 00:59:10,200
And then we will do the color tomorrow.

1336
00:59:10,200 --> 00:59:12,700
So that way I won't go any further over time, so that'd be good.

1337
00:59:13,000 --> 00:59:13,300
Yeah.

1338
00:59:13,400 --> 00:59:13,800
Okay.

1339
00:59:14,000 --> 00:59:17,800
So I'll just put to do in here color tomorrow.

1340
00:59:18,400 --> 00:59:19,500
They'll be the first thing we'll do.

1341
00:59:20,200 --> 00:59:22,100
So then, all I need to do is Step through the pixels.

1342
00:59:22,300 --> 00:59:23,900
I know that I want to start.

1343
00:59:24,300 --> 00:59:25,900
I don't know why this is by X and then.

1344
00:59:25,900 --> 00:59:26,400
By why?

1345
00:59:26,400 --> 00:59:27,400
Probably because that's where

1346
00:59:27,500 --> 00:59:27,700
Things.

1347
00:59:27,700 --> 00:59:31,400
But if you think about the way memory is arranged, our exes are

1348
00:59:31,400 --> 00:59:33,500
contiguous, and our wise are not.

1349
00:59:33,600 --> 00:59:34,100
Right?

1350
00:59:34,400 --> 00:59:36,500
Why is have to step by this pitch value?

1351
00:59:36,600 --> 00:59:38,700
Whereas X is do not have to do that.

1352
00:59:39,100 --> 00:59:43,500
And so what I would rather do here is I would rather step it the other

1353
00:59:43,500 --> 00:59:43,600
way.

1354
00:59:43,600 --> 00:59:44,800
I'd rather step it.

1355
00:59:45,200 --> 00:59:45,700
Do you think?

1356
00:59:47,200 --> 00:59:51,500
I'd rather step such that we were not that we were touching contiguous

1357
00:59:51,500 --> 00:59:54,100
pixels one, right after each other and then only doing a jump to the

1358
00:59:54,100 --> 00:59:54,500
next row.

1359
00:59:54,500 --> 00:59:57,600
I don't want to do it by Rose because it's going to be more friendly

1360
00:59:57,600 --> 00:59:58,100
to the cash.

1361
00:59:58,100 --> 00:59:58,400
Obviously.

1362
00:59:58,400 --> 00:59:59,800
It could be more friendly to touch things that are

1363
01:00:00,000 --> 01:00:00,700
Next to each other.

1364
01:00:01,300 --> 01:00:05,000
So that yeah, so I'm going to go by wise first and then my exes

1365
01:00:05,400 --> 01:00:07,700
because that happens to be how things are lined up.

1366
01:00:07,700 --> 01:00:11,900
So we're going to go from in X and work until we get to, I'm sorry.

1367
01:00:12,200 --> 01:00:14,700
I mean why until we get to Max, why?

1368
01:00:16,000 --> 01:00:20,900
We're gonna go from in Acts through to Max X and then we are going to

1369
01:00:20,900 --> 01:00:21,600
write the pixels.

1370
01:00:21,600 --> 01:00:27,200
So the first pixel that we write obviously is going to be wherever the

1371
01:00:27,200 --> 01:00:29,100
buffer starts in memory.

1372
01:00:29,800 --> 01:00:32,700
We going to have to go by however many bytes per pixel.

1373
01:00:32,700 --> 01:00:35,800
It is we're going to have to go that far over forearm in X because we

1374
01:00:35,800 --> 01:00:40,400
want to start it that far in and the same forearm in y.

1375
01:00:40,400 --> 01:00:45,000
So, we need to pre Advance the pointer to our to our pixel memory.

1376
01:00:45,200 --> 01:00:45,600
We want to

1377
01:00:45,800 --> 01:00:49,200
Advance the pointer so that it's pointing at the top left corner of

1378
01:00:49,200 --> 01:00:50,400
the rectangle, right?

1379
01:00:50,400 --> 01:00:54,100
So that it's pointing if the rectangle is here, right?

1380
01:00:54,100 --> 01:00:57,300
We want to, we want to take our pointer which starts at here on

1381
01:00:57,300 --> 01:00:57,800
memory.

1382
01:00:57,900 --> 01:01:00,500
We want to point the pointer right there, right?

1383
01:01:00,500 --> 01:01:02,400
We want to point it at that point.

1384
01:01:02,400 --> 01:01:06,100
So we need to add however, much it takes us to get down to this row,

1385
01:01:06,300 --> 01:01:09,000
which is the pitch, which is how much you add pero times.

1386
01:01:09,000 --> 01:01:11,400
However, many rows we wanted to go down, right?

1387
01:01:11,400 --> 01:01:12,400
Which is the minimum y.

1388
01:01:12,400 --> 01:01:15,600
So we go down that many rows and then we have to go over by

1389
01:01:15,700 --> 01:01:20,600
However, many, we pixels how many bytes per pixel, there are four the

1390
01:01:20,600 --> 01:01:24,100
number of pixels that we are over at X, which is min why I services

1391
01:01:24,100 --> 01:01:24,500
mean X.

1392
01:01:24,600 --> 01:01:28,700
So we need to kind of bump after we move down to the start of the row

1393
01:01:28,700 --> 01:01:29,300
that we start on.

1394
01:01:29,300 --> 01:01:31,700
We need to go over to get the start of the column, right?

1395
01:01:31,700 --> 01:01:32,900
And that's where we're going to start.

1396
01:01:33,000 --> 01:01:33,500
Then from there.

1397
01:01:33,500 --> 01:01:36,500
We just fill the pixels when we get to the end of a row, we go down to

1398
01:01:36,500 --> 01:01:38,200
the next row, fill the pixels, right?

1399
01:01:38,900 --> 01:01:42,700
So what we need to do here and again, this is not how will we won't do

1400
01:01:42,700 --> 01:01:45,400
anything like this in the final render, but we're just making a debug.

1401
01:01:45,800 --> 01:01:48,400
All that simply that does a simple fill of a rectangle.

1402
01:01:49,200 --> 01:01:54,500
So basically, what we need to do is we need to go ahead and fill our

1403
01:01:54,500 --> 01:01:55,300
pixels here.

1404
01:01:56,200 --> 01:01:56,900
So there we go.

1405
01:01:56,900 --> 01:02:00,000
So this I should probably call it the row pointer since that's what

1406
01:02:00,000 --> 01:02:00,500
that is.

1407
01:02:00,900 --> 01:02:04,200
So this is the row pointer and it will advance every time we advance

1408
01:02:04,200 --> 01:02:09,100
and why we would go down and then we will go down one entire row and

1409
01:02:09,100 --> 01:02:11,100
then the same is true for X.

1410
01:02:11,100 --> 01:02:14,100
We were going to get our we write pixels.

1411
01:02:14,100 --> 01:02:15,200
Each pixel is 32 bits.

1412
01:02:15,200 --> 01:02:15,600
We're going to write

1413
01:02:15,700 --> 01:02:16,900
it to 32 bits at a time.

1414
01:02:17,400 --> 01:02:21,700
So now, we have our pixel pointer is going to be equal to our row

1415
01:02:21,700 --> 01:02:22,200
pointer.

1416
01:02:22,400 --> 01:02:23,800
We're going to cast it up to you in 3 2.

1417
01:02:23,800 --> 01:02:25,400
So we can write you in three twos at a time.

1418
01:02:25,600 --> 01:02:26,300
We left this one.

1419
01:02:26,300 --> 01:02:29,200
As a, you ain't ate because we are adding the pitch is in B, and we

1420
01:02:29,200 --> 01:02:32,900
know that C++ and C always do a multiplication for you.

1421
01:02:32,900 --> 01:02:35,000
So we don't want it to multiply by anything here.

1422
01:02:35,300 --> 01:02:36,200
When it's doing that addition.

1423
01:02:36,200 --> 01:02:39,000
We want to just add that that raw B value to the pointer.

1424
01:02:39,800 --> 01:02:40,300
So, okay.

1425
01:02:40,300 --> 01:02:41,100
So we go in here.

1426
01:02:41,100 --> 01:02:41,900
We write to the pixel.

1427
01:02:41,900 --> 01:02:45,500
We write the color and I believe that's mostly all we really need.

1428
01:02:45,900 --> 01:02:47,400
We do need are rounding function.

1429
01:02:48,600 --> 01:02:52,800
So for are rounding function, to be honest with you, I don't know if C

1430
01:02:52,800 --> 01:02:56,400
has ever introduced a proper rounding intrinsic.

1431
01:02:56,400 --> 01:02:57,100
It probably is.

1432
01:02:57,100 --> 01:02:58,000
We should look for it.

1433
01:02:58,700 --> 01:02:59,900
But for now we're going to implement it.

1434
01:03:00,000 --> 01:03:03,200
The old-fashioned way, we will talk about how to do the rounding.

1435
01:03:03,200 --> 01:03:07,500
In fact, I'll put it to do in here to do intrinsic.

1436
01:03:08,600 --> 01:03:09,000
Okay.

1437
01:03:11,200 --> 01:03:16,100
So this is passes in a real 32 value and it wants to do a result value

1438
01:03:16,100 --> 01:03:17,100
that comes out.

1439
01:03:17,200 --> 01:03:19,700
So what we if we actually just cast it, right?

1440
01:03:19,700 --> 01:03:23,900
If we actually just cast a real 32 and 32, the default thing that c

1441
01:03:23,900 --> 01:03:26,400
will do, is it will truncate the value, right?

1442
01:03:26,400 --> 01:03:29,700
So what it will do is it'll just Lop off the fractional part entirely.

1443
01:03:30,300 --> 01:03:34,000
So if you think about what that does on the number line, right?

1444
01:03:34,500 --> 01:03:38,200
If I'm if I'm in here and here's my number line here is zero, right?

1445
01:03:38,400 --> 01:03:45,200
Is one two - one - two if I'm in here, right?

1446
01:03:45,700 --> 01:03:47,300
And I wanted to round this value.

1447
01:03:47,300 --> 01:03:49,900
Here is point five in the middle, right?

1448
01:03:50,600 --> 01:03:52,000
If I'm going to round this value.

1449
01:03:52,400 --> 01:03:55,900
I want it to go to be one because we all know that, you know, when you

1450
01:03:55,900 --> 01:03:58,700
round you take which which side of that dividing line you're on and

1451
01:03:58,700 --> 01:04:00,200
you round up or down, right?

1452
01:04:00,600 --> 01:04:06,000
Well, I don't want to do that because I want I'm sorry if I truncate

1453
01:04:06,000 --> 01:04:08,200
I'll go down to zero because truncation.

1454
01:04:08,300 --> 01:04:11,700
It removes, the fractional part entirely, and this was 0.75 or

1455
01:04:11,700 --> 01:04:12,300
something, right?

1456
01:04:12,300 --> 01:04:13,500
You know, who knows what that was in there.

1457
01:04:14,000 --> 01:04:15,000
So, just get rid of 75.

1458
01:04:15,000 --> 01:04:15,700
You left of 0.

1459
01:04:15,700 --> 01:04:16,500
I don't want to do that.

1460
01:04:16,600 --> 01:04:17,800
I want to round up.

1461
01:04:18,000 --> 01:04:23,700
So what I can do is I can change truncation to rounding trivially by

1462
01:04:23,700 --> 01:04:26,700
just biasing the number before I truncate it.

1463
01:04:26,800 --> 01:04:32,800
So for example, if I add .52 the number right, that will push up the

1464
01:04:32,900 --> 01:04:36,600
the anything that was in this half.

1465
01:04:36,700 --> 01:04:38,200
It will push it up into here.

1466
01:04:38,700 --> 01:04:39,300
Right.

1467
01:04:39,500 --> 01:04:43,300
And anything that wasn't here will get pushed up into here when I

1468
01:04:43,300 --> 01:04:45,900
truncate, then all of the stuff that was in here that got moved to

1469
01:04:45,900 --> 01:04:46,200
here.

1470
01:04:46,200 --> 01:04:49,000
We'll still truncate back that will still around back down to 0, which

1471
01:04:49,000 --> 01:04:52,000
is what it should have done when I do the truncation, but anything

1472
01:04:52,000 --> 01:04:54,300
that was in here will be moved up to above one.

1473
01:04:54,300 --> 01:04:57,600
They'll be 1 point something and then when I truncate will go back

1474
01:04:57,600 --> 01:05:00,500
down to one, which is what I wanted, which is rounding up, right.

1475
01:05:00,500 --> 01:05:05,500
So basically by just rounding and truncation for simple values like

1476
01:05:05,500 --> 01:05:08,300
that are pretty easy for me to deal with because I can just do

1477
01:05:09,100 --> 01:05:11,600
That plus 0.05.

1478
01:05:11,700 --> 01:05:14,300
Now there's a lot more to thinking about these sort of things than

1479
01:05:14,300 --> 01:05:16,300
just that but for now that's going to have to suffice.

1480
01:05:17,000 --> 01:05:19,200
And so that's an easy way to turn that simple.

1481
01:05:19,200 --> 01:05:23,700
See truncation operation into something that roughly does rounding for

1482
01:05:23,700 --> 01:05:24,500
the cases we care about.

1483
01:05:24,500 --> 01:05:26,600
But we'll have to talk about that little bit more when we have time

1484
01:05:26,800 --> 01:05:30,000
because there's a whole set of topics to talk about with floating

1485
01:05:30,000 --> 01:05:31,600
Point values and rounding all that sort of stuff.

1486
01:05:32,100 --> 01:05:32,900
But there we go.

1487
01:05:33,300 --> 01:05:34,600
That's our draw rectangle call.

1488
01:05:34,600 --> 01:05:36,200
So let's just before we go to Q&A.

1489
01:05:36,200 --> 01:05:38,000
Let's just test to see if it works at all.

1490
01:05:38,000 --> 01:05:38,300
We could

1491
01:05:38,400 --> 01:05:40,600
See if it like, just full-on crashes or anything.

1492
01:05:40,600 --> 01:05:42,200
It's got to get out of the way of my head there.

1493
01:05:43,200 --> 01:05:46,700
Okay, so let's just see if we can draw something.

1494
01:05:46,700 --> 01:05:48,100
That's like this, right?

1495
01:05:50,100 --> 01:05:52,600
Let's see what happens if we get anything at all.

1496
01:05:54,200 --> 01:05:55,800
Hello, are you?

1497
01:05:56,000 --> 01:05:56,900
That's what's going on here.

1498
01:05:58,600 --> 01:05:59,300
It was already running.

1499
01:05:59,600 --> 01:05:59,900
I

1500
01:06:01,700 --> 01:06:02,200
There we go.

1501
01:06:02,500 --> 01:06:05,600
So there's our rectangle and I'm going to go ahead and see if it

1502
01:06:05,600 --> 01:06:08,600
crashes, if I move it to something.

1503
01:06:08,600 --> 01:06:10,700
That's out of bounds, right?

1504
01:06:11,800 --> 01:06:15,200
So there we go, and it looks like that looks like it would probably

1505
01:06:15,200 --> 01:06:17,000
cause I'm not clearing the screen currently.

1506
01:06:17,300 --> 01:06:19,700
So, you know what, I could use this to clear the screen if I could

1507
01:06:19,700 --> 01:06:23,100
pass a color, we could pass a color really quickly just to try this

1508
01:06:23,100 --> 01:06:23,700
out.

1509
01:06:24,500 --> 01:06:26,000
We could pass just a color.

1510
01:06:26,000 --> 01:06:29,100
That doesn't get handled properly, right?

1511
01:06:29,100 --> 01:06:32,000
I could do see.

1512
01:06:33,400 --> 01:06:36,800
This floating Point color tomorrow.

1513
01:06:37,600 --> 01:06:40,800
So I'm now I'm passing the color in so I can do something where we do

1514
01:06:41,400 --> 01:06:43,600
like a clear 20 first.

1515
01:06:43,600 --> 01:06:47,100
In fact, we could clear to something else we can clear to like some

1516
01:06:47,100 --> 01:06:52,400
hideous purple and then draw something equally hideous, the cyan in

1517
01:06:52,400 --> 01:06:56,400
there and so will clear the purple draw cyan.

1518
01:06:56,400 --> 01:07:00,000
So we are 0 0 and we said what was the the well, I guess we could just

1519
01:07:00,000 --> 01:07:02,200
say whatever the buffer with and buffer hide our

1520
01:07:03,600 --> 01:07:04,300
Like that.

1521
01:07:05,000 --> 01:07:06,900
Let's see here.

1522
01:07:06,900 --> 01:07:10,800
These have to be floating Point values, but I think other than that,

1523
01:07:11,200 --> 01:07:12,600
we are good.

1524
01:07:12,600 --> 01:07:13,800
Let's see.

1525
01:07:14,400 --> 01:07:16,700
Where is my game that I close the game?

1526
01:07:16,700 --> 01:07:18,200
I need to learn to stop closing the game.

1527
01:07:18,800 --> 01:07:24,500
So it looks like that's not quite right or is that quite right?

1528
01:07:25,000 --> 01:07:27,300
Did I actually, oh, I didn't, I still use that.

1529
01:07:27,300 --> 01:07:29,100
So I want to, I want to change to that.

1530
01:07:29,500 --> 01:07:30,500
Does that work properly?

1531
01:07:31,700 --> 01:07:32,700
Doesn't look like it.

1532
01:07:33,300 --> 01:07:34,800
Does not look like it to me.

1533
01:07:35,000 --> 01:07:35,200
Think.

1534
01:07:35,200 --> 01:07:36,100
I might have a bug there.

1535
01:07:37,800 --> 01:07:38,200
It's weird.

1536
01:07:38,200 --> 01:07:39,100
Having bugs and things.

1537
01:07:39,100 --> 01:07:41,400
I would not normally have bugs in it stuff on the stream because,

1538
01:07:41,400 --> 01:07:42,700
like, I don't know.

1539
01:07:42,700 --> 01:07:46,600
I don't know if I'm ever going to quite get used to that but I will

1540
01:07:46,600 --> 01:07:49,400
say, it's been difficult programming on the street because I tend to

1541
01:07:49,400 --> 01:07:52,900
make careless mistakes because I'm talking that I don't normally make

1542
01:07:52,900 --> 01:07:56,400
and it makes it sometimes disquieting for me to program that makes

1543
01:07:56,400 --> 01:07:56,700
sense.

1544
01:07:57,900 --> 01:07:59,900
So, let's see here.

1545
01:08:08,600 --> 01:08:13,400
So that looks like it's maybe sort of working.

1546
01:08:14,900 --> 01:08:17,100
I don't want to say that, it definitely is.

1547
01:08:19,500 --> 01:08:20,800
but it does seem

1548
01:08:21,800 --> 01:08:22,800
To be doing roughly correct.

1549
01:08:22,800 --> 01:08:28,700
I'm going to spot, check it just in case because again, I just kind of

1550
01:08:28,700 --> 01:08:30,100
saying that in there really quickly.

1551
01:08:30,300 --> 01:08:33,800
So I have my Min ex, real manex real man.

1552
01:08:33,800 --> 01:08:35,100
Wide real max.

1553
01:08:35,100 --> 01:08:39,800
Real max y Min, X-Men, exponent Bubba, blah, been X is less than 0

1554
01:08:39,800 --> 01:08:43,600
Min, Y is less than zero, and that's all good.

1555
01:08:45,000 --> 01:08:45,700
Should be fine.

1556
01:08:45,700 --> 01:08:51,399
Max s is greater than buffer, width looks looks at that.

1557
01:08:51,600 --> 01:08:52,500
Outright to me.

1558
01:08:52,500 --> 01:08:53,300
Oh, there it is.

1559
01:08:54,399 --> 01:08:55,000
See that?

1560
01:08:56,399 --> 01:08:58,200
That's not actually anything.

1561
01:08:58,200 --> 01:08:59,800
We were seeing, that's totally buggy.

1562
01:09:01,399 --> 01:09:03,399
What does this rectangle functional later?

1563
01:09:04,700 --> 01:09:08,000
Looks good in X.

1564
01:09:08,800 --> 01:09:09,600
Yeah.

1565
01:09:09,600 --> 01:09:12,000
XX more buggers.

1566
01:09:12,000 --> 01:09:13,000
Is there any buggers?

1567
01:09:13,600 --> 01:09:15,200
Come out, come out wherever you are.

1568
01:09:16,700 --> 01:09:17,100
All right.

1569
01:09:17,100 --> 01:09:19,100
Well, I think we're going to have to call that for the day.

1570
01:09:19,100 --> 01:09:20,200
Looks like it's sort of working.

1571
01:09:20,600 --> 01:09:22,700
But again saying that in pretty quickly would like to test a little

1572
01:09:22,700 --> 01:09:25,600
bit more just make sure we don't have any stupid mistakes in there.

1573
01:09:27,500 --> 01:09:30,100
Let's try something way off the screen.

1574
01:09:30,100 --> 01:09:30,899
Hey, we didn't crash.

1575
01:09:30,899 --> 01:09:31,300
That's good.

1576
01:09:31,300 --> 01:09:32,500
How about way off the bottom?

1577
01:09:33,200 --> 01:09:35,800
Also didn't crash try some Ridiculousness.

1578
01:09:36,100 --> 01:09:36,899
No crashes.

1579
01:09:36,899 --> 01:09:38,700
So, okay, so I'm pretty happy with that.

1580
01:09:38,700 --> 01:09:41,500
So let us go to the Q&A.

1581
01:09:42,100 --> 01:09:44,300
I would say don't want to be too much overtime.

1582
01:09:44,300 --> 01:09:45,600
I know that going over time.

1583
01:09:45,600 --> 01:09:46,300
Makes it hard for people.

1584
01:09:46,500 --> 01:09:50,000
Try to catch up and stuff because they have long streams to watch.

1585
01:09:50,000 --> 01:09:51,700
So I try not to do that.

1586
01:09:53,399 --> 01:09:55,300
Looks like that is good enough for today.

1587
01:09:55,300 --> 01:09:58,100
I am happy with that that basically gets us in a position.

1588
01:09:58,100 --> 01:09:58,600
Tomorrow.

1589
01:09:58,900 --> 01:10:00,400
I've explained all the things that I want to do.

1590
01:10:00,400 --> 01:10:01,600
We have a way to draw a rectangle.

1591
01:10:01,600 --> 01:10:05,900
So tomorrow I should be able to basically start building tile maps,

1592
01:10:06,300 --> 01:10:07,500
and we'll see where that goes.

1593
01:10:07,600 --> 01:10:09,400
So totally good.

1594
01:10:09,400 --> 01:10:09,800
Again.

1595
01:10:09,800 --> 01:10:12,400
It's always a little tough stopping the stream because I'm always

1596
01:10:12,400 --> 01:10:14,200
like, well, now let's build the tile map.

1597
01:10:15,200 --> 01:10:17,900
Wait till tomorrow for that.

1598
01:10:18,100 --> 01:10:18,400
For now.

1599
01:10:18,400 --> 01:10:19,200
Let's go to the Q&A.

1600
01:10:19,500 --> 01:10:23,600
Basically, if you want to go ahead, and I am pushing the Q&A button

1601
01:10:23,600 --> 01:10:26,600
now, so if you want to, go ahead and ask your question, please keep it

1602
01:10:26,600 --> 01:10:26,800
to stuff.

1603
01:10:26,800 --> 01:10:28,300
We did today or stuff.

1604
01:10:28,300 --> 01:10:32,100
We have done in the past, and I added some new features to the

1605
01:10:32,100 --> 01:10:32,600
question.

1606
01:10:32,600 --> 01:10:37,200
So, from now on, you should be able to just put capital Q: and then

1607
01:10:37,200 --> 01:10:38,900
whatever you want, and I should see it.

1608
01:10:38,900 --> 01:10:41,600
So you can try that instead of senior ettore.

1609
01:10:42,800 --> 01:10:45,000
Never been tested, but hopefully it'll work.

1610
01:10:46,200 --> 01:10:46,700
Let's see.

1611
01:10:50,900 --> 01:10:53,300
D mitsuki says, what is that fatal link area?

1612
01:10:53,300 --> 01:10:56,300
When you compile the code am I going to die?

1613
01:10:56,800 --> 01:11:00,500
No, so what happens there is if you remember the way that we did the

1614
01:11:00,500 --> 01:11:05,900
build, we build two things, we build the game code as a dll that we

1615
01:11:05,900 --> 01:11:09,800
can hot load and then we do the platform layer as a separate thing.

1616
01:11:10,500 --> 01:11:13,300
The platform layer is what's always running in the debugger.

1617
01:11:13,400 --> 01:11:18,100
So the debugger has the executable locked and we can't write to it.

1618
01:11:18,200 --> 01:11:19,600
So this succeeds

1619
01:11:19,800 --> 01:11:24,900
This first line succeeds, but this line will fail and we don't care

1620
01:11:24,900 --> 01:11:27,300
because we're not actually changing the platform layer.

1621
01:11:27,700 --> 01:11:29,400
We're basically only ever changing this code.

1622
01:11:29,400 --> 01:11:32,200
Now, when we want to change the platform layer, we have to stop the

1623
01:11:32,200 --> 01:11:32,600
app.

1624
01:11:33,000 --> 01:11:36,100
But until we change the platform layer, we don't have to what this

1625
01:11:36,100 --> 01:11:39,800
fatal error is telling us that it's, hey, I did the recompile step for

1626
01:11:39,800 --> 01:11:41,600
the platform layer, but I can't write to it.

1627
01:11:41,600 --> 01:11:42,800
And we're like, that's fine.

1628
01:11:42,900 --> 01:11:43,500
We don't care.

1629
01:11:43,500 --> 01:11:44,800
We only want you to build the other one.

1630
01:11:45,100 --> 01:11:46,000
So that's it.

1631
01:11:46,300 --> 01:11:46,900
That's all that is.

1632
01:11:53,900 --> 01:11:56,300
What sort of things do you think are good to include in a portfolio?

1633
01:11:56,300 --> 01:11:57,400
When looking for a job.

1634
01:11:57,400 --> 01:11:59,800
I'm a student looking for his first job and would appreciate any

1635
01:11:59,800 --> 01:11:59,800
advice.

1636
01:12:00,100 --> 01:12:03,900
So, I guess I'd say is that come back during a pre stream, basically,

1637
01:12:03,900 --> 01:12:06,700
like for 10 or 15 minutes before the stream starts.

1638
01:12:06,700 --> 01:12:09,500
I answer questions that aren't about the code that we're doing.

1639
01:12:09,700 --> 01:12:12,100
So if you want to ask that question, come during a pre stream and we

1640
01:12:12,100 --> 01:12:14,500
will and I will answer it.

1641
01:12:15,900 --> 01:12:16,900
Randolph.

1642
01:12:16,900 --> 01:12:18,300
Q: does this work?

1643
01:12:18,300 --> 01:12:19,100
Yes, it does.

1644
01:12:19,300 --> 01:12:21,300
High technology Road creature.

1645
01:12:21,300 --> 01:12:22,100
I see you.

1646
01:12:22,300 --> 01:12:23,500
M GARP.

1647
01:12:23,500 --> 01:12:24,100
See you, too.

1648
01:12:24,100 --> 01:12:24,800
So this is good.

1649
01:12:24,800 --> 01:12:25,200
We are good.

1650
01:12:27,700 --> 01:12:30,600
Gary Johanson says, thoughts on refactoring.

1651
01:12:30,600 --> 01:12:32,800
This to be all functional programming.

1652
01:12:34,000 --> 01:12:34,700
Well.

1653
01:12:35,800 --> 01:12:39,700
I'm not a huge fan of doing things dogmatically, and I feel like

1654
01:12:39,700 --> 01:12:41,600
refactoring an entire game to be functional.

1655
01:12:41,600 --> 01:12:44,500
Programming is a bit dogmatic.

1656
01:12:44,500 --> 01:12:48,200
Now, if you're just doing it as an exercise, then any programming

1657
01:12:48,200 --> 01:12:52,400
exercise that suits, your fancy is a good exercise, right?

1658
01:12:52,400 --> 01:12:54,600
Even the worst possible programming methodology.

1659
01:12:54,600 --> 01:12:58,800
Like, I really want to write this in in lots of crazy C++ inheritance.

1660
01:12:59,400 --> 01:13:01,700
If you're just doing it to see how it goes.

1661
01:13:02,100 --> 01:13:03,900
That is a great idea, right?

1662
01:13:04,000 --> 01:13:05,200
If you're asking, whether I think,

1663
01:13:05,400 --> 01:13:09,500
A good idea in terms of productivity, you know, I'm probably going to

1664
01:13:09,500 --> 01:13:10,500
say no, right?

1665
01:13:11,000 --> 01:13:13,000
And so thoughts are refactoring at all to be functional programming.

1666
01:13:13,000 --> 01:13:14,700
I'd say well, why are you doing that?

1667
01:13:15,000 --> 01:13:17,500
On the other hand, as I've talked about in the Stream in the past?

1668
01:13:17,600 --> 01:13:21,100
I do think that functional programming is good to do in places where

1669
01:13:21,100 --> 01:13:21,800
it makes sense.

1670
01:13:22,700 --> 01:13:26,400
Basically, like there's a lot of things I tend to push code towards

1671
01:13:26,400 --> 01:13:30,400
functional when I can, I don't try to go all the way in a dogmatic

1672
01:13:30,400 --> 01:13:34,500
sense, but the Moores side effects I can get out of the program.

1673
01:13:35,300 --> 01:13:37,500
In various places the better because it's cleaner.

1674
01:13:37,500 --> 01:13:39,500
And it's easier for me to see what that code does.

1675
01:13:39,500 --> 01:13:41,400
And it's easier for you to reuse that code in places.

1676
01:13:41,400 --> 01:13:44,900
Because I know that, as long as whatever I pass, it is all that it's

1677
01:13:44,900 --> 01:13:45,600
going to need.

1678
01:13:45,700 --> 01:13:47,700
It's very easy for me to make it nice and self-contained.

1679
01:13:47,700 --> 01:13:52,100
So I do try to make things relatively functional in places where I can

1680
01:13:52,700 --> 01:13:53,900
but that's really all I can say about that.

1681
01:13:53,900 --> 01:13:56,300
I don't feel like there's a need to be overly functional in.

1682
01:13:56,300 --> 01:13:57,300
Your programming style though.

1683
01:13:57,400 --> 01:14:00,700
You should be as functional as is warranted and no more.

1684
01:14:06,700 --> 01:14:08,000
Okay.

1685
01:14:13,400 --> 01:14:16,000
How would you do compression, programming with big teams?

1686
01:14:16,300 --> 01:14:19,600
Will the game be random, but always with the same seats that everyone

1687
01:14:19,600 --> 01:14:20,800
gets the same world.

1688
01:14:21,000 --> 01:14:23,600
Also, will the dungeons change when you revisit them.

1689
01:14:24,000 --> 01:14:24,200
All right.

1690
01:14:24,200 --> 01:14:25,400
So there's a lot of questions here.

1691
01:14:25,600 --> 01:14:27,800
First of all compression, programming with big teams.

1692
01:14:28,700 --> 01:14:31,600
I kind of answer that or ready.

1693
01:14:31,600 --> 01:14:36,400
If you want to take a look at on Molly rocket / KC.

1694
01:14:37,700 --> 01:14:39,200
I actually talked about that.

1695
01:14:39,400 --> 01:14:42,800
I don't remember exactly where it is because

1696
01:14:43,100 --> 01:14:46,700
It was at the end of one of these working on the witness ones where I

1697
01:14:46,700 --> 01:14:47,500
was talking about.

1698
01:14:47,500 --> 01:14:48,400
That sort of stuff.

1699
01:14:51,100 --> 01:14:51,700
Let's see.

1700
01:14:51,700 --> 01:14:52,900
I think it was in this one.

1701
01:14:55,900 --> 01:14:59,800
Okay, so if you go here, if you go to stream, underscores.

1702
01:15:00,000 --> 01:15:01,300
They're a 20-day HTML.

1703
01:15:02,300 --> 01:15:06,600
You will notice that I talked about that in here like second after

1704
01:15:06,600 --> 01:15:07,800
last week's article, multiple strings.

1705
01:15:07,800 --> 01:15:09,900
It's just that for some reason compression area would only work with

1706
01:15:09,900 --> 01:15:12,600
small numbers of people, perhaps one or two, but it's somehow not

1707
01:15:12,600 --> 01:15:14,700
possible to do when working on teams.

1708
01:15:15,200 --> 01:15:18,600
And so I kind of explained here why I don't really necessarily even

1709
01:15:18,600 --> 01:15:22,800
understand why there's a difference between how it works on teams or

1710
01:15:22,800 --> 01:15:23,300
not.

1711
01:15:24,500 --> 01:15:27,400
So hopefully that can sort of answer that question a little bit.

1712
01:15:28,000 --> 01:15:29,600
My feeling is that basically?

1713
01:15:30,600 --> 01:15:33,500
You know, you just have whoever is working on a particular piece of

1714
01:15:33,500 --> 01:15:36,800
code at the time is doing compression oriented programming as they

1715
01:15:36,800 --> 01:15:39,800
sort of get the design together when they are happy like that,

1716
01:15:39,800 --> 01:15:43,200
exploration process that I was talking about when you're sort of happy

1717
01:15:43,200 --> 01:15:46,900
and feel like you've gotten somewhere, you take the interface on the

1718
01:15:46,900 --> 01:15:49,100
outside of it and you export that to your team.

1719
01:15:49,400 --> 01:15:50,100
You say here.

1720
01:15:50,200 --> 01:15:51,300
Now, you can call these things.

1721
01:15:51,300 --> 01:15:52,500
I've gotten to a place.

1722
01:15:52,500 --> 01:15:53,900
I'm pretty comfortable with, right?

1723
01:15:54,000 --> 01:15:54,900
And that's really all there is.

1724
01:15:54,900 --> 01:15:57,900
It's really not that hard and it doesn't really change anything.

1725
01:15:57,900 --> 01:15:59,900
Whether it's a big team or a small team in my

1726
01:16:04,700 --> 01:16:06,900
Do you think writing structs and Associated functions for things like

1727
01:16:06,900 --> 01:16:09,900
vector to and color would be would be good to cut down on boilerplate

1728
01:16:09,900 --> 01:16:12,700
code and our show better intent in the code yet.

1729
01:16:12,700 --> 01:16:16,700
Well, so we will be doing those again.

1730
01:16:16,700 --> 01:16:20,200
It's premature to do right now because if you imagine somebody coming

1731
01:16:20,200 --> 01:16:23,500
at the stream who doesn't know what a vector or color struct is, and I

1732
01:16:23,500 --> 01:16:24,500
just start writing those.

1733
01:16:24,500 --> 01:16:25,900
They're like, why did you need that?

1734
01:16:25,900 --> 01:16:26,400
Right?

1735
01:16:26,600 --> 01:16:30,400
And so what we're doing first is we're writing everything in the

1736
01:16:30,400 --> 01:16:31,300
exploratory way.

1737
01:16:31,300 --> 01:16:34,400
Just writing it first and then looking to see what patterns emerge.

1738
01:16:34,500 --> 01:16:38,900
And those will guide us in how we make our our utility classes and I

1739
01:16:38,900 --> 01:16:40,200
really want to emphasize that.

1740
01:16:41,700 --> 01:16:43,500
That is almost always the right way to do it.

1741
01:16:43,600 --> 01:16:47,000
It's almost always best to write the code explicit first with no

1742
01:16:47,000 --> 01:16:47,700
fanciness.

1743
01:16:47,900 --> 01:16:50,700
And then look at what emerges and pull that out words.

1744
01:16:50,700 --> 01:16:52,700
That's the compression oriented programming model.

1745
01:16:52,700 --> 01:16:54,100
And that's the model that works.

1746
01:16:54,500 --> 01:16:57,600
Now some of us have programmed been around the block so many times

1747
01:16:57,600 --> 01:17:00,800
that we just know what we would want in a color struct, for example,

1748
01:17:01,200 --> 01:17:02,100
and that's fine.

1749
01:17:02,100 --> 01:17:04,900
So if you have written it so many times, you just know exactly what

1750
01:17:04,900 --> 01:17:05,600
that's going to be.

1751
01:17:05,700 --> 01:17:07,800
You probably already have an h-file anyway, and you just grab it and

1752
01:17:07,800 --> 01:17:10,800
use it, right, but I want to show the process.

1753
01:17:10,800 --> 01:17:11,300
Where when you

1754
01:17:11,500 --> 01:17:12,500
Not quite sure yet.

1755
01:17:12,500 --> 01:17:14,500
What a color structured have in it or where you're not, quite sure

1756
01:17:14,500 --> 01:17:14,700
yet.

1757
01:17:14,700 --> 01:17:16,700
What a vector to should do those sorts of things.

1758
01:17:17,200 --> 01:17:19,000
I want to show how we arrived at them.

1759
01:17:19,200 --> 01:17:21,800
So we will never be prematurely making a struct.

1760
01:17:22,600 --> 01:17:25,700
We will always be building our utilities from the ground up so that

1761
01:17:25,700 --> 01:17:30,000
you can see how I do it and how I decide what to do and where to put

1762
01:17:30,000 --> 01:17:31,400
what and at what times?

1763
01:17:37,300 --> 01:17:39,900
Are you going to use linear texture layout or something fancy?

1764
01:17:39,900 --> 01:17:43,000
Like a swizzle tile, layout nested tiles for writing that on, Swizzle

1765
01:17:43,000 --> 01:17:44,100
on the right to the screen?

1766
01:17:46,800 --> 01:17:49,200
Let's wait till we get to the renderer to talk about stuff like that.

1767
01:17:51,100 --> 01:17:53,900
If C didn't exist, what language would you use?

1768
01:17:55,300 --> 01:17:57,700
Probably would be it as assembly programmer.

1769
01:17:57,900 --> 01:17:59,800
I probably have my own tool set for.

1770
01:18:00,000 --> 01:18:02,700
Assembly code probably and honestly, I'd probably be a better

1771
01:18:02,700 --> 01:18:06,100
programmer if she didn't exist by now either I never would have

1772
01:18:06,100 --> 01:18:09,100
figured out that I like low-level programming and and would have just

1773
01:18:09,100 --> 01:18:14,700
been some crazy, you know python programmer, who knows what or I would

1774
01:18:14,700 --> 01:18:18,900
have found the right way to do things and made my own sort of stuff on

1775
01:18:18,900 --> 01:18:19,800
top of as mm.

1776
01:18:20,600 --> 01:18:22,800
I probably should do that these days to be honest with you.

1777
01:18:22,800 --> 01:18:24,000
I thought about it a couple times.

1778
01:18:25,500 --> 01:18:27,900
Because I feel like, I feel like my Assembly Language knowledge, is

1779
01:18:27,900 --> 01:18:32,500
kind of weak because I've always had sea, and because I kind of came

1780
01:18:32,500 --> 01:18:36,100
at a time when programming the whole thing's an Assembly Language just

1781
01:18:36,100 --> 01:18:37,100
simply wasn't done anymore.

1782
01:18:37,100 --> 01:18:37,500
So,

1783
01:18:42,600 --> 01:18:45,100
Yes, at handmade hero.

1784
01:18:45,100 --> 01:18:48,600
Also works now for questions at handmade here at senior Tori, and Q:

1785
01:18:48,600 --> 01:18:49,300
will all work.

1786
01:18:49,300 --> 01:18:50,800
We have a crazy filter.

1787
01:18:50,800 --> 01:18:53,900
Where can we find out additional information about engine

1788
01:18:53,900 --> 01:18:54,500
architectures?

1789
01:18:54,500 --> 01:18:55,900
I have no idea.

1790
01:18:56,000 --> 01:18:59,600
Again, since I don't spend a lot of time reading introductory material

1791
01:18:59,600 --> 01:19:02,300
these days because I'm so old and crusty.

1792
01:19:02,600 --> 01:19:05,800
I don't have a good feel for what's available.

1793
01:19:05,800 --> 01:19:07,600
When I was little and learning this stuff.

1794
01:19:07,600 --> 01:19:09,600
There were no books on engine architecture.

1795
01:19:09,600 --> 01:19:11,400
There were no books on games pretty much.

1796
01:19:13,400 --> 01:19:16,900
I think like the first books on game architecture that I know of that

1797
01:19:16,900 --> 01:19:17,400
came out.

1798
01:19:17,400 --> 01:19:22,500
We're like, really, really awful and came out in like the 90s or

1799
01:19:22,500 --> 01:19:23,100
something.

1800
01:19:23,100 --> 01:19:27,100
When I was already 16, 15 16, something like that.

1801
01:19:28,300 --> 01:19:31,400
There were good books on like, Graphics programming, like, Bruce are

1802
01:19:31,400 --> 01:19:34,400
tricks, like micro computer Graphics displays or whatever that book

1803
01:19:34,400 --> 01:19:34,600
was.

1804
01:19:34,600 --> 01:19:38,000
There were some books like that, but there weren't and game engine

1805
01:19:38,000 --> 01:19:38,700
architecture books.

1806
01:19:38,700 --> 01:19:39,600
So I don't know.

1807
01:19:39,700 --> 01:19:40,700
I've never even read a game.

1808
01:19:40,700 --> 01:19:42,500
Architecture book eyes.

1809
01:19:42,700 --> 01:19:44,300
That exists now about know if they're any good.

1810
01:19:46,700 --> 01:19:49,300
Do you envision the game world to be generated as you go and stored in

1811
01:19:49,300 --> 01:19:51,200
memory on disk to save the state?

1812
01:19:51,300 --> 01:19:51,900
Oh, I forgot.

1813
01:19:51,900 --> 01:19:52,300
Sorry.

1814
01:19:52,500 --> 01:19:53,300
I forgot to answer.

1815
01:19:53,300 --> 01:19:54,600
One of the questions from before.

1816
01:19:54,800 --> 01:19:58,100
Let me remind you that someone said, will the game be random.

1817
01:19:58,100 --> 01:20:01,000
But always with the same seeds that everyone gets the same world and

1818
01:20:01,000 --> 01:20:03,900
will dungeons changing your visit them who knows like those are

1819
01:20:03,900 --> 01:20:04,300
decisions.

1820
01:20:04,300 --> 01:20:05,500
We can make a little later on.

1821
01:20:06,300 --> 01:20:08,900
What I would probably like to do is make it so that

1822
01:20:13,100 --> 01:20:15,500
maybe that you can export like a seed.

1823
01:20:15,500 --> 01:20:17,500
So you can say, here is the get, here's the game state.

1824
01:20:17,500 --> 01:20:20,200
If someone else wants to play my game State, I can send it to him an

1825
01:20:20,200 --> 01:20:21,500
email or whatever and they can load it.

1826
01:20:21,500 --> 01:20:21,900
Something like that.

1827
01:20:21,900 --> 01:20:22,600
Might be nice.

1828
01:20:23,400 --> 01:20:27,300
Dungeons won't change when you revisit them unless they are supposed

1829
01:20:27,300 --> 01:20:27,500
to.

1830
01:20:27,600 --> 01:20:30,300
Like I would like the world to feel consistent, so they probably won't

1831
01:20:30,300 --> 01:20:31,200
randomly change.

1832
01:20:32,400 --> 01:20:35,100
But yeah, there's some stuff I want to do with the game design that

1833
01:20:35,100 --> 01:20:36,600
makes it so that it's not quite.

1834
01:20:36,600 --> 01:20:39,000
It's not like if you're thinking of like binding Binding of Isaac,

1835
01:20:39,000 --> 01:20:41,500
where there's like a seed number that gets printed that won't work at

1836
01:20:41,500 --> 01:20:41,800
all.

1837
01:20:41,800 --> 01:20:42,400
Because there's something

1838
01:20:42,600 --> 01:20:46,300
Is that I want to do that that have that make that not actually be

1839
01:20:46,800 --> 01:20:48,900
enough information to regenerate the world.

1840
01:20:51,200 --> 01:20:54,900
So now back to Johan over stats question.

1841
01:20:55,000 --> 01:20:57,900
Do you envision the game world to be generated as you go and sort in

1842
01:20:57,900 --> 01:20:59,800
memory on disk to say the state is

1843
01:21:00,000 --> 01:21:03,500
I believe it will be generated in a perhaps, in a background process.

1844
01:21:03,500 --> 01:21:07,400
If we can't get it generating fast enough to generate just sort of in

1845
01:21:07,400 --> 01:21:07,800
an instant.

1846
01:21:07,800 --> 01:21:09,700
Because I don't want the have to wait for a generating screen.

1847
01:21:09,700 --> 01:21:12,600
I don't want one of those screens like, you know, when like Don't

1848
01:21:12,600 --> 01:21:16,600
Starve you're sitting there and it's like, you got to wait for it to

1849
01:21:16,600 --> 01:21:17,500
generate your world or whatever.

1850
01:21:17,500 --> 01:21:18,400
I don't want that.

1851
01:21:18,500 --> 01:21:21,200
So we probably will have to move it to a separate thread, but it will

1852
01:21:21,200 --> 01:21:24,700
basically all be generated at startup, but I just might try to overlap

1853
01:21:24,700 --> 01:21:28,300
that with you walking through the first screen or two so that you

1854
01:21:28,300 --> 01:21:29,800
don't have to stare at a loading screen.

1855
01:21:31,000 --> 01:21:34,000
While the world gets generated, but we probably won't have to save it

1856
01:21:34,000 --> 01:21:36,400
to disk, because it probably should never be large enough to have to

1857
01:21:36,400 --> 01:21:37,300
save to disk.

1858
01:21:37,400 --> 01:21:40,200
I mean, if you think about it, modern computers, have so much memory

1859
01:21:40,200 --> 01:21:40,800
on them.

1860
01:21:41,400 --> 01:21:44,200
That basically, almost all of our memory footprint, is probably going

1861
01:21:44,200 --> 01:21:48,000
to get be taken up by like bitmap graphics and sounds and stuff.

1862
01:21:48,000 --> 01:21:48,400
Right?

1863
01:21:48,700 --> 01:21:51,500
So we're going to have plenty of room to probably just store the

1864
01:21:51,500 --> 01:21:51,700
thing.

1865
01:21:51,700 --> 01:21:54,100
So, we won't need on disc for the, for the game World out.

1866
01:21:54,100 --> 01:21:54,500
Think

1867
01:21:59,300 --> 01:22:00,500
What was the variable thing?

1868
01:22:00,500 --> 01:22:02,800
John Blow was referring to on yesterday's Q&A?

1869
01:22:04,400 --> 01:22:06,900
So you'd have to ask John, exactly.

1870
01:22:06,900 --> 01:22:11,300
But basically, he was kind of making fun of the entire process a

1871
01:22:11,300 --> 01:22:11,700
little bit.

1872
01:22:11,700 --> 01:22:14,700
I mean, John is very supportive of handmade hero and that he really

1873
01:22:14,700 --> 01:22:17,100
likes the project from what I can tell.

1874
01:22:17,200 --> 01:22:20,600
So he was not being disparaging of the project at all.

1875
01:22:20,600 --> 01:22:24,200
But I think he was just enjoying like asking a stupid question

1876
01:22:24,200 --> 01:22:28,100
basically, because he thought that was fun, and I thought it was fun

1877
01:22:28,100 --> 01:22:28,400
too.

1878
01:22:28,600 --> 01:22:32,900
So way back on the very first stream of handmade hero.

1879
01:22:32,900 --> 01:22:33,500
He like,

1880
01:22:34,200 --> 01:22:38,000
You like ask some question that was like, will you know, will you be

1881
01:22:38,000 --> 01:22:40,600
showing how to program the variable or something like this?

1882
01:22:40,600 --> 01:22:41,100
Right.

1883
01:22:41,700 --> 01:22:44,700
And I answered it of course and since then he's been asking that

1884
01:22:44,700 --> 01:22:48,000
question often and I try to answer it differently every time but yeah,

1885
01:22:48,000 --> 01:22:50,500
if you really want to know exactly why he decided to ask that question

1886
01:22:50,500 --> 01:22:51,900
the first time you'll have to ask him.

1887
01:22:51,900 --> 01:22:55,300
But I think he was just trying to like ask a stupid question.

1888
01:22:55,300 --> 01:22:57,900
And that was the stupid question that he happened to think of first.

1889
01:22:57,900 --> 01:23:00,800
I don't know if it actually, if the he could have maybe said the

1890
01:23:00,800 --> 01:23:02,700
function as well or something, right, but

1891
01:23:05,900 --> 01:23:07,100
Let's see.

1892
01:23:08,200 --> 01:23:09,400
Are you going to use fixed point?

1893
01:23:09,400 --> 01:23:11,300
No, probably not.

1894
01:23:11,600 --> 01:23:13,900
Because fixed points just slower for everything.

1895
01:23:13,900 --> 01:23:14,600
And so

1896
01:23:16,800 --> 01:23:17,200
I mean.

1897
01:23:21,200 --> 01:23:24,700
So in one sense, you might say, there are some things that I might do

1898
01:23:24,700 --> 01:23:26,300
that look like fixed point.

1899
01:23:26,300 --> 01:23:29,700
So I guess maybe I won't say no, but basically no.

1900
01:23:32,800 --> 01:23:33,700
That came out weird.

1901
01:23:35,200 --> 01:23:38,500
We made, we will do one thing that looks a little bit like fixed wine.

1902
01:23:38,500 --> 01:23:41,000
If I remember when we do it, I'll mention that.

1903
01:23:41,000 --> 01:23:42,800
This is what I was referring to when we get there.

1904
01:23:42,800 --> 01:23:44,600
But no for the most part.

1905
01:23:44,600 --> 01:23:46,400
We'll use floats because floats compute way faster.

1906
01:23:53,400 --> 01:23:56,200
How old were you in the picture on Molly rocket?

1907
01:23:56,400 --> 01:23:58,700
So you're talking about this picture?

1908
01:24:00,700 --> 01:24:03,800
I was 2010.

1909
01:24:04,700 --> 01:24:05,400
I think so.

1910
01:24:05,400 --> 01:24:08,000
I was, I was 30.

1911
01:24:08,000 --> 01:24:10,000
I was four years younger than I am now.

1912
01:24:10,000 --> 01:24:13,200
So, I was 34 on this.

1913
01:24:13,200 --> 01:24:14,400
This is me when I was 34.

1914
01:24:20,300 --> 01:24:21,800
Why do subpixels?

1915
01:24:21,800 --> 01:24:23,600
How is it better than just pixels?

1916
01:24:23,600 --> 01:24:29,400
That's an excellent question and I can't answer it in a short period

1917
01:24:29,400 --> 01:24:29,900
of time.

1918
01:24:29,900 --> 01:24:35,200
So I would ask if you could keep that in your head if you can remember

1919
01:24:36,300 --> 01:24:41,000
and you I will have essentially an entire stream explaining why that

1920
01:24:41,000 --> 01:24:46,300
is correct or sorry, why some pixel is better than pixel when we get

1921
01:24:46,300 --> 01:24:49,500
to when we start working on the renderer?

1922
01:24:49,600 --> 01:24:51,900
Upper and we're not just using debug rendering.

1923
01:24:52,400 --> 01:24:52,900
Basically.

1924
01:24:52,900 --> 01:24:55,500
The reason is because it makes motion look much more continuous.

1925
01:24:56,400 --> 01:25:00,000
I don't know if you've ever seen like, the difference between

1926
01:25:00,000 --> 01:25:03,100
something that looks like a perfectly smooth, beautiful scrolling of a

1927
01:25:03,100 --> 01:25:08,600
background and it like it like slows to a stop and it's just beautiful

1928
01:25:08,600 --> 01:25:09,400
and clean.

1929
01:25:09,700 --> 01:25:12,800
And then there's these other ones where they kind of jerk to a stop.

1930
01:25:12,800 --> 01:25:13,800
Like, as they get slower.

1931
01:25:13,800 --> 01:25:15,300
You can see it sort of

1932
01:25:16,200 --> 01:25:17,000
Do this thing?

1933
01:25:17,600 --> 01:25:19,900
That's because one of them was sub-pixel in one of those pixel.

1934
01:25:19,900 --> 01:25:21,500
So, we want the sub-pixel kind.

1935
01:25:21,500 --> 01:25:22,600
So it's perfectly smooth.

1936
01:25:22,600 --> 01:25:24,100
Even when it's moving very slowly.

1937
01:25:27,300 --> 01:25:28,700
Will I be growing a final dress beard?

1938
01:25:28,700 --> 01:25:33,300
My wife does not like beards so seems unlikely.

1939
01:25:39,400 --> 01:25:39,800
Okay.

1940
01:25:39,800 --> 01:25:43,000
So are you going to use, linear texture layer or something fancy like

1941
01:25:43,000 --> 01:25:46,600
a swizzle tile layout Nest until for writing, then on, Swizzle on the

1942
01:25:46,600 --> 01:25:47,600
right to the screen.

1943
01:25:48,800 --> 01:25:49,400
So,

1944
01:25:52,200 --> 01:25:54,100
basically, what I would say about that is

1945
01:25:57,100 --> 01:25:59,200
You're going to have to wait and see how we architect.

1946
01:25:59,200 --> 01:25:59,800
The renderer.

1947
01:26:00,600 --> 01:26:02,600
It depends what you mean by swiveled.

1948
01:26:03,000 --> 01:26:06,500
We will probably be doing some things that are not linear layout but

1949
01:26:06,500 --> 01:26:09,400
they may not be swindled in the same way that like a GPU, Swizzles

1950
01:26:09,400 --> 01:26:12,400
them, if that's what you're asking, but that will be largely driven on

1951
01:26:12,400 --> 01:26:14,600
what we find out when we start to do Performance Tuning.

1952
01:26:14,800 --> 01:26:17,500
So I'm not even in a position necessarily to say exactly what it will

1953
01:26:17,500 --> 01:26:18,000
look like.

1954
01:26:25,800 --> 01:26:28,000
In the sound code, we were trying to decrease lag.

1955
01:26:28,000 --> 01:26:30,600
But if we just output sound at the start of the frame, that is one or

1956
01:26:30,600 --> 01:26:32,100
two frames behind the input.

1957
01:26:32,100 --> 01:26:34,500
With the player really noticed a lack of one or two frames.

1958
01:26:34,900 --> 01:26:36,400
Probably not for our game.

1959
01:26:36,400 --> 01:26:42,400
No, I just want to work on a relatively complex, sound Loop.

1960
01:26:42,400 --> 01:26:45,000
That would be something you would do if you were trying to drive the

1961
01:26:45,000 --> 01:26:50,000
leg down, because it's just an interesting thing to do on the street

1962
01:26:50,000 --> 01:26:53,000
and some people out there may want to learn how to do that because

1963
01:26:53,000 --> 01:26:54,800
they may want to make, like, Rhythm games and stuff.

1964
01:26:54,800 --> 01:26:55,000
Where it's

1965
01:26:55,100 --> 01:26:56,300
Important what that lag is.

1966
01:26:56,500 --> 01:26:59,100
So I kind of wanted to go in that direction so that when we try to do

1967
01:26:59,100 --> 01:26:59,800
the shipping version,

1968
01:27:00,000 --> 01:27:01,200
Went through to sound layer.

1969
01:27:01,800 --> 01:27:03,700
We can actually spend a week or two.

1970
01:27:03,700 --> 01:27:08,300
However, long it takes actually getting that sound code proper and

1971
01:27:08,300 --> 01:27:11,200
actually getting the leg down to be as low as we possibly can.

1972
01:27:11,300 --> 01:27:12,400
So I'm interested in that.

1973
01:27:12,400 --> 01:27:13,700
I like that personally.

1974
01:27:13,700 --> 01:27:17,400
Also, I like the idea of exploring that so while we haven't gotten

1975
01:27:17,400 --> 01:27:18,200
there yet.

1976
01:27:18,200 --> 01:27:21,200
I think it's better to go that direction and see what's going on

1977
01:27:21,600 --> 01:27:24,900
rather than just doing the obvious thing of just writing with a ton of

1978
01:27:24,900 --> 01:27:26,000
lag and not caring.

1979
01:27:30,100 --> 01:27:32,500
How different would this initial rendering code be If This Were

1980
01:27:32,500 --> 01:27:33,400
vector-based?

1981
01:27:36,400 --> 01:27:39,800
Well, I mean, I guess I'm not sure what you mean by initial rendering

1982
01:27:39,800 --> 01:27:43,800
code, since all we're trying to do now is put debug rectangles on a

1983
01:27:43,800 --> 01:27:47,000
screen so we can start to get the game up and running and see what we

1984
01:27:47,000 --> 01:27:50,100
want from our renderer in terms of like services and architecture and

1985
01:27:50,100 --> 01:27:50,600
stuff.

1986
01:27:51,500 --> 01:27:52,900
The initial rendering code.

1987
01:27:53,100 --> 01:27:54,300
Probably doesn't matter at all.

1988
01:27:54,300 --> 01:27:55,600
Whether Vector, whatever.

1989
01:27:55,600 --> 01:27:58,600
If you're talking about what the actual eventual rendering code will

1990
01:27:58,600 --> 01:28:02,800
look, like, then obviously Vector based rendering is very different

1991
01:28:02,800 --> 01:28:04,500
from blind based rendering.

1992
01:28:04,500 --> 01:28:05,800
So it would look

1993
01:28:06,400 --> 01:28:07,800
Very very, very different.

1994
01:28:12,800 --> 01:28:14,500
Let's see.

1995
01:28:15,700 --> 01:28:18,100
Todd Punk says you cut me deep.

1996
01:28:18,600 --> 01:28:19,500
What did I do?

1997
01:28:20,000 --> 01:28:22,300
I don't even think I would, I didn't even see it.

1998
01:28:22,400 --> 01:28:23,700
I wasn't even answering questions from you.

1999
01:28:23,700 --> 01:28:24,700
How did I cut someone deep?

2000
01:28:24,700 --> 01:28:25,400
That's no good.

2001
01:28:25,500 --> 01:28:26,800
I didn't mean to Todd Punk.

2002
01:28:29,500 --> 01:28:30,400
Let's see.

2003
01:28:34,100 --> 01:28:36,900
Could you explain a little more about the drawback advantages of poop?

2004
01:28:37,000 --> 01:28:39,100
I don't mean hoop as in the dogmatic C++ way.

2005
01:28:39,100 --> 01:28:40,500
I just mean using Loop abstractions.

2006
01:28:40,500 --> 01:28:41,100
When useful.

2007
01:28:41,400 --> 01:28:45,300
I don't think there's anything wrong with using abstractions.

2008
01:28:45,300 --> 01:28:50,400
When they are useful, the thing more, there is a I might disagree with

2009
01:28:50,400 --> 01:28:52,600
people about when I think they're actually useful.

2010
01:28:52,800 --> 01:28:55,400
And that's an argument we could have on any specific thing, but it's

2011
01:28:55,400 --> 01:28:56,700
not really a general argument.

2012
01:28:58,700 --> 01:29:02,900
The general argument that I have with Loop is actually about poop

2013
01:29:02,900 --> 01:29:03,400
itself.

2014
01:29:03,900 --> 01:29:06,800
Literally not about objects and I've talked about this a little in the

2015
01:29:06,800 --> 01:29:07,300
past.

2016
01:29:07,600 --> 01:29:08,100
Basically.

2017
01:29:08,100 --> 01:29:13,700
I don't have a problem with the concept of an object, really, because

2018
01:29:13,700 --> 01:29:16,600
that's very nebulous and we could Define it to mean all sorts of

2019
01:29:16,600 --> 01:29:19,000
things and they're not all bad.

2020
01:29:20,000 --> 01:29:23,100
What I have a problem with is literally oop object-oriented

2021
01:29:24,200 --> 01:29:28,800
programming because that by definition by its very name means

2022
01:29:28,800 --> 01:29:33,700
orienting, the way that you program around objects and that to me is a

2023
01:29:33,700 --> 01:29:35,200
very bad methodology.

2024
01:29:35,200 --> 01:29:38,200
And the reason is because objects are not relevant to how your code

2025
01:29:38,200 --> 01:29:39,400
Works objects.

2026
01:29:39,500 --> 01:29:43,800
Like the way that your data is actually laid out is usually more about

2027
01:29:43,800 --> 01:29:47,100
performance than it is about the structure of your code.

2028
01:29:47,400 --> 01:29:49,700
Algorithms are what determine the structure of your code.

2029
01:29:49,800 --> 01:29:50,200
Code.

2030
01:29:50,800 --> 01:29:55,700
So if anything you want to be algorithmically or anti /, you want aop,

2031
01:29:55,700 --> 01:29:59,200
if you will, and I don't say algorithm oriented programming because

2032
01:29:59,200 --> 01:29:59,800
it's a little net.

2033
01:30:00,000 --> 01:30:00,700
What that would mean?

2034
01:30:00,700 --> 01:30:03,200
I say compression oriented programming because I like to think about

2035
01:30:03,200 --> 01:30:06,800
it, in terms of you have code that you wrote explicitly and then you

2036
01:30:06,800 --> 01:30:10,400
kind of like compress it down into something by pulling out parts that

2037
01:30:10,400 --> 01:30:13,100
can be, you know, that can be reused.

2038
01:30:13,200 --> 01:30:17,100
And so on much like a dictionary coder encoder would do.

2039
01:30:18,400 --> 01:30:23,400
And so I think it's very important to not think about code from the

2040
01:30:23,400 --> 01:30:27,400
object perspective and it's less about the code that you end up with.

2041
01:30:28,200 --> 01:30:32,100
And more about the process of getting there because I think going into

2042
01:30:32,100 --> 01:30:35,100
code with an object-oriented mindset leads to bad code.

2043
01:30:35,400 --> 01:30:38,100
Whereas going in with compression oriented mindset leads to good code,

2044
01:30:38,200 --> 01:30:42,000
and it's not about whether there are objects in the system.

2045
01:30:42,100 --> 01:30:43,000
When it's done.

2046
01:30:43,200 --> 01:30:46,600
It's about how you arrived at them, that determines the quality of the

2047
01:30:46,600 --> 01:30:47,700
end product, in my opinion.

2048
01:30:59,300 --> 01:31:01,400
I'm having a really hard time understanding parts of the sound code

2049
01:31:01,400 --> 01:31:02,600
from earlier in the Stream.

2050
01:31:02,700 --> 01:31:03,700
Are we scrapping that?

2051
01:31:03,700 --> 01:31:06,600
And can I wait until we rewrite it to get an explanation of how

2052
01:31:06,600 --> 01:31:08,300
latency works with sound buffers?

2053
01:31:08,700 --> 01:31:09,000
Yeah.

2054
01:31:09,000 --> 01:31:12,200
I mean, we'll basically if there's anything in the platform layer

2055
01:31:12,200 --> 01:31:16,200
right now, that's too confusing or you don't like it or whatever.

2056
01:31:16,200 --> 01:31:18,900
I wouldn't worry too much about it because I would we're not going to

2057
01:31:18,900 --> 01:31:22,500
scrap anything per se, but we're going to do a pass on it where we're

2058
01:31:22,500 --> 01:31:25,900
actually trying to make a shipping quality platform layer where we'll

2059
01:31:25,900 --> 01:31:28,400
go through everything in excruciating detail.

2060
01:31:28,800 --> 01:31:32,400
And so, you know, you really don't have to care too much about it.

2061
01:31:33,100 --> 01:31:34,800
If you don't want to it's really not.

2062
01:31:34,900 --> 01:31:36,300
It's really not a big deal at this point.

2063
01:31:36,300 --> 01:31:39,700
It's just as long as you're comfortable enough with it to like except

2064
01:31:39,700 --> 01:31:41,300
that it's playing some sound or something.

2065
01:31:41,400 --> 01:31:45,100
That's really all you need to be worried about.

2066
01:31:45,200 --> 01:31:47,800
So we'll have plenty of time to really drill down on that stuff.

2067
01:31:47,800 --> 01:31:48,200
Later.

2068
01:31:55,100 --> 01:31:57,500
Did I work on Neverwinter Nights 2?

2069
01:31:58,100 --> 01:31:59,300
What an odd question?

2070
01:32:01,300 --> 01:32:08,100
So, I definitely did not work on Neverwinter Nights 2, but I don't

2071
01:32:08,100 --> 01:32:08,900
know.

2072
01:32:09,000 --> 01:32:11,700
And this list is not all-inclusive.

2073
01:32:12,300 --> 01:32:17,600
So, I guess I'm not, I guess I'm not sure.

2074
01:32:22,000 --> 01:32:23,600
So they did use my code.

2075
01:32:23,600 --> 01:32:28,200
So they licensed my character animation system for Neverwinter Nights

2076
01:32:28,200 --> 01:32:32,300
2, but I didn't work on the game engine or anything, right?

2077
01:32:32,300 --> 01:32:33,900
They just use my character Nation.

2078
01:32:33,900 --> 01:32:35,100
This is the character animation system.

2079
01:32:35,100 --> 01:32:38,500
I wrote, and this is like a partial list of the people who, like, who

2080
01:32:38,500 --> 01:32:41,600
the games that it's in, or whatever, and they're, they're on there.

2081
01:32:41,600 --> 01:32:43,200
So, I guess they used it for something.

2082
01:32:43,200 --> 01:32:43,900
I don't know.

2083
01:32:44,400 --> 01:32:46,700
I don't remember what because I don't even know if I ever got any

2084
01:32:46,700 --> 01:32:48,000
support emails from them.

2085
01:32:48,200 --> 01:32:49,100
I don't recall.

2086
01:32:52,500 --> 01:32:54,000
In the red tail drawing code compiler.

2087
01:32:54,000 --> 01:32:56,600
Optimize the code on the basis of the pixel buffer does not Alias the

2088
01:32:56,600 --> 01:32:57,500
loop counters.

2089
01:32:57,700 --> 01:32:58,600
Or does the compiler?

2090
01:32:58,600 --> 01:32:59,600
Not know this.

2091
01:33:01,600 --> 01:33:04,500
Pixel buffer, Alias Loop counters.

2092
01:33:07,200 --> 01:33:08,000
Hmm.

2093
01:33:10,400 --> 01:33:10,800
Mr.

2094
01:33:10,800 --> 01:33:13,000
Casey does not understand the question.

2095
01:33:13,100 --> 01:33:13,700
So.

2096
01:33:15,800 --> 01:33:16,800
Just so we're clear.

2097
01:33:20,100 --> 01:33:20,800
Aliasing.

2098
01:33:20,800 --> 01:33:24,700
Only happens if the compiler thinks that you could have taken a

2099
01:33:24,700 --> 01:33:30,300
pointer to something that you are writing to with a different pointer.

2100
01:33:30,400 --> 01:33:33,800
And since these are defined entirely within the within the structure,

2101
01:33:34,800 --> 01:33:38,400
everything from basically, there are no mutable variables from here

2102
01:33:38,400 --> 01:33:40,600
that the compiler doesn't know about as far as I know.

2103
01:33:40,700 --> 01:33:44,100
So I don't think there should be any aliasing whatsoever because

2104
01:33:44,100 --> 01:33:47,700
there's only one pointer which is the pixel pointer that it's writing

2105
01:33:47,700 --> 01:33:49,600
to and it sees

2106
01:33:50,000 --> 01:33:52,700
Min y Max X Min, x max X.

2107
01:33:52,700 --> 01:33:53,800
It knows their lifetime.

2108
01:33:53,800 --> 01:33:57,100
They were here and no one could possibly have gotten a pointer to them

2109
01:33:57,100 --> 01:33:58,800
because it never gets past do anything.

2110
01:33:59,100 --> 01:34:02,500
So, I'm pretty sure the compiler would never have any reason to think

2111
01:34:02,500 --> 01:34:06,400
that anything was aliasing in here, but I'm not a compiler vendor.

2112
01:34:06,700 --> 01:34:10,800
So, you know, if you really want to know, compile and release mode and

2113
01:34:10,800 --> 01:34:14,000
see what the compiler generates that's the only answer pretty much any

2114
01:34:14,000 --> 01:34:17,400
time to a question like that is see what the compiler generates

2115
01:34:17,400 --> 01:34:19,400
because until you actually look what compiler generates.

2116
01:34:19,800 --> 01:34:22,300
Even if you're pretty sure you could be wrong because there could be a

2117
01:34:22,300 --> 01:34:24,700
bug in the compiler for all you know, right like even compiler should

2118
01:34:24,700 --> 01:34:28,200
have known it, may not so, you know keep that in mind.

2119
01:34:31,700 --> 01:34:33,600
Will it be doing anti-aliasing in the renderer?

2120
01:34:33,600 --> 01:34:34,200
Yes.

2121
01:34:37,300 --> 01:34:40,500
If you start going bald, when you cut off all your hair or comb over,

2122
01:34:41,400 --> 01:34:41,900
I don't know.

2123
01:34:41,900 --> 01:34:42,600
That's a good question.

2124
01:34:42,600 --> 01:34:46,000
I am kind of you can see I have a kind of a balding spot in the back.

2125
01:34:47,400 --> 01:34:47,700
I don't know.

2126
01:34:47,700 --> 01:34:49,400
I haven't really gotten to Bald yet.

2127
01:34:49,400 --> 01:34:51,200
So I'm not sure which would be more appropriate.

2128
01:34:51,200 --> 01:34:52,200
I have to try it and see.

2129
01:34:56,300 --> 01:34:58,800
Is it possible to explain the sub-pixel smoothness thing?

2130
01:34:58,800 --> 01:34:59,900
You mentioned with an example?

2131
01:34:59,900 --> 01:35:02,300
From example, video from other games?

2132
01:35:02,400 --> 01:35:07,000
Yes, but I don't probably know exactly which ones would be the right

2133
01:35:07,000 --> 01:35:08,000
ones at the moment.

2134
01:35:08,000 --> 01:35:09,800
I have to go find some videos.

2135
01:35:12,000 --> 01:35:13,400
Is this going to be similar to RuneScape?

2136
01:35:13,400 --> 01:35:14,900
I've never played RuneScape.

2137
01:35:16,500 --> 01:35:18,900
What do you suggest to develop games on mobile environment?

2138
01:35:20,100 --> 01:35:23,100
Well, that's kind of an open-ended question.

2139
01:35:23,100 --> 01:35:26,500
So maybe pre stream asked during a pre stream for that.

2140
01:35:28,600 --> 01:35:29,500
Let's see.

2141
01:35:31,100 --> 01:35:33,700
Can we use DirectX 11 while we work on rendering the windows layer?

2142
01:35:34,100 --> 01:35:35,500
I don't know what we'll use.

2143
01:35:35,500 --> 01:35:37,100
We probably wouldn't use DirectX 11.

2144
01:35:37,100 --> 01:35:38,200
If you're going to use DirectX.

2145
01:35:38,200 --> 01:35:43,300
We'd use 12 because otherwise, if we're going to use 11, we just use

2146
01:35:43,300 --> 01:35:43,900
opengl.

2147
01:35:46,900 --> 01:35:48,700
Will you add Pokemons to your game?

2148
01:35:48,700 --> 01:35:49,400
No, there.

2149
01:35:49,600 --> 01:35:50,600
We don't have a license.

2150
01:35:57,500 --> 01:35:58,800
Disparaging Python program.

2151
01:35:58,800 --> 01:35:59,600
Oh Todd.

2152
01:36:00,100 --> 01:36:02,100
I was not disparaging python programmers.

2153
01:36:02,100 --> 01:36:04,700
I'm sorry when I said crazy python programmer.

2154
01:36:04,900 --> 01:36:08,100
I did not mean that the python programmers, were crazy for programming

2155
01:36:08,100 --> 01:36:08,800
in Python.

2156
01:36:08,900 --> 01:36:11,200
I just meant that python is kind of crazy.

2157
01:36:11,400 --> 01:36:13,700
So when you're programming in it, it does kind of, you know, you're

2158
01:36:13,700 --> 01:36:15,500
doing kind of wild and crazy stuff, right?

2159
01:36:15,500 --> 01:36:18,300
It's like, you know, it's wild in there.

2160
01:36:18,800 --> 01:36:21,300
So yeah, I don't think people are crazy for programming in Python.

2161
01:36:21,400 --> 01:36:23,900
I think pythons a totally reasonable language from what I've seen.

2162
01:36:24,600 --> 01:36:26,200
It's not, it's a little too.

2163
01:36:26,200 --> 01:36:29,200
It doesn't quite give you the CPU control that I want in a language.

2164
01:36:29,200 --> 01:36:29,900
So it's not the kind.

2165
01:36:30,000 --> 01:36:33,600
Language I tend to gravitate towards but you know, I mean, I don't

2166
01:36:33,600 --> 01:36:34,500
have a problem with python.

2167
01:36:34,500 --> 01:36:34,800
I'm sorry.

2168
01:36:34,800 --> 01:36:36,300
If I do that impression, that's not true.

2169
01:36:36,300 --> 01:36:38,400
I don't have a problem with python or python programmers for that

2170
01:36:38,400 --> 01:36:38,700
matter.

2171
01:36:39,900 --> 01:36:41,000
This game featured dinosaurs.

2172
01:36:41,000 --> 01:36:41,700
Who knows?

2173
01:36:41,800 --> 01:36:42,800
Let's see when we get there.

2174
01:36:44,200 --> 01:36:45,100
How can I get a job working?

2175
01:36:45,100 --> 01:36:47,000
For some reason, I like you pre stream question.

2176
01:36:47,000 --> 01:36:47,400
Please.

2177
01:36:47,400 --> 01:36:50,000
Ask those in the pre stream come to a stream early and ask those

2178
01:36:50,000 --> 01:36:50,300
questions.

2179
01:36:50,300 --> 01:36:51,300
I'm happy to answer them.

2180
01:36:51,700 --> 01:36:52,400
I gotta go soon.

2181
01:36:52,400 --> 01:36:53,600
So I got a blast through the rest of these.

2182
01:36:54,200 --> 01:36:55,600
Well, that sharks with laser is on their heads.

2183
01:36:55,600 --> 01:36:57,200
Well, it certainly seems compelling.

2184
01:36:57,300 --> 01:36:59,600
I don't know what to see rideable animals.

2185
01:36:59,700 --> 01:37:00,500
I don't know about that.

2186
01:37:02,700 --> 01:37:05,200
How often do technical limitations and pack game design in your

2187
01:37:05,200 --> 01:37:05,900
experience?

2188
01:37:07,900 --> 01:37:09,200
It depends on the game.

2189
01:37:09,200 --> 01:37:13,100
And the Technologies, obviously, sometimes quite a bit, like you can

2190
01:37:13,100 --> 01:37:14,600
imagine games that were based around physics.

2191
01:37:14,600 --> 01:37:15,200
Sometimes affect.

2192
01:37:15,200 --> 01:37:20,000
The limitations, can really have a big impact there because physics is

2193
01:37:20,600 --> 01:37:24,100
sort of difficult to manage technology that often times isn't very

2194
01:37:24,100 --> 01:37:25,100
stable and so on.

2195
01:37:25,600 --> 01:37:27,900
So there's definitely times that that happens also rendering

2196
01:37:27,900 --> 01:37:29,500
limitations can definitely affect the game design.

2197
01:37:29,500 --> 01:37:31,000
So games where you're trying to do, like,

2198
01:37:31,500 --> 01:37:34,700
Aliens of guys fighting in a giant, you know, battle kind of

2199
01:37:34,700 --> 01:37:35,300
situation.

2200
01:37:35,300 --> 01:37:36,300
You can imagine things like this.

2201
01:37:36,300 --> 01:37:39,800
So there's there are times when it matters but on the whole I think

2202
01:37:39,800 --> 01:37:43,000
most of the time good game designers can work within the limitations

2203
01:37:43,000 --> 01:37:44,900
pretty well and bad thing.

2204
01:37:44,900 --> 01:37:47,600
Bad game designers can't I suppose but so I don't know.

2205
01:37:47,800 --> 01:37:48,800
I'm not a game designer.

2206
01:37:48,800 --> 01:37:51,500
So maybe you should ask John blow that question.

2207
01:37:51,500 --> 01:37:53,500
I guess is what I would say because he's the kind of guy who would

2208
01:37:53,500 --> 01:37:56,800
really have a very smart game design oriented answer for that.

2209
01:37:56,900 --> 01:38:00,700
Whereas I'm just a programmer and, you know, I don't, I don't want to

2210
01:38:00,700 --> 01:38:01,200
speak for design.

2211
01:38:01,400 --> 01:38:02,000
Hers on that.

2212
01:38:04,700 --> 01:38:06,100
We use member functions.

2213
01:38:06,100 --> 01:38:06,800
Probably not.

2214
01:38:06,800 --> 01:38:07,200
No.

2215
01:38:07,500 --> 01:38:07,900
Certainly.

2216
01:38:07,900 --> 01:38:08,500
If we did use them.

2217
01:38:08,500 --> 01:38:12,100
They'd be in a very limited case for doing a very specific type of

2218
01:38:12,100 --> 01:38:15,000
thing, which we'd see later, but probably not much of a function snow.

2219
01:38:16,900 --> 01:38:17,300
Let's see.

2220
01:38:17,300 --> 01:38:19,200
Well, the al-sham replace Navi and handmade hero.

2221
01:38:19,200 --> 01:38:19,600
I don't know.

2222
01:38:19,600 --> 01:38:21,800
I'd have to license the towel of Shame for the company.

2223
01:38:21,800 --> 01:38:23,500
I guess we could do something that's similar to the our shame, but we

2224
01:38:23,500 --> 01:38:26,900
can't literally put him in the game because he's, you know, he's a,

2225
01:38:26,900 --> 01:38:28,800
he's somebody's copyrighted work.

2226
01:38:32,500 --> 01:38:33,400
All right.

2227
01:38:34,200 --> 01:38:35,100
Let's see.

2228
01:38:35,100 --> 01:38:36,600
I think I going to have to end it.

2229
01:38:36,600 --> 01:38:39,000
There can show me example of how you were using the game memory.

2230
01:38:39,000 --> 01:38:39,600
Block?

2231
01:38:40,100 --> 01:38:40,400
Yes.

2232
01:38:40,400 --> 01:38:41,600
So guitar freak.

2233
01:38:41,600 --> 01:38:43,800
We will be using the game memory block very soon.

2234
01:38:43,800 --> 01:38:46,100
Just hold your horses a little bit.

2235
01:38:46,200 --> 01:38:51,100
Don't don't really hold your horses justjust rein them in slightly

2236
01:38:51,100 --> 01:38:53,500
because they will be off and running within two days.

2237
01:38:53,500 --> 01:38:54,200
Let's say so.

2238
01:38:54,200 --> 01:38:57,400
So keep the horses like, ready out of the barn, but hold them a little

2239
01:38:57,400 --> 01:38:57,900
bit.

2240
01:38:57,900 --> 01:38:59,800
And then, you know, by the end of this week, for sure.

2241
01:39:00,000 --> 01:39:01,000
Using that memory block.

2242
01:39:03,900 --> 01:39:04,700
Let's see here.

2243
01:39:08,300 --> 01:39:09,600
Didn't mean to hit, hold that down.

2244
01:39:10,400 --> 01:39:13,000
Maybe I'm missing something, but what if both men X and Max are lower

2245
01:39:13,000 --> 01:39:18,900
than zero, so the idea is, if Min X is less than 0, it'll get it'll

2246
01:39:18,900 --> 01:39:21,000
get moved to 0, right?

2247
01:39:21,200 --> 01:39:25,400
If Max X is also less than zero, then when we come in here and it does

2248
01:39:25,400 --> 01:39:29,500
x equals 0, x is less than some number less than 0.

2249
01:39:29,500 --> 01:39:30,800
It will never enter the loop.

2250
01:39:31,100 --> 01:39:32,900
So it'll never do a right.

2251
01:39:32,900 --> 01:39:34,100
That's how that works.

2252
01:39:34,100 --> 01:39:34,900
If that makes sense.

2253
01:39:35,300 --> 01:39:37,100
So if you look here, so if you want to see,

2254
01:39:38,000 --> 01:39:41,400
That an action, we should probably test that case.

2255
01:39:41,400 --> 01:39:44,800
Anyway, just in case there's something broken in it, but there it is

2256
01:39:45,000 --> 01:39:46,700
and you can see that it doesn't crash.

2257
01:39:47,000 --> 01:39:48,600
And the reason for that was just what I said.

2258
01:39:48,600 --> 01:39:52,100
It's like basically that you're protected because you only have to

2259
01:39:52,100 --> 01:39:57,100
clip one of the values and then it will automatically this less than

2260
01:39:57,100 --> 01:39:59,900
is essentially the clip for the other value that make sense.

2261
01:40:06,000 --> 01:40:09,500
If, if I was somehow able to acquire license for Pokemon to use, would

2262
01:40:09,500 --> 01:40:10,400
you use it in this game?

2263
01:40:10,600 --> 01:40:11,600
No, I'm sorry.

2264
01:40:12,400 --> 01:40:13,700
I would love to do something like that.

2265
01:40:13,700 --> 01:40:16,200
But the reason that I can't do that is because I want this entire game

2266
01:40:16,200 --> 01:40:18,300
to be released into the public domain someday.

2267
01:40:19,400 --> 01:40:23,400
And so everything in it has to be owned by me 100% so that it can all

2268
01:40:23,400 --> 01:40:24,100
be released.

2269
01:40:24,600 --> 01:40:26,200
So yeah, sorry.

2270
01:40:26,500 --> 01:40:28,000
Otherwise, I would love to do that.

2271
01:40:28,800 --> 01:40:30,700
Will the game have a moral social message?

2272
01:40:30,700 --> 01:40:33,300
Do you have someone writing for, you know, it will not have a moral

2273
01:40:33,300 --> 01:40:34,100
social message.

2274
01:40:34,200 --> 01:40:38,500
This is strictly about game development, not about game design or

2275
01:40:38,500 --> 01:40:39,200
narrative.

2276
01:40:39,400 --> 01:40:43,000
And so we are strictly based in the game design on stuff that we want

2277
01:40:43,000 --> 01:40:45,000
to program and that will be interesting to program.

2278
01:40:45,400 --> 01:40:46,300
So yeah.

2279
01:40:46,500 --> 01:40:47,000
All right.

2280
01:40:47,000 --> 01:40:48,100
I really have to go.

2281
01:40:48,600 --> 01:40:53,200
So thank you very much everyone for joining me on this edition of

2282
01:40:53,200 --> 01:40:53,900
handmade hero.

2283
01:40:53,900 --> 01:40:56,700
It has been a pleasure programming with you as always.

2284
01:40:58,600 --> 01:41:02,900
If you would like to get access to the source code, you can pre-order

2285
01:41:02,900 --> 01:41:06,400
the game on handmade hero dot-org and you will have full access to the

2286
01:41:06,400 --> 01:41:09,300
source code every night when I upload it, and that allows you to

2287
01:41:09,300 --> 01:41:10,300
follow at home pretty easily.

2288
01:41:10,300 --> 01:41:12,800
Also, if you want Sports video series, there is a patreon.

2289
01:41:12,800 --> 01:41:14,300
You can sign up for by pushing the little handy.

2290
01:41:14,300 --> 01:41:15,300
Dandy patreon button.

2291
01:41:15,600 --> 01:41:20,200
If you would like to talk about the game, the game, or the code, or

2292
01:41:20,200 --> 01:41:22,500
ask questions, you could do that on this news and forums link.

2293
01:41:22,500 --> 01:41:25,500
It also has a handy dandy episode guide on there that you can go to.

2294
01:41:26,000 --> 01:41:28,400
And it also has ports to other Platforms in the coding resources.

2295
01:41:28,500 --> 01:41:31,800
Section which will allow you to do things like run on Mac or Linux.

2296
01:41:31,800 --> 01:41:34,000
A lot of people community have done some amazing courting work

2297
01:41:34,100 --> 01:41:37,100
already, even though we haven't gotten there, they have, so definitely

2298
01:41:37,100 --> 01:41:38,000
check that out.

2299
01:41:38,000 --> 01:41:40,500
I have to run, I have an appointment at 10:00.

2300
01:41:41,000 --> 01:41:44,500
So I have to have to make my exit.

2301
01:41:44,500 --> 01:41:47,100
But thank you very much everyone for joining me on this.

2302
01:41:47,100 --> 01:41:49,100
This bright and early handmade hero.

2303
01:41:49,100 --> 01:41:50,100
I will see you tomorrow.

2304
01:41:50,100 --> 01:41:50,700
10:00 a.m.

2305
01:41:50,700 --> 01:41:52,500
Is the time tomorrow, and will be 10 a.m.

2306
01:41:52,600 --> 01:41:53,700
Every morning this week.

2307
01:41:54,100 --> 01:41:56,900
I definitely hope to see everyone there and I'm looking forward to

2308
01:41:56,900 --> 01:41:58,400
kind of making my first tile map tomorrow.

2309
01:41:58,600 --> 01:42:00,400
It's going to be a lot of fun, I think.

2310
01:42:00,400 --> 01:42:01,700
So, please join me.

2311
01:42:02,500 --> 01:42:05,100
And yes, thanks for joining me and happy coding.

