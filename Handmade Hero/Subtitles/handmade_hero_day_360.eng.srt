1
00:00:01,300 --> 00:00:03,600
Hello, everyone, and welcome to handmade hero.

2
00:00:03,600 --> 00:00:06,500
The show we code complete game live on stream.

3
00:00:06,800 --> 00:00:09,200
We are doing some z-buffer work.

4
00:00:10,000 --> 00:00:12,200
I've already explained it all when we started to make the changes for

5
00:00:12,200 --> 00:00:17,000
it and we probably would have been done with the changes this past

6
00:00:17,000 --> 00:00:21,300
weekend, except we took last weekend to do some ketchup streams that

7
00:00:21,300 --> 00:00:22,600
had been scheduled for a while.

8
00:00:23,400 --> 00:00:26,900
One was a mock interview with Sean McGrath that we were supposed to

9
00:00:26,900 --> 00:00:27,000
do.

10
00:00:27,000 --> 00:00:27,900
And we did that.

11
00:00:28,100 --> 00:00:31,000
And the other was a handmade con 2016.

12
00:00:31,200 --> 00:00:33,700
With Charles Bloom and we did that.

13
00:00:33,700 --> 00:00:35,200
Both of those were really cool.

14
00:00:35,200 --> 00:00:37,200
If you haven't checked them out, you should check them out on the

15
00:00:37,200 --> 00:00:40,000
handmade Hero YouTube channel.

16
00:00:41,100 --> 00:00:44,000
But now we are back to programming.

17
00:00:44,000 --> 00:00:47,000
And so let's just go ahead and dive right back into it.

18
00:00:47,000 --> 00:00:48,000
I should open up.

19
00:00:48,600 --> 00:00:49,700
Where's my Milton at?

20
00:00:51,200 --> 00:00:55,600
I should open up my Milton case, we need to draw some things.

21
00:00:57,300 --> 00:01:01,000
Let's go ahead and close that off and

22
00:01:03,400 --> 00:01:07,000
Let us open up our project today is day for 60, so if you're following

23
00:01:07,000 --> 00:01:11,000
along at home, you want to open up day 359 source code and start with

24
00:01:11,000 --> 00:01:11,500
that.

25
00:01:11,800 --> 00:01:13,500
That is where I'm starting with.

26
00:01:14,200 --> 00:01:17,600
So let's go ahead and get the project open and building.

27
00:01:18,000 --> 00:01:20,500
Now, if you remember correctly, since we've switched over to the

28
00:01:20,500 --> 00:01:22,300
z-buffer now we are

29
00:01:23,400 --> 00:01:26,600
In sort of limbo, we are old.

30
00:01:26,600 --> 00:01:28,200
Sorting is not going to work anymore.

31
00:01:29,500 --> 00:01:32,700
And we haven't quite gotten to the point where the z-buffer stuff is

32
00:01:32,700 --> 00:01:33,400
enabled.

33
00:01:33,800 --> 00:01:36,200
So if you run the game, it's just a flash A Thon, right?

34
00:01:36,200 --> 00:01:37,500
Everything's going nuts.

35
00:01:38,200 --> 00:01:40,400
And everything is always in the right place and the game is

36
00:01:40,400 --> 00:01:41,800
functioning as it should.

37
00:01:41,900 --> 00:01:45,000
But the Sorting is completely haywire and that's exactly what we

38
00:01:45,000 --> 00:01:45,800
expect to happen.

39
00:01:45,800 --> 00:01:49,600
So that's not unusual, but it's just worth pointing out that that's

40
00:01:49,600 --> 00:01:50,500
where things are at.

41
00:01:50,500 --> 00:01:54,300
So, obviously, our goal is to return our game to like a stable

42
00:01:55,200 --> 00:01:58,700
appearance, but using the Z buffer instead of

43
00:01:59,100 --> 00:02:01,300
Right, sorting, which is what we were doing before that is now

44
00:02:01,300 --> 00:02:02,000
disabled.

45
00:02:02,800 --> 00:02:08,000
So if we go to render group, remember what we were sort of doing is

46
00:02:08,000 --> 00:02:12,700
slowly sort of moving the projection operations that we had here and

47
00:02:12,700 --> 00:02:14,400
get render entity basis fee.

48
00:02:14,900 --> 00:02:19,000
And we were slowly moving them over into opengl and we already have

49
00:02:19,000 --> 00:02:20,500
done a little bit of that.

50
00:02:22,100 --> 00:02:22,800
Work.

51
00:02:22,800 --> 00:02:25,300
So let me, let me grab that here.

52
00:02:26,100 --> 00:02:26,700
Here you go.

53
00:02:27,400 --> 00:02:30,800
We already have done a little bit of that work because we had this

54
00:02:30,800 --> 00:02:32,800
sort of notion of these.

55
00:02:32,900 --> 00:02:36,100
This opengl screen space here that we were using.

56
00:02:39,100 --> 00:02:41,900
And before we had a bunch of stuff in here, that wasn't really

57
00:02:42,300 --> 00:02:47,700
relevant that we could basically fold into the opengl screen, space

58
00:02:47,700 --> 00:02:48,300
operation.

59
00:02:50,100 --> 00:02:55,200
And what we were doing prior to our changes in open, just the screen

60
00:02:55,200 --> 00:02:59,500
space to sort of undoing stuff that we had done in get render entity

61
00:02:59,500 --> 00:02:59,800
basis.

62
00:03:01,100 --> 00:03:03,500
And in some sense this is work that we probably should have done

63
00:03:03,500 --> 00:03:06,600
anyway because it makes more sense to have this stuff in the actual

64
00:03:06,600 --> 00:03:10,500
render layer than it does to have it in the code that just pushes

65
00:03:10,500 --> 00:03:11,900
things on to the render stack.

66
00:03:12,600 --> 00:03:16,500
Probably, you know, it's it's six of one half-dozen the other but it

67
00:03:16,500 --> 00:03:19,200
just makes more sense to have it that way because it gives you more

68
00:03:19,200 --> 00:03:20,600
flexibility in the render back end.

69
00:03:20,600 --> 00:03:23,200
It's a little bit more bookkeeping but and what kind of see that

70
00:03:23,200 --> 00:03:25,800
happen a little bit later on, but in general, like a kind of it's nice

71
00:03:25,800 --> 00:03:28,500
to kind of move the stuff over because that way the renderer back-end

72
00:03:28,500 --> 00:03:29,900
can use the

73
00:03:30,000 --> 00:03:33,400
Full horsepower of whatever it is operating with.

74
00:03:34,200 --> 00:03:36,800
So in the case where you have a software back end, what we doesn't

75
00:03:36,800 --> 00:03:40,400
matter because software has to do the transforms like it would have in

76
00:03:40,400 --> 00:03:40,900
either place.

77
00:03:40,900 --> 00:03:43,800
But when it's using a hardware back end, you can offload that work

78
00:03:43,800 --> 00:03:47,000
onto the GPU which is in a game like this exactly what you want to do.

79
00:03:47,300 --> 00:03:50,500
Since, you know, you have a lot more GPU power than you need for the

80
00:03:50,500 --> 00:03:51,700
typical 2-D game.

81
00:03:51,700 --> 00:03:52,600
These days, right?

82
00:03:52,600 --> 00:03:57,400
Gpus are set up to run something like Battlefield 1.

83
00:03:57,500 --> 00:03:59,900
And so when you're throwing something like handmade,

84
00:04:00,100 --> 00:04:00,500
About them.

85
00:04:00,600 --> 00:04:02,200
You know, they have more than enough horsepower.

86
00:04:02,200 --> 00:04:04,800
You're not in a situation where you have to be thinking about, should

87
00:04:04,800 --> 00:04:06,900
I try to keep some of the work on the CPU?

88
00:04:06,900 --> 00:04:10,400
So that I, you know, don't use up more GPU, resources, that I need for

89
00:04:10,400 --> 00:04:11,500
some other thing, right?

90
00:04:12,600 --> 00:04:15,800
So just being aware of that, it's like good to kind of have it so that

91
00:04:15,800 --> 00:04:19,100
the render layer can have that ability to offload work to the GPU

92
00:04:19,100 --> 00:04:20,800
because we know we've got the horsepower there.

93
00:04:20,800 --> 00:04:22,600
So the more stuff we can push over there.

94
00:04:23,200 --> 00:04:25,800
The more CPU, we free up for doing stuff like gameplay.

95
00:04:25,800 --> 00:04:29,800
And in this case, we know pretty much that we're not going to stress

96
00:04:29,800 --> 00:04:29,800
out.

97
00:04:29,900 --> 00:04:34,700
Out a GPU with something like handmade hero because we're not trying

98
00:04:34,700 --> 00:04:37,500
to reduce, like Photo realistic 3D Graphics or something like that.

99
00:04:37,500 --> 00:04:40,400
Where, you know, you might start to get concerned and need to do

100
00:04:40,400 --> 00:04:42,900
things on the CPU side, for whatever reasons.

101
00:04:43,200 --> 00:04:46,700
Alright, so here we are, get render entity basis p.

102
00:04:46,700 --> 00:04:50,400
And what you can see here is we've still got this m 2 pixels concept

103
00:04:50,400 --> 00:04:53,200
going on here and really the m 2 pixels concept.

104
00:04:53,200 --> 00:04:55,300
At this point, I think could probably be retired.

105
00:04:55,500 --> 00:04:58,300
All it really is, is a scaling Factor right now.

106
00:04:58,500 --> 00:04:59,100
That's it.

107
00:05:01,400 --> 00:05:03,800
It doesn't really do anything else at all.

108
00:05:05,800 --> 00:05:11,200
And so if we take a look inside the camera code, right?

109
00:05:11,500 --> 00:05:15,100
And we look at where m 2 pixels is getting set, it's just a scaling

110
00:05:15,100 --> 00:05:16,000
factor for the game.

111
00:05:16,000 --> 00:05:18,800
Now that's all it is because everything has been transformed.

112
00:05:18,800 --> 00:05:22,600
It's in World space now and being operated on that way and we don't

113
00:05:22,600 --> 00:05:26,300
really need that m, 2 pixels transform for anything in particular,

114
00:05:26,500 --> 00:05:27,000
right?

115
00:05:28,800 --> 00:05:33,100
It's just sort of an arbitrary idea of how we want to scale the game,

116
00:05:33,100 --> 00:05:35,200
but we can just set the cameras.

117
00:05:35,600 --> 00:05:37,900
To be greater or less than based on that.

118
00:05:38,400 --> 00:05:41,500
And it doesn't really matter in one way or the other, because it's

119
00:05:41,500 --> 00:05:43,600
just an extra multiplicative Factor, right?

120
00:05:43,600 --> 00:05:47,200
It's just something that cancels out the z a little bit, so we don't

121
00:05:47,200 --> 00:05:50,000
really need that factor for anything in particular anymore.

122
00:05:50,200 --> 00:05:52,400
And we could just decide to get rid of it, right?

123
00:05:52,400 --> 00:05:55,000
We could just decide that it's Superfluous and we don't actually need

124
00:05:55,000 --> 00:05:55,300
it.

125
00:05:55,700 --> 00:05:58,600
Let me go ahead and grab where we're setting it here.

126
00:06:00,600 --> 00:06:01,400
Let's see.

127
00:06:01,400 --> 00:06:02,800
I guess that's in our camera.

128
00:06:06,700 --> 00:06:07,600
Let's see.

129
00:06:09,100 --> 00:06:09,600
Here we go.

130
00:06:11,500 --> 00:06:13,000
So, when we set this in code, right?

131
00:06:13,000 --> 00:06:14,500
We're setting these m 2 pixels.

132
00:06:15,200 --> 00:06:18,400
Where is our perspective call?

133
00:06:19,200 --> 00:06:19,700
No word.

134
00:06:19,700 --> 00:06:23,500
Is your see where work on that.

135
00:06:26,800 --> 00:06:31,900
It's right here so you can see us doing this.

136
00:06:31,900 --> 00:06:33,700
I think and get standard camera parameters.

137
00:06:33,700 --> 00:06:35,200
Probably, is where we're doing it.

138
00:06:35,200 --> 00:06:39,000
So camera parameters?

139
00:06:41,100 --> 00:06:41,400
Oops.

140
00:06:50,200 --> 00:06:54,400
Why can I not find this get standard camera?

141
00:06:54,700 --> 00:06:55,200
The ramp?

142
00:06:55,300 --> 00:06:56,300
I typed out parameters.

143
00:06:56,800 --> 00:07:02,000
All right, so if we take a look at this function here, you can see us

144
00:07:02,000 --> 00:07:07,200
doing sort of a nominal computation in order to get this scaling

145
00:07:07,200 --> 00:07:08,300
Factor here, right?

146
00:07:08,600 --> 00:07:10,600
So we've got this world scale concept.

147
00:07:10,600 --> 00:07:13,300
If we were to just say that the only camera program was going to be

148
00:07:13,300 --> 00:07:14,500
the focal length, right?

149
00:07:14,800 --> 00:07:17,500
And we just don't scale the world anymore by anything in particular.

150
00:07:17,500 --> 00:07:19,800
We would end up with something that looks like this everywhere.

151
00:07:20,000 --> 00:07:23,300
We were using the world scale, you know, would just go away and

152
00:07:23,300 --> 00:07:25,600
subscribe to take a look at what happens if you remove that.

153
00:07:26,900 --> 00:07:27,600
Entirely.

154
00:07:27,700 --> 00:07:28,200
Right?

155
00:07:28,600 --> 00:07:31,700
So everywhere that we had been passing the world scale that goes away

156
00:07:32,300 --> 00:07:34,200
and we're just left with just the focal length.

157
00:07:35,000 --> 00:07:39,600
And then we take a look at those calls in where we've got orthographic

158
00:07:39,600 --> 00:07:43,400
and and perspective happening.

159
00:07:43,800 --> 00:07:47,600
And if we take a look at the other thing too, that you'll notice is

160
00:07:47,900 --> 00:07:48,700
the only place we use.

161
00:07:48,700 --> 00:07:52,300
Orthographic is for our debug UI, and when we call that, you'll

162
00:07:52,300 --> 00:07:54,900
notice, we don't even use the m, 2 pixels transform because we were

163
00:07:54,900 --> 00:07:56,200
just using screen space there.

164
00:07:56,800 --> 00:07:57,200
Right?

165
00:07:57,800 --> 00:08:02,700
So, if we take a look at what's actually happening there, and we go to

166
00:08:02,700 --> 00:08:03,600
those functions.

167
00:08:05,000 --> 00:08:09,200
And we remove m 2, pixels entirely, so it doesn't need to get past

168
00:08:09,200 --> 00:08:09,700
anymore.

169
00:08:12,400 --> 00:08:16,200
Like so now we just have to remove it from this function.

170
00:08:19,900 --> 00:08:22,100
And and that's about all we should have to do.

171
00:08:22,300 --> 00:08:23,900
So we take a look here.

172
00:08:23,900 --> 00:08:27,500
We are multiplying at this was just previously only ever a one anyway.

173
00:08:28,200 --> 00:08:31,400
So there was no actual operation of the m 2 pixels there.

174
00:08:31,600 --> 00:08:37,000
Here it would be would get rid of it as well and then let's see where

175
00:08:37,000 --> 00:08:37,700
else we've got it.

176
00:08:37,700 --> 00:08:38,400
Here it is.

177
00:08:39,400 --> 00:08:40,900
So that just goes away.

178
00:08:42,000 --> 00:08:42,299
Same.

179
00:08:42,299 --> 00:08:43,900
If this is the unprojected here.

180
00:08:43,900 --> 00:08:46,500
So obviously anything that we were doing in the projection had to be

181
00:08:46,500 --> 00:08:48,500
unprotected here, we've gotten rid of it.

182
00:08:48,500 --> 00:08:50,900
So now we don't need to do that anymore.

183
00:08:57,100 --> 00:08:59,800
Are we using monitor half dim in meters for any?

184
00:09:00,000 --> 00:09:01,000
Thing either.

185
00:09:04,700 --> 00:09:05,300
See here.

186
00:09:08,400 --> 00:09:09,000
M.

187
00:09:10,800 --> 00:09:14,000
Just curious where that's being used at the moment.

188
00:09:22,800 --> 00:09:27,900
so it's being used here where we want to do, our fit distance to have

189
00:09:27,900 --> 00:09:31,400
to write and

190
00:09:33,900 --> 00:09:36,000
Get camera rectangle at distance, right?

191
00:09:36,400 --> 00:09:40,400
So basically, we're using that monitor half-demon M.

192
00:09:40,500 --> 00:09:44,500
We're using that because we need to know how big the screen is, right?

193
00:09:45,800 --> 00:09:50,200
And I feel like if we could rewrite, these two routines to be

194
00:09:50,200 --> 00:09:53,900
agnostic, and just use the transform that we know we're doing with the

195
00:09:53,900 --> 00:09:57,200
screen area, so I think we could get rid of this as well.

196
00:09:57,500 --> 00:09:58,200
So

197
00:10:04,200 --> 00:10:07,900
Because that's just going to be a function, the pixels to meters.

198
00:10:08,200 --> 00:10:10,000
We should be able to figure out how to do that.

199
00:10:10,000 --> 00:10:13,600
Just from using our transform alone, using the focal length and so on

200
00:10:18,400 --> 00:10:22,500
Isn't this focal length supposed to be right if this focal length it

201
00:10:22,500 --> 00:10:25,000
does get passed it in the perspective but not in this one.

202
00:10:25,600 --> 00:10:28,800
So in the orthographic case we can do this trivially because we

203
00:10:28,800 --> 00:10:30,000
basically know.

204
00:10:30,400 --> 00:10:34,000
Oops, we basically know that this is the size of the screen.

205
00:10:34,000 --> 00:10:35,200
Always right?

206
00:10:35,500 --> 00:10:40,300
The size of the screen is always going to be the pixel size because

207
00:10:40,300 --> 00:10:46,200
the orthographic operation doesn't actually change this at.

208
00:10:46,200 --> 00:10:48,000
All right, the, the pixels,

209
00:10:48,200 --> 00:10:50,000
M is not relevant here at all.

210
00:10:50,000 --> 00:10:50,400
Right.

211
00:10:50,600 --> 00:10:55,200
So you know monitor half dim in meters and the screen center are the

212
00:10:55,200 --> 00:10:57,600
exact same thing in this case, right?

213
00:10:57,600 --> 00:11:01,800
Because we just have half the screen length in pixels is going to be

214
00:11:01,800 --> 00:11:02,800
half the dimension at.

215
00:11:02,800 --> 00:11:03,800
That's, there's no difference there.

216
00:11:03,800 --> 00:11:07,400
We don't have to convert anything because pixels are the actual unit

217
00:11:07,400 --> 00:11:08,400
at that point.

218
00:11:08,600 --> 00:11:09,500
So we're good to go.

219
00:11:09,700 --> 00:11:12,800
So, the only thing that's a little confusing is what we do Under the

220
00:11:12,800 --> 00:11:16,900
perspective, transform in terms of doing pixels to M.

221
00:11:16,900 --> 00:11:17,500
And again,

222
00:11:18,100 --> 00:11:23,000
right now, the only place we're actually using any of that is when we

223
00:11:23,000 --> 00:11:24,300
look back at,

224
00:11:28,100 --> 00:11:32,600
When we try to do things where we imagine, what is the like in the

225
00:11:32,600 --> 00:11:37,700
world, what is the area that the monitor can basically see right?

226
00:11:37,700 --> 00:11:39,300
And that's what we needed it for.

227
00:11:40,100 --> 00:11:44,700
So, in order to do that we just need some way of getting rid of this

228
00:11:44,700 --> 00:11:46,300
and figuring out in Reverse.

229
00:11:46,500 --> 00:11:48,200
We don't necessary have to do that now, but we'll have to put that on

230
00:11:48,200 --> 00:11:49,100
our to-do list.

231
00:11:49,200 --> 00:11:53,000
I also am interested in if screen center gets used because I don't

232
00:11:53,000 --> 00:11:53,500
think it does.

233
00:11:53,500 --> 00:11:55,100
Either you can kind of see that it really

234
00:11:55,300 --> 00:11:56,300
Doesn't get used much.

235
00:11:56,400 --> 00:11:58,300
It's only for reverse.

236
00:11:58,900 --> 00:11:59,600
It's the same.

237
00:12:00,000 --> 00:12:02,000
The same thing only for reverse projection.

238
00:12:03,500 --> 00:12:05,900
Right, you can kind of see how that works.

239
00:12:07,500 --> 00:12:10,500
So all of this stuff is basically only used for reverse projection now

240
00:12:10,900 --> 00:12:14,000
except for the focal length, which is the part that we're actually

241
00:12:14,000 --> 00:12:16,400
using to generate the perspective transform.

242
00:12:16,400 --> 00:12:20,500
So I think, in terms of what we actually need, we probably can just

243
00:12:20,500 --> 00:12:22,900
reverse everything out with with just storing the screen.

244
00:12:22,900 --> 00:12:25,600
Dimensions, is probably all we need.

245
00:12:26,400 --> 00:12:30,500
So I think what we probably do in here is say, alright for the camera

246
00:12:30,500 --> 00:12:33,300
Transformer, probably not going to store the screen center anymore,

247
00:12:34,100 --> 00:12:36,600
we'll probably just store the screen dimensions.

248
00:12:39,100 --> 00:12:39,400
Right?

249
00:12:39,400 --> 00:12:44,000
And this will be like our new consort of compact definition and we'll

250
00:12:44,000 --> 00:12:45,800
go from there as we go.

251
00:12:45,800 --> 00:12:47,800
So let's just go screen dimensions.

252
00:12:49,300 --> 00:12:51,400
There's the pixel width and pixel height.

253
00:12:51,400 --> 00:12:59,500
Oops, we won't store the half dim anymore and this will be the same in

254
00:12:59,500 --> 00:13:00,100
both.

255
00:13:03,600 --> 00:13:04,900
And this will go away.

256
00:13:08,800 --> 00:13:12,300
And so really, these will become essentially the same and the only

257
00:13:12,300 --> 00:13:15,300
real difference here is whether you set the focal length and the

258
00:13:15,300 --> 00:13:17,400
camera P that's about it.

259
00:13:17,400 --> 00:13:19,600
So, these are basically that now the same routine, we could even

260
00:13:19,600 --> 00:13:20,200
really merge them.

261
00:13:20,200 --> 00:13:25,600
If we wanted to buy, just passing a Boolean in here, for whether, or

262
00:13:25,600 --> 00:13:28,000
not the thing was prospective or not.

263
00:13:28,600 --> 00:13:31,900
So, for example, if we wanted to we could just have something that was

264
00:13:31,900 --> 00:13:32,800
more like this.

265
00:13:42,300 --> 00:13:44,100
And this would just be this routine.

266
00:13:47,200 --> 00:13:48,300
Exactly as it is.

267
00:13:50,200 --> 00:13:54,200
And this would take a superset of the parameters.

268
00:13:57,300 --> 00:13:57,800
Right?

269
00:13:58,400 --> 00:14:00,900
And and that's all we would need to do, right?

270
00:14:01,000 --> 00:14:03,900
So then when we're doing a perspective transform, we just say, oh

271
00:14:03,900 --> 00:14:06,900
please set the camera transform to this vocollect and this camera p

272
00:14:07,100 --> 00:14:09,800
and we'll just pass false because it's not orthographic.

273
00:14:10,500 --> 00:14:14,000
And then in this case, will pass through and will make up the focal

274
00:14:14,000 --> 00:14:16,500
length and the camera P just like we were doing before.

275
00:14:19,100 --> 00:14:21,800
And then we just have one routine groups.

276
00:14:26,100 --> 00:14:29,800
We'll just have one routine that sets that up and either you can use

277
00:14:29,800 --> 00:14:30,800
it in either way.

278
00:14:32,000 --> 00:14:34,600
So then, if we start to look at this, like I said, The only things

279
00:14:34,600 --> 00:14:36,700
that we have trouble with here are unprojected

280
00:14:39,000 --> 00:14:42,500
Which unfortunately is not going to work anymore because you can see

281
00:14:42,500 --> 00:14:46,100
it needs to do some operations that it doesn't have the information.

282
00:14:46,100 --> 00:14:48,600
It needs to now screen center, though.

283
00:14:48,600 --> 00:14:51,300
If we take a look at what's going on here, it really only is looking

284
00:14:51,300 --> 00:14:54,800
at unprojected it's looking at the screen center, there's not a lot

285
00:14:54,800 --> 00:14:57,600
more information that it actually needs here if you look at it.

286
00:14:57,800 --> 00:14:59,900
So actually if we wanted to make unprojected work properly,

287
00:15:00,000 --> 00:15:02,200
We all we really need for screen center.

288
00:15:02,200 --> 00:15:06,400
In this case is to generate that value.

289
00:15:06,500 --> 00:15:13,100
And since we know, since we actually already have that information,

290
00:15:14,000 --> 00:15:14,400
excuse me.

291
00:15:17,500 --> 00:15:20,400
We already know what that what that value actually is we can just

292
00:15:20,400 --> 00:15:21,400
compute it here, right?

293
00:15:21,400 --> 00:15:26,200
The screen center is just half of the screen dimension, right?

294
00:15:26,200 --> 00:15:29,800
Because we know that's what we you know when we're correcting for

295
00:15:29,800 --> 00:15:32,300
window coordinates after the fact we know that we want zero zero in

296
00:15:32,300 --> 00:15:33,200
the center of the screen.

297
00:15:33,200 --> 00:15:35,800
So we just need to go halfway to the width halfway to the height,

298
00:15:36,200 --> 00:15:37,300
there's nothing else to it.

299
00:15:37,500 --> 00:15:40,800
So from here, if we want to, we can just say transfer and scream dim

300
00:15:41,600 --> 00:15:43,900
and produce that value, that solves that problem.

301
00:15:51,500 --> 00:15:52,600
And then everyone's happy.

302
00:15:53,500 --> 00:15:57,300
I thought we also had a problem with the fit render distance, the

303
00:15:57,300 --> 00:16:02,600
monitor half demand M, who is, I don't know who's calling this or

304
00:16:02,600 --> 00:16:04,900
where they're getting that monitor half dim in meters.

305
00:16:04,900 --> 00:16:09,700
So I'm just going to take a look fit camera distance to half, Jim.

306
00:16:11,000 --> 00:16:14,100
It looks like nobody's using this yet, so I guess we're off the hook

307
00:16:14,100 --> 00:16:16,500
for right now, but as soon as someone to use is it, we're going to

308
00:16:16,500 --> 00:16:21,000
have to replace that they'll run into the problem of not.

309
00:16:21,300 --> 00:16:22,800
Having that value basically.

310
00:16:24,200 --> 00:16:26,600
All right, so that's where we're at.

311
00:16:26,600 --> 00:16:29,700
And now when we call it, what we should get is basically exactly the

312
00:16:29,700 --> 00:16:33,600
same game but we're just be at slightly the wrong place, right?

313
00:16:33,600 --> 00:16:34,700
There along zoom level.

314
00:16:34,900 --> 00:16:37,800
And the reason for that is we were applying a world scale before, and

315
00:16:37,800 --> 00:16:39,200
we're not applying a world scale.

316
00:16:39,200 --> 00:16:44,200
Now, now, that's makes it pretty simple for us to deal with,

317
00:16:44,200 --> 00:16:44,800
obviously,

318
00:16:45,700 --> 00:16:49,900
All we have to do is when we're setting up where our camera supposed

319
00:16:49,900 --> 00:16:51,900
to be, we just move the camera closer, right?

320
00:16:51,900 --> 00:16:54,200
There's nothing else in particular that we have to do because it was

321
00:16:54,200 --> 00:16:56,900
just a uniform scale that was happening there.

322
00:16:56,900 --> 00:16:58,500
Really isn't much else to it.

323
00:16:58,500 --> 00:17:05,000
So all I need to do here is when I when I do add room code and we're

324
00:17:05,000 --> 00:17:06,800
creating how far the camera should be.

325
00:17:06,800 --> 00:17:10,900
All we need to do is just say like, okay, you know, we need the camera

326
00:17:10,900 --> 00:17:13,700
to be at a different height, right?

327
00:17:13,700 --> 00:17:15,700
And we don't really know.

328
00:17:15,800 --> 00:17:19,099
Yet because we haven't done the rest of the work.

329
00:17:19,099 --> 00:17:22,200
We don't really have a concrete idea of

330
00:17:23,500 --> 00:17:27,300
Exactly how we want the camera to work yet because we're still doing

331
00:17:27,300 --> 00:17:31,900
our transition to 3D but otherwise, we're pretty much what, you know,

332
00:17:31,900 --> 00:17:33,400
we're at the place where we want to be.

333
00:17:33,400 --> 00:17:41,100
Now, the white rectangle there is I don't remember what that's

334
00:17:41,100 --> 00:17:44,700
supposed to be representing, but it looks like that's in the wrong

335
00:17:44,700 --> 00:17:45,000
place.

336
00:17:45,000 --> 00:17:47,900
So I'm interested to know, we should take a quick look, just to see

337
00:17:47,900 --> 00:17:52,200
where our debug rectangles are supposed to be and just make sure that

338
00:17:52,200 --> 00:17:53,400
those are still working properly.

339
00:17:53,600 --> 00:17:53,800
Early.

340
00:17:54,300 --> 00:17:59,800
So, the white rectangle is this one.

341
00:18:00,000 --> 00:18:00,400
Here.

342
00:18:01,000 --> 00:18:03,500
So, the white rectangle is

343
00:18:07,800 --> 00:18:08,900
World chunk.

344
00:18:15,600 --> 00:18:17,100
I don't really know.

345
00:18:20,000 --> 00:18:21,900
What that's for?

346
00:18:23,800 --> 00:18:25,000
Or why it was there.

347
00:18:25,100 --> 00:18:27,300
I'm gonna get rid of that because I don't really know why we needed

348
00:18:27,300 --> 00:18:28,500
that at the moment.

349
00:18:30,400 --> 00:18:31,200
But I am curious.

350
00:18:31,200 --> 00:18:35,100
So it would be nice if we had

351
00:18:36,800 --> 00:18:43,300
A little more information here, like I don't see our other rectangles

352
00:18:44,200 --> 00:18:45,700
which is not.

353
00:18:47,100 --> 00:18:49,900
I don't know why we don't have our other rectangles here because I

354
00:18:49,900 --> 00:18:52,900
feel like we should see our other rectangles like our screen bounds

355
00:18:52,900 --> 00:18:56,500
rectangle and furthermore I don't know how we're doing our screen

356
00:18:56,500 --> 00:18:59,600
Bounds at the moment, so we should take a look at that as well.

357
00:19:00,300 --> 00:19:01,800
Like, where is our screen bounds?

358
00:19:05,400 --> 00:19:07,300
Get camera rectangle at Target.

359
00:19:07,300 --> 00:19:12,300
So let's take a look at that Target.

360
00:19:12,600 --> 00:19:13,200
There it is.

361
00:19:15,100 --> 00:19:16,300
So let's see.

362
00:19:18,100 --> 00:19:20,800
So monitor half-demon m is still being used.

363
00:19:20,800 --> 00:19:21,700
That's the problem.

364
00:19:24,400 --> 00:19:25,000
There we go.

365
00:19:25,700 --> 00:19:27,400
I knew I was going to say, I knew somebody was.

366
00:19:27,400 --> 00:19:28,500
Yeah, I think we did that search.

367
00:19:28,500 --> 00:19:29,900
I was like, I should have been somebody else.

368
00:19:30,800 --> 00:19:33,800
Okay, so let's take a look here at what we've got.

369
00:19:34,400 --> 00:19:35,600
I don't know why we still have this.

370
00:19:35,600 --> 00:19:37,600
Unprojected old situation going on here.

371
00:19:37,600 --> 00:19:42,200
It looks like we didn't, I guess it's because we wanted one that

372
00:19:42,200 --> 00:19:44,900
didn't have an object transform with it, I suppose.

373
00:19:46,200 --> 00:19:49,500
But anyway, so if we take a look here at our projected X Y in her at a

374
00:19:49,500 --> 00:19:52,200
distance from camera, this thing is using an unpredictable and it's

375
00:19:52,200 --> 00:19:54,100
pushing them monitor have given me.

376
00:19:57,500 --> 00:19:58,100
Down there.

377
00:19:58,900 --> 00:20:02,600
And what you'll notice about that is that's not actually I think this

378
00:20:02,600 --> 00:20:05,800
was just kind of a sort of cheating a little bit and we probably did

379
00:20:05,800 --> 00:20:08,000
it first so we just did it in the minimal way, which is fine.

380
00:20:08,700 --> 00:20:11,900
But if you take a look at like unprojected, for example, in

381
00:20:11,900 --> 00:20:16,200
unprojected, what we have the capability to do here is unprojected

382
00:20:16,200 --> 00:20:17,400
actual screen coordinates.

383
00:20:17,600 --> 00:20:21,300
Since we know the dimensions of the screen, we should be able to get a

384
00:20:21,300 --> 00:20:22,500
camera rectangle.

385
00:20:24,600 --> 00:20:25,100
Out of that.

386
00:20:25,100 --> 00:20:28,400
By just unprojected the two corners of the screen, the minimum corner

387
00:20:28,400 --> 00:20:32,100
of the screen, the maximum cournot screen should unprojected to the

388
00:20:32,100 --> 00:20:34,300
rectangle that we want, right?

389
00:20:34,600 --> 00:20:37,800
So, it should be relatively straightforward for us to do that.

390
00:20:38,400 --> 00:20:41,900
And the other thing that I would say about this, it's a little bit odd

391
00:20:42,000 --> 00:20:46,200
is if we look at what's actually happening here for rec center half

392
00:20:46,200 --> 00:20:53,400
dim again, this is kind of a nonsense number because this is not

393
00:20:53,500 --> 00:20:56,300
It actually placed in the world where the camera is going to be

394
00:20:56,300 --> 00:20:56,600
either.

395
00:20:56,600 --> 00:20:59,800
And so you know, we

396
00:21:00,000 --> 00:21:04,100
part of this is kind of a misnomer routine and it was actually

397
00:21:06,500 --> 00:21:09,000
It's clear that we didn't actually care about that.

398
00:21:09,600 --> 00:21:14,200
Like we did the screen bounds that were passing, right?

399
00:21:14,800 --> 00:21:17,900
Is just sort of a rectangle that doesn't have a placement in the

400
00:21:17,900 --> 00:21:18,300
world.

401
00:21:18,300 --> 00:21:19,500
You can, you can see that.

402
00:21:23,300 --> 00:21:25,000
You can see that pretty clearly here, right?

403
00:21:25,300 --> 00:21:28,800
When we actually call get rekt camera, rectangle, at Target with

404
00:21:28,800 --> 00:21:32,900
render group, you can see that we create the boundaries from that, but

405
00:21:32,900 --> 00:21:37,800
then when we actually go to use them, we pass a camera p as well.

406
00:21:38,500 --> 00:21:42,000
So those Sim bonds are actually just the rectangle.

407
00:21:42,600 --> 00:21:46,300
And what's interesting about that is we could actually start just

408
00:21:46,300 --> 00:21:48,900
passing a rectangle that was in the correct space potentially.

409
00:21:48,900 --> 00:21:51,700
But the reason that we don't do that is because

410
00:21:51,800 --> 00:21:55,500
Because the rectangle would then have to be in full coordinates, not

411
00:21:55,700 --> 00:21:58,100
local coordinates so it wouldn't just be floating point value.

412
00:22:00,100 --> 00:22:03,300
So yeah, so when we call camera record, get camera angle at distance.

413
00:22:04,500 --> 00:22:08,600
What we're really producing here is just the size of that rectangle.

414
00:22:08,800 --> 00:22:11,100
So it's really not a rectangle in some sense.

415
00:22:11,100 --> 00:22:15,000
It should just return a V2, which is the size.

416
00:22:16,000 --> 00:22:19,500
That's probably what we should have done to be a little clearer about

417
00:22:19,500 --> 00:22:23,400
what you were actually getting but you know, we didn't do that so

418
00:22:23,400 --> 00:22:24,400
maybe we'll change that

419
00:22:26,400 --> 00:22:30,900
Anyway, so at this point, what I would say is let's use done project

420
00:22:30,900 --> 00:22:32,700
here as the thing that we want to do.

421
00:22:32,700 --> 00:22:36,400
Now, the object transform is, you can see the object transform has an

422
00:22:36,400 --> 00:22:37,200
effect on these.

423
00:22:38,000 --> 00:22:41,700
The object transfer will modify the

424
00:22:42,900 --> 00:22:43,800
Thing we're using.

425
00:22:44,800 --> 00:22:50,100
What's unusual about the object transform is I don't think well now,

426
00:22:50,100 --> 00:22:53,500
okay we do so you can see us using the Z value for the unprotect,

427
00:22:53,500 --> 00:22:57,400
they're modifying, you know, getting combined with the cameras either.

428
00:22:58,100 --> 00:23:02,300
And so I think if we if we want to do unprotect here, all we need to

429
00:23:02,300 --> 00:23:07,400
do is just not actually bother using any object transform at all and

430
00:23:07,400 --> 00:23:08,100
then we should be fine.

431
00:23:12,300 --> 00:23:15,500
So we don't need unprotected bold anymore at that point, that can go

432
00:23:15,500 --> 00:23:16,000
away.

433
00:23:17,100 --> 00:23:19,800
And if we do kick camera, rectangular distance with distance from

434
00:23:19,800 --> 00:23:24,700
camera, being the information we need there, then if we take a look at

435
00:23:24,700 --> 00:23:28,300
object transform, which is here,

436
00:23:31,600 --> 00:23:33,900
Right, we can do.

437
00:23:36,000 --> 00:23:37,400
Get default.

438
00:23:37,400 --> 00:23:39,900
You know, the thing that gets the default object transform.

439
00:23:41,000 --> 00:23:41,600
There it is.

440
00:23:43,200 --> 00:23:44,600
Will you see if I transform?

441
00:23:45,500 --> 00:23:48,600
So if we have the default flat, transform their all we have to do is

442
00:23:48,600 --> 00:23:53,000
then set the Z for that, right?

443
00:23:53,600 --> 00:23:57,000
To be that distance that we wanted it to be the distance from camera.

444
00:23:57,400 --> 00:23:59,800
Now, the distance from camera in this case is measured in the opposite

445
00:23:59,800 --> 00:23:59,800
direction.

446
00:24:00,000 --> 00:24:01,300
Action, right?

447
00:24:01,300 --> 00:24:05,500
So the distance from camera and this case should actually be

448
00:24:10,000 --> 00:24:11,400
Well no I guess it's just always going to be.

449
00:24:12,700 --> 00:24:14,800
No, because it would be negative because this is, from camera, is

450
00:24:14,800 --> 00:24:16,900
moving out along the negative Z axis.

451
00:24:17,200 --> 00:24:19,700
So, the distance from camera, and this case would be negative, right?

452
00:24:19,700 --> 00:24:23,100
Because Z comes at us and we're saying, we're pushing this away from

453
00:24:23,100 --> 00:24:25,400
the camera, is the phrasing of this routine.

454
00:24:26,200 --> 00:24:29,100
So I think that we just want that to be negative distance from camera,

455
00:24:29,900 --> 00:24:30,300
right?

456
00:24:31,500 --> 00:24:32,200
And it won't matter.

457
00:24:32,200 --> 00:24:33,400
In this case because it's going to be 0.

458
00:24:33,400 --> 00:24:36,000
Anyway, since the one we're calling is this but, you know, just to be

459
00:24:36,000 --> 00:24:36,800
consistent.

460
00:24:37,700 --> 00:24:40,700
So if we produce that transform and then we do a nun, project--

461
00:24:43,800 --> 00:24:47,000
Then what we can do is we can get both the things we want, so we can

462
00:24:47,000 --> 00:24:49,700
get min corner.

463
00:24:50,900 --> 00:24:51,800
And that'll just be a nun.

464
00:24:51,800 --> 00:24:57,600
Project-- with this object transform and the pixels x y is just going

465
00:24:57,600 --> 00:24:59,100
to be 0 0.

466
00:25:00,800 --> 00:25:03,900
And then the max Corner, we would just pass the screen dimensions.

467
00:25:06,000 --> 00:25:08,700
So then we have fun transformed the point of the bottom of the screen

468
00:25:08,700 --> 00:25:12,600
and we untransformed the point at the top of the screen and this would

469
00:25:12,600 --> 00:25:15,400
give us the real rectangle, right?

470
00:25:15,700 --> 00:25:21,000
So that's the actual thing that we actually wanted to know as a, as a

471
00:25:21,000 --> 00:25:21,800
rectangle 3.

472
00:25:23,000 --> 00:25:23,500
Right.

473
00:25:25,400 --> 00:25:28,100
Because now we've got a rectangle, three result.

474
00:25:30,300 --> 00:25:33,900
that hasn't been quarter and a Max corner and I don't remember how you

475
00:25:33,900 --> 00:25:35,300
can we constructed these

476
00:25:41,900 --> 00:25:42,600
Recommend Max.

477
00:25:42,600 --> 00:25:43,200
There it is.

478
00:25:47,100 --> 00:25:50,500
But now that's producing the actual rectangle in 3D space, that

479
00:25:50,500 --> 00:25:55,400
represents the rectangle that the camera can see out at a certain

480
00:25:55,400 --> 00:25:56,000
distance.

481
00:25:58,200 --> 00:25:59,300
Which is what we want.

482
00:26:01,200 --> 00:26:03,100
And I feel like this is a much nicer way to do this.

483
00:26:03,100 --> 00:26:05,800
Like I said, we're just kind of this is nice going through this and

484
00:26:05,800 --> 00:26:07,200
turning into 3D it.

485
00:26:07,400 --> 00:26:10,900
It makes me happy anyway because it sort of, you can see things start

486
00:26:10,900 --> 00:26:14,700
to get more and more uniform less hacky, right?

487
00:26:15,100 --> 00:26:17,400
Because instead of sort of making all these decisions about how we

488
00:26:17,400 --> 00:26:20,700
were doing 2D stuff, condensing it down to 3D just makes things much

489
00:26:20,700 --> 00:26:21,100
cleaner.

490
00:26:21,100 --> 00:26:24,900
Like, okay, so now we run projecting, we just have one on Project

491
00:26:24,900 --> 00:26:25,300
call.

492
00:26:25,300 --> 00:26:27,200
Everything else is phrased in terms of the on a project called the

493
00:26:27,200 --> 00:26:29,700
unprotect call is getting more and more simplified.

494
00:26:30,000 --> 00:26:30,800
You can actually see

495
00:26:31,000 --> 00:26:34,100
even here that the unprojected call is now just one thing that happens

496
00:26:34,100 --> 00:26:36,000
with the perspective transformation slightly differently than the

497
00:26:36,000 --> 00:26:40,100
orthographic we could if we wanted to actually do this, right?

498
00:26:44,000 --> 00:26:45,300
and then in,

499
00:26:50,200 --> 00:26:51,300
in place of a

500
00:26:52,500 --> 00:26:53,700
It's just the this again.

501
00:26:56,100 --> 00:26:56,500
Right.

502
00:26:57,400 --> 00:26:59,700
And so this sorts of gets a little more condensed as well.

503
00:26:59,700 --> 00:26:59,800
And

504
00:27:00,000 --> 00:27:02,100
Just gets nicer, you know, as we go.

505
00:27:03,000 --> 00:27:05,800
So, all right, if I compile that we've still got a little bit of

506
00:27:05,800 --> 00:27:07,100
problem stuff to clean up here.

507
00:27:07,100 --> 00:27:10,900
Obviously, I don't pee is not a member of object transform, is that

508
00:27:10,900 --> 00:27:11,300
true?

509
00:27:11,300 --> 00:27:12,900
Where is my object, transform?

510
00:27:17,500 --> 00:27:18,400
It is offset.

511
00:27:18,400 --> 00:27:25,500
P we go, we've got a screen dimension here, which I think it's the

512
00:27:25,500 --> 00:27:27,600
camera transform that has that in it, right?

513
00:27:29,900 --> 00:27:31,000
and then down here,

514
00:27:32,500 --> 00:27:36,200
We have that rectangle three that we're getting back, like so.

515
00:27:38,900 --> 00:27:41,400
And then we just have to take care of updating render World, which is

516
00:27:41,400 --> 00:27:42,500
the places actually use.

517
00:27:42,500 --> 00:27:45,000
So, we want a two-dimensional screen bands out of this.

518
00:27:45,600 --> 00:27:49,700
When we get this back we're going to get camera wrecked.

519
00:27:53,400 --> 00:27:54,700
Our world camera wrecked.

520
00:27:54,700 --> 00:27:58,500
So if we want that screen bounds, what we need to do there is we need

521
00:27:58,500 --> 00:28:02,400
to say, all right, if we just want the screen, bounce back from this,

522
00:28:02,600 --> 00:28:06,400
we've got the world camera rectangle that world camera rectangle does

523
00:28:06,400 --> 00:28:08,000
have the information that we need.

524
00:28:08,500 --> 00:28:13,600
So, we just need a wrecked, you know, min max, for this, for this

525
00:28:14,000 --> 00:28:14,900
sausage gentlemen.

526
00:28:15,400 --> 00:28:18,000
And we wanted it to be based at V, 0 0.

527
00:28:18,000 --> 00:28:23,000
And then we just wanted their the dimensions of it too.

528
00:28:23,200 --> 00:28:24,400
Sleepy like World camera.

529
00:28:24,400 --> 00:28:28,600
Rex Min Corner, remember how this is phrased here?

530
00:28:30,200 --> 00:28:30,700
Dot Min.

531
00:28:31,500 --> 00:28:33,200
So we just wanted, it's Min corner.

532
00:28:35,400 --> 00:28:37,100
And Max Corners, subtracted.

533
00:28:41,500 --> 00:28:42,200
And that's all.

534
00:28:42,200 --> 00:28:48,800
So we just want we just wanted the 2D span of this thing, so that's

535
00:28:48,800 --> 00:28:49,500
all we're going to do.

536
00:28:52,200 --> 00:28:54,900
So in theory now we oh dear.

537
00:28:55,700 --> 00:28:56,300
What have I done?

538
00:28:58,900 --> 00:29:01,700
So, in theory now and only in theory, as you can see from the running,

539
00:29:02,000 --> 00:29:05,700
we have that straightened out but we obviously have a problem in their

540
00:29:05,700 --> 00:29:12,000
summer, so we will have to go and figure out what, what?

541
00:29:12,000 --> 00:29:18,100
We set ask you, oh, I know why it was rectangle Center, Dim, this was

542
00:29:18,100 --> 00:29:19,900
supposed to be centered around, zero zero.

543
00:29:23,500 --> 00:29:25,600
That was the foreign we wanted, okay?

544
00:29:25,600 --> 00:29:27,500
We still probably have problems in there but this is it.

545
00:29:27,500 --> 00:29:28,000
There we go.

546
00:29:28,200 --> 00:29:29,500
I guess we don't have problems in their.

547
00:29:30,100 --> 00:29:34,300
So in theory that gives us back that rectangle that we wanted, and it

548
00:29:34,300 --> 00:29:36,600
looks like that's giving it back to us properly, because now we're

549
00:29:36,600 --> 00:29:39,000
simulating the region that we think we're simulating, which is what we

550
00:29:39,000 --> 00:29:39,500
wanted.

551
00:29:40,700 --> 00:29:41,700
All right now.

552
00:29:41,700 --> 00:29:42,300
I don't know why.

553
00:29:42,300 --> 00:29:43,700
I'm not seeing it, though.

554
00:29:44,100 --> 00:29:45,900
That's a little bit weird.

555
00:29:47,700 --> 00:29:49,800
I wonder if I set the debug distance.

556
00:29:57,100 --> 00:29:59,600
Like, I'm just not seeing those rectangles, which I don't.

557
00:30:00,000 --> 00:30:03,600
And why I'm not seeing those rectangles, right?

558
00:30:15,100 --> 00:30:16,500
The pink rectangle.

559
00:30:18,300 --> 00:30:21,300
Is there, but the other ones aren't, which is even weirder because

560
00:30:21,300 --> 00:30:23,300
that means it's working.

561
00:30:23,400 --> 00:30:24,100
Sort of

562
00:30:27,100 --> 00:30:29,700
Okay, so let's take a look.

563
00:30:29,700 --> 00:30:33,300
We're drawing the screen bounds, the Sim bounds, and the world Zoom

564
00:30:34,000 --> 00:30:34,600
region.

565
00:30:35,100 --> 00:30:38,400
So, the pink one is the world Sim Sim region bounds.

566
00:30:38,700 --> 00:30:42,600
So the Sim bounds in the screen bounds are both like used to build

567
00:30:42,600 --> 00:30:42,800
that.

568
00:30:42,800 --> 00:30:47,900
So, it seems sort of bizarre that that we're not seeing those like we

569
00:30:47,900 --> 00:30:51,300
should I'm going to step in here because I just want to see.

570
00:30:51,500 --> 00:30:56,700
Like at this point, I'd like to know what those actually are, so

571
00:30:56,900 --> 00:31:01,400
If I come in here and just take a look inside World mode at that

572
00:31:01,400 --> 00:31:02,200
actual code.

573
00:31:02,200 --> 00:31:05,300
I just want to know what the oops the values of those are.

574
00:31:05,400 --> 00:31:06,700
Looks like I did pick the right one.

575
00:31:10,800 --> 00:31:14,600
So here we go and you can see us getting the dimensions of these

576
00:31:14,600 --> 00:31:15,300
things here.

577
00:31:16,200 --> 00:31:17,800
So here's the screen bounds.

578
00:31:18,300 --> 00:31:23,100
Here's the Sim bounds, here's the world Sim Sim region bounds

579
00:31:26,800 --> 00:31:29,900
All right, so the screen bounds are nuts.

580
00:31:31,400 --> 00:31:34,400
I think we can all agree that they are just completely ludicrous.

581
00:31:34,400 --> 00:31:36,300
So we're going to take a look at what's going on there.

582
00:31:37,000 --> 00:31:42,000
The Sim bounds are very reasonable.

583
00:31:43,200 --> 00:31:47,700
So I'm not sure why we're not seeing those and the world Sim Sim

584
00:31:47,700 --> 00:31:49,900
region bounds, okay?

585
00:31:49,900 --> 00:31:54,000
So those just happen to both be in the same place so we're just

586
00:31:54,000 --> 00:31:56,300
drawing the same thing twice in this case.

587
00:31:56,600 --> 00:32:00,500
And I guess that makes sense because we decided not to enlarge the

588
00:32:00,500 --> 00:32:01,700
same region anymore.

589
00:32:01,700 --> 00:32:04,500
I think is what ended up happening with that.

590
00:32:08,400 --> 00:32:09,900
So, I guess that seems reasonable well prep.

591
00:32:09,900 --> 00:32:12,900
We're probably still play with that a little bit more as we go, but

592
00:32:13,800 --> 00:32:15,000
that, that makes sense.

593
00:32:15,900 --> 00:32:21,800
So, here in our push rekt outline call, we know that that our screen

594
00:32:21,800 --> 00:32:23,200
bounds are janky.

595
00:32:23,200 --> 00:32:25,700
So let's go up here and find out what's going on with that.

596
00:32:26,900 --> 00:32:30,600
Especially, because we're using those here to produce some other

597
00:32:30,600 --> 00:32:31,100
stuff.

598
00:32:31,100 --> 00:32:32,300
So I'm not sure.

599
00:32:34,000 --> 00:32:38,100
I guess it's because we don't actually use the boundaries of that when

600
00:32:38,100 --> 00:32:39,600
we get to the end here.

601
00:32:40,400 --> 00:32:44,600
So let's go ahead and step into our transform call and see what I

602
00:32:44,600 --> 00:32:45,400
messed up there.

603
00:32:46,700 --> 00:32:47,500
Here we go.

604
00:32:47,500 --> 00:32:49,500
With our their camera transform.

605
00:32:51,500 --> 00:32:54,100
So the distance from Cameron, this case should be 0, which is what we

606
00:32:54,100 --> 00:32:55,200
would expect.

607
00:32:55,800 --> 00:32:59,300
So now we're going to do a nun project-- with that transform.

608
00:33:00,100 --> 00:33:00,500
and,

609
00:33:03,100 --> 00:33:06,000
Let's just take a look at what the current camera transform is screen,

610
00:33:06,000 --> 00:33:06,900
dimensions wise.

611
00:33:09,600 --> 00:33:14,200
So here's that screen dim, it's exactly what we would expect, right?

612
00:33:14,200 --> 00:33:19,100
1920 by 1080, that is exactly the size of the screen that we were, we

613
00:33:19,100 --> 00:33:23,900
would expect to see there's the focal length, which is what we set it

614
00:33:23,900 --> 00:33:27,900
to, I mean, within floating Point Precision, anyway, and there's the

615
00:33:27,900 --> 00:33:28,800
camera p.

616
00:33:32,100 --> 00:33:33,100
Well, okay.

617
00:33:33,100 --> 00:33:34,600
So

618
00:33:36,900 --> 00:33:39,000
That's that's a problem.

619
00:33:39,700 --> 00:33:44,500
So the problem here we don't have distance from camera anymore.

620
00:33:44,700 --> 00:33:47,900
So the way that was working as distance from camera actually is going

621
00:33:47,900 --> 00:33:50,600
to have to be passed, to be what you actually think the camera

622
00:33:50,600 --> 00:33:55,300
distance is so because the camera transformed doesn't

623
00:33:57,000 --> 00:33:58,800
Isn't giving that information at the moment.

624
00:33:58,800 --> 00:34:00,400
What what's going on there?

625
00:34:03,100 --> 00:34:04,500
Because that's the problem right there.

626
00:34:06,300 --> 00:34:08,900
So, how is that working inside?

627
00:34:11,199 --> 00:34:11,900
Here we've done.

628
00:34:11,900 --> 00:34:16,400
We've set the perspective camera here so that should have already been

629
00:34:16,400 --> 00:34:19,600
set and the camera offset should have been.

630
00:34:19,699 --> 00:34:23,699
I would have thought the camera offset should have been we go and run

631
00:34:23,699 --> 00:34:24,100
that.

632
00:34:27,000 --> 00:34:29,800
The camera offset should have been set to something like 11.

633
00:34:30,100 --> 00:34:30,699
Right?

634
00:34:31,500 --> 00:34:32,699
So what's going on there?

635
00:34:42,000 --> 00:34:42,500
Like that.

636
00:34:42,500 --> 00:34:43,100
There you go.

637
00:34:43,199 --> 00:34:45,900
I mean, there's a camera off set of 10.

638
00:34:47,199 --> 00:34:48,500
We're setting that here.

639
00:34:48,500 --> 00:34:51,199
So the camera P should be that thing, right?

640
00:34:51,199 --> 00:34:51,900
There's the 10.

641
00:34:52,800 --> 00:34:54,900
So now, when we come in here, why wasn't I seen that?

642
00:34:54,900 --> 00:34:55,699
Did I just lose?

643
00:34:55,699 --> 00:34:56,900
I just looking at the wrong thing.

644
00:35:07,900 --> 00:35:09,000
No, not there it is.

645
00:35:09,000 --> 00:35:10,400
Okay, so that's all fine.

646
00:35:11,200 --> 00:35:16,800
Okay, so here, we've got our screen Center information, which is

647
00:35:16,800 --> 00:35:18,600
exactly what we expected to be.

648
00:35:18,600 --> 00:35:21,100
In this case we're setting the zero.

649
00:35:21,100 --> 00:35:23,400
We're trying to get the 00 corner for our pixels.

650
00:35:23,400 --> 00:35:27,500
So we do our own projection, we subtract the screen center away and

651
00:35:27,500 --> 00:35:28,900
then we should have a balanced coordinate.

652
00:35:28,900 --> 00:35:31,000
We do this is definitely expecting.

653
00:35:31,000 --> 00:35:34,100
We're taking the camera pz and the offset pz.

654
00:35:34,100 --> 00:35:37,700
So in this case we should end up getting you know that 10 value here

655
00:35:37,700 --> 00:35:40,900
and we're dividing that by the focal length of

656
00:35:41,200 --> 00:35:41,600
Three.

657
00:35:41,900 --> 00:35:42,500
Right.

658
00:35:42,600 --> 00:35:45,400
And then we're multiplying it by the unprojected, so that should give

659
00:35:45,400 --> 00:35:45,700
us.

660
00:35:46,400 --> 00:35:47,700
Where's our unprotected?

661
00:35:52,900 --> 00:35:55,100
That should have given us.

662
00:36:00,000 --> 00:36:01,500
That, that is not.

663
00:36:06,100 --> 00:36:07,600
What I would have expected.

664
00:36:13,700 --> 00:36:16,300
So I think, you know what, I just realized.

665
00:36:16,300 --> 00:36:20,400
So this is not the correct transform anymore because this is still

666
00:36:20,400 --> 00:36:22,200
doing the on project-based way.

667
00:36:22,200 --> 00:36:26,400
We used to be doing the transform, but we are using the sort of shrink

668
00:36:26,400 --> 00:36:31,000
to negative 1 to 1 and then blow back out to the screen transform now

669
00:36:31,000 --> 00:36:32,000
from opengl.

670
00:36:34,200 --> 00:36:36,400
So this transform is not going to be accurate.

671
00:36:36,600 --> 00:36:38,400
We need to redo this fun project.

672
00:36:52,500 --> 00:36:56,800
All right, so we actually need to redo the sun project to match the

673
00:36:56,800 --> 00:36:58,100
transform that we're actually doing.

674
00:36:58,300 --> 00:37:01,600
Now, one of the things, that's probably true at this point is because

675
00:37:01,600 --> 00:37:03,200
we want to match the unprojected here.

676
00:37:05,700 --> 00:37:09,700
What we probably want to do is we want to sort of unify these two code

677
00:37:09,700 --> 00:37:10,500
paths, right?

678
00:37:10,800 --> 00:37:15,700
So we've got we're setting this Matrix up here and this is the Matrix

679
00:37:15,700 --> 00:37:18,300
that will, you know, things will be getting X.

680
00:37:21,600 --> 00:37:24,700
In opengl will be probably want to do.

681
00:37:26,400 --> 00:37:30,400
Is have some way of saying, let's set this Matrix.

682
00:37:30,500 --> 00:37:36,500
Let's think about what this Matrix should be in our actual render code

683
00:37:36,700 --> 00:37:40,800
directly so that when we want to do something like a nun project, we

684
00:37:40,800 --> 00:37:42,900
are always doing that in a unified way.

685
00:37:44,100 --> 00:37:46,900
So, I feel like we want to get there.

686
00:37:46,900 --> 00:37:49,200
I don't know if we want to get there immediately.

687
00:37:49,500 --> 00:37:54,000
Like, I'm going to, I think I want to fix this unprojected first and

688
00:37:54,000 --> 00:37:55,500
then smush them together more.

689
00:37:56,100 --> 00:37:58,600
But I feel like that's where we want to go, right?

690
00:37:58,600 --> 00:38:03,000
Because otherwise, they're sort of separated pieces of code that just

691
00:38:03,000 --> 00:38:05,500
happen to line up with each other because we worked out the math for

692
00:38:05,500 --> 00:38:09,200
them, but it would be nice if we just had, you know, if we just had

693
00:38:09,200 --> 00:38:09,900
this Matrix.

694
00:38:09,900 --> 00:38:13,200
For example, let's say we just kept this Matrix inside the render code

695
00:38:13,500 --> 00:38:13,700
then

696
00:38:13,900 --> 00:38:14,800
We go to unprotect.

697
00:38:14,800 --> 00:38:17,800
We just unprojected by The Matrix, right?

698
00:38:20,600 --> 00:38:24,600
And we wouldn't have to think about it as two separate pieces of code.

699
00:38:24,600 --> 00:38:25,400
That happened to line up.

700
00:38:25,400 --> 00:38:26,700
It could be a little more unified.

701
00:38:26,700 --> 00:38:29,900
So I feel like we want to get there at some point but right now we'll

702
00:38:29,900 --> 00:38:33,300
just kind of work this through the way that we need to for this

703
00:38:33,300 --> 00:38:34,300
particular function.

704
00:38:34,300 --> 00:38:36,000
And we'll kind of just keep an eye on it.

705
00:38:36,900 --> 00:38:38,400
So here's day 360.

706
00:38:40,400 --> 00:38:42,200
And this is unprotect.

707
00:38:45,200 --> 00:38:48,500
So, here is our project projection Matrix.

708
00:38:50,400 --> 00:38:52,700
And we've got, you can see the diagonal happening here.

709
00:38:52,700 --> 00:38:55,600
So these are the two coefficients that were using.

710
00:38:56,100 --> 00:38:59,800
So anything that comes in here is going to get multiplied by

711
00:39:00,000 --> 00:39:02,000
2 on and off.

712
00:39:04,700 --> 00:39:08,600
Sorry, it's gonna get x 2 for the.

713
00:39:12,700 --> 00:39:17,400
But the x + 2 times the width over the height for the Y, right?

714
00:39:17,400 --> 00:39:19,900
And that's going to shrink it down and then it's going to get expanded

715
00:39:19,900 --> 00:39:22,400
back out by opengl using this.

716
00:39:22,400 --> 00:39:24,200
The screen size, right?

717
00:39:25,400 --> 00:39:26,900
And you can see that what's missing here.

718
00:39:26,900 --> 00:39:30,800
First of all, is we have to think through what part of this cancels

719
00:39:30,800 --> 00:39:31,300
out.

720
00:39:31,400 --> 00:39:33,800
It may be that this already canceled set up, but you can see right

721
00:39:33,800 --> 00:39:36,800
here that you already have a problem.

722
00:39:37,100 --> 00:39:42,100
Which is that the screen dimensions itself opengl has to is doing

723
00:39:42,300 --> 00:39:43,500
Normalization for us.

724
00:39:43,700 --> 00:39:48,400
So we do a transform in our coordinates come out negative 1 to 1

725
00:39:48,400 --> 00:39:53,700
negative 1 to 1 in all dimensions opengl then multiplies by the screen

726
00:39:53,700 --> 00:39:54,300
dimension.

727
00:39:54,900 --> 00:39:58,700
We are not dividing by the screen dimension here, right?

728
00:39:58,700 --> 00:40:00,000
Which we would need to do.

729
00:40:00,200 --> 00:40:03,500
So the you know, when we do this on Project, the first thing we would

730
00:40:03,500 --> 00:40:08,200
need to do after we do the shift right here, we would need to take the

731
00:40:08,200 --> 00:40:08,700
X.

732
00:40:12,300 --> 00:40:17,900
And the Y and we need to basically unless you know take that inverse

733
00:40:18,100 --> 00:40:22,600
screen dimension and put them back to negative 1 to 1 coordinates just

734
00:40:22,600 --> 00:40:26,800
like we were doing before right in order to reverse this transform and

735
00:40:26,800 --> 00:40:31,700
then we also need to obey this the aspect ratio offset of them right

736
00:40:31,700 --> 00:40:32,900
because we're doing that here.

737
00:40:33,700 --> 00:40:38,300
So we have to also do this exact operation in Reverse which is going

738
00:40:38,300 --> 00:40:41,900
to be the sort of the doubling.

739
00:40:42,100 --> 00:40:46,800
Multiply, and then we can finally at the end of all of that undo the

740
00:40:46,800 --> 00:40:48,200
other piece of the transform, right?

741
00:40:50,100 --> 00:40:54,100
So the unprojected XY dot X here is going to be, you can see what's

742
00:40:54,100 --> 00:40:55,500
what what this is here.

743
00:40:55,600 --> 00:40:58,400
It's going to be a divide by 2 here, right?

744
00:40:58,600 --> 00:41:02,400
Or a multiplied by 0.5 and then

745
00:41:04,600 --> 00:41:05,900
For the y coordinate.

746
00:41:06,000 --> 00:41:09,300
It's the same thing except it also has to invert this.

747
00:41:09,600 --> 00:41:11,400
So, it's the height over the width there.

748
00:41:11,400 --> 00:41:15,600
So, we've got essentially a height, I'm sorry.

749
00:41:15,600 --> 00:41:17,500
It's the width over the height there.

750
00:41:17,500 --> 00:41:19,300
So it's the height over the width here.

751
00:41:20,500 --> 00:41:20,800
Right.

752
00:41:20,800 --> 00:41:25,900
So you can see me just doing the opposite of what we were doing right

753
00:41:25,900 --> 00:41:26,000
now.

754
00:41:26,000 --> 00:41:27,300
Since this is a divided.

755
00:41:27,300 --> 00:41:29,800
And this is a multiply I can just roll these in together.

756
00:41:29,800 --> 00:41:34,300
If I want to write Hoops, same here.

757
00:41:45,700 --> 00:41:50,000
and I could think of this as the aspect correction term,

758
00:41:52,600 --> 00:41:53,200
Right.

759
00:41:53,900 --> 00:41:56,600
And furthermore since I've already got a divided in there,

760
00:42:00,300 --> 00:42:05,800
what I can also do here is say the, you know, let's just go ahead and

761
00:42:07,200 --> 00:42:10,700
And leave the aspect term, the same as it is in the other one.

762
00:42:12,200 --> 00:42:14,500
Because you see here, we had X over y.

763
00:42:15,700 --> 00:42:19,100
So if I just put that in the didn't in the numerator here, that will

764
00:42:19,100 --> 00:42:19,600
invert it.

765
00:42:19,600 --> 00:42:22,800
So that way, our aspect term is the same term in both which again like

766
00:42:22,800 --> 00:42:26,500
I said, I want to kind of mush get these to be a little more uniform.

767
00:42:27,400 --> 00:42:30,500
So that undoes the projection that opengl is doing for screen

768
00:42:30,500 --> 00:42:35,400
coordinates and then all we have to do is take it from there that

769
00:42:35,400 --> 00:42:38,000
would produce what we would expect.

770
00:42:43,000 --> 00:42:44,300
In terms of our own project.

771
00:42:45,900 --> 00:42:51,200
So from there, what we would need to do is say okay, we then once we

772
00:42:51,200 --> 00:42:54,000
have it in there, we've got to finish doing our Z.

773
00:42:54,200 --> 00:42:57,000
So from there, we would take it to just the, the stuff that was in the

774
00:42:57,000 --> 00:42:57,300
open.

775
00:42:57,300 --> 00:42:58,300
Jill basis.

776
00:42:58,300 --> 00:43:02,600
I'm going to start the opengl, the get render render entity basis P

777
00:43:02,600 --> 00:43:04,500
stuff and you can see what's going on there.

778
00:43:04,500 --> 00:43:07,000
There's some nonsense with the hide off floor and all that stuff, but

779
00:43:07,000 --> 00:43:10,000
we were going to, we were going to get rid of that stuff anyway, so

780
00:43:10,000 --> 00:43:11,800
that's the full kind of come away, but

781
00:43:12,900 --> 00:43:16,800
We've got that 1 over distance to Peak focal length that's happening

782
00:43:16,800 --> 00:43:19,300
there, but that's really all that's happening the projection.

783
00:43:19,500 --> 00:43:21,000
And we've done that part.

784
00:43:21,000 --> 00:43:22,400
That part is still happening here.

785
00:43:22,400 --> 00:43:23,400
So we should be okay.

786
00:43:24,100 --> 00:43:26,100
Now, I don't know if we've got everything there, but at least we're

787
00:43:26,100 --> 00:43:31,100
closer now and let me see if I can step into that code again.

788
00:43:31,100 --> 00:43:34,400
I want to take a look at at that code now.

789
00:43:35,100 --> 00:43:38,500
So here's our world camera wrecked.

790
00:43:40,200 --> 00:43:44,200
Computation and that's much better, right?

791
00:43:44,200 --> 00:43:45,700
That's what we would have expected to get.

792
00:43:45,700 --> 00:43:49,100
So now, I think we're in much better shape.

793
00:43:49,600 --> 00:43:50,900
You can see, there are camera.

794
00:43:50,900 --> 00:43:51,400
Rectangle.

795
00:43:51,400 --> 00:43:52,900
Looks like it's much nicer.

796
00:43:52,900 --> 00:43:56,300
Aligned, exactly the way that we would have expected it to be when we

797
00:43:56,300 --> 00:43:57,600
go back to the config.

798
00:43:59,500 --> 00:44:03,600
Turn that back to false and then you know now we're in good shape.

799
00:44:03,600 --> 00:44:07,000
Now we've got those those rectangles exactly where I expect them to be

800
00:44:07,000 --> 00:44:07,300
now.

801
00:44:07,300 --> 00:44:10,000
So now we're much, I'm a much happier camper.

802
00:44:10,200 --> 00:44:12,800
You can see that one bounding the room and then the other one bounding

803
00:44:12,800 --> 00:44:14,800
the camera and they're perfectly tight.

804
00:44:14,800 --> 00:44:18,100
They're right where they should be and that's what I wanted to see.

805
00:44:19,000 --> 00:44:23,300
Okay, so like I said baby steps for our conversion to 3D baby steps

806
00:44:24,500 --> 00:44:27,600
and you know, I should take maybe a second just to mention while we're

807
00:44:27,600 --> 00:44:27,800
doing this.

808
00:44:28,000 --> 00:44:29,500
I never said this at the beginning, but

809
00:44:32,600 --> 00:44:37,400
I should just kind of mention sometimes people get really scared when

810
00:44:37,400 --> 00:44:43,200
they have to change code and like this and you know,

811
00:44:49,000 --> 00:44:52,700
the way that you get to a well working engine and a really good design

812
00:44:52,700 --> 00:44:55,900
and all those sorts of things is to always keep your code very

813
00:44:55,900 --> 00:44:59,100
fungible and maneuverable, like we have done,

814
00:45:00,000 --> 00:45:03,300
And to not be afraid to make changes to it, right?

815
00:45:03,900 --> 00:45:06,400
To always believe that you can work it out that if you think it

816
00:45:06,400 --> 00:45:09,100
through and look at how things are flowing, you can come up with good

817
00:45:09,100 --> 00:45:13,200
changes and break things into baby steps where you can just improve

818
00:45:13,200 --> 00:45:14,200
the code and get it towards.

819
00:45:14,200 --> 00:45:16,100
You need to go those.

820
00:45:16,100 --> 00:45:22,100
It's crucial to not have that fear because it will really hold you

821
00:45:22,100 --> 00:45:22,400
back.

822
00:45:22,400 --> 00:45:26,500
If you're always afraid to go, make serious substantive changes, or if

823
00:45:26,500 --> 00:45:29,800
you think you have to rewrite everything all at once, too.

824
00:45:30,000 --> 00:45:34,600
To do something because a lot of times taking the approach of just

825
00:45:34,600 --> 00:45:37,500
like let me delete everything and rewrite the whole thing while.

826
00:45:37,500 --> 00:45:39,100
Sometimes that is necessary.

827
00:45:39,100 --> 00:45:42,900
A lot of times, keeping the code fungible and making small changes

828
00:45:42,900 --> 00:45:47,100
towards what you need ends up with a much more robust much better

829
00:45:47,100 --> 00:45:50,500
design in the end because it's hard to conceptualize everything in

830
00:45:50,500 --> 00:45:53,200
your head for a giant thing, like a game engine.

831
00:45:55,000 --> 00:45:57,200
And so, what we're kind of doing here for the 3D transform.

832
00:45:57,200 --> 00:46:00,000
It's an important to move the thing from 2D to 3D.

833
00:46:00,000 --> 00:46:03,000
It's very important to understand that these are the kinds of changes.

834
00:46:03,000 --> 00:46:04,400
You want to feel comfortable making.

835
00:46:04,700 --> 00:46:08,400
Don't be scared about them, they are very large, but if you break them

836
00:46:08,400 --> 00:46:11,400
into small pieces, then it's not so scary.

837
00:46:11,400 --> 00:46:15,600
Because each individual thing, you can measure understand test.

838
00:46:15,600 --> 00:46:19,600
See if it worked have an opinion about whether it got better and

839
00:46:19,600 --> 00:46:23,700
unless you literally just can't see any series of steps that will get

840
00:46:23,700 --> 00:46:24,000
you from.

841
00:46:24,100 --> 00:46:25,500
You are to where you need to go.

842
00:46:26,500 --> 00:46:30,700
It's very sound, very reassuring, programming practice, you can go

843
00:46:30,700 --> 00:46:31,100
through.

844
00:46:31,600 --> 00:46:34,200
So even though this is a very significant thing, take an engine that

845
00:46:34,200 --> 00:46:36,000
was supposed to be 2D and making it 3D engine.

846
00:46:36,000 --> 00:46:36,600
Instead.

847
00:46:37,500 --> 00:46:38,700
It's really not that bad.

848
00:46:38,700 --> 00:46:41,900
As long as you just do those steps and you could see like that camera

849
00:46:41,900 --> 00:46:42,700
thing was exactly that.

850
00:46:42,700 --> 00:46:43,400
So, I took a step.

851
00:46:43,400 --> 00:46:44,400
Why isn't this thing working?

852
00:46:44,400 --> 00:46:44,800
Oh, let's go.

853
00:46:44,800 --> 00:46:45,400
See, why?

854
00:46:45,400 --> 00:46:47,500
Okay, right, we need to unprotect mean those two match up.

855
00:46:47,600 --> 00:46:48,700
How do we make those match up?

856
00:46:48,700 --> 00:46:49,300
There we go.

857
00:46:49,500 --> 00:46:52,000
Oh, we notice something that we probably want to improve the the

858
00:46:52,000 --> 00:46:53,900
perspective transform should probably exist.

859
00:46:54,000 --> 00:46:54,900
In a unified place.

860
00:46:54,900 --> 00:46:57,400
So now we've got something you're kind of in our mind of like this is

861
00:46:57,400 --> 00:46:58,700
a way we can improve the code.

862
00:46:59,100 --> 00:47:02,800
That is how these things are supposed to work there, how they get

863
00:47:02,800 --> 00:47:05,600
better and that's how they get better reliably.

864
00:47:07,400 --> 00:47:10,300
Because as long as you're always pushing it forward and doing those

865
00:47:10,800 --> 00:47:14,900
small changes and seeing that they made an improvement, you're in good

866
00:47:14,900 --> 00:47:15,300
shape.

867
00:47:16,000 --> 00:47:16,600
All right.

868
00:47:17,300 --> 00:47:21,200
So now what I'd like to do is focus a little bit more on trying to get

869
00:47:21,200 --> 00:47:23,900
the actual Z stuff work.

870
00:47:24,100 --> 00:47:25,600
The way that we want it to work.

871
00:47:25,600 --> 00:47:29,300
Because right now, we are not using the Z.

872
00:47:29,400 --> 00:47:35,000
So we as a little bit summer, obviously are using it.

873
00:47:35,300 --> 00:47:36,100
We are not.

874
00:47:36,700 --> 00:47:42,100
The Z is not coming through to opengl, right?

875
00:47:42,100 --> 00:47:48,300
This is the Z happening here, and what I'd like to do is get that Z

876
00:47:48,300 --> 00:47:49,600
moved over to opengl.

877
00:47:49,600 --> 00:47:52,200
So that opengl understands and sees

878
00:47:53,600 --> 00:47:57,400
Our Z coordinates again which right now it isn't doing.

879
00:47:57,400 --> 00:47:59,800
We are passing the Z's down.

880
00:48:01,400 --> 00:48:05,400
But we're only passing them down after they've already been projected.

881
00:48:05,500 --> 00:48:07,100
So what I'd like to do now.

882
00:48:09,800 --> 00:48:14,800
Is try to get this down into the opengl code.

883
00:48:18,100 --> 00:48:18,500
Okay.

884
00:48:20,900 --> 00:48:21,400
Okay.

885
00:48:22,700 --> 00:48:27,900
Now this is a relatively difficult change, not because the math is

886
00:48:27,900 --> 00:48:30,500
going to be complicated, because the math actually isn't going to be

887
00:48:30,500 --> 00:48:31,700
all that complicated.

888
00:48:31,900 --> 00:48:36,800
But rather, because right now, we don't have a concept in in our

889
00:48:36,900 --> 00:48:37,800
rendering system.

890
00:48:39,700 --> 00:48:45,800
Of the transform for Z being set at any real time.

891
00:48:46,700 --> 00:48:51,200
Okay, so when we call opengl set screen space,

892
00:48:54,100 --> 00:48:55,400
You can see it happening right here.

893
00:48:56,700 --> 00:49:00,300
When we call opengl set screen space, we just kind of set it and then

894
00:49:00,300 --> 00:49:01,200
forget it, right?

895
00:49:01,200 --> 00:49:04,900
It's a set and forget kind of situation but we're probably going to

896
00:49:04,900 --> 00:49:09,600
have to do is take our clip rect concept which is the thing where we

897
00:49:09,600 --> 00:49:14,000
sort of have stuff that references a particular product or probably

898
00:49:14,000 --> 00:49:15,600
going to have to do is take that clip.

899
00:49:15,600 --> 00:49:20,400
Rect concept and at augment our cliprect concept to not really be

900
00:49:20,400 --> 00:49:23,700
about clip Rex anymore, but to be about transforms in general.

901
00:49:25,000 --> 00:49:30,300
Because we need some way of telling opengl what the camera transform

902
00:49:30,300 --> 00:49:30,600
is.

903
00:49:31,000 --> 00:49:33,300
And we don't want to tell it with the canned camera.

904
00:49:33,300 --> 00:49:37,200
Transform is for every Sprite, right?

905
00:49:37,300 --> 00:49:39,600
That's just like, we didn't want to tell it with the clip.

906
00:49:39,600 --> 00:49:41,600
Rect was for every Sprite we could have, right?

907
00:49:41,600 --> 00:49:43,100
Every Sprite could have its own clip.

908
00:49:43,100 --> 00:49:43,500
Rect

909
00:49:44,600 --> 00:49:48,900
but since most Sprites tends to go with a single clip, rect

910
00:49:49,800 --> 00:49:53,400
like those big batch of sprite, they're all the same clip, rect we

911
00:49:53,400 --> 00:49:57,600
want to be able to specify that once and not have to change it every

912
00:49:57,600 --> 00:50:01,700
Sprite if the Sprite doesn't change clip Rex and the same is going to

913
00:50:01,700 --> 00:50:04,100
be true for our camera transform.

914
00:50:04,100 --> 00:50:07,200
When we want to set, what that Z perspective, transform is of the

915
00:50:07,200 --> 00:50:07,800
camera.

916
00:50:08,300 --> 00:50:13,200
What we'd like to do is just set that one time and not have to set it.

917
00:50:13,200 --> 00:50:17,900
Every single time we do a Sprite right and you can see why we would

918
00:50:17,900 --> 00:50:19,500
have to do that if we've made know.

919
00:50:19,700 --> 00:50:24,100
Concession to it because what we are doing here is every Sprite.

920
00:50:24,100 --> 00:50:27,100
When we get the Sprite, we're taking the current camera transforms,

921
00:50:27,100 --> 00:50:30,200
focal length, and we're using it to compute with the Z value.

922
00:50:30,200 --> 00:50:35,500
Is if we were to get rid of that and just passed down, Distance 2pz by

923
00:50:35,500 --> 00:50:36,200
itself.

924
00:50:36,800 --> 00:50:43,100
Right without the focal length, then opengl would have no idea which

925
00:50:43,100 --> 00:50:44,700
brights went with which focal lengths.

926
00:50:44,700 --> 00:50:48,000
In a case, where we change the focal lengths, multiple times, in a

927
00:50:48,000 --> 00:50:49,500
single frame, which

928
00:50:49,600 --> 00:50:51,400
we're totally free to do right now.

929
00:50:51,700 --> 00:50:54,800
Right now, the fact that we don't means if we wanted to, I suppose, we

930
00:50:54,800 --> 00:50:59,000
could just hard code a focal length into opengl, but I mean, even then

931
00:50:59,000 --> 00:50:59,800
we sort of at least,

932
00:51:00,000 --> 00:51:03,400
The concept of the orthographic projection versus the not orthographic

933
00:51:03,400 --> 00:51:06,300
projection, because eventually we're going to want to re-enable, our

934
00:51:06,300 --> 00:51:07,200
debug display.

935
00:51:08,200 --> 00:51:12,300
And in order to re-enable, our debug display opengl at least needs to

936
00:51:12,300 --> 00:51:14,700
know the difference between all the stuff that came down in the

937
00:51:14,700 --> 00:51:17,300
perspective and all the stuff that comes down in the orthographic.

938
00:51:17,300 --> 00:51:20,900
So at some point if for no other reason than just because we have a

939
00:51:20,900 --> 00:51:24,100
debug overlay or other, you know, we'll probably have other UI

940
00:51:24,100 --> 00:51:27,000
potentially in the game that might want this as well, so it's not just

941
00:51:27,000 --> 00:51:27,600
for debug.

942
00:51:30,400 --> 00:51:33,400
We at least at least need some way of setting two different camera

943
00:51:33,400 --> 00:51:36,700
transforms and once we can set to camera transforms we might as well

944
00:51:36,700 --> 00:51:40,300
have a way to set an arbitrary number in case we want to do different

945
00:51:40,300 --> 00:51:40,700
things with it.

946
00:51:40,700 --> 00:51:41,200
Right?

947
00:51:42,100 --> 00:51:44,800
Because we have to have that Concept in there at some level.

948
00:51:45,800 --> 00:51:50,200
So that is why we need to do this is we need to get that camera

949
00:51:50,200 --> 00:51:53,300
information down and like I said we sort of already have this in the

950
00:51:53,300 --> 00:51:54,700
clip, rect concept.

951
00:51:54,700 --> 00:51:57,200
So we might as well piggyback on top of that because it's already a

952
00:51:57,200 --> 00:51:59,400
thing that allows us to have our Sprites reference

953
00:52:00,400 --> 00:52:02,300
Thing that gets changed in frequently.

954
00:52:03,500 --> 00:52:07,000
Right, so that's pretty good and there's stuff we can do with that.

955
00:52:07,100 --> 00:52:10,600
Now we'll probably be able to improve this further because once we

956
00:52:10,600 --> 00:52:15,200
really get to the full to the z-buffer, we won't need to have the

957
00:52:15,200 --> 00:52:19,900
concept that Sprites reference a cliprect anymore.

958
00:52:20,400 --> 00:52:23,800
We'll be able to have it so that Sprites just come in batches with the

959
00:52:23,800 --> 00:52:24,100
clip.

960
00:52:24,100 --> 00:52:27,100
Rect at the top which will be much more efficient because then we

961
00:52:27,100 --> 00:52:29,800
don't have to do this check on every Sprite.

962
00:52:30,600 --> 00:52:33,200
And when I say much more efficient I basically mean, hey, you probably

963
00:52:33,300 --> 00:52:36,500
Even really notice it because it's not that big of a deal to compare

964
00:52:36,500 --> 00:52:39,300
two integers together, but you get the idea.

965
00:52:40,400 --> 00:52:43,600
It's more efficient conceptually anyway and we might as well get rid

966
00:52:43,600 --> 00:52:43,900
of code.

967
00:52:43,900 --> 00:52:45,400
That doesn't do anything for us.

968
00:52:45,400 --> 00:52:46,400
So, yeah.

969
00:52:47,000 --> 00:52:49,000
Anyway, so that's what we want to get to.

970
00:52:49,000 --> 00:52:52,000
And so, that's what I'm aiming for here and let's take a look at how

971
00:52:52,000 --> 00:52:53,400
we're going to do that.

972
00:52:54,800 --> 00:52:58,300
So right now you can see that we have this sort of clip wreck stuff

973
00:52:58,300 --> 00:52:58,700
happening.

974
00:52:58,700 --> 00:53:01,400
When we start off, we set our cliprect index to something that's

975
00:53:01,400 --> 00:53:01,900
invalid.

976
00:53:01,900 --> 00:53:04,400
So the first time through we will always set the clip.

977
00:53:04,400 --> 00:53:08,100
Rect what that means is that if I wanted to, I could move opengl set

978
00:53:08,100 --> 00:53:09,600
screen space into here.

979
00:53:10,300 --> 00:53:14,900
So that when I pull out the clip rect and I do the opengl bind frame

980
00:53:14,900 --> 00:53:18,200
buffer, I could put opengl screen space right here if I wanted to,

981
00:53:18,600 --> 00:53:19,100
right?

982
00:53:20,700 --> 00:53:26,000
And in some sense the the bind the mind frame, buffer called me.

983
00:53:26,000 --> 00:53:26,900
I guess I can put it up here.

984
00:53:26,900 --> 00:53:28,100
I don't know if it matters where we put it.

985
00:53:28,100 --> 00:53:28,600
Exactly.

986
00:53:28,600 --> 00:53:30,000
But you know let's say I put it there.

987
00:53:31,500 --> 00:53:33,800
What I should get here is exactly the same thing right?

988
00:53:33,800 --> 00:53:36,600
There should be no difference between those two so we're happy camper.

989
00:53:37,800 --> 00:53:39,800
When we do opengl set screen, space right there.

990
00:53:40,100 --> 00:53:41,300
So what that means is,

991
00:53:43,900 --> 00:53:45,100
Sorry, I'm so stuffy today.

992
00:53:48,300 --> 00:53:52,900
what that means is, if I have opengl set screen space here, I could

993
00:53:52,900 --> 00:53:56,600
have opengl set screen, space do something more complicated now, and

994
00:53:56,600 --> 00:53:58,800
I'm going to want to do that because now it's going to start to become

995
00:53:58,800 --> 00:53:59,800
potentially at certain

996
00:54:00,800 --> 00:54:02,600
Perspective, projection Matrix, right?

997
00:54:03,700 --> 00:54:07,600
So there's other people that use opengl set screen space and you can

998
00:54:07,600 --> 00:54:08,300
see them here.

999
00:54:08,300 --> 00:54:14,000
So for example, this this sausage element here, open Jill, displayed

1000
00:54:14,000 --> 00:54:14,600
bitmap.

1001
00:54:15,800 --> 00:54:18,700
Right, that's using it.

1002
00:54:18,700 --> 00:54:23,100
But what we kind of need to do is bifurcate these two things.

1003
00:54:23,100 --> 00:54:24,600
Now, because they're not going to be the same.

1004
00:54:27,600 --> 00:54:32,700
So, what we need to do here is kind of move this guy in to this, this

1005
00:54:32,700 --> 00:54:33,400
code here.

1006
00:54:35,900 --> 00:54:39,500
And furthermore, this this isn't really correct at the moment either,

1007
00:54:39,500 --> 00:54:43,600
because we sort of change this from the way it was working before.

1008
00:54:44,900 --> 00:54:50,600
Because I think this one previously did the unprojected encode, so

1009
00:54:50,900 --> 00:54:54,600
this draw region is probably wrong.

1010
00:54:54,600 --> 00:54:59,200
Now, or, you know, this, this opengl rectangle call with the Min P.

1011
00:54:59,200 --> 00:55:01,900
Max B is going to be wrong now because it's passing width and height

1012
00:55:01,900 --> 00:55:04,100
that isn't getting corrected for right.

1013
00:55:04,600 --> 00:55:08,300
So I think what we'd want to do here is passed down.

1014
00:55:11,600 --> 00:55:16,300
coordinates that are you know, - 121

1015
00:55:19,000 --> 00:55:20,900
Because that's what we're actually passing through.

1016
00:55:21,300 --> 00:55:21,800
Right?

1017
00:55:23,400 --> 00:55:25,900
I believe, how is this working here?

1018
00:55:25,900 --> 00:55:28,700
So that's a negative 1 to 1 is x 2 and a shift up.

1019
00:55:31,800 --> 00:55:32,800
Yeah.

1020
00:55:33,600 --> 00:55:36,200
So in order to get the correct screen space stuff out of there, if we

1021
00:55:36,200 --> 00:55:37,500
expect it to go into,

1022
00:55:53,000 --> 00:55:54,600
I'm going to say,

1023
00:55:56,600 --> 00:55:58,500
We're entering our second, our have pleasant.

1024
00:55:59,200 --> 00:56:04,800
I'm going to say, like, in fact, do we have an ability to do this?

1025
00:56:06,100 --> 00:56:06,400
Yeah.

1026
00:56:08,700 --> 00:56:09,300
We don't.

1027
00:56:10,800 --> 00:56:12,900
but you want to know something we're about to

1028
00:56:15,900 --> 00:56:18,800
so yet, one thing that I tend to like to do

1029
00:56:27,200 --> 00:56:29,900
This is kind of an amusing code path.

1030
00:56:30,300 --> 00:56:31,700
I'll show you how it works.

1031
00:56:32,800 --> 00:56:36,500
So if we are in handmade

1032
00:56:38,700 --> 00:56:39,300
Internal.

1033
00:56:48,900 --> 00:56:51,800
If we're in hand me the internal we can just insert on this if we try

1034
00:56:51,800 --> 00:56:54,700
to build a release mode build with it, basically that we would ship to

1035
00:56:54,700 --> 00:56:55,300
customers.

1036
00:56:55,300 --> 00:56:57,500
It's just an error, right?

1037
00:56:58,000 --> 00:56:59,800
Because you can't put that in the

1038
00:57:00,000 --> 00:57:00,500
Anywhere.

1039
00:57:01,200 --> 00:57:03,800
So, this is basically a little thing that says, hey, you can't ship

1040
00:57:03,800 --> 00:57:06,900
any code that has something not implemented that supposed to be

1041
00:57:06,900 --> 00:57:07,600
implemented.

1042
00:57:09,300 --> 00:57:15,500
So I can put that here and I can say to do this, needs to be worked

1043
00:57:15,500 --> 00:57:19,700
out specifically for doing the full screen draw.

1044
00:57:23,600 --> 00:57:26,200
And we'll do that in a second because well, we'll do that when we get

1045
00:57:26,200 --> 00:57:27,500
back to the software renderer, I guess.

1046
00:57:29,000 --> 00:57:34,600
So I'm curious now as well, if I kind of want to think about this

1047
00:57:34,600 --> 00:57:35,900
transform a little bit more.

1048
00:57:36,400 --> 00:57:38,000
Let's go ahead and grab that out here.

1049
00:57:43,100 --> 00:57:46,900
Okay, so if we're in here and we have opengl set screen space.

1050
00:57:46,900 --> 00:57:49,600
Now, one of the things that's true is we don't use the modelview

1051
00:57:49,600 --> 00:57:53,900
Matrix, you know I'm saying, we only have the projection Matrix there

1052
00:57:53,900 --> 00:57:54,700
at the moment.

1053
00:57:54,800 --> 00:57:58,100
So for now I'm just going to load an identity Matrix into the model

1054
00:57:58,100 --> 00:58:00,200
view up front, right?

1055
00:58:00,700 --> 00:58:04,400
Because we're never using that Matrix and I don't need it for anything

1056
00:58:04,700 --> 00:58:05,200
now.

1057
00:58:09,000 --> 00:58:11,500
I think we're probably going to switch to shaders at some point.

1058
00:58:11,600 --> 00:58:15,300
And what you'll see is that when we switch to shaders at that point,

1059
00:58:15,900 --> 00:58:18,900
there's no such thing as projection and model view, matrices anymore.

1060
00:58:18,900 --> 00:58:22,700
Anyway, these are just things from the fixed function pipeline, that

1061
00:58:22,700 --> 00:58:27,300
opengl did for various historical reasons in our actual shaders.

1062
00:58:27,400 --> 00:58:30,200
We will just have one Matrix anyway.

1063
00:58:30,500 --> 00:58:34,500
So I'm just using the projection Matrix because we only really want

1064
00:58:34,500 --> 00:58:38,700
one Matrix for all intents and purposes for doing our

1065
00:58:38,900 --> 00:58:40,000
Wouldn't it computations?

1066
00:58:40,000 --> 00:58:42,100
And everything should be in this Matrix.

1067
00:58:42,100 --> 00:58:48,100
So I'm never going to use the modelview Matrix because when we

1068
00:58:48,100 --> 00:58:51,600
transition over, which I think we probably will you don't have two

1069
00:58:51,600 --> 00:58:54,400
matrices anyway because if you think about it there's really not a lot

1070
00:58:54,400 --> 00:58:55,800
of reason to have two matrices.

1071
00:58:56,000 --> 00:58:59,800
The only reason you ever do to transforms is if you have a secondary

1072
00:58:59,800 --> 00:59:06,600
space you need to do computation in and so we can look at that we'll

1073
00:59:06,600 --> 00:59:07,900
look at that stuff a little bit later.

1074
00:59:07,900 --> 00:59:08,600
It's not really

1075
00:59:08,800 --> 00:59:14,200
Worth putting it into your brain space right now, but basically yet

1076
00:59:14,200 --> 00:59:18,000
that that's why you're not seeing me do anything at the model view is

1077
00:59:18,000 --> 00:59:22,600
because generally won't stick with one Matrix for everything for

1078
00:59:22,600 --> 00:59:24,900
coordinate computation and if we're going to do a second major,

1079
00:59:24,900 --> 00:59:28,300
something else, it would not be so that we could have two stages of

1080
00:59:28,300 --> 00:59:29,000
transforming.

1081
00:59:29,800 --> 00:59:32,400
It would because we need a secondary space for computation for other

1082
00:59:32,400 --> 00:59:33,500
reasons, or something like that.

1083
00:59:34,200 --> 00:59:37,600
All right, so anyway, if we look at the projection Matrix here and

1084
00:59:39,500 --> 00:59:40,300
We take a look what we're doing.

1085
00:59:40,300 --> 00:59:41,400
Here's our aspect ratio.

1086
00:59:41,400 --> 00:59:48,700
Correction, like I was saying before, and you know, this to this is I

1087
00:59:48,700 --> 00:59:51,100
don't even know why we're still bothering with a safe ratio here.

1088
00:59:51,100 --> 00:59:54,400
I mean, really what this is, is just a x to, you know, this is, this

1089
00:59:54,400 --> 00:59:59,800
is just, this is just that and so,

1090
01:00:01,400 --> 01:00:05,200
Really the only safe ratio part of it is just the with over the height

1091
01:00:05,200 --> 01:00:09,000
is the only thing that that was doing and really, we don't even really

1092
01:00:09,000 --> 01:00:11,400
need that because I think we should probably just not run.

1093
01:00:11,600 --> 01:00:15,600
If the width and height aren't both greater than 0, we should just

1094
01:00:15,600 --> 01:00:17,300
turn off the renderer and not run.

1095
01:00:17,300 --> 01:00:20,700
That's probably the safer thing to do so that we don't have to worry

1096
01:00:20,700 --> 01:00:22,700
about degenerate things happening at that case.

1097
01:00:22,700 --> 01:00:23,300
But

1098
01:00:24,700 --> 01:00:29,800
For now those are our two actual pieces of transform information that

1099
01:00:29,800 --> 01:00:30,400
are happening there.

1100
01:00:30,400 --> 01:00:33,100
And again the reason that we're doing that is because we want to put

1101
01:00:33,100 --> 01:00:35,000
things into the correct space for opengl.

1102
01:00:35,000 --> 01:00:38,100
Now, the only thing that makes me a little bit confused.

1103
01:00:38,100 --> 01:00:45,600
Right now is why the two is there because what are we actually passing

1104
01:00:45,600 --> 01:00:48,100
down in terms of coordinates here, right?

1105
01:00:48,100 --> 01:00:51,100
Like, you know,

1106
01:00:57,100 --> 01:00:57,600
Here we go.

1107
01:00:58,900 --> 01:01:03,300
So if the center of our screen is at 0 0, right?

1108
01:01:03,300 --> 01:01:05,700
And you know, we're talking about

1109
01:01:07,500 --> 01:01:09,100
passing down coordinates here.

1110
01:01:10,500 --> 01:01:13,600
If we were going to pass down, coordinates that are negative 1 to 1,

1111
01:01:13,600 --> 01:01:15,500
you know, -1 to 1 or whatever.

1112
01:01:19,000 --> 01:01:24,900
If we're talking about this as our world transform, then, I'm not

1113
01:01:24,900 --> 01:01:31,500
really sure why we were multiplying by 2 there because in theory, we

1114
01:01:31,500 --> 01:01:37,200
want to divide by 2 right 0.5 to

1115
01:01:37,300 --> 01:01:43,000
Ourselves into the right coordinate space, right?

1116
01:01:43,000 --> 01:01:46,700
Because we want negative 1 to 1 or or really, we wouldn't have to

1117
01:01:46,800 --> 01:01:47,800
multiply by anything.

1118
01:01:48,200 --> 01:01:48,600
Right?

1119
01:01:49,900 --> 01:01:52,800
If we're, if we were already talking about a coordinate space, it look

1120
01:01:52,800 --> 01:01:53,400
like that.

1121
01:01:54,200 --> 01:01:58,500
And so I'm not sure why we decided to do that, and I'm going to look

1122
01:01:58,500 --> 01:02:04,000
really at docstoc GL, 4gl perspective or glue perfect.

1123
01:02:04,100 --> 01:02:04,400
Well,

1124
01:02:07,500 --> 01:02:10,600
just to make sure I'm not crazy about that.

1125
01:02:10,700 --> 01:02:12,100
That is not a very good.

1126
01:02:13,000 --> 01:02:14,600
Nope, that's not what I want.

1127
01:02:15,500 --> 01:02:17,300
That is what I want.

1128
01:02:17,300 --> 01:02:17,800
No.

1129
01:02:19,000 --> 01:02:23,600
I just want somebody to have that Matrix drawn out for me.

1130
01:02:23,600 --> 01:02:24,800
That's what I wanted.

1131
01:02:26,600 --> 01:02:31,100
Although, it's like they're missing, even, that's not quite right.

1132
01:02:31,300 --> 01:02:32,000
Come on, folks.

1133
01:02:32,000 --> 01:02:34,100
Just, I just want it laid out as a matrix.

1134
01:02:34,100 --> 01:02:36,100
Please, how hard is that?

1135
01:02:36,600 --> 01:02:37,800
I can't be that hard.

1136
01:02:37,800 --> 01:02:38,300
Can it

1137
01:02:39,500 --> 01:02:41,700
I guess it is that hard.

1138
01:02:51,800 --> 01:02:52,200
Well.

1139
01:03:07,100 --> 01:03:11,600
Let's just pretend I found it or something and ignore it anyway.

1140
01:03:12,900 --> 01:03:15,600
So when I'm looking at this, just only reason that I was thinking that

1141
01:03:15,600 --> 01:03:18,100
it's like basically these are just dependent on what the coordinates

1142
01:03:18,100 --> 01:03:20,000
are that are coming in right.

1143
01:03:20,800 --> 01:03:24,300
And because what we do, what we know is that what we want to come out

1144
01:03:24,300 --> 01:03:28,600
of here is the negative one to one space, right?

1145
01:03:29,900 --> 01:03:35,000
But in terms of what comes in here we have to have an opinion about

1146
01:03:35,000 --> 01:03:36,400
what's actually coming in.

1147
01:03:36,900 --> 01:03:41,800
Order to yeah, in order to.

1148
01:03:43,900 --> 01:03:46,600
Know what those values should be, right.

1149
01:03:47,000 --> 01:03:51,600
And so we know like one thing we do know for sure.

1150
01:03:53,100 --> 01:03:56,700
Is that GL viewport is going to do the viewport transform at the end

1151
01:03:56,700 --> 01:03:59,700
of it so we know exactly what the coordinates need to be there, right?

1152
01:03:59,800 --> 01:04:02,500
We know that this is what's happening to our coordinates going in.

1153
01:04:04,600 --> 01:04:07,200
So we definitely know that they are negative 1 to 1.

1154
01:04:07,200 --> 01:04:10,100
When they come out, that makes sense.

1155
01:04:11,300 --> 01:04:14,400
But what we don't know is what we wanted them to be when they come in.

1156
01:04:14,600 --> 01:04:21,600
And so the x 2 again is kind of arbitrary in this case, right?

1157
01:04:22,000 --> 01:04:27,000
This could just be an identity transform that just corrected for the

1158
01:04:27,600 --> 01:04:28,600
aspect ratio.

1159
01:04:30,700 --> 01:04:34,800
And it just means things get get a 2X scale on them.

1160
01:04:35,600 --> 01:04:36,600
The fact that we

1161
01:04:41,000 --> 01:04:46,700
Are the fact that we are, if we were not doing the x 2 here, it would

1162
01:04:46,700 --> 01:04:48,300
get it to X scale on the right.

1163
01:04:48,900 --> 01:04:50,100
So, in theory, right?

1164
01:04:50,100 --> 01:04:54,600
Like I could just get rid of this and it would just change the size if

1165
01:04:54,600 --> 01:04:55,100
that makes sense.

1166
01:04:55,200 --> 01:04:55,500
Oops.

1167
01:05:08,500 --> 01:05:10,700
It would not change the behavior at all.

1168
01:05:10,700 --> 01:05:16,200
It was in terms of anything else, it just means that were not getting

1169
01:05:16,900 --> 01:05:18,700
that scaling, right?

1170
01:05:19,500 --> 01:05:22,600
So, if I come in here and I turn it back to two,

1171
01:05:27,000 --> 01:05:29,800
then we get that that scaling, right?

1172
01:05:31,700 --> 01:05:34,000
So that's really all that's happening there.

1173
01:05:34,500 --> 01:05:36,400
And yeah.

1174
01:05:49,300 --> 01:05:51,800
I'm just not sure we care about that, right?

1175
01:05:51,800 --> 01:05:54,000
I'm just not sure we care about that at all.

1176
01:05:54,300 --> 01:05:57,700
It seems to me like that's just Superfluous and I can't remember it.

1177
01:05:57,700 --> 01:05:59,800
I feel like the only reason we had that

1178
01:06:00,000 --> 01:06:05,400
When there was because we were previously passing coordinates that

1179
01:06:05,400 --> 01:06:09,400
were 02 width.

1180
01:06:11,000 --> 01:06:13,400
And 02 height.

1181
01:06:14,600 --> 01:06:15,200
Right.

1182
01:06:15,200 --> 01:06:17,200
That's what we were passing down.

1183
01:06:17,600 --> 01:06:20,400
Then we change to just passing zero to one

1184
01:06:21,900 --> 01:06:22,600
On both.

1185
01:06:23,200 --> 01:06:28,400
And if we're passing 0 to 1, then you can see why the transform would

1186
01:06:28,400 --> 01:06:33,500
need to make it 0 to 2, because it's going to shift it back by

1187
01:06:33,500 --> 01:06:36,100
negative 1 in order to center it.

1188
01:06:36,400 --> 01:06:40,300
But now we're not doing that anymore right now.

1189
01:06:40,300 --> 01:06:42,900
We're just passing straight coordinates and we're not trying to

1190
01:06:42,900 --> 01:06:43,900
correct for that.

1191
01:06:44,000 --> 01:06:48,500
So the only thing that we actually need to correct for is that safe

1192
01:06:48,500 --> 01:06:50,600
ratio, you know what I'm saying?

1193
01:06:52,400 --> 01:06:56,600
And so I feel like we don't really need that anymore.

1194
01:06:56,600 --> 01:07:00,500
Like I don't think we need that x 2.

1195
01:07:01,300 --> 01:07:05,500
I just we would again just adjust the height of the camera and I don't

1196
01:07:05,500 --> 01:07:07,700
think there's any other reason for that too.

1197
01:07:08,300 --> 01:07:10,900
I could be wrong about that and we're going to have to work out the

1198
01:07:10,900 --> 01:07:13,800
projection math in a second here anyway.

1199
01:07:14,000 --> 01:07:21,800
So I suppose you know, hold that thought but that's just

1200
01:07:21,900 --> 01:07:24,600
What it feels like to me, it feels like that was a Superfluous.

1201
01:07:24,600 --> 01:07:28,000
That was left over from something we were trying to do before that we

1202
01:07:28,000 --> 01:07:32,400
no longer have to actually do so let's just keep that in mind.

1203
01:07:34,100 --> 01:07:34,600
All right.

1204
01:07:35,600 --> 01:07:37,200
So let's talk about this again.

1205
01:07:37,200 --> 01:07:40,000
I already explained the projection Matrix on a previous episode, so

1206
01:07:40,000 --> 01:07:43,700
you're going to want to get familiar with that if you haven't already,

1207
01:07:43,700 --> 01:07:48,200
but we never really talked about the Z coordinate of the projection

1208
01:07:48,200 --> 01:07:50,200
Matrix and we need to start talking about that now.

1209
01:07:50,200 --> 01:07:52,800
So let's go ahead and talk about that.

1210
01:07:55,500 --> 01:07:58,800
Okay, so if you take a look at what's happening here, you can see.

1211
01:07:58,900 --> 01:08:05,700
We're trying to divide by a z value, and we are trying to multiply by

1212
01:08:05,700 --> 01:08:07,700
the focal length, right?

1213
01:08:08,000 --> 01:08:11,300
So if I were to phrase this more concisely, that it is phrased at the

1214
01:08:11,300 --> 01:08:13,800
moment, it would look like this.

1215
01:08:15,000 --> 01:08:15,900
Correct.

1216
01:08:16,500 --> 01:08:19,200
So we're trying to take this value that's coming in and we're trying

1217
01:08:19,200 --> 01:08:22,800
to multiply it by this coefficient in order to do our projection.

1218
01:08:22,800 --> 01:08:28,899
But what you'll notice about this is the Divide, involves a value that

1219
01:08:28,899 --> 01:08:31,800
coming in from the point itself.

1220
01:08:31,800 --> 01:08:37,899
Because you can see this distance 2pz, actually takes into account

1221
01:08:38,300 --> 01:08:40,700
more than just that value, right?

1222
01:08:40,700 --> 01:08:44,100
So the distance 2pz here that we compute, we do this distance.

1223
01:08:44,800 --> 01:08:46,100
Above Target - 4 Z.

1224
01:08:46,200 --> 01:08:46,800
The floor.

1225
01:08:46,800 --> 01:08:51,800
Z comes from the object transform, which is /, Sprite right now.

1226
01:08:51,800 --> 01:08:54,100
Why am I harping on that as being so important?

1227
01:08:54,100 --> 01:08:57,700
Well, the reason I'm harping on that as being so important is, if you

1228
01:08:57,700 --> 01:08:59,800
think about what's happening in our Matrix here,

1229
01:09:01,700 --> 01:09:02,399
Right?

1230
01:09:03,300 --> 01:09:06,600
We are trying to produce a result, right?

1231
01:09:07,899 --> 01:09:13,600
A resultant vector and what's in our Matrix here, multiplies by these

1232
01:09:13,600 --> 01:09:14,200
things.

1233
01:09:14,800 --> 01:09:20,600
All we can do is multiply if we want to include this in a divisor, we

1234
01:09:20,600 --> 01:09:22,800
have no way of doing that in a matrix.

1235
01:09:22,899 --> 01:09:28,000
Right, there is no way to take something from here and put it in a

1236
01:09:28,000 --> 01:09:29,200
numerator.

1237
01:09:29,500 --> 01:09:32,200
Sorry, a denominator here, right?

1238
01:09:32,399 --> 01:09:34,300
All I have is coefficients.

1239
01:09:34,500 --> 01:09:37,500
All I have is the ability to do this in.

1240
01:09:37,700 --> 01:09:38,500
Every slot.

1241
01:09:40,300 --> 01:09:40,800
Right.

1242
01:09:40,899 --> 01:09:45,899
That's all I can produce so I can have an arbitrary fraction here you

1243
01:09:45,899 --> 01:09:49,800
know I can have one over the focal length or whatever I want here

1244
01:09:50,200 --> 01:09:54,000
because the focal length is a constant that's part of the transform so

1245
01:09:54,000 --> 01:09:58,700
it could go in a numerator because I just stick it already pre divided

1246
01:09:58,700 --> 01:10:03,700
into my Matrix when I create my Matrix but the Matrix is constant for

1247
01:10:03,700 --> 01:10:07,100
a batch of Sprites and this is the thing that varies per Sprite.

1248
01:10:09,500 --> 01:10:13,100
And I need to get something that varies for sprite into a denominator

1249
01:10:13,100 --> 01:10:14,400
which I can't do.

1250
01:10:16,000 --> 01:10:16,600
Right.

1251
01:10:17,500 --> 01:10:21,300
So that's where that synthetic divide comes in, right?

1252
01:10:21,700 --> 01:10:24,800
That is where we sort of augment this transform.

1253
01:10:25,100 --> 01:10:27,600
And remember, that's why I was saying, oh, that's where the

1254
01:10:27,600 --> 01:10:33,400
homogeneous coordinates come in, what's defined to happen is after the

1255
01:10:33,400 --> 01:10:38,900
transform is done, they'll there will be a value in the W coordinate.

1256
01:10:39,100 --> 01:10:43,100
Right whatever the W Prime coordinate is that comes out here, right?

1257
01:10:43,100 --> 01:10:46,900
I'm going to have an X Prime y Prime Z Prime, and it w Prime.

1258
01:10:47,800 --> 01:10:52,400
What I am going to do is after I do this, not part of the Matrix math.

1259
01:10:52,600 --> 01:10:55,700
I'm just going to divide everything by the W Prime

1260
01:11:01,500 --> 01:11:07,400
So basically what I'm saying is whatever my w comes out to be I will

1261
01:11:07,400 --> 01:11:10,900
always end up normalizing by it.

1262
01:11:11,300 --> 01:11:14,200
So the W always comes out to 1.

1263
01:11:14,500 --> 01:11:19,400
That's just the rule and all the rest of my coordinates get / it.

1264
01:11:19,400 --> 01:11:21,700
However it's going to go right?

1265
01:11:22,700 --> 01:11:28,700
And as we learned before a Maffei person helped us before I asked why

1266
01:11:28,900 --> 01:11:30,700
we even use the word homogeneous.

1267
01:11:33,300 --> 01:11:37,300
You'll see that talked about for this and that is actually because of

1268
01:11:37,300 --> 01:11:38,100
that W.

1269
01:11:38,500 --> 01:11:42,800
So what the homogeneous actually means is homogeneous refers to space

1270
01:11:42,800 --> 01:11:47,400
spaces or number systems where you can represent the same number

1271
01:11:47,400 --> 01:11:51,900
multiple ways in terms of scaling, right?

1272
01:11:52,900 --> 01:11:55,300
And what you can see is this is a four dimensional vector.

1273
01:11:55,600 --> 01:11:58,900
And what we're saying is we don't care what the four dimensional

1274
01:11:58,900 --> 01:11:59,800
Vector is that comes

1275
01:12:00,200 --> 01:12:04,000
We're going to divide so that the W coordinates always one which means

1276
01:12:04,000 --> 01:12:08,900
that there's a whole family of vectors that all mean the same thing,

1277
01:12:09,000 --> 01:12:12,500
they have different scalings, right?

1278
01:12:13,500 --> 01:12:18,100
So I could multiply everything in here by some scale factor whatever I

1279
01:12:18,100 --> 01:12:21,100
want and I'm always no matter what a is.

1280
01:12:21,100 --> 01:12:25,400
I'm always talking about the same point because the / the W Prime at

1281
01:12:25,400 --> 01:12:29,700
the end if there's a scale in Bear, right?

1282
01:12:29,700 --> 01:12:29,800
If

1283
01:12:30,200 --> 01:12:36,800
and I guess I wrote that poorly, you know, it's if I have sort of a

1284
01:12:37,700 --> 01:12:38,200
and then

1285
01:12:40,000 --> 01:12:46,200
That right whatever this a is I'm going to produce the same points

1286
01:12:47,100 --> 01:12:50,900
always right because I can just arbitrarily scale this four

1287
01:12:50,900 --> 01:12:55,200
dimensional vector by 5 and you know since everything gets multiplied

1288
01:12:55,200 --> 01:12:58,900
by five when we actually go through and do the Divide out by the W

1289
01:12:58,900 --> 01:13:01,200
Prime that 5 gets canceled, right?

1290
01:13:01,200 --> 01:13:04,100
It just goes away because everything was scaled by it.

1291
01:13:05,000 --> 01:13:06,500
So that's where the homogeneous comes from.

1292
01:13:06,500 --> 01:13:09,400
Is the fact that you can scale these vectors however you want.

1293
01:13:09,600 --> 01:13:10,000
Right.

1294
01:13:11,800 --> 01:13:18,400
So anyway, that is how I am able to get my Z into the Divide.

1295
01:13:18,700 --> 01:13:23,200
You can see the Z has to come into the W component somehow, because

1296
01:13:23,200 --> 01:13:27,400
the only thing that's going to end up doing a divided is the W.

1297
01:13:27,400 --> 01:13:29,100
So, it's got to go there, right?

1298
01:13:29,600 --> 01:13:32,500
So, let's just start thinking about what that actually means.

1299
01:13:32,600 --> 01:13:34,100
I'm going to go ahead and erase oops.

1300
01:13:38,700 --> 01:13:39,300
Here we go.

1301
01:13:50,300 --> 01:13:54,700
Okay, so I'm going to go ahead and start talking about that.

1302
01:13:55,600 --> 01:14:02,300
So let's say all I wanted to do was divided by the incoming Z.

1303
01:14:02,400 --> 01:14:03,700
That's all I wanted to do.

1304
01:14:05,400 --> 01:14:07,800
Well, what would we want our x-coordinate to be?

1305
01:14:07,800 --> 01:14:10,400
Well, we just want to divide the x coordinate by Z.

1306
01:14:10,600 --> 01:14:13,700
So obviously, we would just not change it, right?

1307
01:14:13,800 --> 01:14:15,500
We would just have it be X.

1308
01:14:16,300 --> 01:14:16,900
Right?

1309
01:14:17,000 --> 01:14:19,800
1 times x 0 times y 0, x 0, x 1.

1310
01:14:19,800 --> 01:14:20,400
So it's X.

1311
01:14:22,000 --> 01:14:23,600
What would I do for my y?

1312
01:14:23,600 --> 01:14:27,900
Same thing, 0 times x 1 x y 0, x e0 x 1.

1313
01:14:28,000 --> 01:14:30,500
Write X Y, what would I do for my Z?

1314
01:14:30,600 --> 01:14:31,800
Don't even care.

1315
01:14:32,200 --> 01:14:34,500
We might as well leave it the same, but we don't care.

1316
01:14:34,700 --> 01:14:36,600
Because we're not talking about that yet, right?

1317
01:14:37,300 --> 01:14:40,400
And then finally, what do I want for my w-well?

1318
01:14:40,400 --> 01:14:46,000
I want to divide everything by Z so actually my w coordinate, which

1319
01:14:46,000 --> 01:14:50,200
used to look like that to produce this, right?

1320
01:14:50,200 --> 01:14:51,200
Because we just want to one there.

1321
01:14:51,400 --> 01:14:58,400
There would be no divide now has to look like this right 0 times 0 0

1322
01:14:58,400 --> 01:14:59,700
times x 0 x y.

1323
01:15:00,000 --> 01:15:02,900
1 x e0 x w.

1324
01:15:04,500 --> 01:15:12,800
Now, what I get when I do my divide right nor that is I get X over Z,

1325
01:15:13,300 --> 01:15:13,500
right?

1326
01:15:13,500 --> 01:15:19,300
Because the W coordinate is z y over z z over Z and 1.

1327
01:15:20,800 --> 01:15:21,800
And there's my divide.

1328
01:15:23,600 --> 01:15:25,600
so, I can produce

1329
01:15:27,300 --> 01:15:32,900
Any single divide value that I want now because of this extra Row, the

1330
01:15:32,900 --> 01:15:35,000
homogeneous part of this Matrix.

1331
01:15:35,000 --> 01:15:41,600
The additional coordinates gives me the ability to prepare a divisor

1332
01:15:42,000 --> 01:15:45,100
using any combination of the input that I want.

1333
01:15:46,100 --> 01:15:52,200
So now, instead of having to be handicapped by the fact that I cannot

1334
01:15:52,200 --> 01:15:53,400
do it, right?

1335
01:15:54,200 --> 01:15:58,200
I cannot control divides by things that come in the input.

1336
01:15:58,200 --> 01:16:01,700
Now, I do have the ability to do so it's just how I produce my w

1337
01:16:01,700 --> 01:16:02,400
coordinate.

1338
01:16:05,300 --> 01:16:06,100
You see how that works.

1339
01:16:07,100 --> 01:16:11,300
So basically we can think of this Matrix, as an arbitrary transform,

1340
01:16:11,300 --> 01:16:18,600
that's allows us to produce an x, a y, and a z, and then a divisor, so

1341
01:16:18,600 --> 01:16:23,000
that we do have one opportunity to do a global divide across each of

1342
01:16:23,000 --> 01:16:25,300
the coordinates computed however we want it.

1343
01:16:26,300 --> 01:16:29,600
Which happens to be just enough to produce a perspective transform.

1344
01:16:30,700 --> 01:16:31,200
Right?

1345
01:16:32,200 --> 01:16:35,900
So now that we have that knowledge, right?

1346
01:16:35,900 --> 01:16:39,000
And remember things are reversed here because this our seas are stored

1347
01:16:39,000 --> 01:16:41,500
column-major, not row major and we talked about that before.

1348
01:16:41,500 --> 01:16:42,600
So remember what that is.

1349
01:16:43,600 --> 01:16:46,900
So this Matrix is actually flipped from from math notation

1350
01:16:46,900 --> 01:16:47,600
unfortunately.

1351
01:16:48,400 --> 01:16:52,100
So what we'd want to do here is if we were going to do it to match our

1352
01:16:52,100 --> 01:16:54,100
Matrix it would look like that, right?

1353
01:16:54,100 --> 01:16:55,200
That's where we'd put.

1354
01:16:56,300 --> 01:17:00,800
That coordinate and if we put that coordinate there right now our

1355
01:17:00,800 --> 01:17:03,700
projection Matrix whenever it does, its projection will be taking the

1356
01:17:03,700 --> 01:17:06,300
Z coordinate and it will be forcing everything to / it.

1357
01:17:06,300 --> 01:17:12,500
Now, what we know is that we don't actually want to divide by just the

1358
01:17:12,500 --> 01:17:14,500
Z coordinate, right?

1359
01:17:14,700 --> 01:17:18,800
So if we were to say inside are, you know, RP coordinates here.

1360
01:17:18,900 --> 01:17:21,300
If you were to take our raw XY,

1361
01:17:25,500 --> 01:17:29,300
And we wanted to take the distance to p z is the Z coordinate.

1362
01:17:29,300 --> 01:17:32,100
We could bundle that up here like so right.

1363
01:17:32,100 --> 01:17:37,100
We'd say we have projected XY, projected, XY raw.

1364
01:17:37,200 --> 01:17:37,700
I'm sorry.

1365
01:17:39,400 --> 01:17:40,500
Rolex, why?

1366
01:17:42,900 --> 01:17:43,700
Row XY.

1367
01:17:44,000 --> 01:17:46,500
And then here, we've just got our distance to pz.

1368
01:17:47,500 --> 01:17:49,600
So if we were to take that

1369
01:17:50,700 --> 01:17:54,900
What we would see is our camera focal length is now no longer in

1370
01:17:54,900 --> 01:17:55,300
there.

1371
01:17:55,400 --> 01:17:59,200
We're just passing the thing that varies per Sprite and we could get

1372
01:17:59,200 --> 01:17:59,800
rid of

1373
01:18:00,000 --> 01:18:03,600
This piece of information entirely now our scale unfortunately.

1374
01:18:08,000 --> 01:18:13,900
We still don't know, we've slept to produce that by this equation,

1375
01:18:14,200 --> 01:18:14,800
right?

1376
01:18:15,200 --> 01:18:20,100
So we still have to produce that unfortunately but our p-value we

1377
01:18:20,100 --> 01:18:22,700
could pass through as it was right.

1378
01:18:32,100 --> 01:18:35,400
So, what's interesting about that is, this is in terms of scale, we're

1379
01:18:35,400 --> 01:18:38,500
going to have to unwind how that works because we want all of our

1380
01:18:38,500 --> 01:18:40,400
stuff to be passed down correctly.

1381
01:18:43,400 --> 01:18:45,100
So we'll have to unwind that.

1382
01:18:45,100 --> 01:18:48,900
This is going to be a unamusing two-step process.

1383
01:18:48,900 --> 01:18:53,900
But so yeah, I guess our scale values are going to have to just come

1384
01:18:53,900 --> 01:18:56,100
out to be one now and basically the scale.

1385
01:18:56,100 --> 01:18:58,000
Yeah, well, we'll see in a second.

1386
01:18:58,400 --> 01:19:00,100
So I'm going to stuff that for now.

1387
01:19:00,100 --> 01:19:01,100
And we're going to get rid of this.

1388
01:19:01,900 --> 01:19:02,900
And here we're going to pass them down.

1389
01:19:02,900 --> 01:19:05,600
So we're just going to pass down the row XY and where the distance to

1390
01:19:05,600 --> 01:19:10,500
pz and the focal length, I guess what we could do is say we'll put the

1391
01:19:10,500 --> 01:19:13,000
folk will for now just to get do baby steps.

1392
01:19:13,200 --> 01:19:16,100
Again, will actually take the focal like been there since we're not

1393
01:19:16,100 --> 01:19:17,500
passing it down yet, right?

1394
01:19:18,800 --> 01:19:22,700
So now what we know is to reproduce this, we just want to be able to

1395
01:19:22,700 --> 01:19:27,600
do the / these by this value, right?

1396
01:19:28,700 --> 01:19:31,600
And so, in order to do the divided by this value,

1397
01:19:34,300 --> 01:19:36,900
Like you can see here it's multiplying the row XY.

1398
01:19:37,600 --> 01:19:39,800
We're just going to want to flip this, right?

1399
01:19:39,800 --> 01:19:42,600
Because we're going to be doing a / it, not a x.

1400
01:19:42,600 --> 01:19:45,200
It like we were doing there so it's going to have to be flipped around

1401
01:19:46,400 --> 01:19:50,200
and then when we do this here, when the Z coordinate comes in, we will

1402
01:19:50,200 --> 01:19:54,700
now actually be able to shove that into the W coordinate which will do

1403
01:19:54,700 --> 01:19:55,900
that divided for us.

1404
01:19:56,400 --> 01:19:56,900
Right.

1405
01:19:58,300 --> 01:19:59,600
And so we're not quitting.

1406
01:19:59,800 --> 01:20:02,400
Now we got to talk about the scale but just so you can see what

1407
01:20:02,400 --> 01:20:03,500
happens when we run it.

1408
01:20:04,400 --> 01:20:05,800
Here you go, right?

1409
01:20:06,900 --> 01:20:07,300
Okay.

1410
01:20:08,100 --> 01:20:16,800
So not particularly reassuring here as you can see, but, you know, all

1411
01:20:16,800 --> 01:20:18,500
of the rectangle, still work correctly.

1412
01:20:18,500 --> 01:20:22,500
And if you look at why the rectangles work correctly, it's because

1413
01:20:22,500 --> 01:20:24,900
they don't need that scale value, right?

1414
01:20:25,000 --> 01:20:28,000
I don't think the rectangles, well, actually, is that true?

1415
01:20:44,700 --> 01:20:46,900
The rectangle shouldn't need, the scale value as well.

1416
01:20:46,900 --> 01:20:50,300
And setting the scale value to one is probably

1417
01:20:55,000 --> 01:20:56,500
I'm gonna have to go step through that to be honest.

1418
01:20:56,500 --> 01:20:58,300
I don't remember exactly how we did the scaling.

1419
01:21:03,300 --> 01:21:06,600
But yeah, I don't know why that worked.

1420
01:21:06,600 --> 01:21:09,700
I would have expected it not to work yet because we haven't really

1421
01:21:09,700 --> 01:21:12,200
addressed some of the finer points of that there.

1422
01:21:24,000 --> 01:21:25,400
Casey is very confused.

1423
01:21:25,800 --> 01:21:27,400
So, hold on.

1424
01:21:27,400 --> 01:21:31,100
I'm sorry to interrupt the explanation there of what we were trying to

1425
01:21:31,100 --> 01:21:33,800
do but you know, when I get confused, I have to go investigate.

1426
01:21:33,800 --> 01:21:36,500
So I can't very well continue an explanation when I'm not, I'm

1427
01:21:36,500 --> 01:21:37,100
confused.

1428
01:21:38,000 --> 01:21:41,500
So when we do our rectangles, I would have thought that those would

1429
01:21:41,500 --> 01:21:45,000
have had to have the scale correct as well because they the rectangles

1430
01:21:45,000 --> 01:21:47,300
get Scaled just like everything else gets scaled.

1431
01:21:47,400 --> 01:21:48,800
So when we do a push wrecked,

1432
01:21:54,300 --> 01:21:58,000
It does the scaling just like everything else right here is it you

1433
01:21:58,000 --> 01:21:58,400
know?

1434
01:22:00,800 --> 01:22:02,100
Here is getting the basis.

1435
01:22:02,300 --> 01:22:07,100
Scale comes back and multiplies it by the dimension and off it goes,

1436
01:22:07,100 --> 01:22:07,700
right?

1437
01:22:08,100 --> 01:22:12,800
So you know that that rectangle Dimension is the scale.

1438
01:22:13,100 --> 01:22:14,400
Jim that comes through.

1439
01:22:16,400 --> 01:22:20,600
That's should be no different from the Sprite case.

1440
01:22:22,400 --> 01:22:26,200
Which is doing exactly that right here, spit map.

1441
01:22:28,700 --> 01:22:29,900
It gets back at dimension.

1442
01:22:32,200 --> 01:22:36,300
It's multiplying by the scale of just like before.

1443
01:22:59,200 --> 01:23:01,700
Okay, well no, I guess.

1444
01:23:01,700 --> 01:23:03,300
No, I really don't see it.

1445
01:23:03,500 --> 01:23:07,600
So, in one case, we have the x axis and the y axis getting multiplied

1446
01:23:07,600 --> 01:23:08,500
by the size.

1447
01:23:09,200 --> 01:23:13,000
In the other case, we just store the dim directly, but I'd really just

1448
01:23:13,000 --> 01:23:16,600
don't see why those two things would produce subtly different results

1449
01:23:16,600 --> 01:23:17,000
for us.

1450
01:23:17,400 --> 01:23:19,100
So you can see here, we've got

1451
01:23:21,100 --> 01:23:24,900
The rectangle call it scoring opengl rectangles passing the dimension

1452
01:23:24,900 --> 01:23:27,600
that it gets in from the code.

1453
01:23:27,700 --> 01:23:29,700
And that's it right?

1454
01:23:30,100 --> 01:23:33,500
And in this case we're doing the exact same thing as far as I know,

1455
01:23:33,600 --> 01:23:33,900
right.

1456
01:23:33,900 --> 01:23:39,000
You can see it here where these are already X that Dimension and you

1457
01:23:39,000 --> 01:23:43,700
know they're getting expanded out to it but I just don't understand.

1458
01:23:46,100 --> 01:23:49,200
I don't understand why the rectangle case is working because the

1459
01:23:49,200 --> 01:23:52,500
rectangle case I would have thought wouldn't have worked any

1460
01:23:52,500 --> 01:23:53,900
differently from this one.

1461
01:23:54,900 --> 01:23:56,600
From this case, right?

1462
01:23:57,100 --> 01:23:59,800
That that just doesn't make any sense to me because

1463
01:24:00,000 --> 01:24:00,400
Theory.

1464
01:24:00,400 --> 01:24:02,500
The they should have been equivalent.

1465
01:24:03,100 --> 01:24:04,400
They're both using the scale value.

1466
01:24:04,400 --> 01:24:06,500
That comes back either.

1467
01:24:06,700 --> 01:24:08,400
Both of them should have worked or neither of them.

1468
01:24:08,400 --> 01:24:12,000
Should have worked, not one worked on the other didn't.

1469
01:24:12,100 --> 01:24:15,800
So there's a subtlety here that I'm feeling to appreciate in terms of

1470
01:24:18,300 --> 01:24:19,800
What's going on with?

1471
01:24:23,600 --> 01:24:24,900
With the bitmaps.

1472
01:24:29,900 --> 01:24:31,500
And I really don't know what that is.

1473
01:24:32,500 --> 01:24:34,400
So I suppose.

1474
01:24:34,400 --> 01:24:36,900
One thing is, if they're getting clipped

1475
01:24:40,300 --> 01:24:43,000
Do rectangles not get clipped.

1476
01:24:49,300 --> 01:24:55,800
In some way that that bitmaps do you know like are we throwing them

1477
01:24:55,800 --> 01:24:57,900
out or something?

1478
01:25:03,400 --> 01:25:07,000
In a way because, you know, because of some piece of information.

1479
01:25:14,100 --> 01:25:15,900
I don't know that's really bizarre.

1480
01:25:18,700 --> 01:25:22,000
So I guess, there's one way we can figure that out relatively quickly,

1481
01:25:22,000 --> 01:25:22,600
right?

1482
01:25:24,300 --> 01:25:26,200
Whether there's any sort of funny business going on there.

1483
01:25:26,200 --> 01:25:29,500
So let me just check what I might do is go pull out all the sort stuff

1484
01:25:29,500 --> 01:25:33,000
first and then will, you know, that'll probably take me the rest of

1485
01:25:33,000 --> 01:25:36,800
the stream and then so that's all gone.

1486
01:25:37,200 --> 01:25:42,400
And then we can just focus on debugging that just the transform part.

1487
01:25:42,400 --> 01:25:44,700
Next tomorrow, extreme.

1488
01:25:46,600 --> 01:25:47,600
But yeah, that's really weird.

1489
01:25:47,600 --> 01:25:53,400
So I want to check to make sure we're actually getting into here and

1490
01:25:53,500 --> 01:25:55,600
and getting reasonable values.

1491
01:25:57,400 --> 01:26:00,200
I mean those look sane, right?

1492
01:26:11,600 --> 01:26:14,500
You know, those those don't look like ridiculous values.

1493
01:26:15,200 --> 01:26:19,000
So you know, I don't understand why we wouldn't have something

1494
01:26:19,000 --> 01:26:19,700
reasonable here.

1495
01:26:19,700 --> 01:26:26,200
Let me let me go ahead and see you next and Y Min x max y, Max

1496
01:26:27,500 --> 01:26:30,700
X + y, 0.

1497
01:26:37,200 --> 01:26:37,800
That.

1498
01:26:40,300 --> 01:26:41,600
That may be the difference.

1499
01:26:41,600 --> 01:26:42,500
Let's take a look.

1500
01:26:43,600 --> 01:26:44,900
Let's take a look folks.

1501
01:26:50,000 --> 01:26:53,300
We may have just lucked out that I happen to see that right now.

1502
01:26:53,600 --> 01:26:56,500
So it doesn't take very long to find if this is, in fact the case.

1503
01:26:56,500 --> 01:26:56,800
Yes.

1504
01:26:56,800 --> 01:26:57,200
Yes.

1505
01:26:57,500 --> 01:26:59,000
Thank you so much for all of that.

1506
01:26:59,300 --> 01:26:59,700
Yeah.

1507
01:27:00,200 --> 01:27:01,300
Well, there you go.

1508
01:27:02,700 --> 01:27:06,600
So the difference is in opengl rectangle, we were actually passing the

1509
01:27:06,600 --> 01:27:13,200
Z coordinate and in in bitmap we weren't.

1510
01:27:14,200 --> 01:27:17,100
So the reason was not because there is anything different about, the

1511
01:27:17,100 --> 01:27:21,100
two cases in the head and it's because in the back end, we never

1512
01:27:21,100 --> 01:27:23,400
passed the actual Z.

1513
01:27:24,900 --> 01:27:29,900
So, if we just switch to passing the Z, we should be fine actually.

1514
01:27:36,800 --> 01:27:37,600
Okay, there we go.

1515
01:27:39,000 --> 01:27:39,900
So there we go.

1516
01:27:39,900 --> 01:27:42,800
And now one of the nice things about this right?

1517
01:27:42,800 --> 01:27:46,100
Is that now we get rid of that scale value as well because now all of

1518
01:27:46,100 --> 01:27:48,000
that's happening in the back end transform.

1519
01:27:48,800 --> 01:27:50,000
So inside render group.

1520
01:27:50,000 --> 01:27:55,300
If we take a look at that render entity basis P maneuvering, that's

1521
01:27:55,300 --> 01:27:55,800
going on,

1522
01:27:57,700 --> 01:28:02,000
We now can get rid of the scale value entirely and remove it

1523
01:28:02,000 --> 01:28:04,600
everywhere that anyone was doing anything with it, right?

1524
01:28:04,600 --> 01:28:09,900
Because it's not, it's going to happen as a natural result of what was

1525
01:28:09,900 --> 01:28:10,100
that?

1526
01:28:10,100 --> 01:28:11,200
What was going on before?

1527
01:28:12,300 --> 01:28:16,000
So in terms of like this stuff here where we get the size and that

1528
01:28:16,000 --> 01:28:20,200
sort of stuff that's happening here, we don't need to take into

1529
01:28:20,200 --> 01:28:22,500
account the the basis anymore.

1530
01:28:22,900 --> 01:28:25,200
We only need just the raw size for Stuff.

1531
01:28:26,900 --> 01:28:28,500
Wherever we were operating on it.

1532
01:28:28,500 --> 01:28:32,800
So again, that that basis, that scale just goes away basis that scale

1533
01:28:32,800 --> 01:28:33,700
goes away here.

1534
01:28:34,600 --> 01:28:38,300
And so, that's again, another simplification that we can do, right?

1535
01:28:39,200 --> 01:28:42,800
And similarly, we should be able to get rid of the valid as well.

1536
01:28:43,400 --> 01:28:46,800
And so, what you can see here is now when we get our entity basis, B

1537
01:28:46,800 --> 01:28:51,000
result stuff done, really, it's just going to be a V3, right?

1538
01:28:51,800 --> 01:28:53,300
We should be able to now just go.

1539
01:28:53,300 --> 01:28:53,800
Hey,

1540
01:28:56,100 --> 01:28:57,700
let's get rid of that entirely.

1541
01:28:59,400 --> 01:29:00,000
and,

1542
01:29:01,600 --> 01:29:02,700
It's just a V3.

1543
01:29:03,500 --> 01:29:04,200
That's all it is.

1544
01:29:07,200 --> 01:29:07,700
Right.

1545
01:29:16,300 --> 01:29:17,300
Which is pretty great.

1546
01:29:26,100 --> 01:29:28,100
And simplifies a lot of stuff for us.

1547
01:29:34,000 --> 01:29:34,400
Oops.

1548
01:29:35,700 --> 01:29:38,600
I got a I keep meaning to one of these days.

1549
01:29:38,600 --> 01:29:40,200
I got to update my for coder.

1550
01:29:40,500 --> 01:29:44,300
I, you know, have I always keep it updated on my dead machine and I

1551
01:29:44,300 --> 01:29:45,800
haven't updated it on the street machine.

1552
01:29:45,800 --> 01:29:49,700
And I made some changes to my config and I also, you know, updated to

1553
01:29:49,700 --> 01:29:50,700
the latest version and stuff.

1554
01:29:50,700 --> 01:29:54,000
And so now, some occasionally I have a hotkey that's different or

1555
01:29:54,000 --> 01:29:54,500
whatever.

1556
01:29:56,000 --> 01:29:56,300
So

1557
01:30:08,900 --> 01:30:11,100
And it is very specifically that one.

1558
01:30:18,300 --> 01:30:20,600
Alright, almost there.

1559
01:30:33,500 --> 01:30:35,100
And we should be good now.

1560
01:30:36,600 --> 01:30:39,300
And so now we've gotten rid of just a bunch of stuff here.

1561
01:30:39,300 --> 01:30:39,600
Right?

1562
01:30:39,600 --> 01:30:43,300
This is getting much better and we still need to pull out all that

1563
01:30:43,300 --> 01:30:45,900
sorting code that we don't need anymore.

1564
01:30:46,500 --> 01:30:48,700
But let's just keep going down this path a little bit here.

1565
01:30:50,100 --> 01:30:53,600
So now we can sort of see like all right in the orthographic case, we

1566
01:30:53,600 --> 01:30:54,300
do nothing.

1567
01:30:56,100 --> 01:30:58,000
You know, result is just equal to the incoming.

1568
01:31:01,300 --> 01:31:02,300
Point shifted by the camera.

1569
01:31:02,300 --> 01:31:04,300
Transform, look, that's it, right?

1570
01:31:06,000 --> 01:31:06,700
In the other case.

1571
01:31:06,700 --> 01:31:10,400
Now we've got a little bit of business that we do here, but it's

1572
01:31:10,400 --> 01:31:18,400
getting, it's getting increasingly more and more and more concise,

1573
01:31:19,100 --> 01:31:19,500
right?

1574
01:31:20,500 --> 01:31:24,800
So we're going to probably get rid of Ortho wife, Rumsey entirely,

1575
01:31:26,000 --> 01:31:26,900
Is my suspicion.

1576
01:31:28,500 --> 01:31:33,100
So yeah, we are going to have to take a look at some of these and just

1577
01:31:34,400 --> 01:31:35,700
Figure out exactly what we want to do here.

1578
01:31:35,700 --> 01:31:38,900
But so this stuff should be getting

1579
01:31:50,700 --> 01:31:52,200
Should be getting cleaner as we go.

1580
01:31:52,300 --> 01:31:55,200
Alright, so we no longer have to do any clipping to the near clipping

1581
01:31:55,200 --> 01:31:57,100
plane because the the

1582
01:31:58,900 --> 01:32:00,900
Opengl is doing that for us, right?

1583
01:32:01,300 --> 01:32:03,400
So we actually can just do this directly.

1584
01:32:04,500 --> 01:32:10,700
And this right here is our sort of our orthographic height transform,

1585
01:32:11,500 --> 01:32:14,000
which we need to sort of figure out exactly what we want to do with

1586
01:32:14,000 --> 01:32:16,600
what we're probably going to have to address that a little bit later

1587
01:32:16,600 --> 01:32:16,900
on.

1588
01:32:18,300 --> 01:32:20,200
And so, yeah.

1589
01:32:21,500 --> 01:32:22,800
We're getting pretty close here.

1590
01:32:27,100 --> 01:32:28,500
We don't care about this anymore.

1591
01:32:30,800 --> 01:32:33,300
And so really, what you can see is we're getting very close to being

1592
01:32:33,300 --> 01:32:35,400
able to just pass the distance pz.

1593
01:32:35,400 --> 01:32:38,700
All we really need now is a way of setting this focal length for our

1594
01:32:38,700 --> 01:32:44,700
camera transform putting that up into the actual code into the actual

1595
01:32:44,700 --> 01:32:45,500
camera code.

1596
01:32:45,900 --> 01:32:49,200
And so maybe that's the thing that will do now, right?

1597
01:32:50,500 --> 01:32:55,300
We also have that 2x scale that we removed and again I'm not 100%

1598
01:32:55,300 --> 01:32:56,100
certain about that.

1599
01:32:56,100 --> 01:32:57,900
I feel like we got to take one more.

1600
01:32:57,900 --> 01:32:58,400
Really careful.

1601
01:32:58,400 --> 01:32:59,500
Look at that to make sure.

1602
01:33:00,300 --> 01:33:02,100
What that value should actually be in there.

1603
01:33:03,100 --> 01:33:08,500
But assuming that we want to keep this the same, we're going to have

1604
01:33:08,500 --> 01:33:09,500
to sort of zoom in.

1605
01:33:11,100 --> 01:33:13,800
Not sure how far not that far.

1606
01:33:41,100 --> 01:33:41,600
All right.

1607
01:33:43,300 --> 01:33:43,900
About that.

1608
01:33:45,000 --> 01:33:45,400
Okay?

1609
01:33:45,500 --> 01:33:50,800
So again getting closer this needs to be calibrated and we need to

1610
01:33:50,800 --> 01:33:52,200
recalibrate the camera stuff anyway.

1611
01:33:52,200 --> 01:33:53,800
But you know, we'll leave it like that for now.

1612
01:33:55,000 --> 01:33:56,700
So what we need to do

1613
01:33:59,600 --> 01:34:02,700
and also bear in mind, our unprotect,

1614
01:34:03,700 --> 01:34:04,600
Well, I just write this.

1615
01:34:13,800 --> 01:34:19,400
Ah, run project needs to be updated to be in line with with that piece

1616
01:34:19,400 --> 01:34:20,100
of code as well.

1617
01:34:21,000 --> 01:34:24,800
But anyway, so now when we get down here, what we want to do is take a

1618
01:34:24,800 --> 01:34:25,800
look at

1619
01:34:28,200 --> 01:34:29,900
how to move that focal length out.

1620
01:34:29,900 --> 01:34:32,800
And what we had before right is we've got these clip this concept of

1621
01:34:32,800 --> 01:34:33,700
these clip for x.

1622
01:34:34,300 --> 01:34:37,600
And the clip Rex are sort of, actually one of the few things that

1623
01:34:37,600 --> 01:34:40,700
crosses that boundary like that's actually render structure, that's

1624
01:34:40,700 --> 01:34:46,500
understood on both sides of the of the API boundary, right?

1625
01:34:47,200 --> 01:34:49,500
The surrender, entry entry clip, rect

1626
01:34:52,400 --> 01:34:56,500
Is it something that, you know, we prepare and that that is understood

1627
01:34:56,500 --> 01:34:58,900
by both renderers and you can see it here.

1628
01:34:59,300 --> 01:35:02,700
That's got a render Target index, and it's got their rectangle and

1629
01:35:02,700 --> 01:35:05,100
it's really not a clip rect anymore, but that's sort of what we're

1630
01:35:05,100 --> 01:35:05,600
calling it.

1631
01:35:05,700 --> 01:35:06,400
It's fortunately,

1632
01:35:08,300 --> 01:35:13,600
just what we're stuck with, in terms of the name, we can rename it

1633
01:35:13,600 --> 01:35:15,000
later if we want to do a global renamed.

1634
01:35:16,300 --> 01:35:20,800
So all I really want to do now is add in here, what we need in terms

1635
01:35:20,800 --> 01:35:23,100
of camera control.

1636
01:35:23,600 --> 01:35:28,000
So if I was just to say, let's put the focal length in here, right?

1637
01:35:28,800 --> 01:35:31,100
Then what you can see is it's lined up correctly.

1638
01:35:31,100 --> 01:35:34,200
So that inside the opengl code, when we actually need to get that

1639
01:35:34,200 --> 01:35:38,000
focal length, what we can do

1640
01:35:38,200 --> 01:35:40,400
Because we can stick that focal length in here.

1641
01:35:40,900 --> 01:35:43,600
When you take a look at what's happening inside render group, you can

1642
01:35:43,600 --> 01:35:47,800
see that right now, we would be passing the Z, but we need to divide

1643
01:35:47,800 --> 01:35:48,900
it by the focal length first.

1644
01:35:48,900 --> 01:35:52,200
So, what we could do in here is say, well, this is just going to be 1

1645
01:35:52,200 --> 01:35:56,700
over the focal length and we'll get that focal length from the clip.

1646
01:35:56,700 --> 01:35:59,600
Rect right because we have that piece of information.

1647
01:36:00,000 --> 01:36:03,400
With us and that would reproduce the same transform that we're doing,

1648
01:36:03,400 --> 01:36:10,300
because it would provide that one over when we multiply the Z, right,

1649
01:36:10,300 --> 01:36:14,000
because distance 2pz would now be the thing that stuffed into the Z

1650
01:36:14,000 --> 01:36:18,400
coordinate and then when it gets multiplied by this coordinate to put

1651
01:36:18,400 --> 01:36:22,500
it into the W, which is what's going to divide, will end up with

1652
01:36:22,500 --> 01:36:26,800
distance to pz / the focal length which is the same term that we had

1653
01:36:26,900 --> 01:36:29,400
originally which is what we're trying to reproduce, right?

1654
01:36:29,400 --> 01:36:29,900
That's what

1655
01:36:30,000 --> 01:36:31,400
we want to divide by.

1656
01:36:33,200 --> 01:36:37,600
Okay, so given that, that is what we want to divide by.

1657
01:36:39,900 --> 01:36:43,600
what we need to do now is figure out how to set this focal length and

1658
01:36:43,600 --> 01:36:46,200
so what happens is when we do our clip, rect

1659
01:36:51,700 --> 01:36:55,300
And we call Push cliprect what we want to do when we call Push clip.

1660
01:36:55,300 --> 01:37:00,400
Rect is we want to every time we do a push cliprect, we want to pass

1661
01:37:00,400 --> 01:37:01,700
that focal length in addition.

1662
01:37:02,500 --> 01:37:03,000
Right.

1663
01:37:04,200 --> 01:37:07,500
So here's our focal length, getting set here.

1664
01:37:11,200 --> 01:37:15,400
Like so and then just whenever somebody pushes one of these to push

1665
01:37:15,400 --> 01:37:18,700
the clip, rect what we can do for now is just take a look at the

1666
01:37:18,700 --> 01:37:22,200
camera transform and get the focal length out of it directly, right?

1667
01:37:22,200 --> 01:37:26,100
Because we have it so we can just do that if that's what we want to

1668
01:37:26,100 --> 01:37:27,200
do, right?

1669
01:37:36,400 --> 01:37:39,000
We don't set the camera transform here at all.

1670
01:37:39,000 --> 01:37:39,600
Do we?

1671
01:37:53,700 --> 01:37:54,200
All right.

1672
01:37:57,500 --> 01:38:00,800
And so when we call Push left bacteria and we're calling this for,

1673
01:38:01,200 --> 01:38:01,500
okay?

1674
01:38:01,500 --> 01:38:04,800
So this is pushing the clip Rex for the various floors for the alpha

1675
01:38:04,800 --> 01:38:05,600
clip rect.

1676
01:38:05,800 --> 01:38:08,600
So in this case, we just need again the camera transform.

1677
01:38:10,100 --> 01:38:12,500
so, whatever the render group goes in this case,

1678
01:38:16,000 --> 01:38:17,600
Past the focal length, right?

1679
01:38:19,200 --> 01:38:22,200
So what we need to do now is we just need to respect the fact that

1680
01:38:22,200 --> 01:38:26,300
hey, if we want to do that, the problem is when we do a, the first

1681
01:38:26,300 --> 01:38:29,900
push cliprect on the begin render group here, we don't actually have

1682
01:38:29,900 --> 01:38:34,300
the focal length that we actually need for that initial cliprect,

1683
01:38:34,300 --> 01:38:34,500
right?

1684
01:38:34,500 --> 01:38:36,100
We don't know what it actually is.

1685
01:38:36,800 --> 01:38:39,800
And so, in some sense, now, when we're doing sort of this set camera,

1686
01:38:39,800 --> 01:38:43,400
transform set, camera transform and begin render, group are kind of

1687
01:38:43,400 --> 01:38:45,700
now, like, they need to be

1688
01:38:45,800 --> 01:38:47,000
Sort of smush together, right?

1689
01:38:47,000 --> 01:38:47,900
Because when we do

1690
01:38:49,100 --> 01:38:50,500
Begin render group.

1691
01:38:50,500 --> 01:38:53,100
In this case, we have two.

1692
01:38:54,200 --> 01:38:58,700
Yeah, we have to have that information already available, if that

1693
01:38:58,700 --> 01:38:59,300
makes sense.

1694
01:39:00,000 --> 01:39:01,300
What's really interesting here is.

1695
01:39:01,300 --> 01:39:03,900
You can also see that we keep the screen area out here.

1696
01:39:03,900 --> 01:39:07,700
So I guess I really didn't even need this because that was in the

1697
01:39:07,700 --> 01:39:10,400
render group so that was really kind of redundant.

1698
01:39:12,000 --> 01:39:14,000
I didn't really notice that when we first did it.

1699
01:39:14,600 --> 01:39:17,700
So yeah, we should probably take care of that as well.

1700
01:39:17,700 --> 01:39:23,500
And this sort of set camera transform is kind of a thing that yeah.

1701
01:39:26,700 --> 01:39:29,400
Yeah, we can, we can condense this down quite a bit.

1702
01:39:29,500 --> 01:39:32,200
So if you take a look at what happens here, if we do render group,

1703
01:39:32,200 --> 01:39:34,800
what what I'm going to do is just push a new clip rect on.

1704
01:39:37,000 --> 01:39:38,300
I'm past that focal length.

1705
01:39:40,000 --> 01:39:40,500
Like so.

1706
01:39:47,000 --> 01:39:47,400
Okay.

1707
01:39:49,400 --> 01:39:51,400
And I think there's some interesting things that we'd be able to do

1708
01:39:51,400 --> 01:39:51,700
here.

1709
01:39:57,900 --> 01:40:04,300
What does it want from our 32 to you 32 for the pixel width?

1710
01:40:04,300 --> 01:40:07,800
So I guess we can just use render group screen area or whoops.

1711
01:40:14,200 --> 01:40:14,900
These are all YouTube.

1712
01:40:14,900 --> 01:40:15,400
See you soon?

1713
01:40:15,700 --> 01:40:16,000
Yeah.

1714
01:40:18,400 --> 01:40:22,200
All right, so we can clean this up fairly fairly considerably here, so

1715
01:40:22,200 --> 01:40:22,900
you can see that.

1716
01:40:22,900 --> 01:40:24,800
Now, we're getting the exact same results.

1717
01:40:24,800 --> 01:40:26,300
We are getting 2 for, which is nice.

1718
01:40:27,500 --> 01:40:31,000
But now we're actually doing that divide with, you know, with the

1719
01:40:31,000 --> 01:40:31,700
focal length.

1720
01:40:31,700 --> 01:40:34,100
We're actually doing that in opengl, right?

1721
01:40:34,100 --> 01:40:37,100
So now the focal length is actually coming through here and getting

1722
01:40:37,100 --> 01:40:39,400
set with the camera transform.

1723
01:40:39,800 --> 01:40:43,100
Now, it looks like we've got a whole bunch of stuff that can collapse

1724
01:40:43,100 --> 01:40:45,500
out here, so we might, as well just do that and make this a lot

1725
01:40:45,500 --> 01:40:47,400
cleaner since we know the screen area.

1726
01:40:47,500 --> 01:40:48,500
Sure, that means the camera.

1727
01:40:48,500 --> 01:40:52,700
Transform itself can be limited to not actually have that information

1728
01:40:52,700 --> 01:40:55,000
and I think we're going to see a lot of stuff starts to come together

1729
01:40:55,000 --> 01:40:55,300
here.

1730
01:40:56,400 --> 01:40:59,200
So if we want to we can just say OK, the camera transform.

1731
01:40:59,700 --> 01:41:04,400
No longer needs that screen dim anymore, right?

1732
01:41:04,400 --> 01:41:08,400
That's just not on the table anymore because we can just get that out

1733
01:41:08,400 --> 01:41:09,000
of the group.

1734
01:41:11,100 --> 01:41:11,600
Right.

1735
01:41:12,100 --> 01:41:14,900
And that produces what we what we need to produce.

1736
01:41:16,500 --> 01:41:18,300
It looks like that's actually a rectangle.

1737
01:41:18,300 --> 01:41:22,900
I don't know why that's a rectangle instead of just a dimension

1738
01:41:25,200 --> 01:41:28,900
because we are never really doing anything else with it.

1739
01:41:30,200 --> 01:41:35,900
See here screen area, it's always produced as a 002.

1740
01:41:39,000 --> 01:41:41,900
So with height, that's the only thing we ever do with it.

1741
01:41:42,400 --> 01:41:46,100
So I feel like we can just treat that as a regular screen area and be

1742
01:41:46,100 --> 01:41:47,200
done with it, right?

1743
01:41:47,600 --> 01:41:51,700
I feel like we could just do this and and that's it.

1744
01:41:54,400 --> 01:41:56,200
So that just becomes the screen dim.

1745
01:41:57,700 --> 01:41:59,900
And everywhere we went.

1746
01:42:00,000 --> 01:42:02,800
Getting that out of the camera, transform before we just get it out of

1747
01:42:02,800 --> 01:42:06,100
the render group now, right?

1748
01:42:12,800 --> 01:42:13,300
Like so.

1749
01:42:25,000 --> 01:42:25,900
And same thing here.

1750
01:42:35,400 --> 01:42:36,700
And same thing here.

1751
01:42:50,500 --> 01:42:54,600
So what's interesting about this if we take a look at it, the screen

1752
01:42:54,600 --> 01:42:58,400
dim pixel with pixel height stuff is only.

1753
01:42:58,500 --> 01:43:01,800
Yeah it's just not being used there so it's really only used for this

1754
01:43:01,800 --> 01:43:02,000
call.

1755
01:43:02,000 --> 01:43:03,800
Now to get to redo the cliprect.

1756
01:43:04,700 --> 01:43:05,600
But I think we're all good.

1757
01:43:05,600 --> 01:43:06,100
Still.

1758
01:43:06,400 --> 01:43:07,100
Yes we are.

1759
01:43:07,800 --> 01:43:11,200
So again, just simplifying that further and then the next question is,

1760
01:43:11,200 --> 01:43:15,800
what can we take that to, in even, you know, can we continue to push

1761
01:43:15,800 --> 01:43:16,200
that down?

1762
01:43:16,200 --> 01:43:19,900
And just say well, alright, so the

1763
01:43:20,100 --> 01:43:22,600
Berkeley the focal length, the orthographic.

1764
01:43:22,700 --> 01:43:24,400
Can those just beyond the clip?

1765
01:43:24,400 --> 01:43:26,900
Rect now since the clip, rect is just going to basically be our

1766
01:43:26,900 --> 01:43:27,900
camera, transform?

1767
01:43:28,100 --> 01:43:28,500
Right?

1768
01:43:30,300 --> 01:43:32,800
And the answer there is, well, we need some information about those so

1769
01:43:32,800 --> 01:43:35,600
we can't keep doing this thing where we just, when we do current

1770
01:43:35,600 --> 01:43:41,600
cliprect index, where we're sort of we can't keep doing the thing.

1771
01:43:41,600 --> 01:43:45,900
We were doing where we don't, remember the cliprect itself.

1772
01:43:46,200 --> 01:43:53,900
So in here we're going to have to store a cliprect where we when we

1773
01:43:53,900 --> 01:43:54,800
push it on.

1774
01:43:59,700 --> 01:44:01,000
Here's our first flipper call.

1775
01:44:01,800 --> 01:44:06,700
We're going to need to store that current cliprect as an actual

1776
01:44:06,700 --> 01:44:09,700
accessible value.

1777
01:44:10,300 --> 01:44:15,700
So every time we do the current cliprect index bit, right?

1778
01:44:16,100 --> 01:44:24,000
So current cliprect index when we do the push wrecked on these two

1779
01:44:24,000 --> 01:44:25,300
guys, right?

1780
01:44:26,100 --> 01:44:28,600
Which looks like the only time that's actually set.

1781
01:44:29,600 --> 01:44:32,600
Need to actually record the value.

1782
01:44:33,100 --> 01:44:36,300
When we do push clip rect, I'm not sure.

1783
01:44:39,200 --> 01:44:41,800
So what we're probably going to have to do is take a look at who's

1784
01:44:41,800 --> 01:44:45,500
actually using these values and have a thing where that because I

1785
01:44:45,500 --> 01:44:47,600
guess people switch between them, right?

1786
01:44:50,100 --> 01:44:53,200
We're kind of going to need an ocean of which one you're talking about

1787
01:44:53,200 --> 01:44:55,400
at any given time, right?

1788
01:44:55,700 --> 01:44:59,000
And the current cliprect index part itself.

1789
01:45:02,000 --> 01:45:04,600
I think we're in order for the way we want to use these.

1790
01:45:04,600 --> 01:45:07,300
We're just going to have to clean this up a little bit, right?

1791
01:45:07,800 --> 01:45:10,100
Because we need to get that information out of the clip.

1792
01:45:10,100 --> 01:45:14,100
Rect and right now we can't really and people can set that arbitrarily

1793
01:45:14,400 --> 01:45:17,200
and may want to ask questions about it, right?

1794
01:45:17,900 --> 01:45:21,800
So we can do it this way and this will work okay for a second.

1795
01:45:21,800 --> 01:45:26,000
But we're going to have to do it a little bit more intelligently here

1796
01:45:26,000 --> 01:45:29,900
in a second because we don't have the information.

1797
01:45:30,000 --> 01:45:32,000
That we need at our disposal, right?

1798
01:45:34,000 --> 01:45:39,600
All right, so let's take a look here.

1799
01:45:39,700 --> 01:45:42,100
How do I want to go about making this change?

1800
01:45:42,100 --> 01:45:48,400
Because this change is actually a Little Bit Sassy in my opinion.

1801
01:45:50,600 --> 01:45:53,000
So I guess one way to make this change is let's just double.

1802
01:45:53,100 --> 01:45:56,000
Let's just over do it, if that makes sense.

1803
01:45:57,400 --> 01:46:00,300
So, we've got the camera P here and we're setting it in the camera

1804
01:46:00,300 --> 01:46:01,100
transform.

1805
01:46:01,300 --> 01:46:03,600
And basically, what I want to do is I want to get rid of these two.

1806
01:46:04,900 --> 01:46:06,600
I pretty much want to get rid of the camera.

1807
01:46:06,600 --> 01:46:07,600
Transform, right.

1808
01:46:07,600 --> 01:46:10,400
And I want to just have cliprect and then we'll probably renamed

1809
01:46:10,400 --> 01:46:13,400
cliprect like to be camera transform, right?

1810
01:46:14,300 --> 01:46:18,300
So that we just have one Central structure that encompasses everything

1811
01:46:18,300 --> 01:46:19,400
we need for that projection.

1812
01:46:19,400 --> 01:46:21,600
And then when that way, when we do forward or backward, Direction were

1813
01:46:21,600 --> 01:46:24,800
always talking about one thing, and it's Consolidated in a nice place.

1814
01:46:25,000 --> 01:46:27,100
I only have 10 minutes left though, so I don't want to try and make

1815
01:46:27,100 --> 01:46:28,300
the whole change once.

1816
01:46:29,100 --> 01:46:31,700
In fact, maybe I should just go to the Q&A now and we'll do that

1817
01:46:31,700 --> 01:46:32,100
tomorrow.

1818
01:46:32,100 --> 01:46:33,400
That will be tomorrow's job.

1819
01:46:34,100 --> 01:46:34,900
And we'll just leave it.

1820
01:46:34,900 --> 01:46:38,200
Like it is at the moment that may be a good idea.

1821
01:46:39,800 --> 01:46:41,100
Yeah, that may be a good idea.

1822
01:46:41,800 --> 01:46:44,300
I could go, although I have to admit, I might as well, you know, what

1823
01:46:44,300 --> 01:46:47,400
I might do is let me go pull out some of the sort Keys stuff.

1824
01:46:48,100 --> 01:46:51,500
Let's just see what we can do in that regard, right?

1825
01:46:53,300 --> 01:46:54,300
So I'm just curious here.

1826
01:46:54,300 --> 01:46:59,500
What could I do in that in that along those lines?

1827
01:46:59,500 --> 01:47:04,100
Like, what could I do if I wanted to get rid of sort of the push

1828
01:47:04,100 --> 01:47:06,000
buffer sort stuff?

1829
01:47:06,900 --> 01:47:10,300
So, what I want to do here is kind of get rid of some of this

1830
01:47:10,300 --> 01:47:13,400
vestigial remains where we're doing the the sword entries, and those

1831
01:47:13,400 --> 01:47:14,100
sorts of things.

1832
01:47:15,200 --> 01:47:18,200
So what if I just sort of, got rid of those entirely and trying to

1833
01:47:18,200 --> 01:47:20,000
move us back to where we were before.

1834
01:47:20,800 --> 01:47:21,700
So we just have a

1835
01:47:21,900 --> 01:47:25,400
Our group entry header, and we actually are just pushing those in,

1836
01:47:25,500 --> 01:47:26,100
right?

1837
01:47:28,100 --> 01:47:32,400
In place and I want those to go up like they used to well, oh no,

1838
01:47:32,400 --> 01:47:33,400
those still do go up.

1839
01:47:33,400 --> 01:47:34,100
So that's fine.

1840
01:47:34,800 --> 01:47:36,700
Because these were the ones that are pushed on the end.

1841
01:47:37,200 --> 01:47:39,300
So what I'm going to do is, I'm just going to say, alright, suppose I

1842
01:47:39,300 --> 01:47:41,400
get rid of the sorts right bound stuff entirely.

1843
01:47:41,400 --> 01:47:44,600
So it just doesn't get pushed on anymore at.

1844
01:47:44,600 --> 01:47:45,600
All right?

1845
01:47:45,600 --> 01:47:48,200
So it's going to get rid of that, we don't push that on anymore.

1846
01:47:48,200 --> 01:47:51,200
Now what should probably happen is, I won't see anything on the screen

1847
01:47:52,300 --> 01:47:54,900
at that point because well, that's interesting.

1848
01:47:54,900 --> 01:47:57,100
So somebody's still thought they were pushing something on.

1849
01:47:58,100 --> 01:47:58,700
I guess.

1850
01:47:58,700 --> 01:47:59,400
I'm not sure why.

1851
01:47:59,400 --> 01:47:59,800
Oh, because

1852
01:48:00,000 --> 01:48:00,900
I do.

1853
01:48:02,800 --> 01:48:07,900
When I do that push buffer, I do push a sword entry count.

1854
01:48:08,300 --> 01:48:11,000
So what I got to do is I got to get rid of that sort of 3 count,

1855
01:48:11,000 --> 01:48:11,500
right?

1856
01:48:11,900 --> 01:48:13,200
Because we don't want that anymore.

1857
01:48:13,900 --> 01:48:16,100
We don't want the sorts right bound stuff anymore.

1858
01:48:17,800 --> 01:48:18,300
Right?

1859
01:48:18,600 --> 01:48:20,800
So this stuff is is no good.

1860
01:48:21,000 --> 01:48:22,600
So, we're just talking about this.

1861
01:48:22,900 --> 01:48:27,500
So the only thing we need to do and yeah, and that's it.

1862
01:48:27,600 --> 01:48:34,800
So we get rid of push, buffer data at we put the header there, sort

1863
01:48:34,800 --> 01:48:40,200
bounds, sort into account that stuff goes away, right?

1864
01:48:40,500 --> 01:48:42,600
So, that's how we're pushing stuff at the moment.

1865
01:48:54,000 --> 01:48:57,300
There we go, but now we should see nothing.

1866
01:48:57,900 --> 01:48:58,600
I would think.

1867
01:48:58,700 --> 01:49:02,200
And the reason that we should see nothing is because we're not

1868
01:49:02,200 --> 01:49:04,800
actually pushing on any of the sort entries and I push render

1869
01:49:04,800 --> 01:49:05,500
elements.

1870
01:49:05,500 --> 01:49:09,000
Kill is looks like people are looking for these Sprite bound.

1871
01:49:09,000 --> 01:49:11,700
So let me go ahead and really just get rid of them.

1872
01:49:13,600 --> 01:49:16,100
So we can clip out all the code that was referencing them at all.

1873
01:49:17,200 --> 01:49:21,600
So this means in our object transform, you know, or rather, let's see

1874
01:49:22,200 --> 01:49:25,700
in our stuff that talks about Sprite bounds.

1875
01:49:26,100 --> 01:49:28,500
We would just get rid of all of this stuff, right?

1876
01:49:28,800 --> 01:49:29,700
It's all gone.

1877
01:49:30,900 --> 01:49:36,100
None of this, it's all just, you know, it was fun for a while.

1878
01:49:36,900 --> 01:49:40,500
You know we did we did what we had to do, but it's gone now.

1879
01:49:41,500 --> 01:49:43,800
And, and goodbye, right?

1880
01:49:45,400 --> 01:49:50,700
Alright, so we're get rid of all these guys and we get rid of oops.

1881
01:49:55,900 --> 01:49:57,400
Get rid of sort barrier.

1882
01:49:58,400 --> 01:50:03,000
Although actually, I suppose, let me just leave the call to sort

1883
01:50:03,000 --> 01:50:04,900
barrier here for now.

1884
01:50:11,100 --> 01:50:16,300
Just because we may want to still use that even though we're not

1885
01:50:16,300 --> 01:50:20,200
sorting, we may still want to Clump things together occasionally.

1886
01:50:20,200 --> 01:50:24,100
So, you know, I won't remove that too early.

1887
01:50:24,400 --> 01:50:26,900
All right, so here's our push render element call.

1888
01:50:27,100 --> 01:50:28,800
We get rid of the sort key on there.

1889
01:50:31,000 --> 01:50:34,100
The aggregated, Sorting is gone.

1890
01:50:39,300 --> 01:50:40,500
And let's see here.

1891
01:50:40,500 --> 01:50:45,500
So get Bound for that.

1892
01:50:45,500 --> 01:50:49,200
Looks like it's all not necessary now.

1893
01:50:52,500 --> 01:50:55,400
And the screen area is not necessary either.

1894
01:50:55,900 --> 01:50:56,800
Five minute warning.

1895
01:50:57,600 --> 01:50:59,800
All right, let's

1896
01:51:00,000 --> 01:51:00,700
Here.

1897
01:51:04,100 --> 01:51:07,400
Not enough actual parameters for macro push render element push

1898
01:51:07,900 --> 01:51:08,600
element.

1899
01:51:09,400 --> 01:51:12,400
That is because it's still taking these things, which we don't want it

1900
01:51:12,400 --> 01:51:12,700
to.

1901
01:51:16,500 --> 01:51:18,300
And let's take a look good.

1902
01:51:18,300 --> 01:51:19,400
Some of these other ones.

1903
01:51:19,400 --> 01:51:20,300
Those go away.

1904
01:51:20,300 --> 01:51:21,700
We no longer need to call them.

1905
01:51:29,300 --> 01:51:29,900
Where is that?

1906
01:51:29,900 --> 01:51:32,300
At Sprite bounce, Wing area.

1907
01:51:32,700 --> 01:51:33,800
Not necessary.

1908
01:51:34,800 --> 01:51:35,100
Oops.

1909
01:51:41,300 --> 01:51:43,100
We'll get rid of the Aggregates work key.

1910
01:51:45,600 --> 01:51:48,100
We will have to do some work with those in the future.

1911
01:51:48,200 --> 01:51:50,800
So it's not like we get that entirely for free, but

1912
01:51:52,700 --> 01:51:56,300
And then so the draw bounds, we don't have that anymore, right?

1913
01:51:56,400 --> 01:51:59,000
Because we won't be having any of those sort Keys anymore.

1914
01:52:00,500 --> 01:52:05,600
So those are all gone and the show sort groups is gone as well.

1915
01:52:15,400 --> 01:52:18,900
And then we just have to get rid of the all the Sorting code because

1916
01:52:18,900 --> 01:52:21,500
the Sorting code can no longer operate.

1917
01:52:24,100 --> 01:52:25,900
So, build Sprite graph is gone.

1918
01:52:29,100 --> 01:52:30,400
Unsorted output is gone.

1919
01:52:30,400 --> 01:52:32,200
Recursive front-to-back is gone sword.

1920
01:52:32,200 --> 01:52:35,600
Entries also gone.

1921
01:52:44,400 --> 01:52:47,500
Linearized, clip Rex still definitely exists.

1922
01:52:48,800 --> 01:52:51,700
So you know prep for render is still going to have to do that

1923
01:52:51,700 --> 01:52:53,800
operation, but that's about it.

1924
01:52:57,100 --> 01:53:00,000
And then, I think we're back to normal except again now.

1925
01:53:00,000 --> 01:53:02,800
We should not see anything, right?

1926
01:53:02,900 --> 01:53:04,900
Oh, and I forgot to eliminate that guy.

1927
01:53:05,900 --> 01:53:07,200
It's an unnecessary exertion.

1928
01:53:12,600 --> 01:53:12,900
Oops.

1929
01:53:15,200 --> 01:53:17,300
Under element.

1930
01:53:27,400 --> 01:53:31,500
So here, when we get that push sword, entry, where was that sort entry

1931
01:53:31,500 --> 01:53:33,300
being scared is so push buffer.

1932
01:53:33,300 --> 01:53:36,700
Results is just going to be the render group entry.

1933
01:53:36,700 --> 01:53:41,100
Header is the only thing that will come back now and we could probably

1934
01:53:41,100 --> 01:53:42,300
get rid of this struct as well.

1935
01:53:42,300 --> 01:53:43,100
If we wanted to,

1936
01:53:52,400 --> 01:53:57,500
And when we do this push here let me get the invalid code path.

1937
01:53:57,500 --> 01:53:59,900
I guess, you know, I'm not

1938
01:54:01,500 --> 01:54:03,600
We could probably just not draw the Sprite.

1939
01:54:03,600 --> 01:54:05,400
So I'm not sure why that's a hard fail.

1940
01:54:05,400 --> 01:54:12,800
There seems a little odd, but whatever, we'll cross that bridge when

1941
01:54:12,800 --> 01:54:13,500
we come to it.

1942
01:54:15,000 --> 01:54:16,700
So yeah, so here we go.

1943
01:54:16,700 --> 01:54:18,300
Let's see our sorted index count.

1944
01:54:18,400 --> 01:54:21,100
I'm not sure why this I guess the sort of the next town is not getting

1945
01:54:21,100 --> 01:54:24,600
initialized because we don't really even want that anymore.

1946
01:54:24,600 --> 01:54:27,700
So let's go ahead and clip that out.

1947
01:54:27,700 --> 01:54:29,400
Sorted index count,

1948
01:54:30,000 --> 01:54:31,500
That in the platform code, probably.

1949
01:54:33,600 --> 01:54:37,500
So, when we do the game render prep this code goes away, right?

1950
01:54:37,500 --> 01:54:38,500
It's just the clip Rex.

1951
01:54:38,500 --> 01:54:38,900
Now,

1952
01:54:41,000 --> 01:54:46,200
And so this Loop is now what has to really be updated so that we

1953
01:54:46,200 --> 01:54:52,700
correctly pull out sort of the header values instead of what we are

1954
01:54:52,700 --> 01:54:55,500
pulling out now which is you know, not that.

1955
01:54:56,500 --> 01:54:59,600
So really this code is going to be a

1956
01:55:05,100 --> 01:55:06,900
I guess just a Max sighs.

1957
01:55:06,900 --> 01:55:10,800
Really because these things that were pushing on are variably sized

1958
01:55:10,800 --> 01:55:13,200
and we're advancing by a variable size each time.

1959
01:55:13,700 --> 01:55:16,400
And so since we're advancing by a variable size each time, really, I

1960
01:55:16,400 --> 01:55:20,000
think what we want to do is say like, okay, we've got the header

1961
01:55:20,000 --> 01:55:22,900
offset that's going to be starting with zero.

1962
01:55:23,400 --> 01:55:28,500
The header offset has to be less than the like render buffer size kind

1963
01:55:28,500 --> 01:55:34,500
of a thing, and then we don't actually do any of that.

1964
01:55:35,000 --> 01:55:39,500
Instead, what we do is in any one of our cases, when we see something,

1965
01:55:40,000 --> 01:55:45,300
we need to advance by the correct amount, right?

1966
01:55:45,300 --> 01:55:48,700
However, big the thing is that we're actually looking at.

1967
01:55:48,700 --> 01:55:52,700
So we have the header and we want Advanced by the header size, but

1968
01:55:52,700 --> 01:55:56,800
then we also need to advance by whatever the sizes of the data, right?

1969
01:55:57,900 --> 01:56:01,700
I'm not going to do that this time around, right?

1970
01:56:01,700 --> 01:56:04,700
I think I'm just going to do if zero here for now.

1971
01:56:05,900 --> 01:56:07,700
And that's what we'll do tomorrow.

1972
01:56:25,200 --> 01:56:27,000
And I think that's about it.

1973
01:56:27,000 --> 01:56:31,100
So let's see in our software renderer as well.

1974
01:56:32,300 --> 01:56:33,800
We've got one of these loops.

1975
01:56:36,600 --> 01:56:37,200
Here it is.

1976
01:56:38,100 --> 01:56:40,700
So we're going to have to do the same thing here as well, right?

1977
01:56:53,600 --> 01:56:55,300
And there's the header offset.

1978
01:57:11,400 --> 01:57:13,800
And so now we just have an on Loop, right?

1979
01:57:13,800 --> 01:57:20,600
It's not going to do anything and we can leave that like that for

1980
01:57:20,600 --> 01:57:21,200
tomorrow.

1981
01:57:22,900 --> 01:57:25,000
And so all we have to do is just restore that Loop and then the

1982
01:57:25,000 --> 01:57:28,900
Sorting code is gone which is nice because that way we don't have any

1983
01:57:30,100 --> 01:57:30,700
of that nastiness.

1984
01:57:31,100 --> 01:57:32,600
So let's go ahead and go to the Q&A.

1985
01:58:13,800 --> 01:58:14,800
Wow, no questions.

1986
01:58:37,200 --> 01:58:39,600
Well, we can go home early, I guess.

1987
01:58:58,200 --> 01:59:03,000
all right, well, if there's no questions, then I will just tenderly

1988
01:59:03,000 --> 01:59:06,600
and that will be that

1989
01:59:16,700 --> 01:59:19,700
Quarter Tron, can you please go double-check your Matrix math in your

1990
01:59:19,700 --> 01:59:21,500
last drawing and Milton sure.

1991
01:59:26,100 --> 01:59:28,600
Okay, what is the Matrix math?

1992
01:59:28,600 --> 01:59:29,500
You want to be able to check.

1993
01:59:29,500 --> 01:59:29,700
Okay.

1994
01:59:29,700 --> 01:59:36,500
So you just want me to redo this multiply I guess so x times I mean I

1995
01:59:36,500 --> 01:59:37,900
can do it all the way out.

1996
01:59:38,500 --> 01:59:39,200
Let's hang out with me.

1997
01:59:40,300 --> 01:59:41,300
Get rid of this here.

1998
01:59:55,500 --> 01:59:56,000
All right.

1999
01:59:58,100 --> 01:59:59,800
So, we're multiplying Vector times Matrix.

2000
02:00:00,000 --> 02:00:12,500
are so we have 1x + 0 y plus 0 Z Plus 0 times 1, we have zero X, Plus

2001
02:00:12,500 --> 02:00:23,400
1, y, plus 0, Z Plus 0 times 0, oops, sorry 0, x 1, here we have 0 x +

2002
02:00:23,400 --> 02:00:29,800
0, y plus 1, Z Plus 0 times 1 here and we've got

2003
02:00:30,000 --> 02:00:38,200
0x + 0, y plus 1, Z Plus 0 times 1 here.

2004
02:00:40,200 --> 02:00:46,800
So you know simplifying these out, you you just get X because all of

2005
02:00:46,800 --> 02:00:53,500
these go away, y, z and z.

2006
02:00:54,800 --> 02:00:57,600
So x y, z z which is what I wrote, right?

2007
02:01:04,100 --> 02:01:04,800
So that

2008
02:01:08,200 --> 02:01:09,300
More scroll.

2009
02:01:09,300 --> 02:01:09,700
Right?

2010
02:01:09,700 --> 02:01:10,300
Ish.

2011
02:01:12,100 --> 02:01:12,800
Okay.

2012
02:01:16,900 --> 02:01:17,500
This.

2013
02:01:19,000 --> 02:01:23,200
So this is x / w y / wz /, W and w.

2014
02:01:29,200 --> 02:01:29,700
Right.

2015
02:01:37,800 --> 02:01:38,400
Okay.

2016
02:01:38,900 --> 02:01:39,700
Okay, quarters, right?

2017
02:01:39,700 --> 02:01:42,100
Well, you know, it never hurts to double-check, right?

2018
02:01:42,200 --> 02:01:44,000
I mean, you know, math is

2019
02:01:46,700 --> 02:01:50,100
And and I'm Rusty at math, you know, I don't do as much math as I used

2020
02:01:50,100 --> 02:01:52,000
to and I was never particularly good at it.

2021
02:01:52,000 --> 02:01:52,500
So,

2022
02:01:53,600 --> 02:01:58,100
You know, double-checking math is so he's rarely.

2023
02:01:58,100 --> 02:01:59,300
Is it a bad idea to double?

2024
02:01:59,300 --> 02:01:59,900
Check your math?

2025
02:01:59,900 --> 02:02:01,000
I guess is what I would say.

2026
02:02:04,600 --> 02:02:06,900
Um let's see.

2027
02:02:10,700 --> 02:02:11,600
Okay.

2028
02:02:11,600 --> 02:02:15,000
Are you planning on making a video featuring everything you made?

2029
02:02:16,400 --> 02:02:18,000
You mean like a summary video?

2030
02:02:21,900 --> 02:02:25,000
I mean eventually like when we're all done, we'd probably do something

2031
02:02:25,000 --> 02:02:25,400
like that.

2032
02:02:25,400 --> 02:02:25,700
Right.

2033
02:02:25,700 --> 02:02:28,700
But you know that's going to be a while.

2034
02:02:29,500 --> 02:02:32,100
We got to finish the 3D stuff and then we have to implement a bunch of

2035
02:02:32,100 --> 02:02:37,000
game code so that you have something to play, you know, with with an

2036
02:02:37,000 --> 02:02:42,600
objective and loot and things like that, that go into these game.

2037
02:02:42,600 --> 02:02:44,500
Things that people game.

2038
02:02:47,300 --> 02:02:50,900
So, you know, will will be be do a summary video at the end?

2039
02:03:25,100 --> 02:03:25,900
Pepe Val.

2040
02:03:26,000 --> 02:03:28,200
What do you have in mind when it comes to shaders?

2041
02:03:28,300 --> 02:03:30,000
Do plan to use them to sort?

2042
02:03:30,200 --> 02:03:35,200
No, I don't really have any plan for shaders at all.

2043
02:03:35,200 --> 02:03:36,800
Other than just than the fact that

2044
02:03:39,300 --> 02:03:43,000
I think we would probably have to switch to them for.

2045
02:03:45,200 --> 02:03:46,200
For lighting.

2046
02:03:47,500 --> 02:03:51,300
Like we're going to want a little bit of lighting stuff in there and,

2047
02:03:51,600 --> 02:03:54,900
you know, a couple things like that and we, you know, we don't need

2048
02:03:54,900 --> 02:03:58,000
anything complicated but shaders are really.

2049
02:03:58,000 --> 02:04:05,300
The only reasonable way once you are drawing on the GPU to really get

2050
02:04:05,400 --> 02:04:06,600
a lot of that stuff.

2051
02:04:11,100 --> 02:04:14,700
So you know the Z buffer will take care of our sorting for us.

2052
02:04:14,700 --> 02:04:19,100
Mostly will have to do a little bit of stuff to in there.

2053
02:04:19,100 --> 02:04:23,200
That's, you know, in a Shader, we might have to offset the depth

2054
02:04:23,200 --> 02:04:23,800
value.

2055
02:04:25,200 --> 02:04:27,600
So because we want to do stuff like

2056
02:04:29,800 --> 02:04:35,400
Have artificial, like, overlap changes, based on, you know what,

2057
02:04:35,400 --> 02:04:38,600
supposed to be on top of what and, you know, who knows what else.

2058
02:04:38,600 --> 02:04:45,900
So there might be a little bit of stuff like that, but, you know, that

2059
02:04:45,900 --> 02:04:51,700
the shaders by and large will not do much, you know, it's just even, I

2060
02:04:51,700 --> 02:04:55,400
guess I'm trying to say is even just basic simple things.

2061
02:04:55,400 --> 02:04:57,300
Like basic lighting calculations.

2062
02:04:57,300 --> 02:04:58,200
You might want to do,

2063
02:04:58,900 --> 02:05:02,100
Once everything is rendered on the GPU, assuming you want to do those

2064
02:05:02,100 --> 02:05:06,500
light calculations per pixel, you have no choice but to do them in the

2065
02:05:06,500 --> 02:05:06,900
GPU.

2066
02:05:06,900 --> 02:05:11,100
Anyway, so even if you don't care about the speed, just doing, if you

2067
02:05:11,100 --> 02:05:14,700
just want per-pixel lighting, you have to write a Shader.

2068
02:05:15,200 --> 02:05:18,500
That's the only way you can put it your own even very simplistic code

2069
02:05:18,500 --> 02:05:21,000
in for doing some light calculations.

2070
02:05:23,000 --> 02:05:25,900
And the only way you can do any lighting calculations in the fixed

2071
02:05:25,900 --> 02:05:28,400
function pipeline is using this ridiculous.

2072
02:05:28,600 --> 02:05:29,500
Slight system.

2073
02:05:29,500 --> 02:05:33,800
That's really bad and was baked into the original opengl thing for

2074
02:05:33,800 --> 02:05:34,000
back.

2075
02:05:34,000 --> 02:05:38,100
When Hardware could hardly do anything compared to what it can do now.

2076
02:05:38,800 --> 02:05:43,200
So you know, do we really need shaders for anything?

2077
02:05:43,200 --> 02:05:47,300
Not really but you know, this small expense of

2078
02:05:48,500 --> 02:05:53,500
Querying it and uploading a Shader is usually worth it just to get the

2079
02:05:53,500 --> 02:05:56,200
Simplicity of being able to write our own little lighting equation in

2080
02:05:56,200 --> 02:05:56,700
there.

2081
02:05:56,800 --> 02:05:58,600
You know, when we when we need that that's all

2082
02:06:16,400 --> 02:06:17,300
Let's see.

2083
02:06:17,400 --> 02:06:20,100
Je KSG, how long till ship?

2084
02:06:21,000 --> 02:06:23,400
I don't have any particular plan first ship.

2085
02:06:24,100 --> 02:06:29,200
Like I said, this game is a teaching project so it doesn't have to be

2086
02:06:29,200 --> 02:06:30,700
released at any particular time.

2087
02:06:32,200 --> 02:06:34,300
So it'll shift when we have implemented.

2088
02:06:34,300 --> 02:06:37,100
All the things that I think are interesting and useful for us to

2089
02:06:37,100 --> 02:06:39,800
implement in the context of the game.

2090
02:06:39,800 --> 02:06:45,800
And, you know, we've done a nominal job on having enough game there as

2091
02:06:46,000 --> 02:06:48,500
Also that, you know, it's a play, a nice, playable experience that

2092
02:06:48,500 --> 02:06:51,300
people would enjoy, but that's it, you know.

2093
02:06:51,300 --> 02:06:54,400
So so I don't have a ship date in mind.

2094
02:06:56,400 --> 02:06:57,300
Rome.

2095
02:06:57,600 --> 02:07:00,000
I'm running out of excuses to clean the garage, so someone asked

2096
02:07:00,000 --> 02:07:00,900
something long.

2097
02:07:00,900 --> 02:07:05,500
Okay, so I'm basically here for to allow you to procrastinate from

2098
02:07:05,500 --> 02:07:06,500
cleaning your garage.

2099
02:07:06,900 --> 02:07:08,100
I see, I see how it is.

2100
02:07:11,500 --> 02:07:12,300
Orgasm around.

2101
02:07:12,300 --> 02:07:17,000
Could you expand on the topic of refactoring, sometimes all the code?

2102
02:07:19,200 --> 02:07:23,500
I use get to move to move on but keep my old code.

2103
02:07:23,700 --> 02:07:26,000
So I think I'm scared of changing things.

2104
02:07:29,100 --> 02:07:32,700
Yeah, like I sort of alluded to there when I had that brief kind of

2105
02:07:32,700 --> 02:07:36,000
interlude and said that you can't be afraid to change things.

2106
02:07:42,800 --> 02:07:47,700
I guess what I would say is that it's difficult.

2107
02:07:50,300 --> 02:07:55,900
It's difficult to get to the point in programming where you are

2108
02:07:55,900 --> 02:07:57,500
comfortable programming.

2109
02:08:00,500 --> 02:08:02,700
What I would consider a professional level which is a bit of a

2110
02:08:02,700 --> 02:08:05,200
misnomer because there's plenty of professional programmers, who can't

2111
02:08:05,200 --> 02:08:05,700
do this.

2112
02:08:06,100 --> 02:08:09,300
Professional just means you get paid for it, I guess but getting to

2113
02:08:09,300 --> 02:08:15,900
the point where I think you know you're a good programmer you go you

2114
02:08:15,900 --> 02:08:19,500
typically go through a couple sort of phases and what's interesting

2115
02:08:19,500 --> 02:08:23,800
about it is like you kind of return back to where you came from.

2116
02:08:23,800 --> 02:08:27,200
But just much better than before, when you start out programming,

2117
02:08:27,200 --> 02:08:28,400
you're not afraid.

2118
02:08:29,000 --> 02:08:31,800
Usually, because you just don't know anything, right?

2119
02:08:31,800 --> 02:08:34,700
Like you're just typing code in and you're just happy to see it work

2120
02:08:35,000 --> 02:08:42,800
and you haven't been inculcated with any, you know, nonsense about

2121
02:08:42,800 --> 02:08:45,000
what's clean code or stuff like this.

2122
02:08:45,400 --> 02:08:50,200
And you also don't have any experiences where you've gotten burned by

2123
02:08:50,200 --> 02:08:50,800
something.

2124
02:08:51,500 --> 02:08:55,200
So, you know, you're in this sort of Fairly innocent place as a

2125
02:08:55,200 --> 02:08:57,500
programmer where you just can do whatever you want.

2126
02:08:57,500 --> 02:08:58,700
And you're not afraid because

2127
02:08:58,800 --> 02:08:59,900
Cuz you don't have anything.

2128
02:09:00,000 --> 02:09:03,100
Afraid of the only thing you might be afraid of is that you can't

2129
02:09:03,100 --> 02:09:05,900
figure out how to make the thing you're trying to make, right?

2130
02:09:06,000 --> 02:09:09,400
Your may be afraid of your incompetence if you will right.

2131
02:09:09,500 --> 02:09:12,900
But you're not afraid because you think something is wrong?

2132
02:09:12,900 --> 02:09:13,700
Or something's going to happen?

2133
02:09:13,700 --> 02:09:14,400
You're just afraid.

2134
02:09:14,400 --> 02:09:18,200
Maybe at most you'd be afraid because you just don't know how to do

2135
02:09:18,400 --> 02:09:20,400
what you want to do at all, right?

2136
02:09:20,900 --> 02:09:23,400
But you're not afraid of making changes because you don't have any

2137
02:09:23,400 --> 02:09:26,400
reason to fear those changes, you haven't, right?

2138
02:09:27,200 --> 02:09:32,000
And then as you learn more, you actually, I think become more afraid.

2139
02:09:32,000 --> 02:09:38,100
Because now you've gotten burned in situations, you've made code that

2140
02:09:38,100 --> 02:09:39,800
then was brittle and you couldn't change it.

2141
02:09:39,800 --> 02:09:43,000
And it was all a disaster and it was too slow or who knows what

2142
02:09:43,000 --> 02:09:43,800
happened, right?

2143
02:09:43,800 --> 02:09:47,900
Or you've heard a bunch of lectures with people getting up saying, all

2144
02:09:47,900 --> 02:09:50,600
these things about what's good code and what's bad code and oh you

2145
02:09:50,600 --> 02:09:54,600
didn't have a overloaded equals operator in your private section of

2146
02:09:54,600 --> 02:09:57,200
your class and you're a bad person and all this other stuff.

2147
02:09:57,400 --> 02:10:00,600
Right and your heads all mixed up about stuff like that because you

2148
02:10:00,600 --> 02:10:03,300
don't really know what to believe and you don't have enough experience

2149
02:10:03,700 --> 02:10:07,100
yet to really get to the point where you're certain about what's right

2150
02:10:07,100 --> 02:10:09,300
and what's wrong in terms of your programming practices.

2151
02:10:09,300 --> 02:10:14,000
So you're kind of mixed up and it becomes fairly fearful and I think

2152
02:10:14,000 --> 02:10:16,900
an important part of getting to be a good programmer is getting past

2153
02:10:16,900 --> 02:10:21,700
that stage to the point where you're comfortable, letting design

2154
02:10:21,700 --> 02:10:26,300
emerge and letting good code emerge through series of refinements,

2155
02:10:26,400 --> 02:10:26,900
right?

2156
02:10:28,200 --> 02:10:32,800
And and respecting the fact that good code is code, that works.

2157
02:10:32,800 --> 02:10:35,600
Well is easy to change, doesn't have a lot of bugs in it.

2158
02:10:35,600 --> 02:10:40,700
That's what's good code, not some arbitrary set of things you're

2159
02:10:40,700 --> 02:10:44,100
afraid about doing or not doing right.

2160
02:10:46,300 --> 02:10:49,300
And getting that point is difficult, right?

2161
02:10:49,300 --> 02:10:52,500
Because it requires enough experience with programming to be

2162
02:10:52,500 --> 02:10:57,000
comfortable with programming, the act and being confident that.

2163
02:10:57,200 --> 02:11:00,700
You can spend time to work on code, relax.

2164
02:11:02,100 --> 02:11:05,400
Know that you're going to take a week or two to do something that

2165
02:11:05,400 --> 02:11:09,300
you're going to, you know, how to break it down, you're not scared

2166
02:11:09,300 --> 02:11:12,400
about what's going to happen when you start down a path because, you

2167
02:11:12,400 --> 02:11:15,100
know, either the path will materialize or it won't.

2168
02:11:15,100 --> 02:11:19,600
And you'll be able to tell that it's not and back back up, right?

2169
02:11:20,800 --> 02:11:22,100
And getting to that point is difficult.

2170
02:11:22,100 --> 02:11:26,900
I don't think there's a Magic Bullet, that's just part of being good

2171
02:11:27,000 --> 02:11:29,800
at your job by having done it.

2172
02:11:30,100 --> 02:11:31,700
And by also, in some

2173
02:11:31,800 --> 02:11:36,900
It's rejecting the Notions that there's, there's these golden rules to

2174
02:11:36,900 --> 02:11:40,300
programming that are about specific code.

2175
02:11:40,400 --> 02:11:43,000
Because really, as far as I'm concerned, that's not true.

2176
02:11:43,000 --> 02:11:47,100
The only golden rules to programming are focusing on those results,

2177
02:11:47,300 --> 02:11:47,700
right?

2178
02:11:47,800 --> 02:11:52,000
Golden rules to programs are about how you go about your mental Act of

2179
02:11:52,000 --> 02:11:52,600
programming.

2180
02:11:52,800 --> 02:11:56,300
Not about what the code actually looks like because

2181
02:11:57,700 --> 02:11:59,800
Not only does what the code looks like.

2182
02:12:00,000 --> 02:12:01,600
What's the right code?

2183
02:12:01,800 --> 02:12:04,400
I think vary from programmer to programmer because different

2184
02:12:04,400 --> 02:12:05,800
programmers work in different ways.

2185
02:12:07,200 --> 02:12:12,500
But also I think it's the case that any rule you might come up with.

2186
02:12:12,700 --> 02:12:15,300
There are probably very good cases for breaking that rule.

2187
02:12:15,300 --> 02:12:15,900
Right?

2188
02:12:16,700 --> 02:12:21,400
You know if the rule is about specific things in your code, you know?

2189
02:12:23,000 --> 02:12:26,500
And so I think it is difficult.

2190
02:12:27,900 --> 02:12:31,900
Doing large design work, and large systems, work is difficult.

2191
02:12:34,100 --> 02:12:39,000
And operating on the level, we operate on handmade hero is difficult,

2192
02:12:39,300 --> 02:12:39,700
right?

2193
02:12:40,700 --> 02:12:42,800
Knowing keeping this whole arches.

2194
02:12:42,800 --> 02:12:45,500
You think about how much fungibility there's been, how many changes

2195
02:12:45,500 --> 02:12:48,600
you made in Hammer, how many systems are interacting, and how we kept

2196
02:12:48,600 --> 02:12:49,500
that all under control.

2197
02:12:49,500 --> 02:12:52,500
And we've never really had a problem, keeping our game running and

2198
02:12:52,500 --> 02:12:55,900
going through these changes yet, that's hard, right?

2199
02:12:56,200 --> 02:13:02,800
And it you know, since I've done so much programming in my lifetime, I

2200
02:13:02,800 --> 02:13:03,600
am able to keep that.

2201
02:13:03,800 --> 02:13:04,700
Anything under control.

2202
02:13:04,900 --> 02:13:06,600
It's not a given that you can do that.

2203
02:13:06,600 --> 02:13:09,400
When you first starting out, you know I wouldn't have been able to do

2204
02:13:09,400 --> 02:13:13,600
that maybe in my first couple of years of programming, right?

2205
02:13:13,600 --> 02:13:17,400
Because I just wouldn't have had the experience to make sure that I

2206
02:13:17,400 --> 02:13:21,400
had the good sense to not go down really bad path and not put the code

2207
02:13:21,400 --> 02:13:23,800
in really brittle positions, right?

2208
02:13:24,500 --> 02:13:27,000
So that's just about gaining experience and unfortunately, I really

2209
02:13:27,000 --> 02:13:28,100
don't think there's anything.

2210
02:13:28,100 --> 02:13:32,800
Anyone can tell you up front that makes you suddenly get there.

2211
02:13:33,700 --> 02:13:39,700
But you can but the the good thing to tell you and to internalize is

2212
02:13:39,700 --> 02:13:44,400
just that you can get there and that getting there is about trusting

2213
02:13:44,400 --> 02:13:49,200
the outcome of the code and believing what you see, when you work,

2214
02:13:50,000 --> 02:13:54,900
right, seeing how code works and seeing what produces good results for

2215
02:13:54,900 --> 02:13:56,800
you and believing in that.

2216
02:13:57,800 --> 02:14:02,100
Is much more important than watching a bunch of experts.

2217
02:14:02,100 --> 02:14:06,900
Tell you something about what the right code looks like because that's

2218
02:14:06,900 --> 02:14:09,700
just not so useful at the end of the day, right?

2219
02:14:11,800 --> 02:14:14,700
Those things are really not what to focus on, right?

2220
02:14:15,100 --> 02:14:17,700
And you'll notice I try not to do that very often on handmade arrow in

2221
02:14:17,700 --> 02:14:18,300
general, right?

2222
02:14:18,300 --> 02:14:21,700
I very rarely try to say when you write this piece of code, it should

2223
02:14:21,700 --> 02:14:26,100
look exactly like this because that's just not really interesting.

2224
02:14:27,600 --> 02:14:30,300
And you will come up with those as you become a better programmer.

2225
02:14:30,300 --> 02:14:34,000
You will come up with your own hard and fast rules for certain things

2226
02:14:34,000 --> 02:14:38,900
that you find are always good for you and that may be true but it

2227
02:14:38,900 --> 02:14:44,100
won't necessarily be true for other programmers because those rules

2228
02:14:44,100 --> 02:14:47,900
are usually about compensating for some shortcoming you have.

2229
02:14:51,100 --> 02:14:55,000
That makes it so you don't make mistakes and I do those for me.

2230
02:14:55,000 --> 02:14:59,500
Like all of my hard-and-fast rules that I have are about making sure

2231
02:14:59,500 --> 02:14:59,800
that I

2232
02:15:00,000 --> 02:15:05,400
Have bugs in ways that I myself often accidentally make those bugs.

2233
02:15:05,600 --> 02:15:06,100
Right?

2234
02:15:06,900 --> 02:15:13,600
And so, another person another programmers brain isn't going to have

2235
02:15:13,600 --> 02:15:15,900
the same propensity for the same bugs.

2236
02:15:15,900 --> 02:15:18,500
They're going to have a propensity for different kinds of bugs.

2237
02:15:18,700 --> 02:15:22,300
So the sorts of things that they do that are hard and fast rules for

2238
02:15:22,300 --> 02:15:26,100
them are about compensating for their shortcomings, right?

2239
02:15:26,300 --> 02:15:29,900
And so if I tell them these rules about how to compensate,

2240
02:15:30,000 --> 02:15:31,300
Wait, for my shortcomings.

2241
02:15:31,500 --> 02:15:34,600
It may just be wasting their time because all they're doing now is

2242
02:15:34,600 --> 02:15:39,200
guarding against bugs that I wish make, but they may never make those

2243
02:15:39,200 --> 02:15:40,600
bugs, right?

2244
02:15:42,400 --> 02:15:43,800
And same thing with the design.

2245
02:15:43,800 --> 02:15:46,700
If there's certain aspects of design that always kind of are

2246
02:15:46,700 --> 02:15:47,800
problematic for you.

2247
02:15:47,800 --> 02:15:50,500
And so you make these rules about design that keep you out of those

2248
02:15:50,500 --> 02:15:51,900
traps great.

2249
02:15:52,400 --> 02:15:54,800
But that those may not be the traps that I would fall into.

2250
02:15:54,800 --> 02:15:57,500
So I don't need to obey those design rules, right?

2251
02:15:58,100 --> 02:16:00,300
And so I think that's sort of the problem.

2252
02:16:00,400 --> 02:16:02,800
You know, at the end of the day it's all just machine code.

2253
02:16:02,800 --> 02:16:05,900
And any machine code that executes and produces the right result in a

2254
02:16:05,900 --> 02:16:11,100
reasonable amount of time is good code end of story and what the

2255
02:16:11,100 --> 02:16:11,400
source

2256
02:16:11,700 --> 02:16:15,100
Looked like and pretending that somehow you can look at that and

2257
02:16:15,100 --> 02:16:18,900
assign some objective measure to whether that code was good or bad, I

2258
02:16:18,900 --> 02:16:22,800
just don't believe that because I fully believe that who the

2259
02:16:22,800 --> 02:16:25,600
programmers are that need to work on that code.

2260
02:16:26,300 --> 02:16:31,200
Largely determines what that code needs to look like to be good,

2261
02:16:31,600 --> 02:16:32,200
right?

2262
02:16:33,299 --> 02:16:36,100
Because what it means to be good code for them.

2263
02:16:37,700 --> 02:16:40,500
maybe very different than what it means to be good code for another

2264
02:16:40,500 --> 02:16:44,299
team because the things that they do and how they work,

2265
02:16:45,500 --> 02:16:48,000
The code is amenable to it or it isn't.

2266
02:16:48,400 --> 02:16:51,100
And, you know, somebody who writes a book that says, this is what good

2267
02:16:51,100 --> 02:16:51,600
code is.

2268
02:16:51,799 --> 02:16:53,299
It's just simply not true.

2269
02:16:53,299 --> 02:16:57,000
If you then take that same stuff, that supposedly, good code and give

2270
02:16:57,000 --> 02:16:59,200
it to programmers who program in a very different way.

2271
02:16:59,500 --> 02:17:02,700
All of a sudden, all of the things that code was assuming that it

2272
02:17:02,700 --> 02:17:05,600
needed to guard against for bugs and that it assumed it needed to be

2273
02:17:05,600 --> 02:17:10,299
flexible and modifiable by these programmers is not not not true

2274
02:17:10,299 --> 02:17:10,799
anymore.

2275
02:17:11,700 --> 02:17:14,299
Because these programs over here, they program in a different way.

2276
02:17:14,299 --> 02:17:16,500
They have a different methodology, they make different kinds of

2277
02:17:16,500 --> 02:17:20,000
mistakes more frequently and different kind of stakes less frequently

2278
02:17:20,100 --> 02:17:20,900
than this other team.

2279
02:17:22,600 --> 02:17:25,500
And so I think that's very important to understand.

2280
02:17:25,500 --> 02:17:29,000
And it's a very important part of becoming a good programmer is

2281
02:17:29,000 --> 02:17:34,100
understanding that and understanding that, that's what makes good code

2282
02:17:34,200 --> 02:17:34,500
is.

2283
02:17:34,500 --> 02:17:37,000
Contextual not absolute.

2284
02:17:38,100 --> 02:17:43,200
If that makes sense, the only absolute metrics of good code is, did it

2285
02:17:43,200 --> 02:17:48,500
perform correctly when executed, you know, didn't have a bug and was

2286
02:17:48,500 --> 02:17:49,299
it efficient?

2287
02:17:49,700 --> 02:17:51,700
Those are the only objective metrics we

2288
02:17:51,799 --> 02:17:52,799
For good code.

2289
02:17:54,600 --> 02:17:57,299
And so, all the other things that I have nothing, they don't have

2290
02:17:57,299 --> 02:17:59,799
effect on that, like, const or

2291
02:18:00,600 --> 02:18:02,700
Putting things in the private section of a class.

2292
02:18:03,000 --> 02:18:07,200
These things have no effect in the vast majority of cases on those

2293
02:18:07,200 --> 02:18:08,299
objective metrics.

2294
02:18:09,100 --> 02:18:09,799
So,

2295
02:18:11,700 --> 02:18:15,799
They are about whether the programmers on the team.

2296
02:18:15,799 --> 02:18:18,700
Need these things to be efficient and work.

2297
02:18:18,700 --> 02:18:22,600
Well, not about whether the code is in an objective sense.

2298
02:18:22,600 --> 02:18:27,900
Good, because they don't affect the objective measures of the code.

2299
02:18:48,900 --> 02:18:51,799
All right, let me take one more question here.

2300
02:18:52,799 --> 02:18:56,000
Let's make sure it's a hard-hitting question with a lot of content to

2301
02:18:56,000 --> 02:18:56,400
it.

2302
02:19:02,000 --> 02:19:04,299
Well actually, here's one that I'll answer look at the I keep missing

2303
02:19:04,299 --> 02:19:07,200
the free stream so it what time tomorrow will it start?

2304
02:19:08,200 --> 02:19:12,000
Basically the schedule is pretty much, always right?

2305
02:19:12,200 --> 02:19:14,700
So if you go to here and click on schedule bot,

2306
02:19:17,200 --> 02:19:21,799
This tells you pretty clearly the pre stream generally starts at the

2307
02:19:21,900 --> 02:19:23,100
broadcast time.

2308
02:19:23,299 --> 02:19:27,100
Sometimes it'll start 15 minutes early but the most it'll ever start

2309
02:19:27,100 --> 02:19:28,299
is 15 minutes early.

2310
02:19:28,700 --> 02:19:31,100
I and usually it starts right around the time.

2311
02:19:31,100 --> 02:19:31,900
It's supposed to start.

2312
02:19:31,900 --> 02:19:33,500
So you know if it says 10 a.m.

2313
02:19:33,500 --> 02:19:35,000
the pre stream starts at 10, a.m.

2314
02:19:35,500 --> 02:19:38,500
sometimes it'll start at 9:45 but that's the very earliest.

2315
02:19:38,500 --> 02:19:39,200
It will start.

2316
02:19:40,000 --> 02:19:43,700
And if your file, if you follow me on Twitch.

2317
02:19:44,000 --> 02:19:46,799
So I mean, if you follow handmade Hero on Twitch, it sends you an

2318
02:19:46,799 --> 02:19:49,800
email in theory when I go live as well.

2319
02:19:50,400 --> 02:19:51,400
So it's supposed to be

2320
02:19:57,100 --> 02:19:58,300
Okay, so

2321
02:20:00,600 --> 02:20:02,200
let's take a really important question.

2322
02:20:02,200 --> 02:20:04,100
Are how often do you clean your garage?

2323
02:20:04,400 --> 02:20:07,300
If you don't have a garage where do you park your car, if you don't

2324
02:20:07,300 --> 02:20:09,100
have a car, how do you get to Kansas?

2325
02:20:09,900 --> 02:20:12,600
And the answer there is, I do not have a car.

2326
02:20:13,300 --> 02:20:18,700
If I did have a car, I would not have to clean the garage anyway

2327
02:20:18,700 --> 02:20:23,700
because I live in an apartment building which has a shared garage,

2328
02:20:24,000 --> 02:20:30,300
which is cleaned by the maintenance people for the building.

2329
02:20:32,300 --> 02:20:35,400
And it's like this giant industrial garage, right?

2330
02:20:35,600 --> 02:20:40,200
So it's not like I can't store anything in it.

2331
02:20:40,200 --> 02:20:40,500
Either.

2332
02:20:40,500 --> 02:20:41,700
You notice anything a clean the garage?

2333
02:20:41,700 --> 02:20:45,400
You've got all this like you know, my rake and my trash barrel on my

2334
02:20:45,400 --> 02:20:47,000
lawn mower or whatever.

2335
02:20:47,900 --> 02:20:53,100
I you're not allowed to store, your own personal junk in the

2336
02:20:53,100 --> 02:20:55,900
building's garage anyway, so there's not much cleaning.

2337
02:20:55,900 --> 02:20:59,000
The only thing they ever do is the maintenance staff power washes, it

2338
02:20:59,000 --> 02:20:59,800
down at some point.

2339
02:21:00,000 --> 02:21:05,200
To get like the dirt and that's once every couple of months or a year

2340
02:21:05,200 --> 02:21:05,800
or something like that.

2341
02:21:05,800 --> 02:21:08,800
Anyway, so almost, nobody really cleans the garage.

2342
02:21:10,000 --> 02:21:11,900
In really the same sense.

2343
02:21:11,900 --> 02:21:17,800
Anyway without a car how I would get to Kansas as I would fly but that

2344
02:21:17,800 --> 02:21:19,200
is how I would get to Kansas.

2345
02:21:19,200 --> 02:21:23,000
Even if I didn't have a car I mean if I did have a car because it's a

2346
02:21:23,000 --> 02:21:24,700
really long drive to Kansas.

2347
02:21:26,100 --> 02:21:30,300
I feel like you know if you were going to go to Kansas from here via a

2348
02:21:30,300 --> 02:21:31,000
car

2349
02:21:36,100 --> 02:21:36,600
Guess, I don't know.

2350
02:21:36,600 --> 02:21:41,800
We're in Kansas, what city were talking about but there's the there's

2351
02:21:41,800 --> 02:21:44,000
the driving I guess.

2352
02:21:46,400 --> 02:21:50,000
And you would be driving for an entire day with no sleep.

2353
02:21:50,600 --> 02:21:54,100
So probably two days if we're realistic to get there.

2354
02:21:55,700 --> 02:22:03,300
So I feel like I would not, I would not do that, I do obviously know

2355
02:22:03,300 --> 02:22:10,400
that sometimes the fastest way to get to Kansas is to click your heels

2356
02:22:10,400 --> 02:22:10,800
together.

2357
02:22:10,800 --> 02:22:14,500
If you have red ruby slippers, I don't have red ruby slippers.

2358
02:22:14,500 --> 02:22:16,000
So returning to Kansas.

2359
02:22:16,800 --> 02:22:23,300
Via magic is not, you know, an option that I have available to me,

2360
02:22:23,300 --> 02:22:27,400
but, you know, I obviously would encourage people who do have magic

2361
02:22:27,400 --> 02:22:33,000
slippers to use that because it is cheaper than airfare.

2362
02:22:34,000 --> 02:22:36,300
And you know,

2363
02:22:44,200 --> 02:22:45,900
And popcorn of X 90.

2364
02:22:46,100 --> 02:22:50,300
Yes, John and Casey are in the same city for the moment.

2365
02:22:51,000 --> 02:22:55,800
John though, is not in Seattle full-time.

2366
02:22:56,600 --> 02:22:57,600
He's up here.

2367
02:22:57,700 --> 02:22:58,600
Only part of the time.

2368
02:22:58,600 --> 02:23:03,400
So whether or not we're in the same city is kind of depends, I guess

2369
02:23:03,400 --> 02:23:06,900
is what I'd say depends on the month.

2370
02:23:07,900 --> 02:23:08,700
For the week.

2371
02:23:10,900 --> 02:23:12,400
Alrighty, then.

2372
02:23:13,600 --> 02:23:14,800
It's close it down.

2373
02:23:16,700 --> 02:23:19,200
Thank you everyone for joining me for another sort of handmade here.

2374
02:23:19,200 --> 02:23:20,400
It's been a pleasure coding with you.

2375
02:23:20,400 --> 02:23:24,200
As always, I am pleased to see the code getting simplified now that we

2376
02:23:24,200 --> 02:23:27,800
are working on the 3D transition.

2377
02:23:27,800 --> 02:23:31,600
I feel like that really kind of keeps things a little bit more under

2378
02:23:31,600 --> 02:23:35,000
control now that we're sort of unifying that pipeline, so that's

2379
02:23:35,000 --> 02:23:35,600
making me happy.

2380
02:23:35,600 --> 02:23:36,800
That's why I want to do it.

2381
02:23:37,100 --> 02:23:39,600
And it looks like it is going exactly the way I'd hoped.

2382
02:23:39,600 --> 02:23:40,400
So that's good.

2383
02:23:41,700 --> 02:23:45,300
And getting rid of that Nexus of sprite sorting makes me happy too.

2384
02:23:45,300 --> 02:23:45,900
Because I just,

2385
02:23:46,000 --> 02:23:47,300
Didn't have a lot of confidence in it.

2386
02:23:47,300 --> 02:23:48,300
I didn't like it.

2387
02:23:49,200 --> 02:23:53,100
It was too much code executing in a two crucial part of the pipeline

2388
02:23:53,100 --> 02:23:53,800
in a place.

2389
02:23:53,800 --> 02:23:56,900
That doesn't scale well because it's where you push Sprites through.

2390
02:23:56,900 --> 02:23:59,500
And I really just didn't like that and then make me comfortable.

2391
02:23:59,500 --> 02:23:59,900
So, I'm happy.

2392
02:24:00,000 --> 02:24:02,500
See that we're moving away for that.

2393
02:24:02,500 --> 02:24:05,700
And I think it's yeah I'm much much happier about that and I think

2394
02:24:05,700 --> 02:24:07,900
there's going to be a lot of really good things to come out of that.

2395
02:24:08,800 --> 02:24:11,300
We will continue down that path tomorrow.

2396
02:24:11,300 --> 02:24:16,100
We'll get rid of the Sorting code and we'll sort of start to solidify

2397
02:24:16,100 --> 02:24:20,800
that cliprect stuff in a sort of more efficient way as well.

2398
02:24:20,800 --> 02:24:21,700
You'll see how will do that.

2399
02:24:21,700 --> 02:24:24,900
I think there's some pretty good ways we can make that happen and

2400
02:24:24,900 --> 02:24:26,100
start to clean things up more.

2401
02:24:27,200 --> 02:24:29,700
So that's that, I hope you'll join me for that.

2402
02:24:29,700 --> 02:24:30,200
That's tomorrow.

2403
02:24:30,200 --> 02:24:31,100
10 a.m.

2404
02:24:31,300 --> 02:24:32,600
same time, same place.

2405
02:24:33,400 --> 02:24:34,800
That's Pacific Standard time.

2406
02:24:34,800 --> 02:24:38,600
For those of you in other time zones, that's about it for today.

2407
02:24:39,800 --> 02:24:43,200
Yeah, if you would like to follow along at home, of course, at

2408
02:24:43,200 --> 02:24:45,600
handmade hero dot-org, you can pre-order the game and it comes to the

2409
02:24:45,600 --> 02:24:46,200
source code.

2410
02:24:46,200 --> 02:24:48,600
So if you want to follow along at home, you can do that.

2411
02:24:49,600 --> 02:24:50,700
We also have the Forum site.

2412
02:24:50,700 --> 02:24:52,500
You can go to ask questions a patreon page.

2413
02:24:52,500 --> 02:24:55,100
If you want to support the video series, we've got a schedule bot.

2414
02:24:55,100 --> 02:24:56,700
You can go to if you want to know when we're going to be.

2415
02:24:57,100 --> 02:25:02,900
And a fantastic episode guide maintained by mid low, you may have seen

2416
02:25:02,900 --> 02:25:08,300
him on the chat and yeah, if you're trying to catch up on old stuff,

2417
02:25:08,300 --> 02:25:09,500
that's a great place to go.

2418
02:25:09,600 --> 02:25:14,200
There's also a great search engine that SF Gartner made.

2419
02:25:14,400 --> 02:25:17,800
I don't actually know when that's going to be.

2420
02:25:18,200 --> 02:25:26,000
Do we do we know, does anyone May blow do you know when that really

2421
02:25:26,000 --> 02:25:26,700
nice?

2422
02:25:26,900 --> 02:25:30,900
Episode guide search feature is going to be sort of fully rolled out.

2423
02:25:30,900 --> 02:25:36,000
I'm assuming I mean, is that going to get rolled into the episode

2424
02:25:36,000 --> 02:25:38,800
guide at some point proper?

2425
02:25:38,800 --> 02:25:40,500
Because it's pretty amazing.

2426
02:25:40,700 --> 02:25:42,800
It's really, really good.

2427
02:25:43,300 --> 02:25:48,400
And it leverages all those annotations that you made.

2428
02:25:50,800 --> 02:25:55,500
In a, in a really great way and I just don't know when that's getting

2429
02:25:58,100 --> 02:26:02,700
when that what the plan is for that, I can show you where it is here.

2430
02:26:02,700 --> 02:26:03,000
It's

2431
02:26:12,200 --> 02:26:12,700
Oops.

2432
02:26:15,100 --> 02:26:17,000
Missed an IO.

2433
02:26:18,900 --> 02:26:20,000
That's what I meant to type.

2434
02:26:21,300 --> 02:26:25,200
So yeah, I don't know what the plan is for this or what's going on

2435
02:26:25,200 --> 02:26:25,400
with it.

2436
02:26:25,400 --> 02:26:30,100
But if you take a look here, you know, mid load, does these, fantastic

2437
02:26:30,100 --> 02:26:35,400
anime annotations here in the episode guide but you can't really use

2438
02:26:35,400 --> 02:26:37,800
them as effectively if you don't know what day you're looking at.

2439
02:26:37,800 --> 02:26:41,200
If you do know what they are looking at, you know, you can go here and

2440
02:26:41,200 --> 02:26:42,500
it's a pretty efficient, right?

2441
02:26:42,500 --> 02:26:46,600
You've got all the things here and you can jump to any one, but if you

2442
02:26:46,600 --> 02:26:48,600
don't really know what you're looking for, becomes difficult,

2443
02:26:48,700 --> 02:26:49,200
Halt.

2444
02:26:51,000 --> 02:26:52,400
But with this thing, it's pretty cool.

2445
02:26:52,700 --> 02:26:55,600
You can just type in what you're looking for and you can see all of my

2446
02:26:55,600 --> 02:26:58,000
blows and annotations that match.

2447
02:26:58,400 --> 02:26:59,600
What you've typed in?

2448
02:27:00,000 --> 02:27:03,500
And so when you come in here, you can jump to one of them and then

2449
02:27:03,500 --> 02:27:07,600
it'll show you right in line with the video actually.

2450
02:27:09,800 --> 02:27:14,300
And as the video plays, it actually shows you how far it is through

2451
02:27:14,300 --> 02:27:15,300
that thing as well.

2452
02:27:15,500 --> 02:27:17,900
And you can actually jump to specific times.

2453
02:27:17,900 --> 02:27:22,200
It's a pretty great feature, and the UI is designed really well too.

2454
02:27:22,200 --> 02:27:29,600
So yeah, us off did an amazing job on that and I don't know when

2455
02:27:29,600 --> 02:27:35,600
that's coming, you can access it early here by going to that URL.

2456
02:27:36,400 --> 02:27:39,100
Let me see what Midler has to say, on the chat.

2457
02:27:39,600 --> 02:27:42,500
Says yeah we will roll it into the new annotation system planning on

2458
02:27:42,500 --> 02:27:43,400
working on the new system.

2459
02:27:43,400 --> 02:27:47,000
Probably two months from now after handmade Network, version one is

2460
02:27:47,000 --> 02:27:47,600
settled.

2461
02:27:50,400 --> 02:27:50,900
Yes.

2462
02:27:50,900 --> 02:27:53,200
Oh, so that's pretty great.

2463
02:27:53,300 --> 02:27:57,300
That's so that'll be kind of moving into antigen system, I guess over

2464
02:27:57,300 --> 02:27:57,700
time.

2465
02:27:57,700 --> 02:27:59,000
It sounds pretty amazing.

2466
02:27:59,200 --> 02:28:00,700
So I would recommend checking that out.

2467
02:28:00,700 --> 02:28:04,900
If you haven't yet, eventually, it'll just be rolled into this button

2468
02:28:05,000 --> 02:28:06,400
where we're that goes.

2469
02:28:06,400 --> 02:28:08,500
It'll have it, but it's pretty great.

2470
02:28:16,800 --> 02:28:19,000
Oh, hey, and he is on the chat too.

2471
02:28:19,600 --> 02:28:22,200
So thank you very much for building that, that's pretty great.

2472
02:28:23,400 --> 02:28:25,700
And yeah.

2473
02:28:28,900 --> 02:28:29,300
All right.

2474
02:28:29,300 --> 02:28:33,200
Anyway, I'll be back here tomorrow for some more of the three

2475
02:28:33,200 --> 02:28:33,900
decoding.

2476
02:28:34,000 --> 02:28:36,700
Hope to see everyone here for that until then have fun programming

2477
02:28:36,700 --> 02:28:37,200
yourselves.

2478
02:28:37,300 --> 02:28:38,600
And I will see you on the internet.

2479
02:28:38,600 --> 02:28:39,600
Take it easy, everybody.

