1
00:00:00,000 --> 00:00:00,800
Let's go in here.

2
00:00:02,100 --> 00:00:04,300
Hello everyone, welcome to handmade hero.

3
00:00:04,300 --> 00:00:07,400
The show where we code a complete game live from scratch.

4
00:00:07,400 --> 00:00:12,700
No engine, no libraries, just our own code and basically we're going

5
00:00:12,700 --> 00:00:15,200
through every bit of game technology.

6
00:00:15,200 --> 00:00:22,400
Every every last piece that goes into having a game run right from

7
00:00:22,400 --> 00:00:28,100
filling the the pixels to the highest level, like pathfinding AI

8
00:00:28,100 --> 00:00:31,600
stuff, we are doing absolutely everything so that we can kind of see

9
00:00:32,400 --> 00:00:36,300
Last Detail that goes into how a game is made.

10
00:00:36,900 --> 00:00:42,000
And right now we're kind of in the middle of a big change.

11
00:00:42,000 --> 00:00:47,600
We are working our way towards having a solid engine architecture and

12
00:00:47,600 --> 00:00:51,600
what we're doing right now is we are finishing a change that we made

13
00:00:51,800 --> 00:00:54,900
where we said, okay, we're going to have this concept of a simulation

14
00:00:54,900 --> 00:00:58,400
region so that we can have very, very large worlds.

15
00:00:59,900 --> 00:01:03,400
That don't necessarily fit inside a single floating Point variable,

16
00:01:03,600 --> 00:01:04,200
right?

17
00:01:04,300 --> 00:01:05,600
In terms of their spans,

18
00:01:07,200 --> 00:01:11,100
And so you would so that we need more complex addressing tool that to

19
00:01:11,100 --> 00:01:12,000
be able to support them.

20
00:01:13,100 --> 00:01:17,600
Very, very large world and the ability to scale up to basically as

21
00:01:17,700 --> 00:01:21,800
many entities as you want, so like we have two major scaling problems.

22
00:01:21,800 --> 00:01:25,500
So what we decided to do to address that was to basically simulate the

23
00:01:25,500 --> 00:01:31,000
world in little tiny regions so that we can do stuff like have one

24
00:01:31,000 --> 00:01:35,100
high, one, simulation region that we open every frame to simulate

25
00:01:35,100 --> 00:01:36,900
what's around the player, but then we could also

26
00:01:37,200 --> 00:01:40,500
Simulate all the as many other places in the world at any given time

27
00:01:40,500 --> 00:01:42,700
as we want to buy opening, other simulation regions there.

28
00:01:42,700 --> 00:01:46,000
And we'll just do as many of those per frame as we can, and things

29
00:01:46,000 --> 00:01:49,400
that maybe don't need to be updated as frequently that are further

30
00:01:49,400 --> 00:01:51,900
away from you will get stimulated less frequently.

31
00:01:55,100 --> 00:01:58,400
So, this solves, both of those problems and it's our first

32
00:01:58,400 --> 00:01:59,600
architectural attempt.

33
00:02:00,700 --> 00:02:03,700
At solving them and we're hoping it works but we don't really know

34
00:02:03,700 --> 00:02:04,100
yet.

35
00:02:04,400 --> 00:02:05,200
I'm still sick today.

36
00:02:05,200 --> 00:02:07,500
So there will be a bunch of nose blowing on the stream and I apologize

37
00:02:07,500 --> 00:02:08,100
for that in advance.

38
00:02:11,700 --> 00:02:12,200
but,

39
00:02:13,300 --> 00:02:15,600
You can't stop coating just cause you're sick.

40
00:02:16,800 --> 00:02:19,600
The code wouldn't get done if we just took every little excuse to stop

41
00:02:19,600 --> 00:02:19,800
coding.

42
00:02:19,800 --> 00:02:20,800
That's just no good.

43
00:02:21,300 --> 00:02:24,800
So what we're going to do is we're going to dive right back into it, I

44
00:02:24,800 --> 00:02:27,300
should mention if you have pre-ordered the game on handmade hero

45
00:02:27,300 --> 00:02:30,000
dot-org, using this little fancy button right here.

46
00:02:30,300 --> 00:02:33,000
And you would like to follow along at home with your own copy of the

47
00:02:33,000 --> 00:02:33,500
source code.

48
00:02:33,500 --> 00:02:37,500
You can do that that link that you've got in your email gives you

49
00:02:37,500 --> 00:02:39,100
access to the source code all the time.

50
00:02:39,300 --> 00:02:42,600
So, download the zip file in there and they'll be

51
00:02:43,100 --> 00:02:46,000
bunch of Zips that you in that file.

52
00:02:46,400 --> 00:02:49,400
You want day 64 zip file to start day 65.

53
00:02:49,400 --> 00:02:54,500
So, one day, 65 Sunday, unzip day, 64 zip and start with that code.

54
00:02:54,500 --> 00:02:56,400
That is what I am starting with today.

55
00:02:56,400 --> 00:02:58,800
So you can follow along exactly if you would like.

56
00:02:59,400 --> 00:02:59,800
So today,

57
00:03:00,000 --> 00:03:03,500
Our job is basically to tidy things up and get to the point where

58
00:03:03,500 --> 00:03:06,600
we're running with the same regions so that we can start to bugging

59
00:03:06,600 --> 00:03:06,700
them.

60
00:03:06,700 --> 00:03:08,900
And I don't know if we'll have enough time today to actually debug

61
00:03:08,900 --> 00:03:09,800
them or not.

62
00:03:10,000 --> 00:03:12,500
But I would be nice if we could get to the point where we've actually

63
00:03:12,500 --> 00:03:19,200
implemented everything that we need and are at least running albeit,

64
00:03:19,200 --> 00:03:21,100
perhaps running incorrectly.

65
00:03:21,600 --> 00:03:25,000
And that way next week we can start on just debugging and adding stuff

66
00:03:25,000 --> 00:03:26,700
and testing out some regions and so on.

67
00:03:29,200 --> 00:03:29,800
So let's see.

68
00:03:30,000 --> 00:03:30,000
Yeah.

69
00:03:31,000 --> 00:03:34,600
We were in the process of fixing compile errors.

70
00:03:34,700 --> 00:03:38,900
Basically, we made our bunch of changes, and we now have to move our

71
00:03:38,900 --> 00:03:43,400
sim code that we were used to be doing in our kind of janky way.

72
00:03:43,400 --> 00:03:45,000
Our ad hoc way that we were doing before.

73
00:03:45,000 --> 00:03:48,800
It's now time to move those over into the simulation system that we

74
00:03:48,800 --> 00:03:51,900
were doing inside the simulation system.

75
00:03:51,900 --> 00:03:55,600
We've got a bunch of simulation code here.

76
00:03:55,700 --> 00:03:59,000
And what I'm thinking, I don't know, this is just my, my thought is, I

77
00:03:59,000 --> 00:04:00,300
probably am going to have a

78
00:04:00,400 --> 00:04:02,900
A lot of code for entity stuff.

79
00:04:03,000 --> 00:04:07,300
And so what I'd like to do is probably make a file that just holds all

80
00:04:07,300 --> 00:04:12,000
of the behavioral code so that anytime we want to add stuff that about

81
00:04:12,000 --> 00:04:15,800
like how the game World operates, that kind of goes in one file,

82
00:04:16,500 --> 00:04:19,300
that's not in the same region, which is basically like the utilities

83
00:04:19,500 --> 00:04:21,800
and the logic for doing the same region itself.

84
00:04:22,300 --> 00:04:24,200
I think I'm going to keep those in separate files.

85
00:04:24,400 --> 00:04:27,100
Again, there's really no Rhyme or Reason to how you separate things

86
00:04:27,100 --> 00:04:27,800
file wise.

87
00:04:27,800 --> 00:04:30,000
The way that we're doing things, it doesn't matter.

88
00:04:30,400 --> 00:04:32,600
I can pretty much put things in files, however, you want.

89
00:04:32,600 --> 00:04:35,600
So, when I put things in different files, all I'm thinking about is

90
00:04:35,600 --> 00:04:40,300
just how I want to be able to quickly view them and how I want to kind

91
00:04:40,300 --> 00:04:42,100
of mentally compartmentalize them.

92
00:04:42,400 --> 00:04:44,600
It's a purely psychological thing.

93
00:04:44,800 --> 00:04:48,200
The files is not really a development thing because the way we compile

94
00:04:48,200 --> 00:04:49,500
this, everything is all one big chunk.

95
00:04:49,500 --> 00:04:50,000
Anyway,

96
00:04:52,300 --> 00:04:54,400
It doesn't really matter how you break it up into files.

97
00:04:55,600 --> 00:04:59,500
So I'm going to make something here, like handmade.

98
00:05:01,500 --> 00:05:02,400
I guess what are we going to call?

99
00:05:02,400 --> 00:05:09,100
This will call it handmade entity for now not sure if that's a good

100
00:05:09,100 --> 00:05:09,800
name or not.

101
00:05:10,300 --> 00:05:10,800
But

102
00:05:12,400 --> 00:05:14,900
That's going to call it because it's basically like all of the code

103
00:05:15,200 --> 00:05:17,800
that you need to implement those entities.

104
00:05:20,300 --> 00:05:21,400
So put that in here.

105
00:05:22,300 --> 00:05:25,000
I don't think there's really anything for the h file at the moment.

106
00:05:25,400 --> 00:05:25,600
Really?

107
00:05:25,600 --> 00:05:29,200
We're just making those, these sort of update calls, I'm going to move

108
00:05:29,200 --> 00:05:36,400
them in here, so those go in there and then inside, let's see, inside

109
00:05:36,400 --> 00:05:37,500
the rest of this stuff.

110
00:05:37,600 --> 00:05:41,700
I think most of these things are going to be roughly the same, our

111
00:05:41,700 --> 00:05:42,700
draw hitpoints code.

112
00:05:42,700 --> 00:05:45,000
I'm going to leave this code on compiled for now, and we'll switch

113
00:05:45,000 --> 00:05:48,100
back to it in a second, are all of these things that we're doing,

114
00:05:48,100 --> 00:05:49,700
rendering rendering?

115
00:05:49,700 --> 00:05:49,800
I

116
00:05:50,100 --> 00:05:52,100
It should just operate directly on the same region.

117
00:05:52,500 --> 00:05:55,800
While the same region is still open, we do our rendering so we'll

118
00:05:55,800 --> 00:05:59,300
basically open a Sim region for the world for the plates, around the

119
00:05:59,300 --> 00:05:59,800
player.

120
00:06:00,000 --> 00:06:03,600
Simulate it forwards, render it right in place, possibly doing the

121
00:06:03,600 --> 00:06:07,600
rendering in the simulation together and then close it.

122
00:06:07,900 --> 00:06:10,700
Whereas with other SIM regions we won't do.

123
00:06:10,700 --> 00:06:12,500
That will will.

124
00:06:12,500 --> 00:06:14,600
We won't basically output any rendering for it.

125
00:06:15,000 --> 00:06:16,100
How we want to deal with that?

126
00:06:16,100 --> 00:06:19,100
Is again something that we can just do a little bit further down the

127
00:06:19,100 --> 00:06:19,500
line.

128
00:06:20,200 --> 00:06:24,100
So what I want to do here is I want to change this over to be using

129
00:06:24,100 --> 00:06:28,100
the same entities now, and because we now no longer ever work with low

130
00:06:28,100 --> 00:06:29,800
entities, the the basically the storage

131
00:06:30,000 --> 00:06:30,700
Format for enemies.

132
00:06:30,700 --> 00:06:32,900
We just don't touch during Real Running of the game.

133
00:06:33,600 --> 00:06:36,100
Everything supposed to be on cemented, he's except the unpack in the

134
00:06:36,100 --> 00:06:36,500
pack.

135
00:06:37,000 --> 00:06:39,800
So basically everything that was a low entity here is just an entity

136
00:06:39,800 --> 00:06:43,600
now and that's really all that should have to happen as far as I know.

137
00:06:43,700 --> 00:06:45,700
There's nothing else fancy that should go on there.

138
00:06:45,900 --> 00:06:48,600
So that should just work and it did.

139
00:06:49,800 --> 00:06:53,600
Now in here again, we don't have high enemies anymore and the game

140
00:06:53,600 --> 00:06:54,900
State, that's not a thing.

141
00:06:55,700 --> 00:06:59,700
We just have the the sort of the final stored entities in there so we

142
00:06:59,700 --> 00:07:01,000
can get rid of the high-end account.

143
00:07:01,000 --> 00:07:01,700
That's gone.

144
00:07:02,500 --> 00:07:05,800
Anything that was initializing that array is not necessary anymore.

145
00:07:06,500 --> 00:07:09,800
So now what we have to do here is finally, something that should have

146
00:07:09,800 --> 00:07:10,800
been done a long time ago.

147
00:07:10,800 --> 00:07:11,300
Well, doesn't know.

148
00:07:11,300 --> 00:07:13,900
It should have been done a long time ago but rather that's been wrong

149
00:07:13,900 --> 00:07:16,200
for a long time but we don't really have to deal with it.

150
00:07:18,900 --> 00:07:22,700
And that is updating the player updating a hero we had always kind of

151
00:07:22,700 --> 00:07:24,200
done that in an ad hoc fashion.

152
00:07:24,400 --> 00:07:27,800
We did that right in the code that parses the controller because again

153
00:07:28,300 --> 00:07:30,200
and like I said, it should have been done a long time ago, is really

154
00:07:30,200 --> 00:07:31,000
the wrong term.

155
00:07:31,200 --> 00:07:32,600
It wasn't that should have been done a long time ago.

156
00:07:32,600 --> 00:07:35,200
It's that kind of knew that we wanted to replace it for quite some

157
00:07:35,200 --> 00:07:38,600
time but they're really never was a need to and you don't want to do

158
00:07:38,600 --> 00:07:41,300
stuff ahead of when there's a need to because you're liable to guess

159
00:07:41,300 --> 00:07:44,400
wrong, you always want to wait so you can actually see how things are

160
00:07:44,400 --> 00:07:45,100
going to go before.

161
00:07:45,100 --> 00:07:46,200
You make changes like that.

162
00:07:47,100 --> 00:07:49,700
And so, what what we were doing here is we would process the

163
00:07:49,700 --> 00:07:50,300
controller input.

164
00:07:50,300 --> 00:07:54,600
And then immediately after processing the controller input, we would

165
00:07:54,700 --> 00:07:56,300
actually do the updating for the player.

166
00:07:56,600 --> 00:07:58,600
And that's not really what we want to do, right?

167
00:07:58,600 --> 00:08:01,900
We would like to probably do that we'd like to probably do this in a

168
00:08:01,900 --> 00:08:03,400
way, that's more sane.

169
00:08:04,300 --> 00:08:08,800
And the reason that we want to do that again is because she's me

170
00:08:10,900 --> 00:08:13,200
We don't actually know how this controller parsing stuff is going to

171
00:08:13,200 --> 00:08:14,100
work in the future.

172
00:08:14,300 --> 00:08:17,100
It's highly likely that we might do something where boat, like,

173
00:08:17,100 --> 00:08:20,200
multiple controllers update the same player.

174
00:08:20,200 --> 00:08:23,400
Like both the keyboard and the GamePad are both controlling the same

175
00:08:23,400 --> 00:08:27,700
player for example, like if we ship, the game's single-player only and

176
00:08:27,700 --> 00:08:30,400
not multiplayer because we don't know whether we're going to support

177
00:08:30,400 --> 00:08:34,600
multiplayer, not like we right now do but we don't know whether that's

178
00:08:34,600 --> 00:08:35,900
actually gonna be a gameplay feature.

179
00:08:36,000 --> 00:08:38,600
If it turns out that it's not, then we'll want to do something like

180
00:08:38,600 --> 00:08:40,299
bundle the controller stuff together.

181
00:08:40,600 --> 00:08:44,300
And so on, furthermore processing the controller input is something

182
00:08:44,300 --> 00:08:47,900
that maybe we need some logic to do to like figure look at, you know,

183
00:08:47,900 --> 00:08:50,600
maybe we change this if there's just a lot of stuff that goes on in

184
00:08:50,600 --> 00:08:51,000
there.

185
00:08:51,800 --> 00:08:55,600
So we'd like to do is basically have the simulation for the hero

186
00:08:55,700 --> 00:08:58,000
happen in the same place as everything else.

187
00:08:58,200 --> 00:08:59,500
And the controller processing,

188
00:09:00,600 --> 00:09:03,500
To the extent that it happens can either happen outside and build a

189
00:09:03,500 --> 00:09:07,700
little thing that it then passes on to the simulation code that says,

190
00:09:07,700 --> 00:09:08,700
what should happen with the hero?

191
00:09:08,700 --> 00:09:12,500
Or we actually just call out to the controller code in the hero

192
00:09:12,500 --> 00:09:13,500
processing and say, get it.

193
00:09:13,500 --> 00:09:16,700
Now, I'm not sure which one we want to do, but either way, this stuff

194
00:09:16,700 --> 00:09:20,600
here, obviously is simulation stuff and should happen inside the

195
00:09:20,600 --> 00:09:22,500
simulation part of things.

196
00:09:23,100 --> 00:09:26,500
So again, the other reason to is that there might be metagame stuff

197
00:09:26,500 --> 00:09:29,800
here in the controller, stuff meeting that you like let's say we

198
00:09:30,000 --> 00:09:33,600
Have we do have an option menu, we decide have an options menu and or,

199
00:09:33,900 --> 00:09:37,400
you know, some kind of a confirmation for quitting that stuff with

200
00:09:37,400 --> 00:09:39,300
sort of interrupt, this, this processing.

201
00:09:39,300 --> 00:09:43,100
So we also have that concern, so a lot of that stuff's just suggest to

202
00:09:43,100 --> 00:09:45,600
me, that probably what I want to do since I have to start sweating

203
00:09:45,600 --> 00:09:49,500
this apart is I probably want to split apart the same stuff, put it

204
00:09:49,500 --> 00:09:52,900
down inside where the rest of the Sim stuff is and then just have this

205
00:09:52,900 --> 00:09:56,500
get sort of the past like the stuff that wants to happen if the crow

206
00:09:56,500 --> 00:09:59,900
just gets kind of passed down to

207
00:10:00,000 --> 00:10:01,300
The to the same stuff.

208
00:10:01,500 --> 00:10:05,900
So when we do our entity type hero, updating here right we can just

209
00:10:05,900 --> 00:10:08,900
stick in the code that we were using before for now.

210
00:10:10,500 --> 00:10:13,100
And that's going to be how we'll do that.

211
00:10:13,100 --> 00:10:17,000
And then up here, when we do our controller parsing, what we'll do is

212
00:10:17,000 --> 00:10:20,700
we'll just save the stuff that we actually want to do for our hero and

213
00:10:20,700 --> 00:10:22,500
we'll process that later on.

214
00:10:25,800 --> 00:10:27,600
Now, we set ourselves up for success.

215
00:10:29,100 --> 00:10:33,000
Perhaps, accidentally by having this player index, for controller

216
00:10:33,000 --> 00:10:33,700
concept.

217
00:10:33,800 --> 00:10:37,000
We basically said, for every controller in the system, we've got sort

218
00:10:37,000 --> 00:10:40,000
of a knowledge of What entity that maps to.

219
00:10:40,700 --> 00:10:42,500
Well, what I'm going to do is, I'm just going to go ahead and expand

220
00:10:42,500 --> 00:10:43,300
that out.

221
00:10:43,800 --> 00:10:49,100
And so in addition to storing this, this player this entity reference,

222
00:10:49,200 --> 00:10:49,600
right?

223
00:10:49,700 --> 00:10:50,900
This is the end of the index.

224
00:10:51,400 --> 00:10:53,100
In addition, to storing that entity index.

225
00:10:53,300 --> 00:10:54,500
We're also going to store

226
00:10:55,500 --> 00:11:01,000
Along with it, the, the sort of control request, that has been

227
00:11:01,100 --> 00:11:03,300
accumulated for that player on this Frame.

228
00:11:03,600 --> 00:11:06,900
So, we had this this DDP request, right?

229
00:11:09,200 --> 00:11:11,100
Which is the acceleration that was wanted.

230
00:11:11,400 --> 00:11:14,800
And then we also have this d sword request, which is whether they

231
00:11:14,800 --> 00:11:17,100
wanted to throw that sword, right?

232
00:11:17,100 --> 00:11:19,200
So I'm just going to go ahead and put those in there.

233
00:11:19,600 --> 00:11:23,900
And then later on what we'll do is the heroes when they get processed.

234
00:11:24,200 --> 00:11:25,100
They'll basically pick

235
00:11:25,300 --> 00:11:29,600
Out up from the, the player index for controller array.

236
00:11:30,100 --> 00:11:34,100
Now, what I'd like to do to the other thing about that that's kind of,

237
00:11:35,200 --> 00:11:40,700
well, kind of think about this one thing that's a little janky is for

238
00:11:40,700 --> 00:11:41,900
the individual players.

239
00:11:41,900 --> 00:11:42,700
Oh well, you know what?

240
00:11:42,700 --> 00:11:43,100
That's okay.

241
00:11:43,100 --> 00:11:45,600
We can store that binding pretty well as well.

242
00:11:45,600 --> 00:11:46,400
So, never mind.

243
00:11:46,400 --> 00:11:48,500
We'll, we'll deal with that a little bit later.

244
00:11:49,100 --> 00:11:51,900
All right, because we're going to there's other stuff that we're going

245
00:11:51,900 --> 00:11:52,500
to need as well.

246
00:11:53,100 --> 00:11:55,100
Alright, so when we go ahead and get this,

247
00:11:55,200 --> 00:11:57,200
this player index for controller.

248
00:11:57,200 --> 00:12:00,000
Now what I'm going to do is expand that out into this thing which is

249
00:12:00,000 --> 00:12:04,000
Basically like a controlled hero or something like that.

250
00:12:04,400 --> 00:12:07,600
So we'll have a controlled hero struct and that's going to be one for

251
00:12:07,600 --> 00:12:09,500
every controller at the moment.

252
00:12:09,600 --> 00:12:13,900
So when we do the controlled hero, we're going to get one of those

253
00:12:13,900 --> 00:12:17,400
back and this is the controlled hero here.

254
00:12:19,100 --> 00:12:19,800
So, there we go.

255
00:12:19,800 --> 00:12:20,900
Grab that out.

256
00:12:21,600 --> 00:12:26,400
And this is now I guess like just a controlled hero array.

257
00:12:27,700 --> 00:12:32,100
Rolled hero like so right maybe I'll say controlled Heroes.

258
00:12:33,100 --> 00:12:37,600
so we'll grab that out and then assuming that that, that controlled

259
00:12:37,600 --> 00:12:38,100
hero,

260
00:12:40,100 --> 00:12:43,200
Is has an entity Index, right?

261
00:12:43,900 --> 00:12:45,400
Then we're going to do the control policy for it.

262
00:12:45,400 --> 00:12:47,600
Otherwise, we're going to do the same thing we're doing before.

263
00:12:49,000 --> 00:12:51,700
You know it maybe that's a because it looks too close to controller.

264
00:12:51,700 --> 00:12:55,500
Let's do con hero like that makes it sound like he's a convict of some

265
00:12:55,500 --> 00:12:56,600
kind anyway.

266
00:12:57,200 --> 00:13:01,600
So if that happens, then all we have to do is just set up the stuff as

267
00:13:01,600 --> 00:13:07,800
we were doing before so we'll record that entity index, like so and

268
00:13:07,800 --> 00:13:09,800
that's really all we have to do although we could

269
00:13:10,000 --> 00:13:10,900
Out as well.

270
00:13:10,900 --> 00:13:15,700
Here's GDP request like so in fact, I guess we could just do.

271
00:13:15,900 --> 00:13:17,300
We could just zero this entirely

272
00:13:18,500 --> 00:13:24,900
Like so so just initialize it like that when we add a player and then

273
00:13:24,900 --> 00:13:28,400
similarly inside here, when we're actually doing work on the player

274
00:13:28,400 --> 00:13:35,000
now instead the DDP stuff we can basically just to make that change

275
00:13:35,000 --> 00:13:37,800
this so that we're actually doing it directly on the con hero.

276
00:13:39,100 --> 00:13:39,800
One of them.

277
00:13:41,700 --> 00:13:44,400
Oops and I guess there's no route.

278
00:13:44,400 --> 00:13:47,400
The request is just kind of, I mean I look at it for typing residents.

279
00:13:47,400 --> 00:13:48,000
Leave in that way.

280
00:13:48,000 --> 00:13:49,100
We know their requests.

281
00:13:49,300 --> 00:13:55,200
We could even put a note note, these are the controller requests for

282
00:13:55,200 --> 00:13:55,900
stimulation.

283
00:13:57,300 --> 00:14:04,300
Like so okay, so let's see here.

284
00:14:04,500 --> 00:14:10,500
Controller trillion to see Heidi Z equals 30.

285
00:14:10,700 --> 00:14:15,800
So this was we also have a DZ request which is basically our old

286
00:14:16,200 --> 00:14:17,200
jumping command.

287
00:14:17,300 --> 00:14:20,000
Got we had our, we had we put jumping in there, even though, even

288
00:14:20,000 --> 00:14:22,100
though we don't actually think we're ever going to allow this guy to

289
00:14:22,100 --> 00:14:22,700
jump.

290
00:14:23,500 --> 00:14:26,800
We still have jumping in there anyway, but you know, it was kind of a

291
00:14:26,800 --> 00:14:27,000
fun thing.

292
00:14:27,200 --> 00:14:30,400
It allowed us to test some Z stuff, so we'll leave it in for now.

293
00:14:32,600 --> 00:14:34,500
Let's go ahead and change that stuff.

294
00:14:34,700 --> 00:14:38,600
And so now we've got all of those things in there, looks pretty

295
00:14:38,600 --> 00:14:39,500
straightforward.

296
00:14:39,700 --> 00:14:43,800
So now when we go down here and we're actually doing that simulation

297
00:14:44,000 --> 00:14:44,900
for the hero,

298
00:14:50,200 --> 00:14:53,700
what we can do, there's two ways we could do this.

299
00:14:54,500 --> 00:14:56,300
And I'm trying to think of which one I like best.

300
00:14:56,700 --> 00:14:59,300
I think instead of doing it this way,

301
00:15:01,300 --> 00:15:04,500
Basically what I'm trying to figure out is so we've stored this now.

302
00:15:04,500 --> 00:15:07,100
And then, what we want to do is when we actually process all of our

303
00:15:07,100 --> 00:15:10,100
entities, we want to go pick up those requests that the controller's

304
00:15:10,100 --> 00:15:12,200
put in and kind of one of the nice things about that.

305
00:15:12,200 --> 00:15:15,000
Is now they can, we can have, as many things we want sort of add in

306
00:15:15,000 --> 00:15:15,400
there.

307
00:15:16,700 --> 00:15:20,500
In fact, one thing that we could do is clear it first and then add

308
00:15:20,500 --> 00:15:21,400
into it here.

309
00:15:21,400 --> 00:15:26,300
Like we could just clear out these requests fields and then have these

310
00:15:26,300 --> 00:15:30,100
actually add into them, which would be kind of allow us to do the

311
00:15:30,100 --> 00:15:30,400
controller.

312
00:15:30,600 --> 00:15:30,900
As well.

313
00:15:30,900 --> 00:15:34,000
So maybe we'll do that in a second as well, but ignoring that for now,

314
00:15:35,000 --> 00:15:36,700
What I need to do is now go pick them up.

315
00:15:37,000 --> 00:15:40,900
So when I iterate over the entities, what I want to do is see if this

316
00:15:40,900 --> 00:15:43,800
particular entity, this particular hero that I'm on has any control

317
00:15:43,800 --> 00:15:45,400
request, there's two ways I could do that.

318
00:15:45,600 --> 00:15:48,700
One way I can do that is have a mapping that allows me to get from The

319
00:15:48,700 --> 00:15:51,000
Entity back to the controlled hero.

320
00:15:51,200 --> 00:15:53,300
Now, I can do that pretty simply with an array look up, because

321
00:15:53,300 --> 00:15:57,600
there's only like, four, or five of these ever in the system because

322
00:15:57,600 --> 00:16:01,400
there's only like, you know, four or five controllers separately,

323
00:16:01,400 --> 00:16:03,100
controlled Heroes on a single machine.

324
00:16:04,200 --> 00:16:09,300
But the other way I could do it is not doing with a lookup, I could do

325
00:16:09,300 --> 00:16:13,200
a loop over the controlled hero structures and look up the entities

326
00:16:13,400 --> 00:16:17,000
via their energy index and simulate them that way so that they get

327
00:16:17,000 --> 00:16:18,800
simulated first, right?

328
00:16:19,500 --> 00:16:22,600
That's when we do it and then when we when we actually get to them

329
00:16:22,600 --> 00:16:25,500
here, we wouldn't simulate them.

330
00:16:25,500 --> 00:16:29,500
So we would take the code out of here and just do it right here.

331
00:16:30,100 --> 00:16:33,500
Now, I don't actually know whether I should me.

332
00:16:35,100 --> 00:16:36,700
I don't actually know what I think about that.

333
00:16:38,000 --> 00:16:40,600
I think what I'm going to do for now is keep everything in the same

334
00:16:40,600 --> 00:16:43,000
Loop, that feels a little bit better to me.

335
00:16:43,000 --> 00:16:48,600
Potentially just seems a little more rational.

336
00:16:48,800 --> 00:16:51,500
So I think what I'm going to do is I'm literally just going to go

337
00:16:51,500 --> 00:16:52,800
ahead and do it right here.

338
00:16:52,800 --> 00:16:56,400
And then later on, I'm hoping that as we go further into the final

339
00:16:56,400 --> 00:16:56,700
code.

340
00:16:56,700 --> 00:16:59,300
Like, as we get further down the line, it will become obvious.

341
00:16:59,300 --> 00:17:03,100
Some point later in time how exactly we want to do this, right?

342
00:17:03,200 --> 00:17:04,700
So, I don't want to thank overthink it right.

343
00:17:04,900 --> 00:17:07,900
Since looking through four elements in an array or five elements in

344
00:17:07,900 --> 00:17:10,800
arrays so cheap, I think I'm just going to do that.

345
00:17:11,300 --> 00:17:15,200
And then later on, we'll see if there's a more elegant solution to the

346
00:17:15,200 --> 00:17:18,300
problem when things are a little more settled.

347
00:17:18,900 --> 00:17:23,099
So I'm going to go ahead and see about the control index here.

348
00:17:23,800 --> 00:17:27,099
I'm going to go through basically all of the controlled Heroes.

349
00:17:27,599 --> 00:17:33,300
And I'm going to say, let's let's take a look at the controlled hero.

350
00:17:36,100 --> 00:17:36,600
Everyone.

351
00:17:36,600 --> 00:17:37,300
It was here.

352
00:17:38,200 --> 00:17:39,200
I don't know if you can hear it.

353
00:17:39,200 --> 00:17:40,100
It's so loud.

354
00:17:40,800 --> 00:17:43,700
There's so much construction here in Seattle, like they're building so

355
00:17:43,700 --> 00:17:44,500
many buildings.

356
00:17:45,200 --> 00:17:48,800
There's there's Towers going up all around me.

357
00:17:51,000 --> 00:17:52,200
You can hear Construction.

358
00:17:53,800 --> 00:17:54,400
Everywhere.

359
00:17:54,900 --> 00:17:55,100
All right.

360
00:17:55,100 --> 00:17:58,500
Anyway, so I'm just going to look and see if the entity index

361
00:18:00,000 --> 00:18:05,200
Right of this time hero equals the entities storage Index, right?

362
00:18:06,000 --> 00:18:10,400
So basically, if this controlled hero is controlling the same hero

363
00:18:10,400 --> 00:18:14,400
that I am then, that's right, that's how I know how to actually do,

364
00:18:14,400 --> 00:18:15,300
his move call.

365
00:18:15,500 --> 00:18:19,600
So once we get that con hero out, then I pretty much know all the

366
00:18:19,600 --> 00:18:22,700
parameters that we were using before, they're just going to grab it

367
00:18:22,700 --> 00:18:24,100
right out of the con hero here.

368
00:18:25,100 --> 00:18:27,800
And then the only thing that I need to do that we weren't we didn't

369
00:18:27,800 --> 00:18:29,900
use to do in here and of course we actually don't need any of this.

370
00:18:30,000 --> 00:18:34,700
This stuff anymore, the low sword stuff we can just get the the sword

371
00:18:34,700 --> 00:18:36,800
directly, right?

372
00:18:36,900 --> 00:18:40,000
That's going to be kind of the sword equals.

373
00:18:40,900 --> 00:18:45,100
What's our Sim region call we need a zit.

374
00:18:45,300 --> 00:18:51,300
It's it's get entity by storage in deck so we don't even need to do

375
00:18:51,300 --> 00:18:51,500
that.

376
00:18:51,500 --> 00:18:53,400
We actually did a bunch of cool stuff here.

377
00:18:53,600 --> 00:18:56,600
We don't need to do any of this garbage, right?

378
00:18:56,600 --> 00:18:59,500
That's just done all we need to do now is it?

379
00:18:59,500 --> 00:18:59,900
We just

380
00:19:00,000 --> 00:19:00,600
The Entity.

381
00:19:00,700 --> 00:19:02,600
It just has a sword pointer right?

382
00:19:02,600 --> 00:19:03,400
It's just got one.

383
00:19:03,900 --> 00:19:04,500
That's it.

384
00:19:04,800 --> 00:19:06,800
So we just look to see if it's got a sword pointer.

385
00:19:06,800 --> 00:19:08,300
If he has a sword at all we're done.

386
00:19:08,300 --> 00:19:09,700
We don't have to do any of that stuff.

387
00:19:10,000 --> 00:19:11,400
We don't do any of this stuff.

388
00:19:12,000 --> 00:19:13,000
This is great.

389
00:19:13,300 --> 00:19:15,700
See how these some regions are going to be so good.

390
00:19:15,900 --> 00:19:17,800
So people weren't so sure about the same regions.

391
00:19:17,800 --> 00:19:19,300
I understand your apprehension.

392
00:19:19,900 --> 00:19:20,600
We are trying.

393
00:19:20,600 --> 00:19:23,200
We're doing a lot of tricky things with the code or try and do a lot

394
00:19:23,200 --> 00:19:26,100
of tricky things, and it's hard to make them all to satisfy all the

395
00:19:26,100 --> 00:19:26,600
constraints.

396
00:19:27,300 --> 00:19:29,500
Again, we are picking

397
00:19:29,900 --> 00:19:33,200
Finally, much harder problems than we need to solve so that we can

398
00:19:33,200 --> 00:19:34,000
show how to do them.

399
00:19:34,700 --> 00:19:36,200
But it's really cool.

400
00:19:36,200 --> 00:19:39,500
When stuff works out, when you can satisfy those constraints and still

401
00:19:39,500 --> 00:19:41,800
make the code simple, and I really do think we're getting closer

402
00:19:41,800 --> 00:19:42,200
there.

403
00:19:42,300 --> 00:19:44,200
That doesn't, it's not going to be the final thing, right?

404
00:19:44,200 --> 00:19:47,500
Like probably a little bit further down the line, we'll have another

405
00:19:47,500 --> 00:19:50,600
Epiphany and we'll all be like we can do this cooler thing.

406
00:19:50,600 --> 00:19:54,200
That's even more cool with the way the same regions work or replace it

407
00:19:54,200 --> 00:19:58,500
with this better concept, but, you know, you can't always jump right

408
00:19:58,500 --> 00:19:59,100
to the end.

409
00:19:59,100 --> 00:19:59,800
You have to kind of go.

410
00:19:59,900 --> 00:20:02,100
That process and that's one of the big things I want to show on the

411
00:20:02,100 --> 00:20:05,200
stream was going through that process so people could see that that's

412
00:20:05,200 --> 00:20:05,700
how it is.

413
00:20:05,800 --> 00:20:08,400
A lot of times you read something on the web and they're like, here's

414
00:20:08,400 --> 00:20:10,200
how we solve the problem and they just show the solution.

415
00:20:10,200 --> 00:20:14,500
But that doesn't help you get better at solving your own new problems.

416
00:20:14,500 --> 00:20:17,300
And so this is really the kind of thing that I want to do and look at

417
00:20:17,300 --> 00:20:18,200
how nice this is coming out.

418
00:20:18,200 --> 00:20:21,800
Now, now we've you just use pointers, you can just point to things

419
00:20:21,800 --> 00:20:25,000
directly, which is how you would want to write it originally.

420
00:20:25,000 --> 00:20:28,300
Instead of having all of these low high indices that you had to

421
00:20:28,300 --> 00:20:28,600
manage.

422
00:20:28,600 --> 00:20:29,900
And so what we're doing here

423
00:20:29,900 --> 00:20:32,700
Here is, we're getting back to the nice simple way of programming

424
00:20:32,700 --> 00:20:37,800
while still satisfying, all the constraints that we had, which, you

425
00:20:37,800 --> 00:20:38,900
know, we're pretty tough.

426
00:20:38,900 --> 00:20:41,600
That, that sort of imply, you can't use pointers in that you can't use

427
00:20:41,600 --> 00:20:45,000
floats, and that sort of thing, we're getting that back while still

428
00:20:45,000 --> 00:20:48,600
retaining, the things that would have caused us not to be able to use

429
00:20:48,600 --> 00:20:51,200
those originally and that's exactly what we want, right?

430
00:20:53,100 --> 00:20:58,300
We want to get back to having the simplest possible code be totally

431
00:20:58,300 --> 00:20:59,100
just writable.

432
00:21:00,000 --> 00:21:02,800
Still having all of these things that you wouldn't have gotten.

433
00:21:03,000 --> 00:21:04,800
If you had just written that simple code.

434
00:21:05,300 --> 00:21:07,700
And I think that's what the same region starting to let us do and I'm

435
00:21:07,700 --> 00:21:08,800
really excited about that.

436
00:21:09,700 --> 00:21:12,300
So so we don't care about any of this stuff.

437
00:21:12,300 --> 00:21:14,400
Now it's just this right?

438
00:21:14,600 --> 00:21:18,900
But we need to I guess we still need to set its position like so so

439
00:21:19,300 --> 00:21:24,500
basically the entities position and the swords position are going to

440
00:21:24,500 --> 00:21:26,600
get set like like so,

441
00:21:28,600 --> 00:21:29,700
And we don't care about this at all.

442
00:21:30,400 --> 00:21:33,400
So that is how that works.

443
00:21:33,500 --> 00:21:33,800
Oops.

444
00:21:37,200 --> 00:21:39,500
And then we also have to put our jump stuff in there.

445
00:21:39,800 --> 00:21:44,100
Here's our hero, we have to put our jump stuff in there, which is to

446
00:21:44,100 --> 00:21:49,200
say that in addition to moving the entity, there we had a thing where

447
00:21:49,200 --> 00:21:55,200
we said we wanted a DZ and so I think that's just on the entity as

448
00:21:55,200 --> 00:21:55,500
well.

449
00:21:55,500 --> 00:22:00,800
So there's a d z, so we'll go ahead and, and set that.

450
00:22:00,800 --> 00:22:05,100
Now, yeah, we didn't actually have any logic for our jump code yet.

451
00:22:05,100 --> 00:22:05,700
So that's okay.

452
00:22:05,700 --> 00:22:06,500
That will just stay the way.

453
00:22:07,900 --> 00:22:09,100
And let's see what's going on here.

454
00:22:09,100 --> 00:22:10,800
So this stuff that goes away.

455
00:22:12,600 --> 00:22:15,100
Sim region Sim Arena's Undeclared.

456
00:22:15,100 --> 00:22:15,400
That's true.

457
00:22:15,400 --> 00:22:17,400
We haven't dealt with that yet, so we'll do it that a little bit

458
00:22:17,400 --> 00:22:17,800
later.

459
00:22:19,200 --> 00:22:21,700
And a tea Undeclared identifier, that's a Sim entity.

460
00:22:22,000 --> 00:22:28,100
Obviously High entity is not, and we don't need any of this anymore.

461
00:22:28,300 --> 00:22:29,100
That goes away.

462
00:22:29,100 --> 00:22:33,600
We're strictly working on the things in the same region.

463
00:22:33,900 --> 00:22:34,500
Right?

464
00:22:35,100 --> 00:22:35,500
Hi.

465
00:22:35,500 --> 00:22:37,300
Entity Z.

466
00:22:37,400 --> 00:22:38,600
That's just going to be entity.

467
00:22:38,600 --> 00:22:41,100
See, let's take a look here.

468
00:22:41,400 --> 00:22:42,300
This is just going to be the

469
00:22:42,400 --> 00:22:43,300
Same direction again.

470
00:22:43,300 --> 00:22:43,900
All of these things.

471
00:22:43,900 --> 00:22:44,700
Just get simplified.

472
00:22:44,700 --> 00:22:47,000
It's now, just, again, looking a lot more.

473
00:22:47,000 --> 00:22:48,900
Like the code, you could just write directly.

474
00:22:48,900 --> 00:22:51,800
If you didn't have to worry about all these ants like constraints

475
00:22:51,800 --> 00:22:53,700
which again is really good.

476
00:22:53,700 --> 00:22:57,500
I think that's what that's what I wanted and we're starting to get

477
00:22:57,500 --> 00:22:57,900
there.

478
00:22:58,600 --> 00:23:02,600
So let's see, controlling entity canio Undeclared identifier.

479
00:23:02,900 --> 00:23:06,000
So we this is just the entity that were on, that were simulating.

480
00:23:07,500 --> 00:23:08,300
Getting down last.

481
00:23:08,300 --> 00:23:11,100
You compile errors, lookin good people.

482
00:23:12,300 --> 00:23:17,600
So the move entity call, we need to pass the same region to that.

483
00:23:17,600 --> 00:23:18,200
Right.

484
00:23:19,100 --> 00:23:20,500
Let's see functions.

485
00:23:20,500 --> 00:23:21,600
Not take six arguments.

486
00:23:21,600 --> 00:23:22,500
How many does it take?

487
00:23:22,600 --> 00:23:23,900
Move into T?

488
00:23:23,900 --> 00:23:28,900
Sim reach in move into T, it takes the same region, doesn't take the

489
00:23:28,900 --> 00:23:29,400
game State.

490
00:23:29,400 --> 00:23:29,900
That's all.

491
00:23:30,400 --> 00:23:36,900
Okay, so we have our sward, that's another similarity.

492
00:23:37,300 --> 00:23:41,300
you calling it, Eddie I'm thinking the fact that type entity so often

493
00:23:42,600 --> 00:23:47,300
suggest to me that I probably should just rename Sim entity to entity

494
00:23:47,900 --> 00:23:50,900
because it's our primary entity type now and like I was trying to be a

495
00:23:50,900 --> 00:23:54,000
little more clear about the fact that it was for the same region only

496
00:23:54,000 --> 00:23:57,300
but that's the only place where ever going to Opportunities.

497
00:23:57,300 --> 00:23:59,200
Everything else is just for energy storage.

498
00:23:59,400 --> 00:23:59,800
So I

499
00:24:00,000 --> 00:24:03,800
Probably should just rename it entity because I think that's why I

500
00:24:03,800 --> 00:24:07,300
type all the time, and you've seen me type it so many times.

501
00:24:07,300 --> 00:24:11,900
Instead of the right thing, I feel like we should probably say that

502
00:24:12,000 --> 00:24:13,500
that this should just become entity.

503
00:24:13,700 --> 00:24:19,700
So, let's do a to do Casey, renamed, Sim entity to entity, right?

504
00:24:22,100 --> 00:24:25,900
Alright, so we got that Arena stuff to deal with which we're going to

505
00:24:25,900 --> 00:24:26,200
deal with.

506
00:24:26,200 --> 00:24:28,000
I want to keep that to the end because I want to talk about that a

507
00:24:28,000 --> 00:24:28,500
little bit.

508
00:24:29,900 --> 00:24:31,100
For drawing the hip points.

509
00:24:31,900 --> 00:24:34,300
I think we still just draw just the entity itself.

510
00:24:34,800 --> 00:24:38,600
Update sword and update, familiar are the to update and also update

511
00:24:38,600 --> 00:24:42,200
monster things that we have to actually go and do.

512
00:24:42,200 --> 00:24:46,600
Now, these are all all of this stuff is off the entity itself, like

513
00:24:46,600 --> 00:24:47,200
so.

514
00:24:47,800 --> 00:24:53,500
And there we go, let's see here.

515
00:24:54,100 --> 00:24:56,500
Anything else update monstar?

516
00:24:56,800 --> 00:24:58,900
This is just going to draw the hit points.

517
00:24:59,300 --> 00:25:00,300
I think we're all good.

518
00:25:00,300 --> 00:25:03,700
I think we're down to just the simmer Inna and the to update calls.

519
00:25:03,900 --> 00:25:06,300
So, now to get those update calls in, I'm just going to go ahead and

520
00:25:06,300 --> 00:25:07,000
take that.

521
00:25:07,700 --> 00:25:09,600
I had that handmade entity, right?

522
00:25:09,600 --> 00:25:11,100
I've got the those in here.

523
00:25:11,100 --> 00:25:13,600
I'm going to go ahead and bring those into the build by lb including

524
00:25:13,600 --> 00:25:15,000
them, right?

525
00:25:15,000 --> 00:25:16,500
Like so like I said, we compile everything.

526
00:25:16,500 --> 00:25:20,200
This is one Chunk, we don't, we don't compile multiple files.

527
00:25:20,700 --> 00:25:22,600
So I'm just going to go ahead and bring those in.

528
00:25:23,700 --> 00:25:24,600
And now they're in.

529
00:25:25,300 --> 00:25:27,900
And so now we just have to pour it this old code that we had.

530
00:25:28,300 --> 00:25:30,100
And for now, I think that should just work.

531
00:25:30,300 --> 00:25:32,300
We don't really need the game State anymore.

532
00:25:32,300 --> 00:25:34,500
I think we just used the same region, right?

533
00:25:34,500 --> 00:25:35,000
Like so.

534
00:25:35,900 --> 00:25:40,300
And then we've got our Sim entity like this and then the entity we

535
00:25:40,300 --> 00:25:42,200
don't need to sort of grab it anymore.

536
00:25:42,200 --> 00:25:47,400
The Familiar is looping over everything in that same region.

537
00:25:47,800 --> 00:25:52,100
So this is just going to be a test entity Index, right?

538
00:25:52,100 --> 00:25:53,300
This is looping over everything.

539
00:25:53,700 --> 00:25:56,200
And this is not probably how we want to do it eventually.

540
00:25:56,800 --> 00:26:01,600
So we wanted to put it to do in here that says, make spatial queries

541
00:26:02,600 --> 00:26:06,700
easy for things so that we can do a spatial query here and not have to

542
00:26:06,700 --> 00:26:08,400
go through this Loop sort of stuff.

543
00:26:08,900 --> 00:26:12,500
But again, that's a little premature because we're we haven't quite

544
00:26:12,500 --> 00:26:14,900
gotten to too much of our logic stuff yet in the end of these,

545
00:26:16,300 --> 00:26:19,600
So basically we have a test entity that's going to start at the

546
00:26:19,600 --> 00:26:21,400
beginning of the Sim region enemies.

547
00:26:21,700 --> 00:26:24,800
And then we're just going to go through all of the entities that are

548
00:26:24,800 --> 00:26:25,400
in there.

549
00:26:26,200 --> 00:26:30,500
Just the whole entity count and it's going to look for anything that

550
00:26:30,500 --> 00:26:31,700
it thinks it might want to follow.

551
00:26:31,700 --> 00:26:33,100
That's how our familiar was working.

552
00:26:34,100 --> 00:26:36,500
And again, we just want to the reason I'm marking that because we

553
00:26:36,500 --> 00:26:39,300
don't want to Loop over all the entities ever really even in the same

554
00:26:39,300 --> 00:26:41,900
region for an individual.

555
00:26:41,900 --> 00:26:44,700
We want to be able to call some queries that we can accelerate because

556
00:26:44,700 --> 00:26:46,000
we know lots of people are going to want to do.

557
00:26:46,100 --> 00:26:46,500
Do that.

558
00:26:46,500 --> 00:26:49,900
And we just want to make that all kind of Consolidated into one place

559
00:26:50,100 --> 00:26:52,800
so that we can speed it up when when the time comes to kind of get

560
00:26:52,800 --> 00:26:58,300
perf out of it and so on but all right, so when we do this, we've got

561
00:26:58,300 --> 00:26:59,800
our update, familiar call, it was looping over.

562
00:27:00,000 --> 00:27:04,800
Things at that point, we had a closest hero, the closest Heroes, just

563
00:27:04,800 --> 00:27:07,600
going to be a pointer now because we don't need to store a lows and

564
00:27:07,600 --> 00:27:10,400
highs and all this other garbage, which again, is great.

565
00:27:10,500 --> 00:27:12,300
I really like how this is cleaning up.

566
00:27:12,800 --> 00:27:15,500
We had the closest hero D'squared, we're doing the all these, the same

567
00:27:15,500 --> 00:27:16,600
checks just to see.

568
00:27:19,000 --> 00:27:22,400
And I think we did do pull speed out of move entity.

569
00:27:22,400 --> 00:27:26,200
That's the move spec thing, so we did do that, so that's good.

570
00:27:26,900 --> 00:27:29,800
And think that's about

571
00:27:30,000 --> 00:27:33,800
It it so that just has to call the move entity, call to update his

572
00:27:33,800 --> 00:27:34,200
position.

573
00:27:35,000 --> 00:27:35,400
Excuse me.

574
00:27:37,000 --> 00:27:37,900
That looks about right.

575
00:27:37,900 --> 00:27:39,800
Let's take a look again.

576
00:27:39,800 --> 00:27:40,600
That's amenity.

577
00:27:41,100 --> 00:27:42,700
I'm going to enjoy, renaming that.

578
00:27:43,600 --> 00:27:47,400
I think I'm going to enjoy reading these get rid of those High

579
00:27:47,400 --> 00:27:47,700
pointers.

580
00:27:47,700 --> 00:27:50,600
So again this all we're really doing is deleting the old code that was

581
00:27:50,800 --> 00:27:53,900
dealing with that crufty combination of things.

582
00:27:54,200 --> 00:27:55,600
So, default moves back.

583
00:27:56,000 --> 00:27:58,100
We got a, I think we still got that still in here.

584
00:27:58,100 --> 00:27:59,200
We want to move that out.

585
00:27:59,200 --> 00:28:01,100
And that's just it going to be entity data.

586
00:28:01,100 --> 00:28:05,800
They're basically so we'll leave that in there update monstar we

587
00:28:05,800 --> 00:28:06,600
haven't written yet.

588
00:28:06,900 --> 00:28:10,200
That's pretty easy, but we know, we'll take the same region for sure.

589
00:28:11,300 --> 00:28:12,500
It'll basically just look at the same.

590
00:28:12,500 --> 00:28:17,000
As the other calls like this entity.

591
00:28:17,400 --> 00:28:21,100
We had our sword code which basically moved the sword.

592
00:28:21,200 --> 00:28:25,400
Right there, was nothing particularly odd going on there.

593
00:28:25,800 --> 00:28:30,400
And this stuff we basically had a way that it could become after a

594
00:28:30,400 --> 00:28:30,700
while.

595
00:28:30,700 --> 00:28:35,400
Become it would not exist anymore for all intents and purposes and so

596
00:28:35,400 --> 00:28:36,600
we don't really have that concept.

597
00:28:36,700 --> 00:28:37,500
Cept yet.

598
00:28:37,600 --> 00:28:42,500
So we'll have to deal with that maybe as the first thing, maybe as a

599
00:28:42,900 --> 00:28:45,700
kind of the next thing that we do in terms of tracking entities in the

600
00:28:45,700 --> 00:28:49,700
same region, right?

601
00:28:49,700 --> 00:28:50,700
We need some way.

602
00:28:52,900 --> 00:28:53,900
In fact, you know what I'll do.

603
00:28:53,900 --> 00:28:55,600
I'll just place it assert in here.

604
00:28:55,800 --> 00:29:06,900
Assert need to make entities be able to not be there her.

605
00:29:07,000 --> 00:29:07,600
I don't know.

606
00:29:08,800 --> 00:29:09,900
Not sure it will call that.

607
00:29:10,100 --> 00:29:11,000
You know what I'm saying, though?

608
00:29:12,400 --> 00:29:14,500
All right, so let's see.

609
00:29:14,900 --> 00:29:18,000
Entity hypey, don't need high.

610
00:29:18,000 --> 00:29:18,800
No mo.

611
00:29:19,500 --> 00:29:20,100
There we go.

612
00:29:20,300 --> 00:29:23,200
And then we Lo, we don't need any more either, that's all in there.

613
00:29:24,500 --> 00:29:26,200
All right, all right.

614
00:29:27,300 --> 00:29:30,000
So I think thats good Diesel.

615
00:29:30,000 --> 00:29:31,000
Take the same region.

616
00:29:31,000 --> 00:29:36,900
Now, same region some region, and I think we're now back to where we

617
00:29:36,900 --> 00:29:37,300
were.

618
00:29:37,400 --> 00:29:42,100
Okay, so we have a couple things that we still have to do so inside

619
00:29:42,100 --> 00:29:44,700
our handmade same region.

620
00:29:45,000 --> 00:29:49,800
We do have some to dues that have to get done these two right here.

621
00:29:49,800 --> 00:29:53,100
We got to clear the hash table and then we have to work on that apron

622
00:29:53,100 --> 00:29:53,700
stuff which

623
00:29:53,800 --> 00:29:55,300
I'll also dovetail with the sore thing.

624
00:29:55,600 --> 00:29:59,800
But first things first, we now need a place to store the stuff that we

625
00:29:59,800 --> 00:29:59,900
do.

626
00:30:00,000 --> 00:30:02,900
In the same region and this is the first time that I'm going to

627
00:30:02,900 --> 00:30:03,800
introduce this.

628
00:30:04,100 --> 00:30:09,300
So I thought I might take a second and talk about it just so, it's

629
00:30:09,300 --> 00:30:10,900
clear, right?

630
00:30:12,500 --> 00:30:13,600
I'm gonna blow my nose first.

631
00:30:19,600 --> 00:30:19,900
Hmm.

632
00:30:21,400 --> 00:30:22,000
Sickness.

633
00:30:28,900 --> 00:30:30,600
all right, so

634
00:30:33,500 --> 00:30:37,000
Here we are at a 65 right?

635
00:30:37,000 --> 00:30:40,100
Which is 65 hours into the coding of handmade here slaven.

636
00:30:40,100 --> 00:30:41,700
Got into two weeks of coding yet.

637
00:30:42,200 --> 00:30:44,400
So we're actually very early in the development of this game.

638
00:30:44,400 --> 00:30:48,900
If you think about it, two weeks of coding is hardly any coding most

639
00:30:48,900 --> 00:30:53,500
games have many, many, many, many, many, many, many men weeks of

640
00:30:53,800 --> 00:30:54,900
developing in them.

641
00:30:55,300 --> 00:30:59,800
So here we are on basically what is our 65 or so we had a couple extra

642
00:30:59,800 --> 00:31:00,600
hours in there somewhere.

643
00:31:00,600 --> 00:31:01,900
So it's probably more like our

644
00:31:02,000 --> 00:31:03,500
9 or 70.

645
00:31:06,400 --> 00:31:08,800
but if you will remember,

646
00:31:09,800 --> 00:31:10,900
Way back at the beginning.

647
00:31:11,400 --> 00:31:15,000
I said, we have two memory blocks and in fact, I'll draw them

648
00:31:15,000 --> 00:31:17,300
separately because the game doesn't actually know if they're even

649
00:31:17,300 --> 00:31:18,100
continuous.

650
00:31:19,500 --> 00:31:20,100
Right?

651
00:31:20,600 --> 00:31:22,700
We have the permanent store, right?

652
00:31:22,700 --> 00:31:23,500
This on this side.

653
00:31:23,700 --> 00:31:26,000
We have permanent but we have the permanent block.

654
00:31:27,000 --> 00:31:27,600
Right.

655
00:31:30,100 --> 00:31:31,000
That's all that, right?

656
00:31:31,000 --> 00:31:31,900
It's a knee right?

657
00:31:31,900 --> 00:31:34,300
Yeah, permanent block and we have the transient block.

658
00:31:36,000 --> 00:31:38,300
Now, so far we've only ever used the permanent block, right?

659
00:31:38,300 --> 00:31:41,000
And we put like our entities in there, right?

660
00:31:41,000 --> 00:31:44,100
And we put our game state in there and it makes sense.

661
00:31:44,100 --> 00:31:44,300
Right?

662
00:31:44,300 --> 00:31:47,500
Because that's the stuff that actually needs to persist from frame to

663
00:31:47,500 --> 00:31:47,800
frame.

664
00:31:47,800 --> 00:31:50,800
And if we're going to save the game, most of it would be stuff that

665
00:31:50,800 --> 00:31:52,000
we'd save as well.

666
00:31:52,000 --> 00:31:54,100
Although, I don't know what we'd save it out as a block, but, you

667
00:31:54,100 --> 00:31:54,500
know,

668
00:31:56,000 --> 00:31:59,600
But we never use this and you might ask like why was it there?

669
00:31:59,600 --> 00:32:01,900
And the answer is because now we're actually starting to get into

670
00:32:01,900 --> 00:32:03,500
pieces of code that are going to want it.

671
00:32:03,700 --> 00:32:07,100
What the transient block is for is a transient block is just a scratch

672
00:32:07,100 --> 00:32:11,000
Pad essentially where things that only are used for calculation.

673
00:32:11,000 --> 00:32:11,500
Go.

674
00:32:12,000 --> 00:32:16,800
And so what we do is, we're going to divide this up in some ways right

675
00:32:17,400 --> 00:32:19,600
into basically chunks.

676
00:32:20,700 --> 00:32:22,900
And what we're going to do is during processing of a frame.

677
00:32:23,100 --> 00:32:27,200
We're going to allow things to essentially just grab a region of it,

678
00:32:27,400 --> 00:32:31,300
use it to do all their calculations and then get rid of it all when

679
00:32:31,300 --> 00:32:32,600
it's done, right?

680
00:32:32,900 --> 00:32:36,000
So it's basically just a scratch Pad, right?

681
00:32:36,800 --> 00:32:37,700
For this sort of thing.

682
00:32:38,000 --> 00:32:42,600
So this the simmer Inna is about the same region is a perfect example

683
00:32:42,600 --> 00:32:43,600
of how this would work.

684
00:32:43,800 --> 00:32:47,800
What we can do is we can just grab a pointer to a to a chunk, the Sim

685
00:32:48,000 --> 00:32:50,300
region can just start throwing things into that show.

686
00:32:50,400 --> 00:32:52,300
Unk, as much as it wants.

687
00:32:53,300 --> 00:32:56,500
Then when it's done we just vaporize it.

688
00:32:56,500 --> 00:32:57,700
We just say the whole thing is gone.

689
00:32:58,800 --> 00:32:59,300
Right.

690
00:33:00,100 --> 00:33:03,400
So it's basically just a stack that gets cleared at the end of the

691
00:33:03,400 --> 00:33:04,000
processing.

692
00:33:05,400 --> 00:33:08,800
And again the reason that I think this is so important is because a

693
00:33:08,800 --> 00:33:13,900
lot of people, the overwhelming majority of people write code, that's

694
00:33:13,900 --> 00:33:19,600
basically like this this this spider web of pointers write, they write

695
00:33:19,600 --> 00:33:23,700
code where they've got you know the entity has like pointers to other

696
00:33:23,700 --> 00:33:25,700
entities, right?

697
00:33:27,200 --> 00:33:31,200
And then like they've got pointers to like their Sim state or

698
00:33:31,200 --> 00:33:35,100
something and then like there's like you know all of

699
00:33:35,300 --> 00:33:39,200
Is all of this stuff and then there's the tiles, right?

700
00:33:39,200 --> 00:33:42,900
And those Point entities, and all these sorts of things and they, they

701
00:33:42,900 --> 00:33:46,500
allocate when they allocate stuff, they allocate it.

702
00:33:46,600 --> 00:33:49,800
Create these, these sort of morasses, and then when they free it, they

703
00:33:49,800 --> 00:33:51,500
walk them and they do these fries.

704
00:33:51,500 --> 00:33:54,100
Okay, this guy'll free, you know, this guy says free.

705
00:33:54,100 --> 00:33:56,800
So he tells this guy to free and then this guy says to free this guy

706
00:33:56,800 --> 00:33:59,300
and then it walks back up and all this sort of stuff, right?

707
00:34:00,400 --> 00:34:05,000
And they do that whether its permanent stuff or not, right?

708
00:34:05,200 --> 00:34:09,600
So they write this kind of code where you're doing this kind of crazy

709
00:34:09,600 --> 00:34:10,100
destruction.

710
00:34:10,199 --> 00:34:15,400
Even if all of this stuff was only transient for a bunch of

711
00:34:15,400 --> 00:34:18,800
computations like in the case of the same region where all of its only

712
00:34:18,800 --> 00:34:23,199
there just to do our calculations what you'd much rather do is do all

713
00:34:23,199 --> 00:34:24,800
of this stuff in a scratch Pad.

714
00:34:24,800 --> 00:34:28,199
So this is all in some memory segments somewhere, right?

715
00:34:29,900 --> 00:34:31,000
Will you do it all?

716
00:34:31,100 --> 00:34:33,300
And then you never have to care about crawling this list.

717
00:34:33,400 --> 00:34:35,699
Again, you never during shutdown.

718
00:34:35,800 --> 00:34:36,800
There's nothing to shut down.

719
00:34:36,800 --> 00:34:38,900
You just say it all goes away, bam gone.

720
00:34:39,600 --> 00:34:40,100
And that way.

721
00:34:40,100 --> 00:34:43,800
There's no allocation cost and there's no deallocation cost, they're

722
00:34:43,800 --> 00:34:45,500
just gone, right?

723
00:34:45,500 --> 00:34:50,000
Allocation is just incrementing an integer and deallocation is

724
00:34:50,000 --> 00:34:50,500
nothing.

725
00:34:50,500 --> 00:34:51,400
There's little or nothing.

726
00:34:51,400 --> 00:34:55,300
You just don't think about the region anymore, there's nothing to it,

727
00:34:55,300 --> 00:34:55,900
right?

728
00:34:57,200 --> 00:34:58,600
And that's really a much much much.

729
00:34:58,600 --> 00:34:59,200
Much, much much

730
00:34:59,300 --> 00:35:01,600
Much much much better way to write this kind of code.

731
00:35:01,800 --> 00:35:06,100
You can't leak memory anymore and you pay no cost, no performance cost

732
00:35:06,100 --> 00:35:06,600
for it.

733
00:35:06,800 --> 00:35:10,500
So, anything that you can write in this fashion, you want to the only

734
00:35:10,500 --> 00:35:12,400
time you should ever write that morass.

735
00:35:12,500 --> 00:35:16,800
Spidery Crawley thing is, if you actually need that functionality to

736
00:35:16,800 --> 00:35:20,200
be able to delete, just a small portion of collected entities, or

737
00:35:20,200 --> 00:35:21,000
stuff like that.

738
00:35:21,400 --> 00:35:25,700
And the vast majority of systems don't need that functionality

739
00:35:25,700 --> 00:35:26,200
functionality.

740
00:35:26,200 --> 00:35:28,600
So you're you're paying all this cost.

741
00:35:30,300 --> 00:35:33,700
And this is true, whether you're in C or in a garbage collected

742
00:35:33,700 --> 00:35:36,700
language in the garbage collected language, that's where all your

743
00:35:36,700 --> 00:35:37,400
garbage collector.

744
00:35:37,400 --> 00:35:38,600
Proof goes right.

745
00:35:38,600 --> 00:35:43,300
Is if you write this code, that is doing all of this sort of spidery

746
00:35:43,300 --> 00:35:45,600
pointer stuff and the garbage collector is then responsible for trying

747
00:35:45,600 --> 00:35:49,200
to figure out how it all gets pulled back out again when you're done

748
00:35:49,200 --> 00:35:51,900
with it that's that same cost, right?

749
00:35:51,900 --> 00:35:56,600
So it doesn't matter what language are in these costs are real

750
00:35:57,300 --> 00:35:59,900
it's just whether you wrote code, that does it, or whether

751
00:36:00,100 --> 00:36:01,500
You let the garbage collector do it.

752
00:36:01,600 --> 00:36:04,700
But in either case it's worked at the CPU should not be doing and so

753
00:36:04,700 --> 00:36:05,600
we don't want to do it.

754
00:36:06,200 --> 00:36:09,700
And so what we're going to do right now is we're going to make it

755
00:36:09,700 --> 00:36:10,600
memory Arena, right?

756
00:36:10,600 --> 00:36:14,100
Because you remember we have these memory Rena's and we're going to

757
00:36:14,100 --> 00:36:16,400
initialize this imerina.

758
00:36:16,900 --> 00:36:20,000
We will do some more fancier stuff of this later but since this is the

759
00:36:20,000 --> 00:36:22,200
only thing that uses our transient thing yet.

760
00:36:23,600 --> 00:36:24,600
It's hard to put that here.

761
00:36:26,700 --> 00:36:29,100
Since this is the only thing that uses our transient Arena.

762
00:36:29,100 --> 00:36:31,000
We don't have to do anything special just yet.

763
00:36:31,600 --> 00:36:34,100
So what we're going to do is initialize that submarine Arena.

764
00:36:34,300 --> 00:36:39,700
We're going to initialize it to the transient Arenas location.

765
00:36:39,700 --> 00:36:40,000
Basically.

766
00:36:40,000 --> 00:36:40,600
Right.

767
00:36:40,800 --> 00:36:43,400
And I can't remember what that was actually called.

768
00:36:43,500 --> 00:36:45,700
Let's take a look in the memory section.

769
00:36:46,700 --> 00:36:48,000
What was it called?

770
00:36:51,600 --> 00:36:55,800
It was called transient storage and transient storage size, right?

771
00:36:58,600 --> 00:37:04,300
So so yeah, so I just want to go ahead and initialize that Arena and

772
00:37:04,300 --> 00:37:08,800
I'm going to go ahead and give it the entire space like so and then

773
00:37:08,800 --> 00:37:12,300
everything can just allocate off of that and when we're done, we

774
00:37:12,300 --> 00:37:16,600
literally don't at this point, have to do anything because basically,

775
00:37:17,100 --> 00:37:19,200
when we're done, we're done.

776
00:37:19,300 --> 00:37:23,100
We just return back to the platform code and the next time through

777
00:37:23,200 --> 00:37:25,600
will initialize the same Arena to point to the bottom of Transit

778
00:37:25,600 --> 00:37:26,300
memory again.

779
00:37:26,600 --> 00:37:28,000
No cleanup at all right.

780
00:37:28,300 --> 00:37:29,400
There's just no cleanup at all.

781
00:37:31,500 --> 00:37:34,500
So, in theory, that's all we need to do for now, they'll be a little

782
00:37:34,500 --> 00:37:38,800
bit more stuff about partitioning later when we have more things using

783
00:37:39,100 --> 00:37:40,900
the transient area.

784
00:37:40,900 --> 00:37:42,900
But for now, that's really it.

785
00:37:43,400 --> 00:37:45,400
So that's all we need to do.

786
00:37:46,100 --> 00:37:49,200
What is this complaining about transient storage?

787
00:37:52,000 --> 00:37:55,500
I see this should really take a void star so you can pass any kind of

788
00:37:55,500 --> 00:37:58,700
memory you want, and then it'll just do its cast since it's the thing

789
00:37:58,700 --> 00:37:59,800
that wants it in a un 8.

790
00:37:59,800 --> 00:38:00,800
So, we'll fix that.

791
00:38:02,400 --> 00:38:03,300
Begin Sim.

792
00:38:03,800 --> 00:38:05,400
I don't actually remember what this takes.

793
00:38:06,000 --> 00:38:07,200
So let's take a look.

794
00:38:07,700 --> 00:38:13,100
You can Sim it is simmer, Inna game state, which I think I said, I

795
00:38:13,100 --> 00:38:16,400
would like to not pass anymore eventually, but the problem is the low

796
00:38:16,400 --> 00:38:19,300
entities are stored there, and then that's it.

797
00:38:20,100 --> 00:38:21,200
All right, begin.

798
00:38:21,200 --> 00:38:22,400
Send must return a value.

799
00:38:22,400 --> 00:38:22,900
That's true.

800
00:38:22,900 --> 00:38:24,300
It must return the same region.

801
00:38:27,200 --> 00:38:28,400
And add into the must return.

802
00:38:28,400 --> 00:38:29,400
A value that is true.

803
00:38:29,400 --> 00:38:31,700
It should return the entity that allocated.

804
00:38:32,500 --> 00:38:34,900
All right, so we got to do a couple things here.

805
00:38:36,000 --> 00:38:38,500
I think the only one we want to do right now is clear that hash table.

806
00:38:38,500 --> 00:38:40,600
But then we have to go through it step through the stuff.

807
00:38:40,600 --> 00:38:43,400
And basically, we've done a pretty major code change.

808
00:38:43,400 --> 00:38:46,600
I'm sure we've made a bunch of mistakes especially because we had to

809
00:38:46,600 --> 00:38:49,600
do it over, you know, normally I would do this whole code change in

810
00:38:49,600 --> 00:38:55,400
the space of one block of time at work, but since we only have an hour

811
00:38:55,400 --> 00:38:56,400
per stream and I'm talking

812
00:38:56,500 --> 00:38:59,800
in the whole time, A lot of times we have to spread it out across

813
00:39:00,000 --> 00:39:04,000
Couple days and because of that we may have made some oversight swear.

814
00:39:04,000 --> 00:39:06,700
Like I forgot to change something or we said we were going to change

815
00:39:06,700 --> 00:39:07,600
something and didn't

816
00:39:11,000 --> 00:39:12,700
So, we definitely need to kind of go through now.

817
00:39:14,200 --> 00:39:15,400
What all the stuff we did.

818
00:39:15,600 --> 00:39:19,300
Maybe maybe we'll step through everything once and just remind

819
00:39:19,300 --> 00:39:22,900
ourselves whether we've done everything that we thought we were going

820
00:39:22,900 --> 00:39:25,700
to do whether we actually implemented it or whether we just cheese it

821
00:39:25,700 --> 00:39:27,300
out before we start to bugging in Earnest.

822
00:39:27,300 --> 00:39:31,800
Because, you know that I think it's just going to be a good idea to

823
00:39:31,800 --> 00:39:35,600
just make sure there was nothing obvious that we left out in a remind

824
00:39:35,600 --> 00:39:37,800
ourselves, all the stuff that we changed.

825
00:39:38,600 --> 00:39:43,300
So when we do this, push struct here, I'm pretty sure that push truck

826
00:39:45,500 --> 00:39:47,300
Well, clear, that hash table for us or they'll?

827
00:39:47,300 --> 00:39:49,100
Let's double check and see if it does.

828
00:39:49,600 --> 00:39:51,800
Well, the hash is actually in there directly.

829
00:39:52,400 --> 00:39:53,700
So let's take a look here.

830
00:39:53,900 --> 00:39:58,000
Handmade, uh, let's see about the push struct.

831
00:39:58,000 --> 00:40:02,000
Push struct push truck does a push size and push Size, Doesn't do a

832
00:40:02,000 --> 00:40:02,500
clear.

833
00:40:02,700 --> 00:40:06,400
So we want to do a clear here and we don't actually have a clear call

834
00:40:06,400 --> 00:40:09,600
yet, so I think I might do an inline clear call.

835
00:40:10,000 --> 00:40:12,200
Also, this should be, these are all should be in lines.

836
00:40:12,200 --> 00:40:13,100
They don't do anything.

837
00:40:13,100 --> 00:40:13,600
So they

838
00:40:14,100 --> 00:40:16,000
These will be things that should be put straight into the code,

839
00:40:16,000 --> 00:40:16,500
probably.

840
00:40:18,200 --> 00:40:23,800
So I'm going to do a zero size call, basically something that just

841
00:40:23,800 --> 00:40:30,700
takes a pointer, right and a size and just players it, right.

842
00:40:30,800 --> 00:40:34,800
So it's basically something that just says while there is some size

843
00:40:34,800 --> 00:40:39,800
left to do just you know just clear it.

844
00:40:41,500 --> 00:40:47,800
Like so, so we basically have un8 star b equals pointer and this is a,

845
00:40:47,900 --> 00:40:50,400
you know, something that we probably will do a bunch of.

846
00:40:50,400 --> 00:40:56,000
So check this guy for performance because we may want to clear.

847
00:40:56,000 --> 00:40:59,200
We want to write zeros and bigger blocks and do, we might want to do

848
00:40:59,200 --> 00:41:00,400
some fancier stuff there.

849
00:41:00,400 --> 00:41:02,500
Eventually, if this ends up being something, we call it a bunch of

850
00:41:02,500 --> 00:41:04,700
places to clear things to 0, right?

851
00:41:05,400 --> 00:41:07,700
So that's just something that we want to be able to do, right?

852
00:41:07,700 --> 00:41:11,100
So all I'm doing here is I'm just spinning over all of the bye.

853
00:41:11,700 --> 00:41:12,100
Right?

854
00:41:12,100 --> 00:41:16,700
One at a time in whatever block this is clearing them 20 and that's

855
00:41:16,700 --> 00:41:17,700
it, right?

856
00:41:22,400 --> 00:41:26,000
So if this comes in and size was already zero, it'll do a while sighs

857
00:41:26,600 --> 00:41:28,800
sighs is zero so it just won't enter this loop at all.

858
00:41:30,300 --> 00:41:32,800
If it doesn't for the loop it will decrement it each time through

859
00:41:32,800 --> 00:41:36,000
until it gets to zero and clear as many bytes as are there.

860
00:41:37,900 --> 00:41:38,400
All right.

861
00:41:38,700 --> 00:41:41,300
So what I want to do is I want to zero size.

862
00:41:41,500 --> 00:41:43,100
This guy, this hash, right?

863
00:41:44,300 --> 00:41:47,000
And so what I think I'm going to do is just make a convenient thing.

864
00:41:47,000 --> 00:41:49,000
Since I want to do that occasionally, I want to do something I can

865
00:41:49,000 --> 00:41:51,100
just do 0 struct, right?

866
00:41:52,500 --> 00:41:56,100
And I can pass something that I want 0 like this.

867
00:41:56,100 --> 00:41:59,800
So I can just say, OK, clear that whole hash out?

868
00:42:00,400 --> 00:42:02,700
So I want to do is do a pound of 50 struck.

869
00:42:02,700 --> 00:42:07,800
Just like we did up here, which is just a macro that takes some some,

870
00:42:07,800 --> 00:42:09,900
some instance of a struct, right?

871
00:42:10,400 --> 00:42:13,900
And basically, it just says, okay, what I want you to do is call zero

872
00:42:13,900 --> 00:42:19,500
size, don't need that semicolon call zero size with just whatever the

873
00:42:19,500 --> 00:42:24,100
size of the thing is that we're talking about and then the address of

874
00:42:24,100 --> 00:42:24,500
it.

875
00:42:24,700 --> 00:42:27,900
So, just clear it out as a whole block, right?

876
00:42:27,900 --> 00:42:29,700
And that'll work to do that.

877
00:42:29,700 --> 00:42:30,000
Clear?

878
00:42:30,700 --> 00:42:32,600
So that'll clear our hash table for us.

879
00:42:33,200 --> 00:42:36,100
And now I think we've done all the things that we knew that we had to

880
00:42:36,100 --> 00:42:36,500
do that.

881
00:42:36,500 --> 00:42:37,100
We can remember.

882
00:42:37,100 --> 00:42:41,600
Anyway so now might be a good time to again sort of step in there and

883
00:42:41,600 --> 00:42:42,400
see what's going on.

884
00:42:42,400 --> 00:42:45,400
There's one more thing which is I don't know if we ever end the Sim.

885
00:42:45,900 --> 00:42:46,600
We don't.

886
00:42:46,800 --> 00:42:47,800
So what we want to do?

887
00:42:47,800 --> 00:42:48,400
Oh no, we do.

888
00:42:48,500 --> 00:42:51,500
Okay, so we want to do is just make sure that happens, but looks like

889
00:42:51,500 --> 00:42:52,200
it does happen.

890
00:42:53,300 --> 00:43:00,100
Okay, so let's go ahead and do the rest of what we need to do here,

891
00:43:00,100 --> 00:43:01,400
which is actually debug this.

892
00:43:02,100 --> 00:43:07,300
I'm going to go ahead and just step in right from the start to to sort

893
00:43:07,300 --> 00:43:11,100
of go through all of our code again and see what happens.

894
00:43:11,100 --> 00:43:14,500
Now, we didn't touch the adding code, the adding code still works

895
00:43:14,500 --> 00:43:16,200
basically exactly the same way.

896
00:43:16,900 --> 00:43:18,500
So I think that should be fine.

897
00:43:18,700 --> 00:43:22,500
So I'm going to skip over just the adding code and assume that that's

898
00:43:22,500 --> 00:43:22,900
still okay.

899
00:43:23,100 --> 00:43:24,800
Maybe we broke something in there as well.

900
00:43:24,800 --> 00:43:26,900
We'll find out that we can really touch that code much.

901
00:43:26,900 --> 00:43:29,700
So I don't think I need to step through it will just a bug that code

902
00:43:29,900 --> 00:43:30,700
regularly.

903
00:43:31,800 --> 00:43:36,200
So what I'll do here is I'll just go ahead and start stepping in right

904
00:43:36,200 --> 00:43:39,300
at the point where we actually start the simulation part of things if

905
00:43:39,300 --> 00:43:40,000
that makes sense.

906
00:43:40,500 --> 00:43:41,900
So we initialize our Arena.

907
00:43:42,000 --> 00:43:44,500
This is where we're going to be able to store all the stuff that

908
00:43:44,500 --> 00:43:45,700
happens in our Sim.

909
00:43:46,100 --> 00:43:48,200
Oh, hey, look, we're just at the end.

910
00:43:49,100 --> 00:43:51,800
All right, I started 10 minutes late, so really, we've got another ten

911
00:43:51,800 --> 00:43:52,200
minutes.

912
00:43:53,600 --> 00:43:54,700
After the five-minute warning.

913
00:43:55,900 --> 00:43:57,500
So we go into the same region.

914
00:43:57,900 --> 00:43:58,600
Here we go.

915
00:43:59,200 --> 00:44:01,700
We're going to get outs from our Arena.

916
00:44:01,700 --> 00:44:03,900
We're going to get the size of the struct.

917
00:44:04,300 --> 00:44:05,900
And so now we've got one of these.

918
00:44:05,900 --> 00:44:07,100
I don't like the locals window.

919
00:44:07,100 --> 00:44:08,100
I'm going to get rid of that.

920
00:44:08,300 --> 00:44:09,900
Someone had asked me a question about it.

921
00:44:10,000 --> 00:44:12,500
Separately off stream and I wanted to double-check that the answer I

922
00:44:12,500 --> 00:44:16,300
gave them was right so let's get rid of that I'ma watch window kind of

923
00:44:16,300 --> 00:44:16,800
person.

924
00:44:18,400 --> 00:44:20,000
Okay, so we got the same region.

925
00:44:20,700 --> 00:44:23,200
We cleared out our hash table or at least we think we did.

926
00:44:23,900 --> 00:44:26,400
We weren't really able to know till we look, come around the next

927
00:44:26,400 --> 00:44:29,500
time, anyway, because it would have been zero already, but we

928
00:44:29,500 --> 00:44:31,800
initialize some stuff inside the Sim region.

929
00:44:31,800 --> 00:44:35,800
So we set the world pointer we set the origin to like we're we're

930
00:44:35,800 --> 00:44:40,100
simulating around and let's let's take a look at what that origin

931
00:44:40,100 --> 00:44:40,900
actually was.

932
00:44:42,000 --> 00:44:43,900
Okay, so the origins just straight up zeros.

933
00:44:44,200 --> 00:44:46,800
We set the bounds which there we go.

934
00:44:46,800 --> 00:44:47,900
That's just our camera.

935
00:44:49,800 --> 00:44:53,300
Which looks about right, then we set up our entities.

936
00:44:53,300 --> 00:44:56,200
So we're basically going to grab an array with the maximum amount of

937
00:44:56,200 --> 00:44:58,800
entities that we wanted to store this information, which we haven't

938
00:44:58,800 --> 00:44:59,700
really talked about yet.

939
00:44:59,700 --> 00:44:59,900
And

940
00:45:00,000 --> 00:45:03,500
Really care about at this point but you know, later on, we might do

941
00:45:03,500 --> 00:45:04,100
something about that.

942
00:45:04,100 --> 00:45:10,100
So we can store up to 4,000 is entities in this Sim region and then

943
00:45:10,100 --> 00:45:13,400
let's go ahead and take a look here and say, all right, we've got them

944
00:45:13,400 --> 00:45:15,900
in chunk p and the max chunk P.

945
00:45:15,900 --> 00:45:17,400
That's the region that we're simulating.

946
00:45:17,400 --> 00:45:19,000
This is the same code as before.

947
00:45:19,000 --> 00:45:20,300
So we're assuming that it still works.

948
00:45:20,300 --> 00:45:20,800
Okay.

949
00:45:23,200 --> 00:45:25,300
And I don't think there would be much of a problem with that.

950
00:45:25,300 --> 00:45:26,000
Looks like it does.

951
00:45:26,000 --> 00:45:27,400
So we iterate over that.

952
00:45:27,400 --> 00:45:32,000
We get out our world chunks and any chunks that have something in it.

953
00:45:32,000 --> 00:45:35,200
We're going to go ahead and process so we're kind of doing that now

954
00:45:36,100 --> 00:45:37,300
and I'd like to take a look at.

955
00:45:37,300 --> 00:45:40,000
Okay, so we found some entities here in the world.

956
00:45:40,000 --> 00:45:42,700
One of our world chunks, had some stuff in it, so we're going to go

957
00:45:42,700 --> 00:45:44,200
ahead and see what entity it is.

958
00:45:44,200 --> 00:45:48,700
It's entity, 40, we grab out the stored version of that entity, which

959
00:45:48,700 --> 00:45:51,100
is here, which basically has a SIM thing in it.

960
00:45:51,100 --> 00:45:52,800
It's a wall or in our case,

961
00:45:53,000 --> 00:45:55,600
Actually a tree, but we haven't really done that stuff in the end of

962
00:45:55,600 --> 00:45:56,200
these yet.

963
00:45:56,600 --> 00:45:58,900
But yeah, it's a wall tree.

964
00:46:01,200 --> 00:46:03,500
So we go ahead and figure out where that is relative to our Sim

965
00:46:03,500 --> 00:46:04,000
region.

966
00:46:04,100 --> 00:46:08,800
Let's step into that code, we take where the origin of our world.

967
00:46:08,800 --> 00:46:13,400
We make that difference which looks reasonable as far as I can tell

968
00:46:13,400 --> 00:46:18,800
anyway, and so that becomes our Sim Space location, we get that out

969
00:46:19,000 --> 00:46:19,100
once.

970
00:46:19,100 --> 00:46:21,700
We have it, we check to see whether it's inside the bounds of the

971
00:46:21,700 --> 00:46:22,800
camera which it is.

972
00:46:22,900 --> 00:46:25,300
So then we're going to go ahead and add the entity, right?

973
00:46:26,400 --> 00:46:28,800
So we come in, here we go.

974
00:46:28,800 --> 00:46:32,400
Ahead and add that entity, and this is our two-tiered call.

975
00:46:32,400 --> 00:46:33,600
The one that takes a position.

976
00:46:33,600 --> 00:46:37,200
So it's going to call down to the next tier, which is the lowest level

977
00:46:37,200 --> 00:46:38,300
entity addition call.

978
00:46:38,800 --> 00:46:41,900
It goes ahead and checks to make sure that we've got room in the same

979
00:46:41,900 --> 00:46:42,900
region for it.

980
00:46:43,200 --> 00:46:47,000
We go ahead and grab out which whichever one it is an increment that

981
00:46:47,000 --> 00:46:47,500
any account.

982
00:46:47,500 --> 00:46:51,100
So we now are storing one entity in our Sim region.

983
00:46:51,700 --> 00:46:56,000
We're going to initialize the entry in the hash table so that we can

984
00:46:56,200 --> 00:46:58,200
This entity again from its storage index.

985
00:46:58,800 --> 00:47:04,300
So again, we go in to do our mapping call, our mapping call gets that

986
00:47:04,400 --> 00:47:05,600
entry, right?

987
00:47:05,600 --> 00:47:08,000
Which computes the hash value, which right now is just the storage

988
00:47:08,000 --> 00:47:08,300
index.

989
00:47:08,300 --> 00:47:12,900
We don't do anything fancy there and we step through our hash table,

990
00:47:13,100 --> 00:47:16,600
grabbing out the things one at a time.

991
00:47:16,600 --> 00:47:19,600
Now what I probably should have done and in fact since this is the

992
00:47:19,600 --> 00:47:21,800
first time into this code I'm just going to go ahead and do it.

993
00:47:22,200 --> 00:47:23,700
I'll set a breakpoint here.

994
00:47:23,800 --> 00:47:24,900
I'll stop the code.

995
00:47:25,000 --> 00:47:25,900
I want to go.

996
00:47:27,300 --> 00:47:29,500
I want to go to make one change there because I want to be able to

997
00:47:29,500 --> 00:47:32,600
inspect those values and I can't right now because of the way that I

998
00:47:32,800 --> 00:47:35,100
typed in the code I don't like that.

999
00:47:35,100 --> 00:47:38,800
What I want to be able to do is I want to be able to look at the hash

1000
00:47:38,800 --> 00:47:43,700
index that we compute after we do this this offset process, right?

1001
00:47:43,700 --> 00:47:47,500
I want to look at that just so I can be able to see it in the

1002
00:47:47,500 --> 00:47:48,900
debugger, right?

1003
00:47:49,500 --> 00:47:54,200
And maybe we'll also go one step further and and compute that mask

1004
00:47:54,200 --> 00:47:54,700
separately.

1005
00:47:54,700 --> 00:47:56,000
So I can hand verify

1006
00:47:56,100 --> 00:47:57,100
By that as well.

1007
00:47:57,100 --> 00:47:59,800
And again, this is just making it so that I can

1008
00:48:00,000 --> 00:48:03,000
Verify my code more easily when I stepped in the debugger and make it

1009
00:48:03,000 --> 00:48:06,300
easier on myself because compiler is going to do the substitution of

1010
00:48:06,300 --> 00:48:07,000
these anyway.

1011
00:48:07,000 --> 00:48:09,500
So it doesn't really matter how they're set up in that sense.

1012
00:48:10,600 --> 00:48:13,700
So we're going to make sure we have the hash mask, right.

1013
00:48:13,700 --> 00:48:15,800
We're going to make sure that we have that hash Index, right?

1014
00:48:15,800 --> 00:48:17,800
I just wanted to make sure that those were clear.

1015
00:48:19,100 --> 00:48:24,600
Okay, so we go ahead and run back to that point.

1016
00:48:24,600 --> 00:48:27,900
This is where we were so our hash mask is

1017
00:48:29,300 --> 00:48:32,700
Like so, oops, Ash mask.

1018
00:48:33,500 --> 00:48:37,100
And if we take a look at that, you can see that it masks out the part

1019
00:48:37,100 --> 00:48:38,500
that we wanted, which is good.

1020
00:48:39,800 --> 00:48:44,300
And then we compute our hash index, which is also should just be those

1021
00:48:44,300 --> 00:48:45,400
little bits for T.

1022
00:48:45,400 --> 00:48:48,400
It is like I said, we started about 10 minutes late, so we'll go about

1023
00:48:48,400 --> 00:48:50,700
10 minutes late, just to keep with an hour of coding, even.

1024
00:48:52,000 --> 00:48:52,300
All right?

1025
00:48:52,300 --> 00:48:56,900
So we find a particular entry and there's nothing in it, right?

1026
00:48:56,900 --> 00:48:58,600
The, which is what we expect.

1027
00:48:58,700 --> 00:48:58,900
So,

1028
00:48:59,100 --> 00:48:59,600
Go ahead.

1029
00:49:01,300 --> 00:49:01,700
Excuse me.

1030
00:49:02,500 --> 00:49:04,300
We go ahead and return that out.

1031
00:49:04,700 --> 00:49:09,600
And so now, this person out here now knows that the entry is either 0

1032
00:49:09,600 --> 00:49:11,000
or the thing they were looking for.

1033
00:49:11,800 --> 00:49:15,500
In either case regardless, it's going to overwrite that storage index

1034
00:49:15,500 --> 00:49:18,300
because it knows that either it was 0 or the storage that it was

1035
00:49:18,300 --> 00:49:21,500
affecting and then it's going to go ahead and put that entity in

1036
00:49:21,500 --> 00:49:21,900
there.

1037
00:49:22,000 --> 00:49:26,100
So either, it's just over writing exactly what was already there or

1038
00:49:26,100 --> 00:49:27,100
it's going ahead.

1039
00:49:27,100 --> 00:49:27,700
And

1040
00:49:29,200 --> 00:49:31,200
And actually putting in a new one.

1041
00:49:31,500 --> 00:49:32,100
So that's fine.

1042
00:49:32,200 --> 00:49:34,000
Like we don't care whether it was there or not.

1043
00:49:34,000 --> 00:49:35,500
We're just going to map it again.

1044
00:49:36,800 --> 00:49:43,100
So if we actually got back, if we actually got past some entity that

1045
00:49:43,100 --> 00:49:46,700
we're initializing this entity from what we want to do is go ahead and

1046
00:49:46,700 --> 00:49:51,600
overwrite the entity that we just created all of its data, right?

1047
00:49:52,100 --> 00:49:54,300
Which is which should be nothing at this point.

1048
00:49:54,900 --> 00:49:58,800
All of its data is going to get overwritten with what the data is that

1049
00:49:58,800 --> 00:49:59,800
we actually had right.

1050
00:49:59,800 --> 00:50:02,300
Which is not very much, which is just what that collides because it's

1051
00:50:02,300 --> 00:50:05,600
just there's not much data in the in the in the trees.

1052
00:50:06,300 --> 00:50:09,400
And then we want to go ahead and load the sword entity reference if it

1053
00:50:09,400 --> 00:50:10,300
has one, right?

1054
00:50:10,300 --> 00:50:13,600
So if it's got a sword in here, we want to load that in as well.

1055
00:50:14,700 --> 00:50:19,200
So we load that in and load any reference we look and see if the

1056
00:50:19,200 --> 00:50:21,600
reference is index is nonzero, it's not.

1057
00:50:21,600 --> 00:50:23,500
So we just go ahead and continue out.

1058
00:50:23,600 --> 00:50:26,400
We're done adding The Entity and that's all we had to do.

1059
00:50:26,800 --> 00:50:30,100
So after adding The Entity assuming that we actually were able to add

1060
00:50:30,100 --> 00:50:33,200
it successfully, we take a look to see whether or not we got a

1061
00:50:33,200 --> 00:50:36,800
position that we were supposed to set for this guy we did so we set it

1062
00:50:37,000 --> 00:50:41,600
and now we have set where it is so let's that should actually be set

1063
00:50:41,600 --> 00:50:43,100
to something now I believe right?

1064
00:50:43,100 --> 00:50:44,400
Okay of course we can't see

1065
00:50:46,700 --> 00:50:47,800
It's actually dest.

1066
00:50:48,100 --> 00:50:48,600
There we go.

1067
00:50:48,800 --> 00:50:51,400
There's our position that looks valid.

1068
00:50:51,900 --> 00:50:55,800
So we're done adding it, and then we're just going to go through and

1069
00:50:55,800 --> 00:50:57,200
add stuff again.

1070
00:50:57,200 --> 00:50:59,800
So let's take a look at when we

1071
00:51:00,000 --> 00:51:03,700
We add somebody that actually has a sword for that load entity

1072
00:51:03,700 --> 00:51:04,400
reference.

1073
00:51:04,400 --> 00:51:05,700
I'll set a breakpoint there.

1074
00:51:06,400 --> 00:51:06,600
Oops.

1075
00:51:06,600 --> 00:51:08,000
Sorry no the sword one.

1076
00:51:08,000 --> 00:51:11,000
Just what I wanted when you actually bring someone into the set.

1077
00:51:11,800 --> 00:51:13,800
That oh yeah, that's what I wanted.

1078
00:51:14,000 --> 00:51:18,100
So what we want to do is is actually break when that actually becomes

1079
00:51:18,100 --> 00:51:18,600
true.

1080
00:51:18,800 --> 00:51:21,700
So that would be loading derail it be here, right?

1081
00:51:23,800 --> 00:51:25,700
And so, I guess I didn't actually want to run.

1082
00:51:26,100 --> 00:51:27,600
I didn't mean to run all the way there.

1083
00:51:27,600 --> 00:51:30,600
So let's go ahead and, and, and do that one more time.

1084
00:51:31,500 --> 00:51:34,400
I just want to set a breakpoint at that one position so that we would

1085
00:51:34,400 --> 00:51:36,700
be able to look at that piece of the code.

1086
00:51:36,900 --> 00:51:40,900
All right, so after we add all the entities and we're done there,

1087
00:51:41,300 --> 00:51:41,500
right?

1088
00:51:41,500 --> 00:51:43,800
So now we've got our enemies added, let's make sure that we have some

1089
00:51:43,800 --> 00:51:44,600
reasonable values.

1090
00:51:44,600 --> 00:51:48,900
Here, we added 95 entities into our Sim set for the camera region.

1091
00:51:52,000 --> 00:51:54,000
Which is basically just all the trees, the monstar.

1092
00:51:55,400 --> 00:51:56,800
In the familiar, right?

1093
00:51:57,800 --> 00:52:03,000
So in our Sim region, we're going to go ahead and return that out.

1094
00:52:03,400 --> 00:52:07,100
We then do some regular drawing code, nothing particular thing there,

1095
00:52:07,100 --> 00:52:10,200
we then Loop over the entities in this region.

1096
00:52:10,700 --> 00:52:12,000
Oh you know what, I just realized?

1097
00:52:12,000 --> 00:52:15,600
We forgot one piece of code already which is that this entity pointer

1098
00:52:15,600 --> 00:52:16,600
doesn't get updated.

1099
00:52:19,000 --> 00:52:19,600
Oops.

1100
00:52:21,100 --> 00:52:21,900
Oops.

1101
00:52:22,200 --> 00:52:23,200
That's a bit of an oops.

1102
00:52:23,200 --> 00:52:23,800
It's true.

1103
00:52:23,900 --> 00:52:24,900
We made an oops.

1104
00:52:25,600 --> 00:52:26,100
All right.

1105
00:52:26,300 --> 00:52:28,900
So this entity pointer right here needs to get updated each time

1106
00:52:28,900 --> 00:52:29,300
through the loop.

1107
00:52:29,300 --> 00:52:29,500
Right?

1108
00:52:29,500 --> 00:52:32,000
We're stepping through that Loop.

1109
00:52:32,000 --> 00:52:35,200
So, let's go ahead and compile that so that we're not stepping through

1110
00:52:35,200 --> 00:52:37,900
a totally bogus version of our code.

1111
00:52:38,800 --> 00:52:39,800
We don't care about this anymore.

1112
00:52:39,800 --> 00:52:40,700
We already step through that.

1113
00:52:40,700 --> 00:52:42,600
So we kind of know what's going on in there for now.

1114
00:52:43,100 --> 00:52:45,000
We'll step back into it when something's broke.

1115
00:52:45,300 --> 00:52:46,300
Once we see what's broke.

1116
00:52:47,300 --> 00:52:48,800
So now we're stepping through

1117
00:52:50,100 --> 00:52:51,800
the update code for enemies.

1118
00:52:52,100 --> 00:52:55,200
So we go through here, we switch the entity type, we find that there's

1119
00:52:55,200 --> 00:52:56,100
it's a wall.

1120
00:52:56,100 --> 00:52:59,200
So, basically walls just draw stuff.

1121
00:52:59,200 --> 00:53:00,700
So, that's really not that interesting.

1122
00:53:01,100 --> 00:53:02,100
Here are some update code.

1123
00:53:02,100 --> 00:53:03,800
We should probably move this to another location.

1124
00:53:03,800 --> 00:53:06,000
Now, that should probably move entity, right?

1125
00:53:07,100 --> 00:53:09,500
So we go ahead and do our standard drawing code.

1126
00:53:09,500 --> 00:53:13,400
I don't think this really doesn't involve The Entity so much, so

1127
00:53:13,400 --> 00:53:17,000
really what we're looking for is we're probably looking to take

1128
00:53:18,700 --> 00:53:21,600
We're probably looking to get into a position where we're actually

1129
00:53:22,900 --> 00:53:26,400
going to update someone with with some kind of logic, right?

1130
00:53:26,700 --> 00:53:28,000
And the monster doesn't have any yet.

1131
00:53:28,000 --> 00:53:29,900
So let's go ahead and wait till we actually have one of those.

1132
00:53:29,900 --> 00:53:30,500
So there we go.

1133
00:53:31,300 --> 00:53:35,400
So if we update familiar that's actually got some logic to it.

1134
00:53:35,500 --> 00:53:39,300
So when we come in here, then we have our update, familiar call.

1135
00:53:40,000 --> 00:53:43,700
What we're going to do is say, all right, we're going to Loop over all

1136
00:53:43,700 --> 00:53:46,200
the entities and just see if we can find any Heroes.

1137
00:53:46,200 --> 00:53:48,200
Now, we shouldn't find hero because

1138
00:53:48,400 --> 00:53:51,600
There haven't been the player hasn't joined yet, so we shouldn't find

1139
00:53:51,600 --> 00:53:57,200
a hero so we should skip over this entirely and then the move spec.

1140
00:53:57,500 --> 00:53:59,800
When we pass this GDP the DDP should be 0 which

1141
00:54:00,000 --> 00:54:06,100
Is we come into the move function, we're going to enforce a unit Max

1142
00:54:06,100 --> 00:54:07,900
acceleration vector, that's fine.

1143
00:54:08,700 --> 00:54:10,100
This is fine.

1144
00:54:10,200 --> 00:54:12,700
The end of the doesn't Collide does it or it does Collide.

1145
00:54:12,700 --> 00:54:13,500
It does Collide.

1146
00:54:13,500 --> 00:54:18,600
So now we're testing over all of the entities in the, the test region,

1147
00:54:18,900 --> 00:54:19,600
right?

1148
00:54:19,800 --> 00:54:21,200
So that's pretty straightforward.

1149
00:54:21,200 --> 00:54:24,100
We're just testing all of those things in the test region.

1150
00:54:24,500 --> 00:54:25,800
So we'll go ahead and finish that out.

1151
00:54:25,800 --> 00:54:27,700
We don't have a spatial partition yet so it's just manually.

1152
00:54:27,700 --> 00:54:29,900
Testing them all, which is not very efficient, but

1153
00:54:30,000 --> 00:54:31,100
Again for only ninety five.

1154
00:54:31,100 --> 00:54:34,100
Entities processors are so fast these days you don't even see, it's

1155
00:54:34,100 --> 00:54:35,200
crazy how fast they are.

1156
00:54:36,200 --> 00:54:36,900
It is crazy.

1157
00:54:36,900 --> 00:54:38,000
How fast computers are?

1158
00:54:38,000 --> 00:54:41,100
You wouldn't know it if you used a, you know.

1159
00:54:44,800 --> 00:54:46,100
Typical desktop application.

1160
00:54:46,100 --> 00:54:48,500
You'd be like, how is it managing to be this slow?

1161
00:54:49,700 --> 00:54:51,000
And somehow they managed.

1162
00:54:52,100 --> 00:54:53,900
So, alright, we go ahead and do update.

1163
00:54:53,900 --> 00:54:55,600
Familiar was not very interesting.

1164
00:54:56,900 --> 00:54:59,900
All right, so we've got a problem in.

1165
00:55:00,800 --> 00:55:02,100
Where is this happening?

1166
00:55:02,800 --> 00:55:05,500
Oh, this is happening at the very end, we already wait.

1167
00:55:05,600 --> 00:55:07,100
So we didn't actually ever hit.

1168
00:55:07,100 --> 00:55:08,800
Oh, that's right because there's no Heroes at it.

1169
00:55:08,800 --> 00:55:11,000
I was like, how come we never saw the hero updates like because we

1170
00:55:11,000 --> 00:55:13,600
haven't actually joined the game yet.

1171
00:55:14,300 --> 00:55:15,000
All right.

1172
00:55:15,000 --> 00:55:19,100
So it looks like we step through everything except for the N Sim and

1173
00:55:19,100 --> 00:55:19,400
we're

1174
00:55:19,500 --> 00:55:20,100
Assertion in there.

1175
00:55:20,100 --> 00:55:20,400
Anyway.

1176
00:55:20,400 --> 00:55:21,500
So we kind of know.

1177
00:55:21,500 --> 00:55:22,800
We got to debug that one way or the other.

1178
00:55:22,800 --> 00:55:24,600
So let's go ahead and finish stepping through everything.

1179
00:55:24,900 --> 00:55:26,600
Let's step through that end Sim.

1180
00:55:27,800 --> 00:55:29,300
So how is that going to work?

1181
00:55:30,200 --> 00:55:31,000
So similarity.

1182
00:55:31,000 --> 00:55:33,700
We go through, we grab where we're going to store it back to.

1183
00:55:34,000 --> 00:55:36,100
We do store it back right?

1184
00:55:36,400 --> 00:55:37,400
And so that's fine.

1185
00:55:38,000 --> 00:55:40,800
Then we have to convert our entity references back.

1186
00:55:41,700 --> 00:55:44,600
So let's go ahead and make sure that that works logically.

1187
00:55:44,700 --> 00:55:49,900
So we've got stored Sim sword, right?

1188
00:55:49,900 --> 00:55:54,700
That's so it's got nothing in it so that doesn't actually matter, it's

1189
00:55:54,700 --> 00:55:56,800
not going to actually update will have to do that once we actually

1190
00:55:56,800 --> 00:55:57,400
have a sword.

1191
00:55:57,600 --> 00:55:58,500
Someone with a sword.

1192
00:55:59,400 --> 00:56:03,300
So then we're going to take a new position by mapping an old position

1193
00:56:03,300 --> 00:56:04,900
into chunks Pace, right?

1194
00:56:05,000 --> 00:56:09,100
So we've got an entity P, which is here is a position.

1195
00:56:09,300 --> 00:56:10,800
We've got a region origin.

1196
00:56:12,000 --> 00:56:13,000
We're going to map these in.

1197
00:56:13,300 --> 00:56:17,800
So when we do the map into chunks space, that will go ahead and do

1198
00:56:17,800 --> 00:56:21,100
the, the offset from whatever the base was, and then it'll re

1199
00:56:21,100 --> 00:56:25,900
canonicalize it so results.

1200
00:56:26,600 --> 00:56:27,400
Let's see here.

1201
00:56:30,700 --> 00:56:33,800
This may just be a bug in our old code, actually, we may not, this may

1202
00:56:33,800 --> 00:56:36,700
not be an actual bug that in our Sim region code.

1203
00:56:42,000 --> 00:56:44,400
we never really even went in here and did our

1204
00:56:48,800 --> 00:56:49,700
a final version.

1205
00:56:52,000 --> 00:56:52,600
Don't get sick.

1206
00:56:52,600 --> 00:56:53,900
Kids, it's not fun.

1207
00:57:01,900 --> 00:57:02,500
All right.

1208
00:57:05,000 --> 00:57:10,500
So inside re canonicalize coordinates, we basically created a thing,

1209
00:57:10,500 --> 00:57:14,100
that's got some offsets to it and now we want to go ahead and re

1210
00:57:14,100 --> 00:57:14,900
canonicalize that.

1211
00:57:14,900 --> 00:57:17,900
So we step in here what it's going to do.

1212
00:57:19,600 --> 00:57:23,500
Is it's going to do that, divide to figure out what the integer offset

1213
00:57:23,500 --> 00:57:25,500
is the integer offset is 0.

1214
00:57:26,000 --> 00:57:30,400
It's the then going to take a look at that sort of quote, unquote tile

1215
00:57:30,400 --> 00:57:32,900
index, which is really now, a chunk indexes.

1216
00:57:32,900 --> 00:57:34,100
You probably rename these.

1217
00:57:37,200 --> 00:57:38,600
So what have we got there?

1218
00:57:38,800 --> 00:57:40,000
That's also zero.

1219
00:57:40,300 --> 00:57:44,200
So that's not going to change and then the tile relative version is

1220
00:57:44,200 --> 00:57:49,300
just going to be whatever it was before - the adjustment.

1221
00:57:49,500 --> 00:57:50,100
Right.

1222
00:57:50,500 --> 00:57:51,400
So there it is.

1223
00:57:51,700 --> 00:57:54,200
And then we're going to take a look and see if that's canonical in

1224
00:57:54,200 --> 00:57:55,100
order to be canonical.

1225
00:57:55,100 --> 00:57:56,600
You've got to be half chunks Ida M.

1226
00:57:56,600 --> 00:58:01,100
Which in this case, we are so somebody who's getting mapped back into

1227
00:58:01,100 --> 00:58:06,000
this space is in an unhappy situation for some reason.

1228
00:58:06,000 --> 00:58:07,100
And I'm not sure why.

1229
00:58:07,600 --> 00:58:10,500
So, we'll have to go through and it looks like because that looks like

1230
00:58:10,500 --> 00:58:11,600
it's working properly.

1231
00:58:12,000 --> 00:58:14,800
So we'll have to see exactly who it is.

1232
00:58:19,500 --> 00:58:20,600
And what's going on with them.

1233
00:58:22,000 --> 00:58:24,900
All right, so we're getting a non-canonical on this guy.

1234
00:58:25,900 --> 00:58:27,900
What is the world chunk side and M?

1235
00:58:28,500 --> 00:58:30,900
Check side in meters.

1236
00:58:32,500 --> 00:58:37,600
It's twenty two point, three nine, nine, nine and six.

1237
00:58:38,300 --> 00:58:41,200
So this looks like just a sort of this looks like a float Precision

1238
00:58:41,400 --> 00:58:45,100
bug to me because the tile relative is right on the edge of that.

1239
00:58:45,200 --> 00:58:50,100
So I wonder if this was just a case of this not picking up exact the

1240
00:58:50,100 --> 00:58:52,300
exact right number to do, right?

1241
00:58:52,300 --> 00:58:56,400
I mean, look at these two numbers are suspiciously close together so I

1242
00:58:56,400 --> 00:59:00,400
feel like this is just a case of the mapping not quite working

1243
00:59:00,800 --> 00:59:01,300
properly.

1244
00:59:01,500 --> 00:59:05,800
but, at the same time, what I am interested about is that Rica

1245
00:59:05,800 --> 00:59:07,000
nautical eyes,

1246
00:59:10,800 --> 00:59:19,700
Mmm-hmm, I'm trying to think if I care about this at all, I don't

1247
00:59:19,700 --> 00:59:20,900
really think that I do.

1248
00:59:22,300 --> 00:59:23,500
Let's go out here and check.

1249
00:59:24,200 --> 00:59:27,300
So, back in the store or thing, here, we can take a look at the entity

1250
00:59:27,300 --> 00:59:29,700
structure will not have had any mapping done to it.

1251
00:59:29,700 --> 00:59:31,900
So we can kind of see what we had here.

1252
00:59:32,300 --> 00:59:37,900
This was the location of the end of the 33 - 11 and so we want to do

1253
00:59:37,900 --> 00:59:40,200
is map that back into the chunks.

1254
00:59:41,400 --> 00:59:42,600
By taking those offsets.

1255
00:59:42,600 --> 00:59:47,100
So I think what we're seeing here is just a slight error in basically

1256
00:59:47,100 --> 00:59:51,000
when you're right on the edge of something that's being mapped in,

1257
00:59:52,200 --> 00:59:53,900
You just get a little float Precision.

1258
00:59:54,400 --> 00:59:55,300
That's what it looks like to me.

1259
00:59:55,300 --> 00:59:59,100
Anyway, meaning this divide is not perfectly going to round out

1260
00:59:59,100 --> 00:59:59,800
exactly right.

1261
01:00:00,100 --> 01:00:04,100
So it looks like it's just that is canonical, has to be a little bit

1262
01:00:04,100 --> 01:00:08,700
more have to be a little bit more flexible and allow a little bit

1263
01:00:08,700 --> 01:00:11,600
further off than exactly on.

1264
01:00:11,800 --> 01:00:12,400
Right?

1265
01:00:12,500 --> 01:00:17,300
Because that's really, really close to what it should be.

1266
01:00:18,200 --> 01:00:20,700
So I think that's I think that's basically what's going on here.

1267
01:00:21,100 --> 01:00:25,100
So I'm going to say that we're just going to leave that for now rather

1268
01:00:25,100 --> 01:00:29,800
than looking into it again because I'm pretty sure that's what

1269
01:00:30,000 --> 01:00:33,000
That is, and I don't want to go down the floating Point, Precision.

1270
01:00:33,000 --> 01:00:33,300
Rathole.

1271
01:00:33,300 --> 01:00:37,200
Just yet, we already have, but to do in here, that talks about that.

1272
01:00:37,700 --> 01:00:42,000
So I guess what I'd say is, we'd need an Epsilon here for now.

1273
01:00:42,100 --> 01:00:42,700
Right.

1274
01:00:43,200 --> 01:00:44,500
Which again, isn't great.

1275
01:00:45,200 --> 01:00:48,000
But, you know, we can basically say that, you know, within some

1276
01:00:48,000 --> 01:00:53,900
Precision, we're okay, if these things are basically a little bit off.

1277
01:00:54,100 --> 01:00:59,900
So, if you basically say, you know, - plus Epsilon, as long as

1278
01:01:00,000 --> 01:01:03,500
It's got its, you know, it's pretty close math, wise will treat it

1279
01:01:03,500 --> 01:01:04,000
that way.

1280
01:01:04,600 --> 01:01:07,200
And then later on, when we come back through here, we can think about

1281
01:01:07,200 --> 01:01:10,800
the floating-point a little bit more and make sure that we don't have,

1282
01:01:11,100 --> 01:01:13,700
you know, that we are as accurate as possible.

1283
01:01:16,100 --> 01:01:16,600
All right?

1284
01:01:16,800 --> 01:01:17,600
So

1285
01:01:20,000 --> 01:01:23,400
Surprisingly, that actually looks like it's sort of working.

1286
01:01:26,800 --> 01:01:30,300
Let's go ahead and, and take a look here at what happens?

1287
01:01:31,600 --> 01:01:36,500
Oops, we got some kind of a problem there with the hero we haven't

1288
01:01:36,500 --> 01:01:38,200
centered the camera.

1289
01:01:39,300 --> 01:01:42,700
On well I guess I don't know why the camera is looking where it is

1290
01:01:42,700 --> 01:01:46,500
looking right now, to be honest.

1291
01:01:46,500 --> 01:01:49,800
So that's a little odd like I don't know if we've got some kind of a

1292
01:01:49,800 --> 01:01:54,100
bug with where things are located, because I don't really know where

1293
01:01:54,100 --> 01:01:55,100
the origin is.

1294
01:01:55,700 --> 01:02:00,000
So one thing that might be interesting is, let's go ahead and check

1295
01:02:00,000 --> 01:02:01,100
that out actually.

1296
01:02:01,300 --> 01:02:05,600
Let's do something where we draw where we think the origin is relative

1297
01:02:05,600 --> 01:02:07,200
to the camera, right?

1298
01:02:08,000 --> 01:02:08,900
Just just, I just

1299
01:02:09,100 --> 01:02:10,100
Reference point.

1300
01:02:10,200 --> 01:02:13,600
So what I'm thinking is if we just take something where we do that

1301
01:02:13,600 --> 01:02:16,400
diff right and we do a draw, a rectangle.

1302
01:02:17,600 --> 01:02:19,800
So look at the very end after all this

1303
01:02:21,300 --> 01:02:25,500
I want to do a draw a rectangle, we're at basically draw something

1304
01:02:25,500 --> 01:02:30,100
that's, you know I don't know, a ten by ten little rectangle in there,

1305
01:02:30,500 --> 01:02:31,200
don't like this.

1306
01:02:31,800 --> 01:02:34,700
That's just going to be, you know, a bright yellow rectangle that I

1307
01:02:34,700 --> 01:02:35,500
can see.

1308
01:02:36,000 --> 01:02:40,600
I'm going to go ahead and draw that at where I think things are in the

1309
01:02:40,600 --> 01:02:41,600
world, right?

1310
01:02:41,600 --> 01:02:48,000
And so this is going to be my origin and my Origins going to be that

1311
01:02:48,000 --> 01:02:50,700
that basically that that

1312
01:02:51,100 --> 01:02:55,000
If I'm just going to say, let's see, where is it?

1313
01:02:55,000 --> 01:02:59,000
It's it's get gets him space, p we go.

1314
01:02:59,400 --> 01:02:59,800
I want.

1315
01:03:00,000 --> 01:03:02,600
Get some space pee on my SIM region.

1316
01:03:04,400 --> 01:03:07,500
Oh I guess I can't quite do that because that takes an enemy.

1317
01:03:07,700 --> 01:03:16,800
So what I actually want is this subtract some region world and my

1318
01:03:16,800 --> 01:03:24,500
stored P which would be whatever the some region origin I guess that's

1319
01:03:25,300 --> 01:03:27,000
not really what I owe.

1320
01:03:27,000 --> 01:03:28,100
Yes it is what I want.

1321
01:03:28,100 --> 01:03:29,800
So what I want is a world position that's just

1322
01:03:30,000 --> 01:03:31,300
the origin, right?

1323
01:03:31,300 --> 01:03:32,400
So I want that.

1324
01:03:33,800 --> 01:03:35,100
So that's the world origin.

1325
01:03:35,300 --> 01:03:38,600
I'm going to pass that and say, tell me where the world origin is

1326
01:03:38,700 --> 01:03:42,200
relative to the Sim region the camera, basically, right?

1327
01:03:43,100 --> 01:03:48,400
And then that will give me the inside the diff the point that I want

1328
01:03:48,400 --> 01:03:49,700
to draw, right?

1329
01:03:51,400 --> 01:03:52,400
So that's what I want to do.

1330
01:03:52,400 --> 01:03:54,000
I just want to see where that origin is.

1331
01:03:56,500 --> 01:03:58,000
And I don't see anything.

1332
01:03:58,400 --> 01:04:05,000
So I so I think oh it's the upper left corner, so that's interesting.

1333
01:04:08,300 --> 01:04:10,300
I think we may have to call it because I think we're out of time.

1334
01:04:11,000 --> 01:04:11,600
Yes, we are.

1335
01:04:12,800 --> 01:04:14,500
So I guess what I'll do is, I'll stop here.

1336
01:04:14,700 --> 01:04:15,900
That's where we'll pick up Monday.

1337
01:04:16,400 --> 01:04:19,500
So, we've got a couple to dues but mostly our stuff work.

1338
01:04:19,500 --> 01:04:20,600
So I think we're pretty close.

1339
01:04:21,400 --> 01:04:22,900
But we've got two more things to do.

1340
01:04:25,500 --> 01:04:29,100
Figure out why the origin is where it is.

1341
01:04:29,800 --> 01:04:32,000
So that's one thing we want to do, right?

1342
01:04:33,000 --> 01:04:33,900
And then the other.

1343
01:04:33,900 --> 01:04:36,200
So we just going to straighten out our origin situation.

1344
01:04:36,600 --> 01:04:38,600
That might just be the way it's supposed to work.

1345
01:04:38,900 --> 01:04:42,600
I have to think about that but we'll take a look at it more closely.

1346
01:04:43,100 --> 01:04:45,800
So figure out where the origin is, where it is think that through and

1347
01:04:45,800 --> 01:04:49,900
the other thing we need to do is we've got we've got this when we

1348
01:04:49,900 --> 01:04:51,400
actually add a hero in here.

1349
01:04:52,100 --> 01:04:54,100
We've got a problem there.

1350
01:04:55,000 --> 01:04:56,200
We want to see what that problem is.

1351
01:04:56,200 --> 01:05:00,800
And I think that's just the sword basically when we when we go ahead

1352
01:05:00,800 --> 01:05:05,400
and get that, I'm pretty sure that that's just the sword causing

1353
01:05:05,400 --> 01:05:07,200
problems because we haven't added.

1354
01:05:08,500 --> 01:05:13,300
We basically have an added, an actual location for things that don't

1355
01:05:13,300 --> 01:05:15,100
exist in the world at the moment.

1356
01:05:15,200 --> 01:05:18,300
Right in the sword, is something that comes in that way.

1357
01:05:18,400 --> 01:05:23,300
So if you take a look at the, at the entity, the sort of me, I guess

1358
01:05:23,300 --> 01:05:24,700
this would, this should be the sort of

1359
01:05:24,900 --> 01:05:26,200
City that we're looking at, right?

1360
01:05:26,200 --> 01:05:27,300
Yeah, it is the sword.

1361
01:05:27,500 --> 01:05:31,500
And so if we take a look at the sword, we should see that.

1362
01:05:31,500 --> 01:05:35,100
Basically we've got some kind of nasty.

1363
01:05:35,200 --> 01:05:37,400
Where's where's the store identity for the sword?

1364
01:05:41,600 --> 01:05:42,100
There we go.

1365
01:05:42,900 --> 01:05:44,100
So yeah.

1366
01:05:44,200 --> 01:05:47,900
So it's got an invalid location and we don't handle things with

1367
01:05:47,900 --> 01:05:49,300
invalid locations yet.

1368
01:05:49,700 --> 01:05:51,000
So that's there are other to do that.

1369
01:05:51,000 --> 01:05:51,700
We've got to do.

1370
01:05:53,600 --> 01:05:56,800
So these are our two importance, right?

1371
01:05:57,400 --> 01:05:58,900
Let's go ahead and put those out there.

1372
01:06:00,400 --> 01:06:08,100
Add logic to the Sim region to handle unplaced entities.

1373
01:06:08,600 --> 01:06:11,500
And that's honestly, it looks like we don't have much, much more to

1374
01:06:11,500 --> 01:06:11,800
go.

1375
01:06:11,900 --> 01:06:13,200
So I think we're pretty good.

1376
01:06:13,600 --> 01:06:16,900
That was much less the bugging than I was expecting for such a big

1377
01:06:16,900 --> 01:06:17,600
change.

1378
01:06:17,700 --> 01:06:19,400
So, I'm feeling pretty happy about that.

1379
01:06:19,400 --> 01:06:20,400
I'm pretty happy about that.

1380
01:06:20,500 --> 01:06:23,100
But let's go ahead and get to the Q&A.

1381
01:06:24,400 --> 01:06:26,600
Got about 15 minutes of Q&A here.

1382
01:06:27,100 --> 01:06:29,200
So, if you could please,

1383
01:06:30,100 --> 01:06:32,700
Your question with Q: so I can see it.

1384
01:06:32,700 --> 01:06:38,100
And also, if you could, please make it so that your questions are

1385
01:06:38,100 --> 01:06:41,900
pertaining to something that we've done today or on a previous stream

1386
01:06:41,900 --> 01:06:45,400
if you want to ask off-topic questions or questions about what we're

1387
01:06:45,400 --> 01:06:49,300
going to do in the future, please save those for the pre stream.

1388
01:06:49,300 --> 01:06:51,700
So come about 15 minutes before a stream starts.

1389
01:06:51,700 --> 01:06:54,700
And that's a good place to ask though because we answer off-topic

1390
01:06:54,700 --> 01:06:55,700
questions at that point.

1391
01:06:55,700 --> 01:06:57,000
So, there you go.

1392
01:07:00,100 --> 01:07:01,100
Okay, the Bots back.

1393
01:07:13,900 --> 01:07:16,800
Assuming we don't go wandering too much on our own which week has

1394
01:07:16,800 --> 01:07:19,700
accumulated enough code base for a basic simple, fully functional

1395
01:07:19,700 --> 01:07:20,100
game.

1396
01:07:20,600 --> 01:07:21,000
None.

1397
01:07:21,000 --> 01:07:22,500
We're nowhere near that yet.

1398
01:07:24,400 --> 01:07:26,300
We will, we will probably be.

1399
01:07:26,600 --> 01:07:29,200
So if you think about mapping hours, right?

1400
01:07:31,900 --> 01:07:37,400
If you think about mapping hours, basically a week of programming time

1401
01:07:37,700 --> 01:07:41,600
is, is 40 hours, right?

1402
01:07:41,600 --> 01:07:46,900
At least if you're doing a standard work week of programming, right?

1403
01:07:47,400 --> 01:07:53,200
So if you look at where we are day 65, that's essentially 65 hours in.

1404
01:07:53,200 --> 01:07:56,400
Maybe it's a little like I said, most 70 70 hours in.

1405
01:07:56,400 --> 01:07:59,600
If you count a couple of week days we went a little long, right?

1406
01:07:59,900 --> 01:08:00,100
So

1407
01:08:00,500 --> 01:08:02,400
Hours in here would be week.

1408
01:08:02,400 --> 01:08:06,700
One of programming here would be weak to, right?

1409
01:08:06,700 --> 01:08:08,400
So you start the project here.

1410
01:08:08,800 --> 01:08:10,400
This is the start of the project.

1411
01:08:12,800 --> 01:08:17,700
We have done this week's worth of coding and we are almost, we're

1412
01:08:17,700 --> 01:08:18,800
like, you know, I don't know.

1413
01:08:18,800 --> 01:08:21,300
A little bit further down than that, we're here on week 2.

1414
01:08:21,600 --> 01:08:24,800
So we haven't even programmed for two weeks on this game yet.

1415
01:08:25,100 --> 01:08:28,600
So we're nowhere near like I would expect that probably fully

1416
01:08:28,600 --> 01:08:31,600
functional game is somewhere down here, right?

1417
01:08:32,600 --> 01:08:35,300
Where we're like totally happy with our engine stuff.

1418
01:08:35,300 --> 01:08:37,600
So we'd have this week next week, right?

1419
01:08:37,600 --> 01:08:39,399
This week, this week or something.

1420
01:08:39,800 --> 01:08:42,399
So I would expect, you know, we'd be somewhere down here.

1421
01:08:42,899 --> 01:08:45,300
Would be like engine, you know?

1422
01:08:48,600 --> 01:08:52,600
So yeah, so we got a long, way to go, unless your definition of fully

1423
01:08:52,600 --> 01:08:54,100
functional is very different from mine.

1424
01:09:04,100 --> 01:09:05,500
Regarding high and low entities.

1425
01:09:05,500 --> 01:09:09,100
With the following solution work using one entity struct.

1426
01:09:09,399 --> 01:09:12,899
All entities are stored in one array and frequently update the entity

1427
01:09:12,899 --> 01:09:16,399
if the entity is within camera bounds and use low frequency updating,

1428
01:09:16,399 --> 01:09:18,000
if it's outside the camera bounds,

1429
01:09:20,800 --> 01:09:27,200
So that is sort of what we're doing at the moment, but we the reason

1430
01:09:27,200 --> 01:09:29,600
that I didn't use it, so that it just isn't place, right?

1431
01:09:29,600 --> 01:09:30,500
The same region.

1432
01:09:32,200 --> 01:09:35,000
If I understand you correctly, you're sort of asking the question.

1433
01:09:35,100 --> 01:09:39,899
Could the simulation regions really just look, just just point

1434
01:09:39,899 --> 01:09:43,000
directly into the end of the array and update them there and the

1435
01:09:43,000 --> 01:09:44,600
answer is yes, we could do that.

1436
01:09:44,800 --> 01:09:47,200
There's a reason I don't want to do that but we haven't gotten to it

1437
01:09:47,200 --> 01:09:47,600
yet.

1438
01:09:48,399 --> 01:09:52,600
Basically, what I don't want to do is I don't want to say that the

1439
01:09:52,600 --> 01:09:56,400
actual thing that we store all the time is The Entity structure that

1440
01:09:56,400 --> 01:09:57,600
people actually operate on.

1441
01:09:57,900 --> 01:10:00,400
There's a very, very good reason that I don't want to do that but we

1442
01:10:00,400 --> 01:10:01,600
haven't quite gotten there yet.

1443
01:10:02,000 --> 01:10:05,300
Um, and so, you'll have to wait a little further down the line when I

1444
01:10:05,300 --> 01:10:06,100
actually go through.

1445
01:10:06,100 --> 01:10:09,200
I have a bunch of stuff I want to talk about in terms of entity Sim

1446
01:10:09,900 --> 01:10:10,300
reasons.

1447
01:10:10,300 --> 01:10:14,300
I don't want to do that but it would work.

1448
01:10:14,800 --> 01:10:17,100
I just don't think it would work for what we eventually want to do

1449
01:10:17,100 --> 01:10:18,300
because I want to do stuff.

1450
01:10:18,300 --> 01:10:20,800
That's a lot more complicated and any wise than what we're doing now

1451
01:10:20,800 --> 01:10:25,600
in terms of what sorts of code you can do and so there's reasons why I

1452
01:10:25,600 --> 01:10:30,000
don't want to do that, but if your entities were very simple there

1453
01:10:30,000 --> 01:10:31,300
then you could totally do that.

1454
01:10:31,900 --> 01:10:36,000
Like if they were just as, if you were making, you know, even even if

1455
01:10:36,000 --> 01:10:41,300
you were doing a probably even a straight Binding of Isaac clone, you

1456
01:10:41,300 --> 01:10:43,300
could totally do that because their entities are just not that

1457
01:10:43,300 --> 01:10:43,800
complicated.

1458
01:10:43,800 --> 01:10:47,100
So you won't need to worry about some of the things that I'm want to

1459
01:10:47,100 --> 01:10:49,000
do due to how complex.

1460
01:10:49,000 --> 01:10:52,900
I think our entities will get in terms of all the stuff they can do

1461
01:10:52,900 --> 01:10:53,700
gameplay wise.

1462
01:10:55,100 --> 01:10:58,500
So yes, I don't think there's anything wrong with solution, you're

1463
01:10:58,500 --> 01:10:59,000
proposing.

1464
01:10:59,000 --> 01:11:02,300
I don't think it would work for what I want to do, but what I want to

1465
01:11:02,300 --> 01:11:06,100
do, is more complicated than what a lot of games gameplay wise than

1466
01:11:06,100 --> 01:11:07,600
what a lot of games have.

1467
01:11:07,600 --> 01:11:10,500
And so if your game doesn't have that complexity, then there's no

1468
01:11:10,500 --> 01:11:13,400
reason you couldn't do that because, like right now, we already are

1469
01:11:13,400 --> 01:11:18,500
using once, like, we already are just using one entity struct, right?

1470
01:11:18,600 --> 01:11:23,400
It's just this, it's just some entity, but what we're doing is when we

1471
01:11:23,400 --> 01:11:24,300
store it back,

1472
01:11:24,500 --> 01:11:25,500
Copy it into here.

1473
01:11:25,700 --> 01:11:27,900
So you could just be using one if you want to.

1474
01:11:28,100 --> 01:11:31,700
But I think it's going to get there's going to be another step later

1475
01:11:31,700 --> 01:11:34,100
down the line and you'll see why I want to do it this way at that

1476
01:11:34,100 --> 01:11:38,800
point, I want to keep that flexibility of having to storage States.

1477
01:11:46,000 --> 01:11:47,900
Can you give a high level overview of how entities work?

1478
01:11:47,900 --> 01:11:51,700
Now I get in and I get in bits and pieces but this week has lost me

1479
01:11:51,900 --> 01:11:52,400
sure.

1480
01:11:53,300 --> 01:11:54,200
Let's go ahead and do that.

1481
01:11:57,900 --> 01:11:59,800
all right, so essentially what we've got

1482
01:12:03,400 --> 01:12:06,600
Excuse me, because we have a world.

1483
01:12:08,000 --> 01:12:08,700
Right.

1484
01:12:08,900 --> 01:12:12,700
And our world right now is separated into two pieces in some sense to

1485
01:12:12,700 --> 01:12:14,600
logical pieces, right?

1486
01:12:15,500 --> 01:12:18,100
There's the geographic piece, right?

1487
01:12:18,500 --> 01:12:21,000
So here is the geography of the world.

1488
01:12:22,800 --> 01:12:24,800
And this is stored as a sparse map.

1489
01:12:25,300 --> 01:12:28,300
So basically, there's tile chunks, right?

1490
01:12:28,600 --> 01:12:31,600
That sort of say where there's actually stuff in the world?

1491
01:12:32,000 --> 01:12:34,600
And the reason that we do that is because the world except

1492
01:12:35,000 --> 01:12:38,500
expansiveness is actually much more massive than you could ever store

1493
01:12:38,500 --> 01:12:39,300
at a computer.

1494
01:12:39,600 --> 01:12:43,000
So, we only want to store the places where it actually exists and if

1495
01:12:43,000 --> 01:12:47,500
it ends up being sort of long and skinny and snakes through places, we

1496
01:12:47,500 --> 01:12:50,300
don't want to pay for storing them as a giant block.

1497
01:12:50,500 --> 01:12:52,400
We want to like not store all these are

1498
01:12:52,600 --> 01:12:53,400
Is where there isn't stuff.

1499
01:12:53,400 --> 01:12:55,100
So we don't pay the cost, right?

1500
01:12:56,500 --> 01:13:00,000
These are the tile chunks that we have, right?

1501
01:13:00,900 --> 01:13:02,000
It's a stupid name.

1502
01:13:02,600 --> 01:13:05,800
Did we rename it to World chunk because it should be renamed World

1503
01:13:05,800 --> 01:13:06,100
chunk.

1504
01:13:06,100 --> 01:13:09,500
But I don't remember if we actually did that, I hope we did but

1505
01:13:09,500 --> 01:13:11,000
sometimes we don't have time to do all the name.

1506
01:13:11,000 --> 01:13:12,900
Yeah, so it's just World shock, right?

1507
01:13:13,500 --> 01:13:15,500
So let's let's rename that right.

1508
01:13:15,500 --> 01:13:18,500
It's, these are the world chunks, right?

1509
01:13:19,200 --> 01:13:19,800
Like this.

1510
01:13:21,200 --> 01:13:22,000
Now we have so to bar.

1511
01:13:22,000 --> 01:13:24,300
So this is the geography, right?

1512
01:13:24,600 --> 01:13:29,400
And then we also have another thing which is an array of entities and

1513
01:13:29,400 --> 01:13:32,300
this is sort of our logic, right?

1514
01:13:34,200 --> 01:13:37,400
So, The Logical stuff basically has an array.

1515
01:13:37,600 --> 01:13:41,700
You know, some big long array of entities and each one of these

1516
01:13:41,700 --> 01:13:44,500
entities store is a bunch of stuff in it, right?

1517
01:13:44,600 --> 01:13:50,700
So entity 0 is the nullity entity one, entity through entity n, right?

1518
01:13:50,700 --> 01:13:53,800
Like so and so these are our enemies.

1519
01:13:57,700 --> 01:13:59,800
These are stored in the game state right now.

1520
01:13:59,900 --> 01:14:05,400
So this is gamestate low entities, right?

1521
01:14:06,500 --> 01:14:08,200
And this is in the world.

1522
01:14:08,200 --> 01:14:09,800
This is the game state.

1523
01:14:11,900 --> 01:14:12,500
World.

1524
01:14:14,500 --> 01:14:15,600
So this is how we're storing things.

1525
01:14:15,600 --> 01:14:19,900
Currently what happens is, when we actually want to update something,

1526
01:14:20,700 --> 01:14:23,700
we pick a region of the world in that region can be any rectangle.

1527
01:14:24,700 --> 01:14:27,800
And we then say this becomes a Sim region.

1528
01:14:30,700 --> 01:14:34,400
Write this rectangle that rectangle gets mapped out.

1529
01:14:35,800 --> 01:14:36,300
Like so.

1530
01:14:38,200 --> 01:14:41,500
And what it does is it iterates over the tile chunks that are inside

1531
01:14:41,500 --> 01:14:43,100
that region, right?

1532
01:14:43,200 --> 01:14:45,900
So, it grabs out these individual top chunks that fall within the

1533
01:14:45,900 --> 01:14:47,000
simulation region.

1534
01:14:48,400 --> 01:14:51,400
That simulation region is larger than the camera, so that the camera

1535
01:14:51,400 --> 01:14:54,300
is basically seeing this, this is the camera area.

1536
01:14:55,500 --> 01:14:58,200
But we're actually doing a larger region, so the camera actually maps

1537
01:14:58,200 --> 01:14:59,700
to a smaller area of that.

1538
01:15:00,500 --> 01:15:01,100
Right.

1539
01:15:01,700 --> 01:15:05,300
The tile chunks that are involved here, right?

1540
01:15:05,400 --> 01:15:08,700
Kind of map in like this, some of them are filled, some of them are

1541
01:15:08,700 --> 01:15:09,200
not.

1542
01:15:09,200 --> 01:15:13,300
So, you know, some of these are filled, some of these are not okay,

1543
01:15:13,800 --> 01:15:16,400
and for each child chunk, that actually is filled.

1544
01:15:17,000 --> 01:15:19,400
We then look at what entities are in there.

1545
01:15:20,900 --> 01:15:25,800
The entities are stored in the the entities are stored by index which

1546
01:15:25,800 --> 01:15:27,400
entities are in which tile chunks.

1547
01:15:27,700 --> 01:15:30,600
So we just go through each tile chunk and we say what are the entities

1548
01:15:30,600 --> 01:15:33,800
that are in there and for every tile chunk, right?

1549
01:15:35,100 --> 01:15:38,800
So basically, every tile chunk, there's this list of entity indexes.

1550
01:15:42,700 --> 01:15:43,300
Right.

1551
01:15:43,300 --> 01:15:44,000
Doo doo.

1552
01:15:44,000 --> 01:15:44,600
Doo doo.

1553
01:15:45,000 --> 01:15:47,800
They're in here those entity indexes, right?

1554
01:15:47,800 --> 01:15:50,600
They point back into something in here they're just they're just a

1555
01:15:50,600 --> 01:15:53,300
number which says which of the entities we want.

1556
01:15:53,800 --> 01:15:56,400
So for the same region on Startup, we Loop through these.

1557
01:15:56,500 --> 01:15:59,900
We see which ones we've got for each one that we've got.

1558
01:16:00,300 --> 01:16:04,100
We then Loop through the entity indices and we pull out of this array,

1559
01:16:04,100 --> 01:16:04,700
right?

1560
01:16:04,800 --> 01:16:08,400
We pull them out and then we put them into our Sim region stack,

1561
01:16:08,600 --> 01:16:08,800
right?

1562
01:16:08,800 --> 01:16:11,600
So we basically have this is the entity

1563
01:16:14,400 --> 01:16:15,600
This is Sim region.

1564
01:16:18,300 --> 01:16:20,100
And he's right.

1565
01:16:20,100 --> 01:16:21,400
So we pull them out into here.

1566
01:16:22,500 --> 01:16:27,100
So now we have all of our entities that are involved, just the subset

1567
01:16:27,100 --> 01:16:30,600
that are in this region, they're all stacked up in here, right?

1568
01:16:31,800 --> 01:16:34,800
They all stopped store the index where they came from so that they can

1569
01:16:34,800 --> 01:16:37,000
write back into it if they want to so on.

1570
01:16:37,000 --> 01:16:38,700
Begin Sim, that's what we're doing.

1571
01:16:38,700 --> 01:16:39,800
We grab them all out.

1572
01:16:39,900 --> 01:16:40,800
They all come in here.

1573
01:16:42,000 --> 01:16:45,100
When we're done, we then write them back, right?

1574
01:16:45,100 --> 01:16:47,800
So essentially what I could do is say this is begin Sim

1575
01:16:49,600 --> 01:16:50,500
Grabs them in here.

1576
01:16:50,800 --> 01:16:51,700
This is ensign.

1577
01:16:53,600 --> 01:16:55,400
Writes them back, right?

1578
01:16:58,300 --> 01:17:02,600
So, all of the simulation now takes place in this array, it all takes

1579
01:17:02,600 --> 01:17:06,300
place in floating Point coordinates relative to the center of this

1580
01:17:06,300 --> 01:17:08,200
same region, right?

1581
01:17:08,300 --> 01:17:14,400
So that way we a stay in float always, when we're doing our Sim,

1582
01:17:14,800 --> 01:17:15,000
right?

1583
01:17:15,000 --> 01:17:16,500
No more low positions.

1584
01:17:16,700 --> 01:17:18,300
We only deal with that on the map.

1585
01:17:18,300 --> 01:17:22,200
So this begin Sim fact, I could say this here so on begin Sim.

1586
01:17:23,500 --> 01:17:28,700
Right entity copied into SIM.

1587
01:17:30,700 --> 01:17:31,400
Position.

1588
01:17:34,000 --> 01:17:35,100
Translated.

1589
01:17:37,000 --> 01:17:37,700
To float.

1590
01:17:38,800 --> 01:17:39,500
Right.

1591
01:17:40,400 --> 01:17:41,900
And then on N Sim.

1592
01:17:44,500 --> 01:17:47,900
Oh, and references change to pointers.

1593
01:17:50,500 --> 01:17:51,000
Right?

1594
01:17:51,000 --> 01:17:56,000
So, like with the sword, for example, when we had the sword slot, it's

1595
01:17:56,000 --> 01:17:59,800
storing when it's out in the without in this entity.

1596
01:18:00,500 --> 01:18:04,000
It's storing an index into the array of who's the sword was when it's

1597
01:18:04,000 --> 01:18:06,400
moved in here, it becomes a pointer, right?

1598
01:18:06,500 --> 01:18:08,800
So things that were indexes in here, become pointers and then they,

1599
01:18:09,000 --> 01:18:11,600
then they come back, they met back in and then so an instant we do

1600
01:18:11,600 --> 01:18:13,400
exactly the opposite, right?

1601
01:18:13,400 --> 01:18:14,100
The Entity

1602
01:18:15,600 --> 01:18:17,900
Copied to state.

1603
01:18:20,100 --> 01:18:21,000
The position.

1604
01:18:22,300 --> 01:18:23,500
Translated 2nt.

1605
01:18:27,200 --> 01:18:28,200
In + float.

1606
01:18:28,400 --> 01:18:29,700
So high res position.

1607
01:18:31,000 --> 01:18:35,900
So the low rest position and the ref change changes to back to indices

1608
01:18:36,700 --> 01:18:37,500
changed.

1609
01:18:39,000 --> 01:18:39,700
Two indices.

1610
01:18:41,600 --> 01:18:44,200
Right, that's what we do on N, cm and begins him.

1611
01:18:46,100 --> 01:18:46,900
And that's it.

1612
01:18:46,900 --> 01:18:51,000
So, all of our simulation happens in this array, right in this sort of

1613
01:18:51,000 --> 01:18:52,600
thing where things are just straightforward.

1614
01:18:52,800 --> 01:18:53,800
And why do we do that?

1615
01:18:53,800 --> 01:18:54,200
We do it.

1616
01:18:54,200 --> 01:18:57,700
So we can stay in float and still have giant world's way, way bigger

1617
01:18:57,700 --> 01:19:01,500
than could be referenced in floats without losing precision and we

1618
01:19:01,500 --> 01:19:04,800
also do it so we can have massive energy counts, right?

1619
01:19:08,000 --> 01:19:10,500
Because we only ever simulate a small segment of them.

1620
01:19:10,600 --> 01:19:14,100
We don't have to worry about how many there are.

1621
01:19:14,100 --> 01:19:17,200
And we can also compress them in here so we can make this be a much

1622
01:19:17,200 --> 01:19:17,900
more tighter.

1623
01:19:18,500 --> 01:19:18,800
No matter.

1624
01:19:18,800 --> 01:19:21,300
How big our Sim state gets four entities.

1625
01:19:21,300 --> 01:19:22,200
We don't have to care.

1626
01:19:22,200 --> 01:19:27,800
We can store them much smaller than that if we want to and this seems

1627
01:19:27,800 --> 01:19:30,900
pretty reasonable to me because then all of the code that we write

1628
01:19:30,900 --> 01:19:33,200
will be very simple because it just looks at these entities that are

1629
01:19:33,200 --> 01:19:35,400
very simple, they use pointers there.

1630
01:19:35,400 --> 01:19:37,600
They don't have they just use pointers and float.

1631
01:19:37,900 --> 01:19:38,600
They're very simple.

1632
01:19:38,600 --> 01:19:41,000
They're like the code you would write if you didn't have any special

1633
01:19:41,000 --> 01:19:45,200
constraints and that mapping in and out is what gets us these things.

1634
01:19:45,500 --> 01:19:48,300
So these things come during this mapping in and out.

1635
01:19:48,400 --> 01:19:50,700
We don't have to pay for them at any given any other time.

1636
01:19:51,700 --> 01:19:54,000
Hopefully that gives you a clear idea what's going on.

1637
01:20:00,000 --> 01:20:03,000
I'm not sure I fully caught how short-lived temporary transient memory

1638
01:20:03,000 --> 01:20:06,800
is is it only for single frames or longer lived if for longer lived

1639
01:20:06,800 --> 01:20:07,000
memory?

1640
01:20:07,000 --> 01:20:09,700
How do you make sure you don't wrap around us are overriding memory

1641
01:20:09,700 --> 01:20:12,900
still in use, think some homing attack which takes many, many frames

1642
01:20:12,900 --> 01:20:13,500
resolved.

1643
01:20:13,900 --> 01:20:17,200
So the answer is the transient memory does not last more than a frame.

1644
01:20:18,800 --> 01:20:19,800
You can see that right here.

1645
01:20:20,300 --> 01:20:24,400
So here's game update and render its called every frame.

1646
01:20:25,000 --> 01:20:29,200
We come into game update in render and thus imerina we just sort of

1647
01:20:29,200 --> 01:20:31,700
grab it and start writing into it, right?

1648
01:20:31,700 --> 01:20:33,200
Nobody ever reads from it.

1649
01:20:34,600 --> 01:20:37,700
So there it can't last, right?

1650
01:20:38,600 --> 01:20:42,800
The first thing we do inside when we do begin Sim as we just

1651
01:20:42,800 --> 01:20:45,500
overwrite, whatever was there, right?

1652
01:20:45,600 --> 01:20:47,700
The first thing we do in some region.

1653
01:20:49,300 --> 01:20:51,400
Let's see here whereas begin sent you can see him.

1654
01:20:52,200 --> 01:20:55,000
You can see the first thing we do is like grab a struct out.

1655
01:20:55,000 --> 01:20:59,300
We overwrite we zero the hash table, we overwrite, whatever was there

1656
01:20:59,300 --> 01:20:59,800
with new stuff.

1657
01:21:00,400 --> 01:21:01,000
Right.

1658
01:21:01,000 --> 01:21:02,700
We totally, we just totally romp.

1659
01:21:02,700 --> 01:21:03,400
Whatever is there.

1660
01:21:03,700 --> 01:21:05,700
So it only lasts just that one frame.

1661
01:21:06,500 --> 01:21:09,900
It doesn't in a little tiny last even less than a frame.

1662
01:21:10,100 --> 01:21:13,500
Like basically, what we're going to do eventually is it'll only last

1663
01:21:13,500 --> 01:21:17,500
between begins him and then Sim the transit memory for the same anyway

1664
01:21:17,700 --> 01:21:20,000
and then it will just release that and other people could use it

1665
01:21:20,100 --> 01:21:21,100
inside the same frame.

1666
01:21:26,300 --> 01:21:28,500
How do you determine, how much time, each some region should be

1667
01:21:28,500 --> 01:21:30,700
updated if they aren't updated each frame.

1668
01:21:30,800 --> 01:21:32,400
So we haven't quite gotten there yet.

1669
01:21:32,500 --> 01:21:35,900
Well, I'm imagining will do is each entity will store its clock

1670
01:21:36,000 --> 01:21:39,500
basically and they'll get updated sort of, when you pull out an entity

1671
01:21:39,500 --> 01:21:41,100
you'll update for its clock amount.

1672
01:21:41,200 --> 01:21:41,800
That's my guess.

1673
01:21:41,800 --> 01:21:42,100
But we'll see.

1674
01:21:42,100 --> 01:21:43,100
You haven't gotten there yet.

1675
01:21:55,300 --> 01:21:57,600
How does the work during this experimental phase fit into the final

1676
01:21:57,600 --> 01:21:58,200
code?

1677
01:21:58,300 --> 01:21:59,700
Will you be reusing most of it?

1678
01:21:59,700 --> 01:22:02,400
Are we starting basically from scratch, the answer is, it doesn't

1679
01:22:02,400 --> 01:22:02,900
matter.

1680
01:22:04,200 --> 01:22:10,500
Basically what we will do is we will continuously we continuously move

1681
01:22:10,500 --> 01:22:12,800
code towards good, right?

1682
01:22:13,300 --> 01:22:18,400
And so, when we have things in place that are working, we will just

1683
01:22:18,400 --> 01:22:21,500
upgrade those to be industrial strength which basically involves like,

1684
01:22:21,500 --> 01:22:24,600
going through all the to dues fixing them and like,

1685
01:22:24,800 --> 01:22:27,100
Making sure that eyes are dotted and the t's are crossed.

1686
01:22:27,800 --> 01:22:31,100
But in cases where we've done stuff, where we just said, well, we're

1687
01:22:31,100 --> 01:22:32,800
assuming we have a thing here that works.

1688
01:22:32,800 --> 01:22:35,200
Like the renderer where there really isn't one yet.

1689
01:22:35,400 --> 01:22:37,100
We'll have to write a whole system.

1690
01:22:37,300 --> 01:22:39,300
We won't really be deleting things though.

1691
01:22:39,300 --> 01:22:42,200
In that sense, we won't be like vaporizing stuff and starting over.

1692
01:22:42,500 --> 01:22:46,800
Will constantly be we always just move forwards, right?

1693
01:22:53,400 --> 01:22:55,700
Alright, I think that's it for questions about stuff.

1694
01:22:55,700 --> 01:22:56,300
We've done.

1695
01:22:57,300 --> 01:22:58,000
Which is good.

1696
01:22:58,000 --> 01:22:58,700
We're right on time.

1697
01:22:59,200 --> 01:23:00,800
We are right on time.

1698
01:23:01,400 --> 01:23:04,000
So I think we're in really good shape.

1699
01:23:04,800 --> 01:23:06,000
I'm pretty happy with this.

1700
01:23:06,100 --> 01:23:07,900
I think the same region stuff is good.

1701
01:23:08,000 --> 01:23:10,000
I like the way it's going everything about it.

1702
01:23:10,000 --> 01:23:11,400
Feels good to me so far.

1703
01:23:11,500 --> 01:23:14,100
There's a couple things that I think are going to be tough.

1704
01:23:14,100 --> 01:23:16,100
The apron Sim region.

1705
01:23:16,100 --> 01:23:18,900
Aprons is really the only thing that I'm super worried about.

1706
01:23:19,000 --> 01:23:21,700
So we'll have to see how that goes when we get there.

1707
01:23:23,000 --> 01:23:25,800
But, yeah, I love looking at this drawing.

1708
01:23:25,800 --> 01:23:26,800
It's already get think this.

1709
01:23:26,900 --> 01:23:27,900
Going to be a lot of fun.

1710
01:23:30,300 --> 01:23:31,800
Looking at, looking at how this is going.

1711
01:23:31,800 --> 01:23:35,500
It's already kind of fun to sort of see the path that things take

1712
01:23:35,800 --> 01:23:36,800
through the drawing.

1713
01:23:37,400 --> 01:23:40,400
So I'm kind of, I'm kind of psyched that we have found this drawing

1714
01:23:40,400 --> 01:23:40,700
package.

1715
01:23:40,700 --> 01:23:41,600
That allows us to do that.

1716
01:23:41,600 --> 01:23:42,300
I like that.

1717
01:23:43,100 --> 01:23:45,700
All right, I'm gonna go ahead and save this off and we are going to

1718
01:23:45,700 --> 01:23:48,400
call ourselves done for the day close that down.

1719
01:23:48,900 --> 01:23:50,100
And like I said, I think we're good.

1720
01:23:50,100 --> 01:23:51,900
I think next week is going to be a good week.

1721
01:23:52,100 --> 01:23:56,500
We'll get to do a bunch of stuff and yeah we're going to do a couple

1722
01:23:56,500 --> 01:23:57,400
more entity things.

1723
01:23:57,400 --> 01:23:59,800
Like I said, we're going to kind of get stuff a little

1724
01:24:00,000 --> 01:24:05,900
We'll start doing some Sims multiple some regions and looking at how

1725
01:24:05,900 --> 01:24:06,800
to get that working.

1726
01:24:07,000 --> 01:24:09,000
Want to get that sort of straightened out, and then we'll move from

1727
01:24:09,000 --> 01:24:09,200
there.

1728
01:24:09,200 --> 01:24:12,600
We'll probably move on to animation, because that's other big thing

1729
01:24:12,600 --> 01:24:14,300
that we haven't tackled yet.

1730
01:24:15,100 --> 01:24:18,100
And I want to do that animation sound and then I think it's on to the

1731
01:24:18,100 --> 01:24:18,500
renderer.

1732
01:24:18,500 --> 01:24:21,400
So, yeah, we got we got some of these stuff to do, then we got to do

1733
01:24:21,400 --> 01:24:23,400
go and Tackle animation was going to be a big topic.

1734
01:24:23,600 --> 01:24:24,800
Sounds not going to be too big.

1735
01:24:24,800 --> 01:24:26,000
Sounds really pretty basic

1736
01:24:28,800 --> 01:24:32,100
Writing sound codes is not not too hard, so we'll do some code and

1737
01:24:32,100 --> 01:24:35,600
then we can move on to the renderer which is our first really big

1738
01:24:35,600 --> 01:24:36,200
engine thing.

1739
01:24:36,800 --> 01:24:39,300
So again, looking pretty good to me.

1740
01:24:39,300 --> 01:24:40,700
I'm pretty happy with where we are.

1741
01:24:41,000 --> 01:24:42,300
No big surprises so far.

1742
01:24:42,400 --> 01:24:43,700
I think we're making good time to.

1743
01:24:43,700 --> 01:24:46,100
Like I said, only, you know, how many hours were in?

1744
01:24:46,100 --> 01:24:49,800
But like 70 hours in not even to programming weeks and we've got so

1745
01:24:49,800 --> 01:24:51,600
much good stuff going on in that code base.

1746
01:24:51,600 --> 01:24:53,100
So I'm pretty happy about that.

1747
01:24:54,800 --> 01:24:57,600
Yeah, if you would like to follow,

1748
01:24:57,700 --> 01:24:59,300
Long at home with handmade hero.

1749
01:25:00,100 --> 01:25:02,700
You can go to handmade here at uh org and pre-order the game and

1750
01:25:02,700 --> 01:25:04,200
you'll get the source code with it.

1751
01:25:04,500 --> 01:25:06,600
So if you want to do that, you can do that here.

1752
01:25:06,900 --> 01:25:08,900
You'll get a link in your email that you can download the source code

1753
01:25:08,900 --> 01:25:11,600
every night I uploaded Ever every time after I finish.

1754
01:25:12,800 --> 01:25:14,000
So that's something to check out.

1755
01:25:14,400 --> 01:25:17,000
If you would like to be kept up to date on the schedule, you can

1756
01:25:17,000 --> 01:25:18,300
subscribe to our Twitter.

1757
01:25:19,400 --> 01:25:22,300
If you would like to support the video series, you can subscribe to

1758
01:25:22,300 --> 01:25:27,300
our patreon and if you want to check out our episode guides the

1759
01:25:27,800 --> 01:25:31,400
If you want to discuss things on the community, forums, if you want to

1760
01:25:31,800 --> 01:25:34,800
look at ports to Mac or Linux that Community people have done using

1761
01:25:34,800 --> 01:25:36,300
forums is the place to do that.

1762
01:25:36,700 --> 01:25:41,600
So check all that out and have a good weekend and we'll be back here

1763
01:25:41,600 --> 01:25:44,700
on Monday, I'm not sure it might be an early one again on Monday

1764
01:25:44,700 --> 01:25:47,400
because I might not be here Monday night, so we may have to move it.

1765
01:25:47,600 --> 01:25:50,300
So definitely check the schedule Twitter

1766
01:25:52,300 --> 01:25:55,500
On Saturday or Sunday it'll tweet out when the schedule for the week

1767
01:25:55,500 --> 01:25:58,900
is no definitely check that and see so that if you want to make Monday

1768
01:25:58,900 --> 01:26:02,600
stream but other than that then Tuesday should be back to the normal

1769
01:26:02,600 --> 01:26:03,300
time I think.

1770
01:26:03,900 --> 01:26:06,000
But anyway, so yeah, might be a slightly different schedule next week.

1771
01:26:06,000 --> 01:26:09,600
Check the Twitter bot for for for information on that.

1772
01:26:09,700 --> 01:26:11,400
All right, everyone, thank you very much for joining me.

1773
01:26:11,400 --> 01:26:13,400
Have a great weekend and I will see you next week.

