1
00:00:00,000 --> 00:00:04,000
Okay, hello everyone and welcome to handmade hero.

2
00:00:04,000 --> 00:00:06,600
The show we go to complete game live on stream.

3
00:00:07,100 --> 00:00:12,000
We got our debug system, sort of in good shape over the past couple

4
00:00:12,000 --> 00:00:19,600
days and wanted to probably start doing some feature clean up like we

5
00:00:19,600 --> 00:00:22,400
have profile information, currently being gathered but we don't really

6
00:00:22,400 --> 00:00:27,100
have any way to look at it or use it productively and so I'm not

7
00:00:27,100 --> 00:00:29,500
exactly sure what we're going to do today to be honest, but it's going

8
00:00:29,500 --> 00:00:29,900
to be something.

9
00:00:30,000 --> 00:00:30,900
Along those lines either.

10
00:00:30,900 --> 00:00:35,400
We will start in making the profiler or try to start working with that

11
00:00:35,400 --> 00:00:37,900
to see, like, how we're going to actually have the profiler work in

12
00:00:37,900 --> 00:00:42,800
practice will either do that or we will do something.

13
00:00:49,100 --> 00:00:51,600
With just cleaning up, sort of the way that we're drawing things.

14
00:00:51,600 --> 00:00:53,600
Because right now there are still some code in there.

15
00:00:53,600 --> 00:00:56,700
That's pretty janky in terms of how we're displaying stuff and how

16
00:00:56,700 --> 00:00:58,900
things is being, you know, laid out and all that.

17
00:00:58,900 --> 00:01:05,300
So we will give that a shot and we will see what actually happens.

18
00:01:06,500 --> 00:01:10,600
And, you know, it's wherever the Muse takes us, it's where the Muse

19
00:01:10,600 --> 00:01:13,400
takes us, because there's plenty of finishing things, we can sort of

20
00:01:13,400 --> 00:01:15,800
do here in the debug system to get it into a good State.

21
00:01:15,800 --> 00:01:17,900
And the question is just, which ones at those do we actually want?

22
00:01:18,100 --> 00:01:18,300
Do.

23
00:01:18,300 --> 00:01:25,100
So I'm going to go ahead and launch everything up here and let's see

24
00:01:25,200 --> 00:01:27,700
going to load our handmade project.

25
00:01:27,700 --> 00:01:28,900
Oops, that's not good.

26
00:01:31,900 --> 00:01:32,600
so,

27
00:01:35,300 --> 00:01:37,200
In the handmade project.

28
00:01:37,200 --> 00:01:41,600
If I run what we currently have built, we've got this sort of

29
00:01:41,600 --> 00:01:46,800
situation happening here and and all that sort of such stuff and

30
00:01:46,800 --> 00:01:47,300
whatever.

31
00:01:48,500 --> 00:01:52,100
And so like we've kind of just got this this window here and we still

32
00:01:52,100 --> 00:01:55,300
have the ability to like resize the window and we kind of have like we

33
00:01:55,300 --> 00:01:58,600
don't really have any good drawing of like Borders or controls or

34
00:01:58,600 --> 00:02:02,700
anything at the moment, but what we don't have is any like profile,

35
00:02:02,700 --> 00:02:03,700
contents, right?

36
00:02:03,900 --> 00:02:07,200
and so one of the things I want to do is be able to get some profiling

37
00:02:07,200 --> 00:02:10,800
information here, and there's two kinds of profile information that I

38
00:02:10,800 --> 00:02:12,900
probably would like to have

39
00:02:14,200 --> 00:02:17,700
One is memory one is time.

40
00:02:18,000 --> 00:02:18,600
Spent.

41
00:02:19,200 --> 00:02:23,900
And so what I'd like to do here is get the profiling system back in

42
00:02:23,900 --> 00:02:27,700
some semblance of working order here where we can draw something into

43
00:02:27,700 --> 00:02:29,800
the profile and what I'd like to do.

44
00:02:29,800 --> 00:02:33,100
Because typically there's there's really two kinds of profile

45
00:02:33,100 --> 00:02:38,100
information that I want to see one is just sort of an a generic

46
00:02:39,500 --> 00:02:43,400
profile that just kind of gives me a rough idea of who is taking what

47
00:02:43,400 --> 00:02:43,800
time.

48
00:02:44,400 --> 00:02:49,300
And so you know, I'm thinking like I want something that just

49
00:02:49,300 --> 00:02:54,300
generally tells me the frames, take this long generally speaking to

50
00:02:54,300 --> 00:02:58,600
complete and so much of it is spent in the renderer so much of it

51
00:02:58,600 --> 00:02:59,600
spent in the simulation.

52
00:02:59,600 --> 00:02:59,700
So

53
00:03:00,000 --> 00:03:03,500
It's been to the input processing whatever so that I can ensure that

54
00:03:03,600 --> 00:03:05,500
each of those things is looking roughly.

55
00:03:05,500 --> 00:03:05,900
Correct.

56
00:03:05,900 --> 00:03:09,500
And I don't ever like cafta wonder about, you know, is there some

57
00:03:09,500 --> 00:03:12,700
weird Spike happening where all of a sudden the simulation takes three

58
00:03:12,700 --> 00:03:14,600
times longer than it should and we don't know why.

59
00:03:15,000 --> 00:03:17,500
So I want that right?

60
00:03:17,600 --> 00:03:20,500
And that's a very sort of high level.

61
00:03:20,500 --> 00:03:20,900
You know.

62
00:03:20,900 --> 00:03:23,700
I want to be able to sort of have one of those in here where it's just

63
00:03:23,700 --> 00:03:24,500
going to show me that.

64
00:03:24,500 --> 00:03:26,500
And I can have that piece of information available.

65
00:03:27,500 --> 00:03:28,500
So I want that.

66
00:03:28,500 --> 00:03:33,100
The other thing that I want is I want the ability to when we are

67
00:03:33,100 --> 00:03:37,300
actually optimizing a particular piece of code.

68
00:03:37,500 --> 00:03:41,000
So for example, if I'm, you know, if we find that there's something

69
00:03:41,000 --> 00:03:48,000
slow and I want to fix it, then I want to be able to have something,

70
00:03:48,000 --> 00:03:51,600
which shows me a detailed breakdown of what's Happening inside that

71
00:03:51,600 --> 00:03:52,100
code.

72
00:03:52,100 --> 00:03:52,700
Right?

73
00:03:52,900 --> 00:03:56,000
So we essentially have two types of profile information that we want

74
00:03:56,000 --> 00:03:57,000
the high level overview.

75
00:03:57,300 --> 00:03:58,000
Information.

76
00:03:58,700 --> 00:04:04,600
And then a like sort of more detailed profile, which will tell me the

77
00:04:04,600 --> 00:04:08,200
information for up an area that we happen to working on and generally

78
00:04:08,200 --> 00:04:08,700
speaking.

79
00:04:08,700 --> 00:04:12,300
I don't really need those two things typically at the same time,

80
00:04:12,300 --> 00:04:12,800
right?

81
00:04:12,900 --> 00:04:17,500
Meaning, I don't need the ability to just like arbitrarily navigate

82
00:04:17,500 --> 00:04:21,300
down, and check out some particular thing or any of that stuff.

83
00:04:21,300 --> 00:04:23,200
I don't need that sort of thing all the time.

84
00:04:23,200 --> 00:04:26,500
The most important thing is high level overview that we can just kind

85
00:04:26,500 --> 00:04:27,100
of leave up on the

86
00:04:27,200 --> 00:04:29,600
screen anytime we want.

87
00:04:29,600 --> 00:04:33,400
And then once in a while, when I want to optimize something, I just

88
00:04:33,400 --> 00:04:36,800
want to be able to insert something into our debug blocks that says,

89
00:04:36,800 --> 00:04:41,800
hey, you know, show me the profile for this piece of coat in detail

90
00:04:42,000 --> 00:04:45,200
and and it'll, you know, give me all the stuff that I want for that.

91
00:04:45,400 --> 00:04:46,700
So, that's more or less.

92
00:04:46,700 --> 00:04:51,500
What I, what I want here and so I think the probably the most logical

93
00:04:51,500 --> 00:04:54,600
thing to do would be, since we sort of started on it before would be

94
00:04:54,600 --> 00:04:57,100
to start with something that shows us, you know.

95
00:04:57,200 --> 00:05:00,700
The profile information for the high level.

96
00:05:00,700 --> 00:05:05,100
So so kind of like an overview based profiler and maybe that would be

97
00:05:05,100 --> 00:05:07,600
something kind of like the standard sort of profile or that you'd see

98
00:05:07,600 --> 00:05:08,900
like I prefer whatever.

99
00:05:08,900 --> 00:05:14,400
Like for example John showed the one that Sean Barrett wrote and John

100
00:05:14,400 --> 00:05:15,500
had poured it to Jay.

101
00:05:15,500 --> 00:05:19,200
I that's a one that I think a lot of people use and it's basically

102
00:05:19,200 --> 00:05:20,700
like a list of functions, you know?

103
00:05:20,700 --> 00:05:25,800
And it says like, okay, here's a list of functions and how long they

104
00:05:25,800 --> 00:05:26,800
take and how long, their

105
00:05:27,200 --> 00:05:30,800
Then take or whatever and probably how many times are called that's

106
00:05:30,800 --> 00:05:33,000
like a standard kind of listing based profiler.

107
00:05:33,400 --> 00:05:36,000
So, you know, something like that, that just kind of giving me a heads

108
00:05:36,000 --> 00:05:40,700
up view of, like, who's taking the time on the whole seems like a

109
00:05:40,700 --> 00:05:47,500
pretty reasonable place to start for the overview base profiler and

110
00:05:47,500 --> 00:05:53,300
then you know, the other thing is we sort of have, you know, I don't

111
00:05:53,300 --> 00:05:53,700
know.

112
00:05:53,700 --> 00:05:57,100
That profiler is only really works with single threading, which is

113
00:05:57,200 --> 00:05:58,300
Not so useful anymore.

114
00:05:58,700 --> 00:05:59,800
And so, you know,

115
00:06:00,700 --> 00:06:04,200
Possibly, we want something that does like what we were doing with the

116
00:06:04,200 --> 00:06:08,000
bars where we can sort of see when things were happening.

117
00:06:08,100 --> 00:06:12,800
So that we have a little bit better idea of like the overlap.

118
00:06:13,200 --> 00:06:16,700
And when when stuffs triggering that's on multiple threads, I don't

119
00:06:16,700 --> 00:06:16,800
know.

120
00:06:16,800 --> 00:06:18,900
So, that's generally where we're at.

121
00:06:19,600 --> 00:06:22,900
And that's, that's like, probably what we should work on today.

122
00:06:22,900 --> 00:06:25,500
I think the other thing we could work on is like right now.

123
00:06:25,500 --> 00:06:27,900
We see this stuff is sort of a little ad, hoc, right?

124
00:06:27,900 --> 00:06:29,800
Like we have the ability to tear things off here.

125
00:06:30,000 --> 00:06:32,500
But they're sort of janky and we just have these little Nubs that you

126
00:06:32,500 --> 00:06:36,700
move around or whatever and you can't necessarily read this very well.

127
00:06:37,300 --> 00:06:40,800
We don't have a way of like drawing you know, we don't draw like

128
00:06:40,800 --> 00:06:42,400
backing around it or anything.

129
00:06:42,600 --> 00:06:46,500
So for example, when we come in here, we happen to have a white

130
00:06:46,500 --> 00:06:48,500
backdrop here in this particular thing.

131
00:06:48,500 --> 00:06:50,600
Now that's not going to be common, will probably fill that in

132
00:06:50,600 --> 00:06:53,700
relatively soon, but it just underscores the fact that if things are

133
00:06:53,700 --> 00:06:57,700
bright, it becomes like harder to read this and it would be nice if we

134
00:06:57,700 --> 00:06:59,700
had some kind of a dimming

135
00:07:00,900 --> 00:07:05,200
You know, something that would sort of dim that area more while you

136
00:07:05,200 --> 00:07:07,900
know, while we were working with it, if that makes sense.

137
00:07:10,300 --> 00:07:11,700
So, that's really what I'm talking about.

138
00:07:11,700 --> 00:07:15,300
Just these sorts of things, some way of sort of, clinging, that sort

139
00:07:15,300 --> 00:07:15,900
of stuff up.

140
00:07:16,600 --> 00:07:20,000
That's really what we're looking to do.

141
00:07:20,200 --> 00:07:22,900
So let's take a look at the profile stuff that seems to be.

142
00:07:23,300 --> 00:07:27,400
You know, the most underdeveloped thing at the moment and we have to

143
00:07:27,400 --> 00:07:31,300
kind of go back and sort of figure out what we want to do there now in

144
00:07:31,300 --> 00:07:34,500
the debug system currently where we're doing our collate.

145
00:07:35,300 --> 00:07:37,600
We've got Seco late.

146
00:07:40,200 --> 00:07:41,200
Debug.

147
00:07:42,100 --> 00:07:47,400
So in our collate, debug records code, we can kind of see the residual

148
00:07:47,500 --> 00:07:48,600
of the profile stuff.

149
00:07:48,600 --> 00:07:49,500
We're doing here.

150
00:07:49,500 --> 00:07:51,200
Are the frame markers, right?

151
00:07:51,200 --> 00:07:54,300
And the frame markers, we know what the wall clock elapsed is?

152
00:07:54,300 --> 00:07:56,400
That gets recorded with those frame markers.

153
00:07:56,400 --> 00:07:58,200
So we have the walk locking information.

154
00:07:58,400 --> 00:08:01,900
We also have in here are begin block, end block stuff and you can kind

155
00:08:01,900 --> 00:08:05,000
of see when we do our begin block and black stuff.

156
00:08:05,000 --> 00:08:07,800
We figure out what these matches are and

157
00:08:08,000 --> 00:08:10,200
We did this thing where we would build up regions.

158
00:08:10,400 --> 00:08:13,300
I don't really know if that's something we want to do quite yet.

159
00:08:13,300 --> 00:08:16,700
And in fact, I think maybe that's something I will sort of defer to

160
00:08:16,700 --> 00:08:17,200
later.

161
00:08:17,500 --> 00:08:21,500
I'm just going to go ahead and get rid of this for now.

162
00:08:24,200 --> 00:08:27,000
And well actually you know what, let me just look at what this is

163
00:08:27,000 --> 00:08:28,400
doing in detail first.

164
00:08:28,600 --> 00:08:33,200
So if there's an open code block and we have an end block, then we're

165
00:08:33,200 --> 00:08:35,600
going to make sure that they match.

166
00:08:35,900 --> 00:08:42,000
Now, it looks like if spans go back before where we have where we've

167
00:08:42,000 --> 00:08:44,000
got, we will ignore it.

168
00:08:44,000 --> 00:08:44,800
And that's fine.

169
00:08:44,800 --> 00:08:47,600
That's just if our debug information is passed where the thing

170
00:08:47,600 --> 00:08:52,200
actually started, but assuming that that's actually the case and we've

171
00:08:52,200 --> 00:08:53,800
got a starting frame.

172
00:08:53,900 --> 00:08:56,200
Name index, that matches, our frame index and you can, you'll notice

173
00:08:56,200 --> 00:08:56,400
here.

174
00:08:56,400 --> 00:08:59,600
We don't we don't sort of measure though.

175
00:09:00,000 --> 00:09:03,300
Or we don't process those that have started in one frame and ended

176
00:09:03,300 --> 00:09:06,200
another which isn't great so you probably want to fix that as well.

177
00:09:07,200 --> 00:09:13,300
Then what we do is double check I guess here, what the name is and we

178
00:09:13,300 --> 00:09:16,900
only record a certain one that's, you know, being talked about in this

179
00:09:16,900 --> 00:09:17,800
particular case.

180
00:09:18,700 --> 00:09:19,300
So

181
00:09:21,500 --> 00:09:23,600
I don't really know what to say about this.

182
00:09:29,200 --> 00:09:31,000
I mean, that's certainly fine.

183
00:09:40,200 --> 00:09:44,200
There's a couple different ways we might want to go when we collate,

184
00:09:44,200 --> 00:09:46,400
the debug records at the end of every frame.

185
00:09:46,400 --> 00:09:49,600
We're running through these events and we're sort of pre.

186
00:09:49,600 --> 00:09:52,500
We're sort of baking them down into something that we want to work

187
00:09:52,500 --> 00:09:52,700
with.

188
00:09:52,700 --> 00:09:56,800
And the thing that's interesting about this is, we've got all of these

189
00:09:56,800 --> 00:09:57,700
events here.

190
00:09:57,700 --> 00:10:02,300
I don't actually know to what extent we want to bake them down into

191
00:10:02,300 --> 00:10:02,900
what extent.

192
00:10:02,900 --> 00:10:04,900
We want to leave them sort of more open.

193
00:10:04,900 --> 00:10:09,500
Now, we certainly could if we wanted to instead,

194
00:10:10,200 --> 00:10:12,500
You can see here, we've got like store event.

195
00:10:13,700 --> 00:10:14,300
Right?

196
00:10:14,800 --> 00:10:19,100
And so you can kind of imagine us taking a slightly different approach

197
00:10:19,100 --> 00:10:22,300
here when we find these data blocks for.

198
00:10:22,300 --> 00:10:23,300
I mean these code blocks.

199
00:10:23,300 --> 00:10:25,800
We could treat them more like data blocks, where we're just saying,

200
00:10:25,800 --> 00:10:31,400
oh, okay, we have these two blocks, let's go ahead and consider that

201
00:10:31,400 --> 00:10:32,200
span of time.

202
00:10:32,200 --> 00:10:35,300
Just like an event, basically, that we're going to store, you know

203
00:10:35,300 --> 00:10:35,900
what I mean?

204
00:10:37,300 --> 00:10:39,700
That seems like a pretty reasonable thing to do actually.

205
00:10:40,200 --> 00:10:44,100
And so, I don't actually, I don't know, maybe we're sort of

206
00:10:44,100 --> 00:10:47,500
approaching this the wrong way by when we do this collation, maybe

207
00:10:47,500 --> 00:10:49,500
that's really not what we want to do at all.

208
00:10:49,500 --> 00:10:50,200
What we're doing here.

209
00:10:50,400 --> 00:10:53,200
Maybe we want to store these more, like the data blocks may be.

210
00:10:53,200 --> 00:10:56,100
In fact, we don't really want to treat these all that differently at

211
00:10:56,100 --> 00:10:56,500
all.

212
00:10:56,800 --> 00:11:00,400
Maybe the begin and end block can be unified in a way that would make

213
00:11:00,400 --> 00:11:00,500
it.

214
00:11:00,500 --> 00:11:04,400
So that both, you know, both of them go through the same sort of

215
00:11:04,400 --> 00:11:07,000
system, you know, or at least

216
00:11:07,100 --> 00:11:08,100
A similar system.

217
00:11:08,600 --> 00:11:11,600
And it seems like that could be possible, right?

218
00:11:11,700 --> 00:11:14,500
Because both of them could work sort of the same way they could have a

219
00:11:14,500 --> 00:11:19,200
debug element that was, you know, for whatever that code entry point

220
00:11:19,200 --> 00:11:23,500
happens to be and, you know, it could work from there.

221
00:11:25,400 --> 00:11:26,600
It certainly tempting.

222
00:11:27,100 --> 00:11:30,500
And then these sort of Records, you know, each one of these would be

223
00:11:30,500 --> 00:11:32,200
its own habits own element.

224
00:11:32,200 --> 00:11:35,800
So every time we come from that we see begin block, we're going to

225
00:11:35,800 --> 00:11:37,000
find an element for it.

226
00:11:37,500 --> 00:11:40,000
And so we could just store the event to that element.

227
00:11:46,800 --> 00:11:47,100
I don't know.

228
00:11:47,100 --> 00:11:50,900
That seems really enticing to me, I kind of feel like that's the route

229
00:11:50,900 --> 00:11:51,600
we should go.

230
00:11:54,700 --> 00:11:58,400
It will certainly eat through our debug store faster, but who cares.

231
00:11:58,500 --> 00:11:59,800
It's debug, we can allocate.

232
00:12:00,000 --> 00:12:03,900
Thing GB for it and just be like, hey, guess what we can store as much

233
00:12:03,900 --> 00:12:06,300
as we want, because this is a death machine, and we can just stack it

234
00:12:06,300 --> 00:12:07,100
full of memory.

235
00:12:07,200 --> 00:12:10,500
If we want to track thousands of frames worth of debug data, for some

236
00:12:10,500 --> 00:12:12,800
reason, and if we don't doesn't matter, we'd only just have a few

237
00:12:12,800 --> 00:12:13,600
frames of look back with.

238
00:12:13,600 --> 00:12:14,300
That's okay.

239
00:12:15,400 --> 00:12:21,200
That to me sounds like a good idea and I guess we'll find out why it's

240
00:12:21,200 --> 00:12:22,900
a stupid idea in a minute when I try it.

241
00:12:22,900 --> 00:12:27,400
But for now we're just going to go ahead and do it.

242
00:12:28,900 --> 00:12:30,300
So here's store event.

243
00:12:31,100 --> 00:12:33,400
And I feel like Loops, that's

244
00:12:34,600 --> 00:12:35,500
That's not right.

245
00:12:35,500 --> 00:12:36,200
What's going on?

246
00:12:38,700 --> 00:12:42,100
Why am I not able to switch into edit mode?

247
00:12:43,600 --> 00:12:45,200
What, what's happening?

248
00:12:47,700 --> 00:12:51,500
Something real strange is happening, my shift key was that was weird.

249
00:12:51,700 --> 00:12:54,400
My shift key was like locked down, huh?

250
00:12:55,600 --> 00:12:56,900
I've never had that happen before.

251
00:12:57,700 --> 00:12:59,900
I've never had them on this machine, or with for coder.

252
00:13:00,600 --> 00:13:02,200
I wonder if that was a keyboard bug.

253
00:13:03,700 --> 00:13:06,100
This is the old an old Das Keyboard 3.

254
00:13:06,100 --> 00:13:07,900
I've switched to the razor's everywhere else.

255
00:13:07,900 --> 00:13:11,700
I just haven't bought one for the handmade hero machine yet so I don't

256
00:13:11,700 --> 00:13:11,900
know.

257
00:13:12,500 --> 00:13:13,400
We did have a problem.

258
00:13:13,400 --> 00:13:16,300
The previous sadusky board for totally had a sticky key problem.

259
00:13:16,300 --> 00:13:17,000
So who knows?

260
00:13:18,200 --> 00:13:18,800
Who knows.

261
00:13:18,800 --> 00:13:21,200
Anyway it doesn't really matter point being I'm going to go ahead and

262
00:13:21,200 --> 00:13:24,300
edit this so I want to keep store event and I'm just going to say like

263
00:13:24,300 --> 00:13:30,600
okay whenever we open one of these begin block, end block situations,

264
00:13:30,800 --> 00:13:32,900
I'm just going to store whatever the event was.

265
00:13:33,600 --> 00:13:34,600
To that element, right?

266
00:13:34,600 --> 00:13:36,800
Because we made the element and we have the event, and I'm going to

267
00:13:36,800 --> 00:13:41,600
store it in this case, when we do the matching events situation here

268
00:13:42,100 --> 00:13:45,800
again, I don't actually know why we're double checking these.

269
00:13:45,800 --> 00:13:50,000
I guess it's just because we want to ignore the ones that don't have

270
00:13:50,000 --> 00:13:52,100
an open block, but assuming it has an open block.

271
00:13:52,100 --> 00:13:56,100
Now, I don't care what the frame index is to be honest with you, at

272
00:13:56,100 --> 00:13:59,000
this, at that point I don't care what the frame index is.

273
00:13:59,000 --> 00:14:01,800
I'm going to go ahead and do a store event and I'm going to store

274
00:14:01,800 --> 00:14:03,400
event to the element.

275
00:14:03,800 --> 00:14:07,600
That was in that matching block, so whatever the one was that we

276
00:14:07,600 --> 00:14:08,300
opened.

277
00:14:08,700 --> 00:14:10,900
Originally I'm going to store it to that element.

278
00:14:11,000 --> 00:14:15,800
So now we basically have each element is going to have a like, you

279
00:14:15,800 --> 00:14:18,800
know, open-close open-close, kind of a thing.

280
00:14:18,800 --> 00:14:19,300
Right.

281
00:14:19,900 --> 00:14:25,500
Now when I store these, when I store these events, there's sort of

282
00:14:25,500 --> 00:14:27,600
this, a one additional piece of information.

283
00:14:27,600 --> 00:14:33,400
I kind of want and I'm not 100% sure how

284
00:14:33,800 --> 00:14:39,500
I want to store it but what I would like to store and this by the way,

285
00:14:39,500 --> 00:14:40,600
now can all go away.

286
00:14:40,600 --> 00:14:43,200
This is this is goodbye time like goodbye.

287
00:14:47,400 --> 00:14:49,900
so, this is

288
00:14:54,700 --> 00:14:59,900
This event that happened is telling us when in a particular point.

289
00:15:00,300 --> 00:15:03,600
In time, like when dysfunction got called right?

290
00:15:03,600 --> 00:15:05,500
That's or it doesn't have to necessarily a function, right?

291
00:15:05,500 --> 00:15:08,300
We can time a block that's not a function, but when we entered this

292
00:15:08,300 --> 00:15:11,600
block, so here, we're storing an event for when we entered the block

293
00:15:11,800 --> 00:15:12,600
of code.

294
00:15:12,600 --> 00:15:15,400
And here we're storing the event for when we left the block of code.

295
00:15:15,500 --> 00:15:18,700
So we will have like a little linked list in there of just entry/exit.

296
00:15:18,700 --> 00:15:19,400
Entry/exit.

297
00:15:19,400 --> 00:15:21,500
Entry/exit, entry exit, right?

298
00:15:21,700 --> 00:15:27,900
That's what we'll have now, that entry/exit, entry/exit pattern that

299
00:15:27,900 --> 00:15:29,800
will allow us to know every time this function was

300
00:15:30,000 --> 00:15:31,700
called and how, right?

301
00:15:32,200 --> 00:15:35,800
But we wouldn't necessarily know is who called it, right?

302
00:15:35,800 --> 00:15:37,200
We don't necessarily know who called it.

303
00:15:40,400 --> 00:15:42,700
Now, we can reverse engineer who called it.

304
00:15:44,000 --> 00:15:48,700
By sorting these things in temporal order or something like that but

305
00:15:48,700 --> 00:15:54,200
we don't necessarily want to have to do that to sum up like who's what

306
00:15:54,200 --> 00:15:56,000
children were who's and that sort of thing.

307
00:15:56,700 --> 00:16:01,700
So what I suspect we probably want to do is we probably want to do

308
00:16:01,700 --> 00:16:03,700
some sort of a like

309
00:16:04,800 --> 00:16:12,800
You know, when we store an event of this type, we record.

310
00:16:12,800 --> 00:16:14,600
Who the parent was?

311
00:16:15,300 --> 00:16:16,000
Does that make sense?

312
00:16:16,000 --> 00:16:20,400
Like we record which debug element was the parent.

313
00:16:20,400 --> 00:16:23,500
So we know which function I'm basically talking about call

314
00:16:23,500 --> 00:16:24,800
attribution, right?

315
00:16:26,900 --> 00:16:28,900
You go ahead and make this a little more explicit here.

316
00:16:41,500 --> 00:16:44,400
So, what we will have is we'll have a debug element.

317
00:16:45,900 --> 00:16:46,400
Right.

318
00:16:46,500 --> 00:16:49,800
And the debug element will have a like thing that looks like this.

319
00:16:57,300 --> 00:17:02,600
So such that if we wanted to we can basically draw a profile that just

320
00:17:02,600 --> 00:17:05,500
tells us every time it was called because we know each of these and we

321
00:17:05,500 --> 00:17:06,800
now know how long they are as well.

322
00:17:06,800 --> 00:17:08,400
And we know what frames they were on.

323
00:17:08,400 --> 00:17:13,599
So we have all of that information now in that like linked list, but

324
00:17:13,599 --> 00:17:18,400
what we don't know is who actually called it because for all we know,

325
00:17:18,400 --> 00:17:21,300
you know, a particular function that can get called from different

326
00:17:21,300 --> 00:17:21,500
places.

327
00:17:21,500 --> 00:17:25,099
We don't know, which of those places was actually the call site that

328
00:17:25,099 --> 00:17:27,099
caused say this one like maybe.

329
00:17:27,300 --> 00:17:28,400
This is a call.

330
00:17:28,400 --> 00:17:33,000
If this is a debug element for the function Foo, you know, maybe bar

331
00:17:33,000 --> 00:17:38,700
called Foo and and cause this one, but maybe Boz called, you know, Foo

332
00:17:38,700 --> 00:17:39,700
to cause this one.

333
00:17:40,000 --> 00:17:45,000
And so if we later wanted to look at bar and baz, in terms of like,

334
00:17:45,300 --> 00:17:51,500
oh, how much time is spent in fou on behalf of bar or on behalf of as

335
00:17:51,700 --> 00:17:52,600
for whatever reason?

336
00:17:52,600 --> 00:17:53,800
If we want that information,

337
00:17:54,800 --> 00:17:59,600
It might be nice to say like oh okay well we know that now, right?

338
00:17:59,600 --> 00:17:59,800
Look, we

339
00:18:00,000 --> 00:18:04,000
I actually have some information in here that says here is the debug

340
00:18:04,000 --> 00:18:08,500
element bar or here's the debug element bass and that's who it was.

341
00:18:08,600 --> 00:18:12,500
So like an additional pointer that we could use depending on what our

342
00:18:12,500 --> 00:18:16,000
circumstances was in the event storage, might be nice.

343
00:18:19,100 --> 00:18:20,400
At least, that would be my guess.

344
00:18:20,600 --> 00:18:27,400
So if we look at handmade debug dot CPP here, oh actually that H.

345
00:18:27,700 --> 00:18:29,800
And we look at that stored event,

346
00:18:31,100 --> 00:18:35,400
So in here, you know we've got just the frame index and what the event

347
00:18:35,400 --> 00:18:38,700
was if we wanted to store an additional piece of information here,

348
00:18:38,700 --> 00:18:40,000
that might be nice.

349
00:18:40,600 --> 00:18:43,100
We don't have to do that quite yet, but I'm going to just make a note

350
00:18:43,100 --> 00:18:43,500
of it.

351
00:18:49,700 --> 00:18:52,700
Because we have that information here but we won't have that

352
00:18:52,700 --> 00:18:54,800
information at any other time, right?

353
00:18:54,800 --> 00:18:58,100
Because the matching block could know who is parent was because in the

354
00:18:58,100 --> 00:19:01,200
middle of this collation pass, we do know the answer to that question,

355
00:19:01,300 --> 00:19:03,800
but we won't know the answer that question later when we're doing

356
00:19:03,800 --> 00:19:06,000
drawing because we don't have any, we don't have an inference, the

357
00:19:06,000 --> 00:19:07,700
information has gone, right?

358
00:19:07,700 --> 00:19:11,100
Because that information is only coming to us complicit in Walking,

359
00:19:11,100 --> 00:19:15,000
the array of events because we saw the opens happening order on this

360
00:19:15,000 --> 00:19:17,200
thread, and then we saw them close in order.

361
00:19:17,200 --> 00:19:19,100
So we know who called who

362
00:19:19,500 --> 00:19:22,000
But once we leave here, we don't know that anymore because this array

363
00:19:22,000 --> 00:19:23,800
goes away thrown away, right?

364
00:19:25,000 --> 00:19:26,100
Never to be seen again.

365
00:19:28,700 --> 00:19:30,000
So that's, you know,

366
00:19:31,800 --> 00:19:36,800
That's how that works and you know again it's just it's sort of again

367
00:19:36,800 --> 00:19:39,600
an open question of just like you know, could we possibly do this a

368
00:19:39,600 --> 00:19:43,900
little more efficiently by just doing a giant stream out where we just

369
00:19:43,900 --> 00:19:46,100
write the events forever and so then you just in there and you could

370
00:19:46,100 --> 00:19:50,600
seek backwards to look who called you maybe but I don't know.

371
00:19:50,600 --> 00:19:54,800
It seems like you probably want to collate periodically and produce

372
00:19:54,800 --> 00:19:57,600
these intermediate structures because otherwise it just takes too much

373
00:19:57,600 --> 00:19:59,900
processing power if that makes sense.

374
00:19:59,900 --> 00:20:01,400
So I think that's why we ended up sort.

375
00:20:01,600 --> 00:20:05,000
where we are with you only want to collate the new ones for this Frame

376
00:20:05,000 --> 00:20:09,500
and you can't really afford looking through these giant array buffers

377
00:20:09,500 --> 00:20:12,700
all the time to figure out pieces of information you're trying to draw

378
00:20:14,100 --> 00:20:17,000
So I think that's roughly it.

379
00:20:20,800 --> 00:20:22,500
I think that's all we're looking to do here.

380
00:20:24,400 --> 00:20:24,800
so,

381
00:20:26,500 --> 00:20:30,800
All right, so I'm going to go ahead and get that compiling.

382
00:20:31,200 --> 00:20:31,800
There we go.

383
00:20:32,500 --> 00:20:39,000
And now I'm going to go up to the profile situation and I want to

384
00:20:39,100 --> 00:20:41,500
start looking at how I'm going to

385
00:20:43,100 --> 00:20:48,400
I'm going to make this work so after collation and I guess once we're

386
00:20:48,400 --> 00:20:54,100
sort of once were drawn, these guys, then if I do debug draw main

387
00:20:54,100 --> 00:20:56,600
menu, oops, that's not actually it.

388
00:20:56,900 --> 00:20:58,200
That's the call to it.

389
00:21:01,300 --> 00:21:01,800
Here we go.

390
00:21:02,500 --> 00:21:04,100
Why do debug drumming menu?

391
00:21:04,100 --> 00:21:05,600
And here we are doing that.

392
00:21:05,700 --> 00:21:07,300
Debug draw of the main menu.

393
00:21:08,000 --> 00:21:14,500
And we come in here and we're doing our and we're going to draw the

394
00:21:14,500 --> 00:21:18,100
element when the element turns out to be a counter thread list or

395
00:21:18,100 --> 00:21:20,700
other sorts of profile stuff.

396
00:21:21,300 --> 00:21:25,000
This is where we need to start making these things work.

397
00:21:25,600 --> 00:21:28,100
So let's think about the different types of things.

398
00:21:28,100 --> 00:21:29,800
We want to view.

399
00:21:30,300 --> 00:21:32,000
The counter thread list.

400
00:21:32,000 --> 00:21:36,500
I feel like is probably a good thing.

401
00:21:36,600 --> 00:21:39,100
Let's take a look handmade.

402
00:21:40,100 --> 00:21:41,400
Debug interface.

403
00:21:41,700 --> 00:21:43,100
Let's take a look at what we've got here.

404
00:21:43,700 --> 00:21:45,800
We've got counter threadless, kind of functionless.

405
00:21:46,100 --> 00:21:47,600
We don't really know what these are are yet.

406
00:21:47,600 --> 00:21:50,700
I'm gonna, I'm gonna go ahead and comment this out for a second and

407
00:21:50,700 --> 00:21:52,100
just see where we're using these.

408
00:21:53,000 --> 00:21:55,300
So, we've got debug profiled, got counter thread list.

409
00:21:55,300 --> 00:21:57,700
Here, for just the, when we're printing things out,

410
00:21:59,200 --> 00:22:04,300
That we don't want to print out kind of function list counter thread

411
00:22:04,300 --> 00:22:06,900
list is there, okay?

412
00:22:09,500 --> 00:22:14,400
All right, I don't really know why element and event are even

413
00:22:14,400 --> 00:22:16,500
different anymore to be completely honest with you.

414
00:22:16,500 --> 00:22:19,100
Do we ever actually call debug draw?

415
00:22:19,100 --> 00:22:21,700
If element versus debug draw event,

416
00:22:26,200 --> 00:22:28,100
So these are the same function.

417
00:22:31,300 --> 00:22:31,900
Right.

418
00:22:32,100 --> 00:22:39,000
Like we don't this is only from before when there was a question as to

419
00:22:39,800 --> 00:22:42,300
how we were going to segment this data up.

420
00:22:42,400 --> 00:22:46,200
So at this point we really can just make this a single function,

421
00:22:46,500 --> 00:22:46,700
right?

422
00:22:46,700 --> 00:22:50,600
We can take this and we can stick this in here.

423
00:22:50,600 --> 00:22:52,900
Temporarily just so we don't lose the code if we wanted.

424
00:22:52,900 --> 00:22:56,000
Although there's really nothing there it's the same as this code so

425
00:22:56,000 --> 00:23:01,000
it's irrelevant anyway but really we don't need this.

426
00:23:01,200 --> 00:23:04,800
Any more we can just say that we've got one function, the function is

427
00:23:04,800 --> 00:23:09,900
debug draw element and the stored event that we're actually passing

428
00:23:09,900 --> 00:23:10,400
here.

429
00:23:12,200 --> 00:23:13,700
It's something that we can just get.

430
00:23:14,500 --> 00:23:17,100
So we'll go ahead and say that that's that.

431
00:23:17,100 --> 00:23:21,000
And that simplifies this down, so we don't have multiples of these.

432
00:23:21,900 --> 00:23:26,700
So and I guess we've got in element here somewhere, right?

433
00:23:26,700 --> 00:23:27,000
Yeah.

434
00:23:27,000 --> 00:23:28,900
So that's going to be

435
00:23:32,400 --> 00:23:34,700
I guess I'll just change that to be element.

436
00:23:36,500 --> 00:23:40,000
So if I call debug draw element like that, then really all we need to

437
00:23:40,000 --> 00:23:44,800
do is take a look at this, this most recent event thing.

438
00:23:44,800 --> 00:23:46,500
That's the one that we were drawing.

439
00:23:47,200 --> 00:23:50,400
So let's go ahead and just pluck this stuff out here.

440
00:23:50,900 --> 00:23:54,000
Get a great view for we, don't pass the view down, so we really don't

441
00:23:54,000 --> 00:23:54,900
need that either.

442
00:23:55,300 --> 00:23:57,600
So we're really just talking about this, right?

443
00:23:57,600 --> 00:23:59,700
That's the that's the sum total of what we

444
00:24:00,000 --> 00:24:01,800
Do therefore, the stored event.

445
00:24:02,500 --> 00:24:03,300
So there we go.

446
00:24:07,900 --> 00:24:08,700
so,

447
00:24:12,200 --> 00:24:14,500
what we need to think about now is

448
00:24:16,800 --> 00:24:19,500
what we actually want these to be.

449
00:24:20,400 --> 00:24:23,300
So what are the different kinds of profiles that we're going to do?

450
00:24:23,300 --> 00:24:26,600
So, the first one that I want to do is, I guess just that overview.

451
00:24:27,100 --> 00:24:32,800
So, this the overview I think, should probably just be kind of like,

452
00:24:32,900 --> 00:24:35,800
the basic kind that we were doing before I feel like.

453
00:24:35,900 --> 00:24:38,900
Because again, since it has to be threaded, I think it should probably

454
00:24:38,900 --> 00:24:42,900
look like it looked before and so the way that we might want to do

455
00:24:42,900 --> 00:24:45,900
that, I guess is trying to think of how we would do that.

456
00:24:46,000 --> 00:24:46,300
So if

457
00:24:46,500 --> 00:24:47,700
Here's the profile view.

458
00:24:47,900 --> 00:24:51,200
What we want to show is we need lanes for our threads.

459
00:24:51,200 --> 00:24:54,000
So maybe that like this is how we're doing that, right?

460
00:24:54,000 --> 00:24:56,200
So we have like threads going this way.

461
00:25:01,600 --> 00:25:04,100
And then we have like clock going this way.

462
00:25:07,300 --> 00:25:08,000
You know, I'm saying?

463
00:25:08,500 --> 00:25:13,000
And then in here, it's like function name, it's here.

464
00:25:14,800 --> 00:25:15,600
Right.

465
00:25:16,800 --> 00:25:18,200
I think that's what we wanted to do.

466
00:25:18,200 --> 00:25:19,300
That's what we were doing before.

467
00:25:19,300 --> 00:25:21,800
That seems like the smartest thing to do.

468
00:25:23,000 --> 00:25:28,500
And so what we would do there is we just use that open and close block

469
00:25:28,500 --> 00:25:29,800
data to draw these in.

470
00:25:30,100 --> 00:25:33,600
Now, like I said, it's a little bit tricky, because, what we don't

471
00:25:33,600 --> 00:25:36,400
have is a necessarily A hierarchical.

472
00:25:38,400 --> 00:25:42,400
We don't really have necessarily a hierarchical layout of these yet,

473
00:25:42,400 --> 00:25:44,400
which is why I was thinking, it might be nice.

474
00:25:44,800 --> 00:25:49,800
To sort of have that, that can build that kind of flow graph up.

475
00:25:49,900 --> 00:25:53,500
And so, I guess as we sort of implement this, that'll give me a good

476
00:25:54,300 --> 00:25:55,700
feeling of how we want to do this.

477
00:25:56,000 --> 00:25:58,500
So, what I'm going to say here, is I'm going to call this.

478
00:26:00,400 --> 00:26:05,800
I'm going to say that I want this to be a debug type like a, we call

479
00:26:05,800 --> 00:26:07,100
this a thread.

480
00:26:07,900 --> 00:26:10,800
Block graph.

481
00:26:12,200 --> 00:26:12,800
I guess.

482
00:26:14,000 --> 00:26:14,700
Chart.

483
00:26:16,000 --> 00:26:17,300
How about a thread?

484
00:26:20,100 --> 00:26:22,300
Interval graph.

485
00:26:23,000 --> 00:26:24,800
Maybe.

486
00:26:24,800 --> 00:26:25,400
Yeah.

487
00:26:25,700 --> 00:26:26,800
It's red interval graph.

488
00:26:27,200 --> 00:26:28,300
I feel like a thread interval graph.

489
00:26:28,300 --> 00:26:29,300
Sounds good to me.

490
00:26:32,000 --> 00:26:34,900
And so, we'll go ahead and make that happen in here.

491
00:26:34,900 --> 00:26:37,000
We've got this debug profile thing.

492
00:26:37,000 --> 00:26:40,400
That's the way we were saying what we want to do there.

493
00:26:40,600 --> 00:26:43,100
So what I want to do here is say, like, okay.

494
00:26:45,700 --> 00:26:50,700
I just want, I don't really want anything specific to happen here.

495
00:26:51,000 --> 00:26:55,000
So I'm going to actually make this very explicit and say that this is

496
00:26:55,400 --> 00:26:58,100
debug thread, interval graph.

497
00:26:58,900 --> 00:26:59,800
And what we would

498
00:27:00,000 --> 00:27:04,900
Last year as a function name is, if we pass, let's say, you know,

499
00:27:04,900 --> 00:27:05,600
nothing.

500
00:27:05,900 --> 00:27:09,000
So we pass an empty string, then maybe it just means show us the whole

501
00:27:09,000 --> 00:27:13,800
thing or if we pass a specific function, it would just give us show us

502
00:27:13,800 --> 00:27:15,900
that function down, right?

503
00:27:15,900 --> 00:27:17,500
That seems like pretty useful to me.

504
00:27:18,000 --> 00:27:23,400
So, here we go in debug type red interval graph.

505
00:27:23,400 --> 00:27:27,200
Passing that through, we get the debug name of this thing and then

506
00:27:27,200 --> 00:27:28,200
that's where we're at.

507
00:27:28,500 --> 00:27:29,800
So that will put it in.

508
00:27:30,000 --> 00:27:31,400
There for us to use.

509
00:27:31,600 --> 00:27:34,900
And in this case we're just looking at game update and renders of the

510
00:27:34,900 --> 00:27:39,100
platform code is not included and maybe that's fine for now gives us

511
00:27:39,100 --> 00:27:40,200
something to debug gets.

512
00:27:40,200 --> 00:27:40,900
I'm not entirely sure.

513
00:27:40,900 --> 00:27:45,700
That's what I would do in the long run but you know for now that's

514
00:27:45,700 --> 00:27:46,000
fine.

515
00:27:46,700 --> 00:27:47,100
I messed.

516
00:27:47,100 --> 00:27:49,500
I'm not sure that's what else actually want up as I guess what I'm

517
00:27:49,500 --> 00:27:49,900
saying?

518
00:27:51,500 --> 00:27:57,500
So I suppose in this case we would never get to hear anyway on these.

519
00:27:59,000 --> 00:27:59,900
So I

520
00:28:00,000 --> 00:28:03,100
Would probably be a good thing to print, actually, probably, so would

521
00:28:03,100 --> 00:28:05,100
open data block to be completely honest with you.

522
00:28:10,500 --> 00:28:14,400
So let's go down here, counter function list, this is not really code.

523
00:28:14,400 --> 00:28:18,900
Like I said, this code is not really proper so we'll we don't really

524
00:28:18,900 --> 00:28:22,600
care about saving any of that and there's our interval graph.

525
00:28:22,900 --> 00:28:25,200
And so now we got rid of a function there.

526
00:28:25,200 --> 00:28:27,500
So we don't we got rid of a redundant function so that's good.

527
00:28:27,500 --> 00:28:34,700
And now we should be oh, so I guess we do print out like en Bloc

528
00:28:36,100 --> 00:28:37,000
At the moment.

529
00:28:40,500 --> 00:28:45,700
Hmm, why are we printing that out?

530
00:28:51,500 --> 00:28:52,400
That's interesting.

531
00:28:59,600 --> 00:29:01,100
That is very interesting.

532
00:29:03,600 --> 00:29:05,800
I guess that's because we're calling store event.

533
00:29:07,500 --> 00:29:08,400
That's my assumption.

534
00:29:13,500 --> 00:29:14,900
Also, why is that Twitchy?

535
00:29:18,600 --> 00:29:19,700
Did you see that?

536
00:29:20,700 --> 00:29:22,200
That's very peculiar.

537
00:29:28,400 --> 00:29:30,100
I don't really want to know what's happening there.

538
00:29:49,300 --> 00:29:51,100
Whatever happened when I'm paused.

539
00:29:54,000 --> 00:29:55,800
because right now, the debug systems, updating

540
00:29:57,700 --> 00:29:58,000
Hmm.

541
00:29:59,300 --> 00:29:59,800
So that's really

542
00:30:00,000 --> 00:30:03,900
Your I don't honestly know how that can even happen, that is a real

543
00:30:03,900 --> 00:30:04,500
Puzzler.

544
00:30:07,300 --> 00:30:08,100
So,

545
00:30:10,500 --> 00:30:13,700
That that warrants further investigation.

546
00:30:13,900 --> 00:30:19,000
However, what I will say now, is since we're almost down since we only

547
00:30:19,000 --> 00:30:23,600
have like maybe 30 seconds till we run out of Arena space, I'm going

548
00:30:23,600 --> 00:30:25,900
to let it run out of Arena space as well because I want to see what

549
00:30:25,900 --> 00:30:26,400
happens.

550
00:30:32,100 --> 00:30:34,600
Right, five mags to go.

551
00:30:36,900 --> 00:30:37,900
For Max to go.

552
00:30:41,900 --> 00:30:43,000
Almost there.

553
00:30:47,300 --> 00:30:49,000
Almost there.

554
00:30:50,500 --> 00:30:52,800
Wait for it, bam.

555
00:30:59,000 --> 00:31:00,300
That is so peculiar.

556
00:31:05,400 --> 00:31:06,500
Let's make sure everything works.

557
00:31:06,500 --> 00:31:08,300
Besides these weird people here.

558
00:31:17,800 --> 00:31:18,600
Interesting.

559
00:31:19,400 --> 00:31:20,900
There isn't Handler perception.

560
00:31:20,900 --> 00:31:22,500
The programme said the continue right.

561
00:31:22,500 --> 00:31:23,700
X-Files really location.

562
00:31:23,700 --> 00:31:28,800
So there's a null, so the oldest so it's just an assertion.

563
00:31:29,100 --> 00:31:30,300
The oldest frame.

564
00:31:31,400 --> 00:31:32,800
Somehow got set to 0.

565
00:31:38,500 --> 00:31:42,700
So there's something wrong with our oldest frame handling, not sure

566
00:31:42,700 --> 00:31:46,500
exactly what it is but we have a problem with it.

567
00:31:47,200 --> 00:31:52,400
So when we call store event and we come through here and we free these

568
00:31:52,400 --> 00:31:54,300
frames, right?

569
00:32:01,700 --> 00:32:03,500
We must be doing something wrong.

570
00:32:03,900 --> 00:32:05,000
Let's take a look at free.

571
00:32:05,000 --> 00:32:05,800
Oldest frame.

572
00:32:09,300 --> 00:32:11,400
You know what would you be a lamb and jump me there?

573
00:32:16,900 --> 00:32:18,000
Why can't I ignore this?

574
00:32:18,000 --> 00:32:18,800
I don't.

575
00:32:20,100 --> 00:32:22,800
I don't care about that set next statement, there we go.

576
00:32:25,100 --> 00:32:28,200
So, all this Frame goes to the next frame.

577
00:32:33,700 --> 00:32:36,100
Which presumably should always there.

578
00:32:36,100 --> 00:32:38,400
Should always be room for right?

579
00:32:45,800 --> 00:32:46,300
Hmm.

580
00:32:50,800 --> 00:32:51,900
Yeah, I'm just not sure what's going on here.

581
00:32:52,200 --> 00:32:58,500
So we grabbed the oldest frame, we say whatever the oldest frame was,

582
00:32:58,500 --> 00:32:59,800
it's going to be the next frame.

583
00:33:00,000 --> 00:33:01,900
After it, which makes sense.

584
00:33:02,500 --> 00:33:05,200
And if we're out of memory, which is when this happens, that means

585
00:33:05,200 --> 00:33:07,200
there should always be frames to free.

586
00:33:08,300 --> 00:33:14,100
We check out the most recent frame and we see if it is also equal to

587
00:33:14,100 --> 00:33:14,600
us.

588
00:33:15,100 --> 00:33:20,800
And in that case, we would, we would set the most recent frame 20 as

589
00:33:20,800 --> 00:33:24,200
well, because that means there are no frames left at all.

590
00:33:24,400 --> 00:33:27,700
Now, that's really probably something that we should have cert on in

591
00:33:27,700 --> 00:33:29,600
general, because that should never actually happen.

592
00:33:30,000 --> 00:33:30,600
Right.

593
00:33:30,600 --> 00:33:34,600
We should never free all the frames because we would never be out of

594
00:33:34,600 --> 00:33:35,700
memory in that state.

595
00:33:35,900 --> 00:33:39,300
So this was like this is like a thing that should never really happen.

596
00:33:40,100 --> 00:33:41,300
But anyway, then we free.

597
00:33:41,300 --> 00:33:45,000
So this would have been the line assuming that there isn't some other

598
00:33:45,000 --> 00:33:47,800
kind of bug this would have been the line where that would happen

599
00:33:48,400 --> 00:33:53,500
frame next would be equal to 0 and we would free the oldest frame when

600
00:33:53,500 --> 00:33:54,700
we do new frame.

601
00:34:10,800 --> 00:34:11,699
I mean, yet.

602
00:34:13,100 --> 00:34:14,600
I'm not sure how that happens.

603
00:34:15,400 --> 00:34:18,199
I'm not sure how we end up in the situation that we ended up in.

604
00:34:21,500 --> 00:34:22,900
Where the per frame Arena?

605
00:34:28,600 --> 00:34:30,600
Were there was nothing in the free store.

606
00:34:34,400 --> 00:34:35,699
Like, how is that possible?

607
00:34:41,500 --> 00:34:42,199
Interesting.

608
00:34:42,800 --> 00:34:46,600
So I'm going to do what I said I was going to do before and force that

609
00:34:46,600 --> 00:34:49,100
to happen sooner because I don't like the fact that there's a bug

610
00:34:49,100 --> 00:34:52,100
there and I'm assuming that that's actually not just a bug in general.

611
00:34:52,100 --> 00:34:53,900
Because I did do I suppose this

612
00:34:55,900 --> 00:34:59,000
Ah, okay, so we just have a bug bug.

613
00:34:59,200 --> 00:35:00,900
It has nothing to do with the arena.

614
00:35:00,900 --> 00:35:05,500
We just happen to inch have introduced a bug recently that occurs when

615
00:35:05,500 --> 00:35:06,600
we go into the game.

616
00:35:07,000 --> 00:35:07,700
That's all.

617
00:35:09,900 --> 00:35:13,000
Okay, well, that's a lot more heartening.

618
00:35:15,100 --> 00:35:16,700
So I'm guessing that we've got.

619
00:35:17,000 --> 00:35:21,300
We've got something, we're part of our change, too.

620
00:35:23,200 --> 00:35:25,900
Maybe how we were doing those events tours.

621
00:35:28,900 --> 00:35:32,200
Maybe there were just to, you know what, I suppose there could

622
00:35:32,200 --> 00:35:35,700
technically actually have been so many events on a single frame that

623
00:35:35,700 --> 00:35:36,800
we couldn't store them all.

624
00:35:38,200 --> 00:35:42,200
Seems really unlikely but I suppose it's possible.

625
00:35:47,300 --> 00:35:50,700
Like it's possible that actually could be an accurate assertion.

626
00:35:51,900 --> 00:35:55,800
And that would be terrifying but I guess I don't know how many of them

627
00:35:55,800 --> 00:35:56,400
there are.

628
00:35:56,500 --> 00:35:56,700
Right.

629
00:35:56,700 --> 00:35:58,600
I don't know how many events there actually.

630
00:36:02,000 --> 00:36:04,400
Actually are coming through so let's take it.

631
00:36:04,400 --> 00:36:05,500
Let's let's test it.

632
00:36:05,500 --> 00:36:10,900
I suppose if we go to begin, block end block here.

633
00:36:12,100 --> 00:36:13,400
If I'm not storing.

634
00:36:16,000 --> 00:36:16,800
These events.

635
00:36:24,500 --> 00:36:25,200
Then we're fine.

636
00:36:28,400 --> 00:36:29,800
If a store, only one of them.

637
00:36:31,700 --> 00:36:32,700
That's half as many.

638
00:36:40,600 --> 00:36:41,400
Still fine.

639
00:36:48,800 --> 00:36:50,000
And if I store,

640
00:36:51,100 --> 00:36:54,000
Both of them or rather just that one.

641
00:37:00,300 --> 00:37:02,900
Yeah, so I think that's actually an accurate assertion.

642
00:37:03,100 --> 00:37:04,700
It's just not enough memory.

643
00:37:05,500 --> 00:37:07,600
32 Meg's is not enough memory to store.

644
00:37:07,600 --> 00:37:09,700
How many events we actually wrote?

645
00:37:10,800 --> 00:37:12,000
Which is kind of crazy.

646
00:37:21,300 --> 00:37:27,500
All right, so I guess that just means we probably have too many zones

647
00:37:27,500 --> 00:37:31,000
and things but I mean, I guess that also means that

648
00:37:34,500 --> 00:37:39,100
When we do our debug start here, Global debug storage size.

649
00:37:39,400 --> 00:37:43,700
We could just make that significantly bigger and then not worry about

650
00:37:43,700 --> 00:37:46,000
it, but that does mean we're probably processing too many events.

651
00:37:48,500 --> 00:37:52,100
So here is our debug storage size If instead, I said like oh yeah you

652
00:37:52,100 --> 00:37:52,300
know what?

653
00:37:52,300 --> 00:37:54,300
That's going to be bigger much bigger.

654
00:38:02,700 --> 00:38:03,400
Holy cow.

655
00:38:03,400 --> 00:38:06,400
Yeah, I mean take a look at how fast that goes down.

656
00:38:08,100 --> 00:38:08,700
Right.

657
00:38:08,700 --> 00:38:10,400
This thing just choose through the memory.

658
00:38:14,200 --> 00:38:14,800
Mmm.

659
00:38:18,700 --> 00:38:19,400
Very interesting.

660
00:38:23,600 --> 00:38:27,000
But once you give it enough memory to hold a individual frame, it does

661
00:38:27,000 --> 00:38:28,700
appear to be fine from then on.

662
00:38:29,500 --> 00:38:30,200
So that's good.

663
00:38:36,600 --> 00:38:38,900
Alright, okay.

664
00:38:38,900 --> 00:38:43,100
So the next thing we need to do is we need to fix this situation here

665
00:38:43,100 --> 00:38:47,200
because this I don't actually want those to show up in this hierarchy.

666
00:38:47,500 --> 00:38:50,400
They need to the so the things that are

667
00:38:54,000 --> 00:38:55,700
those debug elements, right?

668
00:38:56,400 --> 00:38:57,300
Because we have

669
00:39:03,200 --> 00:39:04,000
We have these.

670
00:39:06,000 --> 00:39:09,700
We actually don't want those to be added to the group's, right?

671
00:39:09,700 --> 00:39:13,900
We don't we want those to sort of the handled separately.

672
00:39:14,300 --> 00:39:20,800
We really just want those to all go into a single group really and

673
00:39:20,900 --> 00:39:25,800
never actually be, you know, always have a particular parent.

674
00:39:26,000 --> 00:39:29,600
And so in here, where we do get element

675
00:39:32,100 --> 00:39:33,100
We're in the wrong file.

676
00:39:34,000 --> 00:39:35,000
We want to be in here.

677
00:39:37,400 --> 00:39:43,500
So when we come in here and we do get element from event, we want to

678
00:39:43,500 --> 00:39:49,800
be able to make that we want to be able to force that not to do a

679
00:39:49,800 --> 00:39:53,500
hierarchical search for this thing and to instead use a specific

680
00:39:53,500 --> 00:39:56,600
parent for its operation.

681
00:39:57,100 --> 00:40:00,400
And so you know, when it's doing this sort of situation, it does the

682
00:40:00,400 --> 00:40:06,700
the parsing this get group for hierarchical name, we don't really

683
00:40:06,700 --> 00:40:07,100
want.

684
00:40:07,200 --> 00:40:08,900
That to happen.

685
00:40:10,300 --> 00:40:14,500
At all and I don't really know.

686
00:40:16,800 --> 00:40:19,800
to what extent we really call this

687
00:40:25,000 --> 00:40:27,400
So it looks like we pretty much never.

688
00:40:29,500 --> 00:40:31,500
Really wish I could see what was going on here.

689
00:40:36,000 --> 00:40:36,900
Let's try again.

690
00:40:37,000 --> 00:40:39,100
Get element from that.

691
00:40:40,600 --> 00:40:41,200
There we go.

692
00:40:41,500 --> 00:40:42,400
So

693
00:40:44,300 --> 00:40:50,900
default parent group is what comes from what the data block is.

694
00:40:52,400 --> 00:40:58,300
And so, I guess what we need to do here is get element from event.

695
00:40:58,300 --> 00:41:01,000
Honestly, probably is just a little too heavy weight.

696
00:41:01,400 --> 00:41:06,900
Probably, what we need to do is something where we we can specify

697
00:41:06,900 --> 00:41:11,000
whether or not we actually want this to happen or not.

698
00:41:11,000 --> 00:41:12,800
So if we have the parent here,

699
00:41:14,400 --> 00:41:15,900
I mean we could just add another yet.

700
00:41:15,900 --> 00:41:19,800
Another thing I don't know if it's going to be a little too bizarre,

701
00:41:20,100 --> 00:41:22,500
if you have too many of these but we can do something here where it's

702
00:41:22,500 --> 00:41:23,400
like, you know,

703
00:41:34,500 --> 00:41:35,500
Add directly.

704
00:41:37,400 --> 00:41:38,200
To parent.

705
00:41:40,000 --> 00:41:43,300
So if we know that that's the case, then whatever the parent is that

706
00:41:43,300 --> 00:41:50,400
we're going to get, we know that we can say, like, okay, when we do a

707
00:41:56,300 --> 00:41:59,700
when we do a get group for hierarchical name, instead of

708
00:42:00,400 --> 00:42:02,000
Actually ever calling this.

709
00:42:02,200 --> 00:42:06,800
We can just say, like, oh put it in the parent by default and then if

710
00:42:06,800 --> 00:42:12,500
add directly to parent, you know, is it's not true or I guess we could

711
00:42:12,500 --> 00:42:19,600
say, maybe do it the other way around get hierarchical hierarchically

712
00:42:19,600 --> 00:42:21,000
or create hierarchy.

713
00:42:24,900 --> 00:42:29,600
You know, if that's set to true, then do this.

714
00:42:36,800 --> 00:42:37,600
Otherwise don't.

715
00:42:45,300 --> 00:42:46,200
And that would work fine.

716
00:42:49,600 --> 00:42:53,500
So, yeah, if I want to keep them out of the hierarchy, then what I

717
00:42:53,500 --> 00:42:58,400
would do is when we call get element from event and I pass it the

718
00:42:58,400 --> 00:42:59,500
event here, oops.

719
00:43:03,800 --> 00:43:06,300
And I pass at the event, then what I'm going to do is I'm going to say

720
00:43:06,300 --> 00:43:09,200
create hierarchy is false for this particular circumstance and the

721
00:43:09,200 --> 00:43:12,700
place that I want to put it is probably some special holding tank for

722
00:43:12,700 --> 00:43:15,800
these which is like you know profile group.

723
00:43:16,500 --> 00:43:19,900
And so the route Group which is here and holds all the stuff that

724
00:43:19,900 --> 00:43:22,900
we're actually looking at that's actually going to be

725
00:43:25,200 --> 00:43:28,100
Complemented by a profile group of just holds our profile blocks.

726
00:43:30,300 --> 00:43:34,700
And then I don't actually know create variable group.

727
00:43:41,400 --> 00:43:45,600
This just telling the size of this so that is 7.

728
00:43:50,400 --> 00:43:51,000
All right.

729
00:43:51,300 --> 00:43:54,100
Profile group is not a member of debug State.

730
00:43:54,100 --> 00:43:57,100
You're correct about that because I actually have to go in here and

731
00:43:57,100 --> 00:43:58,000
add it first.

732
00:43:58,300 --> 00:44:00,200
So route group is here.

733
00:44:00,600 --> 00:44:07,500
So profile group should be here and compile get element from event,

734
00:44:07,900 --> 00:44:10,400
get element from event is an ambiguous.

735
00:44:10,400 --> 00:44:14,600
Call is that so well if it is

736
00:44:18,800 --> 00:44:19,800
Can I just realized?

737
00:44:21,300 --> 00:44:24,100
I have to overloaded versus that function, which is part of the

738
00:44:24,100 --> 00:44:28,200
problem killer from event, everybody cover not to find, right?

739
00:44:28,200 --> 00:44:29,100
That's the problem.

740
00:44:30,300 --> 00:44:33,100
We predict we forward declared that that fellow

741
00:44:35,000 --> 00:44:44,500
So now we need to make sure that we update the one of those.

742
00:44:47,500 --> 00:44:51,700
This right here is the thing that actually has to have the create

743
00:44:51,700 --> 00:44:52,400
hierarchy,

744
00:44:56,100 --> 00:44:56,600
And it.

745
00:45:07,100 --> 00:45:07,600
There we go.

746
00:45:10,100 --> 00:45:13,000
All right, so let's see here.

747
00:45:14,100 --> 00:45:16,600
This is tooling along.

748
00:45:17,100 --> 00:45:21,700
And so now we're still recording all that information, but now it's

749
00:45:21,700 --> 00:45:25,000
actually being recorded into, like, the background where we can't

750
00:45:25,000 --> 00:45:27,900
actually see it, which is what we wanted, right?

751
00:45:29,700 --> 00:45:36,400
And so, now in theory, anyways, I should be able to draw those things

752
00:45:36,400 --> 00:45:39,700
out by having whatever is going to happen in these.

753
00:45:40,000 --> 00:45:46,100
Groups sort of look into that profile data and pull out whatever.

754
00:45:46,100 --> 00:45:48,700
It is, the part that they actually wanted, that makes sense.

755
00:45:50,400 --> 00:45:54,100
So, in order to do that, we already have this profile thing here but

756
00:45:54,100 --> 00:45:56,600
we're not actually showing anything, right?

757
00:46:01,700 --> 00:46:09,200
so, this information here, that's actually that sort of thread list

758
00:46:09,700 --> 00:46:13,500
business, we can now go and

759
00:46:15,300 --> 00:46:16,900
Start to actually try to implement this.

760
00:46:17,200 --> 00:46:20,600
So, in the thread interval graph, what we can now do is we can Loop

761
00:46:20,600 --> 00:46:27,900
over the members of that, that group, that, that element group and we

762
00:46:27,900 --> 00:46:30,600
can actually draw those out.

763
00:46:30,900 --> 00:46:34,200
Now I don't actually know how to figure out what the latest frame

764
00:46:34,200 --> 00:46:37,100
index is but I'm assuming that that's actually something that we just

765
00:46:37,100 --> 00:46:41,500
stored here because that's what I would have done and I wrote this

766
00:46:41,500 --> 00:46:41,900
code.

767
00:46:43,000 --> 00:46:44,100
So I'm assuming that

768
00:46:44,300 --> 00:46:48,500
Like frame count, for example, is just telling us what the indices

769
00:46:48,500 --> 00:46:49,000
are.

770
00:46:49,500 --> 00:46:53,400
And so whatever the most recent well you know what, we can just look

771
00:46:53,400 --> 00:46:54,500
at most recent frame.

772
00:46:54,800 --> 00:46:57,400
Probably, and whatever.

773
00:46:57,400 --> 00:47:00,400
Most recent frame is most recent frame.

774
00:47:00,400 --> 00:47:03,100
Probably has whatever its index was right.

775
00:47:04,700 --> 00:47:06,500
Most frame

776
00:47:15,000 --> 00:47:15,400
I meant.

777
00:47:19,000 --> 00:47:20,600
Yeah so it's got that.

778
00:47:22,400 --> 00:47:26,600
So yeah, so I feel like that would do it.

779
00:47:26,600 --> 00:47:30,300
Now frame bar scale doesn't what do you?

780
00:47:30,300 --> 00:47:32,100
I don't know why that's there.

781
00:47:32,100 --> 00:47:33,400
What that was supposed to do?

782
00:47:33,700 --> 00:47:36,100
I'm assuming that had to do with storing.

783
00:47:36,100 --> 00:47:38,800
How many threads were seen at that time.

784
00:47:43,300 --> 00:47:45,600
But this is probably just garbage now, right?

785
00:47:46,700 --> 00:47:49,900
I think that's just a strict doing some straight porting of the code.

786
00:47:50,900 --> 00:47:54,200
So, yeah, that's, that's just I don't even know what that's supposed

787
00:47:54,200 --> 00:47:57,800
to be other than stupid, so that's fine.

788
00:47:58,500 --> 00:47:59,200
So,

789
00:48:01,800 --> 00:48:04,100
yeah, so I think

790
00:48:06,600 --> 00:48:08,000
For draw a profile in.

791
00:48:10,500 --> 00:48:15,800
What we want to do here is figure out how many frames to draw, how

792
00:48:15,800 --> 00:48:17,400
many frames we're going to draw, I guess.

793
00:48:19,800 --> 00:48:22,300
I guess maybe we'll just try drawing just one frame for now.

794
00:48:22,900 --> 00:48:25,500
And we'll try to adjust this so that it actually does something

795
00:48:25,500 --> 00:48:26,000
useful.

796
00:48:26,500 --> 00:48:32,100
So, intra profile in here is where we draw sort of our background.

797
00:48:32,800 --> 00:48:35,100
Then here is where we

798
00:48:37,600 --> 00:48:42,600
Loop over the frames and I guess we Loop over all the frames that we

799
00:48:42,600 --> 00:48:43,300
stored.

800
00:48:43,600 --> 00:48:47,200
That's not going to be very useful at this point because looping over

801
00:48:47,200 --> 00:48:50,200
all of the frames that we stored is going to make it kind of

802
00:48:50,200 --> 00:48:53,700
prohibitively expensive or not expensive.

803
00:48:54,300 --> 00:48:55,000
Yes, expensive.

804
00:48:55,000 --> 00:48:57,400
But it's not gonna be enough space.

805
00:48:57,400 --> 00:49:02,200
I guess is what I'm saying, so we're not going to draw all the frames

806
00:49:02,200 --> 00:49:05,000
recorded because now, we've drawn too many frames basically.

807
00:49:05,800 --> 00:49:06,800
So we'll have to figure out.

808
00:49:07,000 --> 00:49:10,000
So what we want to do with that but point being we'll go through here

809
00:49:10,000 --> 00:49:14,800
and do maybe just one frame or something like that.

810
00:49:15,200 --> 00:49:19,300
And try to keep this a little bit simpler.

811
00:49:19,500 --> 00:49:20,800
I'll re-enable this here.

812
00:49:25,700 --> 00:49:30,800
I don't know what this is supposed to be in a group chart lift chart

813
00:49:30,800 --> 00:49:31,500
height.

814
00:49:32,400 --> 00:49:34,400
So this was drawing some kind of a

815
00:49:39,800 --> 00:49:41,700
look up, underlined

816
00:49:44,800 --> 00:49:50,700
But I don't know why chart left plus 0.5 times start with in this

817
00:49:50,700 --> 00:49:53,300
drawing chart with chart, man plus.

818
00:49:53,700 --> 00:49:56,200
So it was just, that was just the outline, never mind.

819
00:49:56,600 --> 00:49:57,600
So we don't need that anymore.

820
00:49:58,100 --> 00:49:58,700
I can go away.

821
00:50:00,500 --> 00:50:03,800
All right, so let's see.

822
00:50:04,300 --> 00:50:05,800
Here's our

823
00:50:08,600 --> 00:50:10,000
Bar scale information.

824
00:50:10,000 --> 00:50:14,700
I don't know that we care about most of this stuff but I think

825
00:50:14,700 --> 00:50:18,600
probably what we want to do is is just simplify this down and say okay

826
00:50:18,900 --> 00:50:26,300
the frame that we're going to draw is the most recent frame.

827
00:50:29,100 --> 00:50:33,000
and I don't know, since the most recent frame,

828
00:50:36,700 --> 00:50:40,000
Thing that I'm not sure about is, is the most recent frame actually

829
00:50:40,000 --> 00:50:43,000
not filled in yet, because we've or by the, when we're doing this

830
00:50:43,000 --> 00:50:43,300
drawing.

831
00:50:43,300 --> 00:50:44,700
We've already Advance one frame.

832
00:50:44,700 --> 00:50:47,300
So, we really want the frame before that, or do you want this Frame?

833
00:50:47,700 --> 00:50:50,200
And I'm not totally sure about that.

834
00:50:50,700 --> 00:50:54,100
I should look probably and went through to handmade at where the frame

835
00:50:54,100 --> 00:50:55,200
marker happens.

836
00:51:03,800 --> 00:51:07,900
So, the free marker happens after the debug stuff is drawn.

837
00:51:13,200 --> 00:51:16,300
So that means the most recent frame is really not done yet.

838
00:51:18,500 --> 00:51:19,000
Right.

839
00:51:19,800 --> 00:51:25,500
So, how are we counting for that in the current system in handmade?

840
00:51:25,500 --> 00:51:26,700
Debug dot h?

841
00:51:28,800 --> 00:51:31,900
I'm assuming that collation frame is actually the one that's being

842
00:51:31,900 --> 00:51:32,700
filled.

843
00:51:32,900 --> 00:51:36,000
So I'm assuming that most recent frame is the most recent frame.

844
00:51:36,000 --> 00:51:41,100
We actually have data for, in which case, I think we're okay.

845
00:51:41,700 --> 00:51:43,200
So we'd start with that frame.

846
00:51:43,800 --> 00:51:48,600
And then what we do is we'd say, well, we know how long the frame took

847
00:51:50,300 --> 00:51:54,000
Right, because we've got a beginning and clock.

848
00:51:54,000 --> 00:51:59,500
So, the maximum like amount of of time that a function, could have

849
00:51:59,500 --> 00:52:01,800
taken that's inside.

850
00:52:01,800 --> 00:52:05,400
The frame is going to be between that begin clock in the end clock,

851
00:52:05,800 --> 00:52:06,300
right?

852
00:52:08,000 --> 00:52:08,800
So

853
00:52:11,400 --> 00:52:12,900
We probably do something here.

854
00:52:12,900 --> 00:52:19,700
Like, you know, R32 totals first frame span, you know, equals the

855
00:52:19,700 --> 00:52:23,300
frame and clock - the frame begin clock.

856
00:52:25,400 --> 00:52:26,500
Or something like this.

857
00:52:27,700 --> 00:52:28,200
Right.

858
00:52:29,700 --> 00:52:35,100
So if that's the span of the frame, then we now know that every piece

859
00:52:35,100 --> 00:52:40,100
of information that we might have coming out from those open-close

860
00:52:40,600 --> 00:52:46,400
blocks, each one of those is just going to tell us some place inside

861
00:52:46,400 --> 00:52:48,100
that frame span, right?

862
00:52:54,500 --> 00:52:55,500
And I don't know.

863
00:52:57,000 --> 00:52:58,300
We've got the profile wrecked.

864
00:52:58,300 --> 00:53:03,800
So we have like our pixel span which is just the width

865
00:53:05,000 --> 00:53:06,600
Of the profile wrecked, right?

866
00:53:07,500 --> 00:53:13,900
I don't know about the lane count and so I guess I'm hoping that that

867
00:53:13,900 --> 00:53:17,100
is still a valid value if that makes sense.

868
00:53:18,100 --> 00:53:22,600
And so if that's the lane count, then the rest of this stuff should

869
00:53:22,600 --> 00:53:27,700
still work, I think frame bar scale, I don't really care about at the

870
00:53:27,700 --> 00:53:28,500
moment.

871
00:53:32,100 --> 00:53:35,900
I'm going to, I'm going to get rid of these and take a look at this.

872
00:53:36,000 --> 00:53:39,100
I don't care about the max-frame situation.

873
00:53:51,500 --> 00:53:53,700
Pixels per frame, plus spacing.

874
00:54:01,200 --> 00:54:04,500
Yeah, so I'm going to I'm just going to get rid of this at the moment.

875
00:54:04,600 --> 00:54:09,200
If the lane count is greater than zero, then I do want the lane height

876
00:54:09,200 --> 00:54:09,800
to work.

877
00:54:13,900 --> 00:54:14,600
so, I think

878
00:54:17,800 --> 00:54:18,900
I think all this is

879
00:54:21,600 --> 00:54:25,200
is reasonable here pixels per frame if I link out that, that seems

880
00:54:25,200 --> 00:54:27,300
like that's not what I really want.

881
00:54:27,800 --> 00:54:31,900
What I want for the lane count is, I want to just take the total

882
00:54:31,900 --> 00:54:36,800
height of the thing and I get, this is the right way to do that.

883
00:54:38,700 --> 00:54:40,900
I just want to take the total height of the thing and divide it by the

884
00:54:40,900 --> 00:54:41,400
lane count.

885
00:54:41,400 --> 00:54:46,400
So I'm pretty sure the lane height is just get dim profile wrecked.

886
00:54:47,100 --> 00:54:48,500
Why / the lane count?

887
00:54:48,500 --> 00:54:50,800
I don't think I want any of that.

888
00:54:51,100 --> 00:54:52,800
I think that's really all I wanted.

889
00:54:53,000 --> 00:54:53,800
That makes sense.

890
00:54:56,200 --> 00:54:57,800
And that's how high the lanes are.

891
00:54:59,100 --> 00:55:00,500
So that's it.

892
00:55:00,600 --> 00:55:05,000
I don't think I want the rest of this stuff at the moment.

893
00:55:06,100 --> 00:55:09,500
And let's see if we come through here again.

894
00:55:09,500 --> 00:55:11,400
Don't really want to do multiple frames.

895
00:55:11,800 --> 00:55:15,900
Don't want any of any of this at all.

896
00:55:16,900 --> 00:55:18,900
Oh, did I do?

897
00:55:19,000 --> 00:55:19,700
Okay, there we go.

898
00:55:20,600 --> 00:55:22,600
Some reason I think I hit the wrong key.

899
00:55:22,700 --> 00:55:23,200
Okay.

900
00:55:25,100 --> 00:55:29,700
So now what I want to do is I just want to spin through each of the

901
00:55:31,300 --> 00:55:33,500
things in the profile group, right?

902
00:55:33,500 --> 00:55:35,700
I want to I've got that profile group that has

903
00:55:36,600 --> 00:55:37,900
essentially, all of the

904
00:55:41,100 --> 00:55:43,700
this right here has all of the things that are in the profile.

905
00:55:44,000 --> 00:55:50,000
So, I've got debug variable link and that's going to be profile group.

906
00:55:51,100 --> 00:55:53,700
Children next.

907
00:55:55,600 --> 00:55:58,300
Link is not equal to profile group.

908
00:56:00,200 --> 00:56:00,900
Children.

909
00:56:05,700 --> 00:56:06,900
Blink blink.

910
00:56:07,000 --> 00:56:15,400
Next that's going to be each of the elements that comprises a function

911
00:56:15,400 --> 00:56:18,500
call or a timed block, if you will.

912
00:56:19,600 --> 00:56:20,500
And

913
00:56:23,400 --> 00:56:29,900
So really all we want to do is recompute this part right here.

914
00:56:33,100 --> 00:56:34,100
Based on.

915
00:56:36,200 --> 00:56:43,300
The open close block information rather than the the other bits.

916
00:56:43,700 --> 00:56:46,900
So for our

917
00:56:48,300 --> 00:56:49,700
Stored events.

918
00:56:53,200 --> 00:56:53,600
Here we go.

919
00:56:55,100 --> 00:56:56,700
For are stored events.

920
00:56:56,800 --> 00:56:59,700
We have the oldest event and the most recent

921
00:57:00,600 --> 00:57:02,800
But they're not a doubly linked list.

922
00:57:03,000 --> 00:57:07,700
They're only a singly linked list which I don't know if that was a

923
00:57:07,700 --> 00:57:09,800
particularly smart idea because it seems like you want to be able to

924
00:57:09,800 --> 00:57:11,000
walk them in either order.

925
00:57:13,100 --> 00:57:16,000
But for the time being, we can still spend through all of them.

926
00:57:16,000 --> 00:57:22,100
I suppose, what we want to do is we only want to know what the

927
00:57:25,600 --> 00:57:28,800
We only want to know what the most recent and the one just before that

928
00:57:28,800 --> 00:57:32,100
was or rather we just want to walk the ones that are in this

929
00:57:32,100 --> 00:57:33,000
particular frame.

930
00:57:34,200 --> 00:57:36,700
So I'm not sure exactly how we walk those.

931
00:57:36,700 --> 00:57:38,800
Cause like I said, we haven't really dealt with these in a while.

932
00:57:39,200 --> 00:57:42,000
So let's take a look at who actually uses these.

933
00:57:42,300 --> 00:57:44,600
So if we go to the most recent event,

934
00:57:59,200 --> 00:58:00,500
Doesn't look like.

935
00:58:08,800 --> 00:58:11,900
Doesn't look like we ever actually iterate over them anymore, but here

936
00:58:11,900 --> 00:58:12,800
our store event.

937
00:58:13,200 --> 00:58:16,200
So you can see that if there's a most recent event, then it's most

938
00:58:16,200 --> 00:58:19,600
recent event equals most recent event, next result, if there isn't,

939
00:58:19,600 --> 00:58:21,000
then they're both equal.

940
00:58:21,500 --> 00:58:25,400
So what that means is the most recent event is the tail pointer and

941
00:58:25,400 --> 00:58:27,200
the oldest event is the head pointer.

942
00:58:27,400 --> 00:58:30,200
So it starts at all this event and goes to most recent, I don't know

943
00:58:30,200 --> 00:58:33,200
why, we didn't doubly linked those so that we can walk them in either

944
00:58:33,200 --> 00:58:33,600
order.

945
00:58:36,700 --> 00:58:42,900
That's kind of not clear to me to be completely honest because it

946
00:58:42,900 --> 00:58:44,900
seems like we would want to do that so I don't know.

947
00:58:44,900 --> 00:58:49,000
Me might want to change that to linking them both directions but who

948
00:58:49,000 --> 00:58:54,400
knows, maybe we want to do the build them in some more complex order

949
00:58:55,100 --> 00:58:59,900
just in general because it is true that maybe we want them to be in

950
00:58:59,900 --> 00:59:01,300
the more hierarchical.

951
00:59:01,400 --> 00:59:04,100
Maybe we want to build a tree out of them or something in the future

952
00:59:04,100 --> 00:59:06,400
to accelerate these sort of things, if we were being fancy.

953
00:59:06,500 --> 00:59:08,700
Anyway, so who's to say?

954
00:59:09,600 --> 00:59:14,500
But anyway, so if we're in here and we want to draw, rectangles, what

955
00:59:14,500 --> 00:59:18,800
we would do is we'd say well, okay the debug element which is the

956
00:59:18,800 --> 00:59:20,500
profile element for these guys.

957
00:59:22,000 --> 00:59:24,400
We want to make sure that it always has one because that's the only

958
00:59:24,400 --> 00:59:28,800
thing these links are always supposed to have those and assuming that

959
00:59:28,800 --> 00:59:32,800
it does, then what we're going to do is we're going to say for each of

960
00:59:32,800 --> 00:59:34,100
the store at events in here.

961
00:59:44,800 --> 00:59:49,200
As we go through the events, what we want to do is we want to look to

962
00:59:49,200 --> 00:59:53,700
see if the event is what its frame and X is the frame that we're

963
00:59:53,700 --> 00:59:54,500
actually on.

964
00:59:57,300 --> 00:59:58,400
and if it is,

965
01:00:00,400 --> 01:00:06,200
then we want to either draw it if it's a closed event or

966
01:00:09,600 --> 01:00:13,000
Set like keep track of what the interval is, if it's not.

967
01:00:16,200 --> 01:00:16,700
Right.

968
01:00:17,000 --> 01:00:19,400
So trying to think here,

969
01:00:21,300 --> 01:00:24,300
If it's a frame, if it's one of these basic, what we'd say is, it's a

970
01:00:24,300 --> 01:00:27,100
debug stored event you know, open Event equals zero.

971
01:00:28,100 --> 01:00:33,000
And so we'd say if it's a frame, if it's one that we recognize, right?

972
01:00:33,100 --> 01:00:35,600
If it's something that we recognize and I guess we can we can even

973
01:00:35,600 --> 01:00:42,000
move this, this guy can be inside here if it's one that we recognize

974
01:00:42,300 --> 01:00:43,500
how much time I got four minutes.

975
01:00:44,500 --> 01:00:49,300
then what we want to do is say, if, you know the event

976
01:00:52,500 --> 01:00:55,600
Type is an open event.

977
01:01:03,000 --> 01:01:04,400
Don't really remember what that's called.

978
01:01:09,000 --> 01:01:09,700
Begin block.

979
01:01:11,700 --> 01:01:13,000
If it's a begin block.

980
01:01:14,600 --> 01:01:18,100
Then the open event is going to be equal to this event.

981
01:01:19,900 --> 01:01:23,100
And I guess we can dispense with the stored part of this, probably.

982
01:01:26,700 --> 01:01:28,400
If it is.

983
01:01:33,900 --> 01:01:34,800
Close block.

984
01:01:42,400 --> 01:01:47,600
Then we would just say like, if there is an open Event, right?

985
01:01:50,000 --> 01:01:52,300
Then we can draw and I suppose we could even do it this way.

986
01:01:59,300 --> 01:02:00,200
Then we can draw it.

987
01:02:01,200 --> 01:02:05,100
So if you know, if we had a previously had an open Event.

988
01:02:05,100 --> 01:02:08,900
Now we've got the close event that goes with it and so now we know

989
01:02:08,900 --> 01:02:12,200
exactly what the interval is and we can draw it on the chart.

990
01:02:12,700 --> 01:02:17,600
So if that's the case, then we know the, we know the clock, right?

991
01:02:17,600 --> 01:02:21,200
We know the clock value here for it so we can use the clock to place

992
01:02:21,200 --> 01:02:26,500
it directly into the location that it should be and we know the frame,

993
01:02:26,600 --> 01:02:27,900
I'm sorry, we know the thread ID.

994
01:02:27,900 --> 01:02:30,800
So the thread ID can also tell us where

995
01:02:31,000 --> 01:02:33,200
Would go in the in the region.

996
01:02:35,100 --> 01:02:35,900
So, I don't know.

997
01:02:35,900 --> 01:02:40,600
I don't remember how to look up the lane index for things.

998
01:02:43,300 --> 01:02:45,700
That I don't recall.

999
01:02:45,700 --> 01:02:51,600
And one thing that we probably would want to do, actually, is replace

1000
01:02:51,600 --> 01:02:52,700
these thread IDs.

1001
01:02:52,700 --> 01:02:59,800
When we store them, we would want to replace that with a ordinal for

1002
01:03:00,000 --> 01:03:01,600
Red rather than thread ID.

1003
01:03:01,600 --> 01:03:06,200
I think because the thread ID is coming from Windows, we want to

1004
01:03:06,200 --> 01:03:10,700
rewrite that with some well-formed ordinal so that's probably a to do.

1005
01:03:12,000 --> 01:03:21,100
Casey replace thread ID with a well-formed ordinal, at collation time.

1006
01:03:23,700 --> 01:03:25,100
Because that seems like something.

1007
01:03:25,100 --> 01:03:27,100
We don't really want the windows thread IDs.

1008
01:03:27,100 --> 01:03:30,600
At that point, we want to regularize the thread IDs down to something

1009
01:03:30,600 --> 01:03:31,600
that we can use.

1010
01:03:32,900 --> 01:03:36,300
So, let's ignore that problem temporarily because I'll do that

1011
01:03:36,300 --> 01:03:36,600
tomorrow.

1012
01:03:36,600 --> 01:03:37,700
We don't have time to do that today.

1013
01:03:37,700 --> 01:03:41,400
I don't think it won't take long because we already do it in the

1014
01:03:41,400 --> 01:03:41,900
collation.

1015
01:03:41,900 --> 01:03:43,100
We just don't store it.

1016
01:03:43,700 --> 01:03:47,200
But anyway, if we find them then we would know like, okay, the place

1017
01:03:47,200 --> 01:03:53,200
where this thing is going to be the Minix and the max X are just going

1018
01:03:53,200 --> 01:03:59,900
to be placing those clocks that the frame span.

1019
01:03:59,900 --> 01:04:01,900
We just need an inverse frame span here.

1020
01:04:02,700 --> 01:04:03,000
Right.

1021
01:04:04,800 --> 01:04:07,900
Or rather the frame scale, right?

1022
01:04:08,100 --> 01:04:13,100
So to compute that frame scale, we just need to know that the pixel

1023
01:04:13,100 --> 01:04:15,200
span is.

1024
01:04:15,200 --> 01:04:18,100
I'm sorry that the frame span is nonzero.

1025
01:04:20,900 --> 01:04:22,900
so, assuming that it is,

1026
01:04:26,100 --> 01:04:30,500
So that we took some time, assuming that it is, then what we need to

1027
01:04:30,500 --> 01:04:34,400
do is we need to say that whatever the pixel span is.

1028
01:04:37,000 --> 01:04:39,800
Is how big we want things to be if they take the entire time?

1029
01:04:40,900 --> 01:04:45,700
So we want to do the toll pixels fan and we want to shrink down the

1030
01:04:45,700 --> 01:04:48,400
frames time to equal to the unit, right?

1031
01:04:48,400 --> 01:04:49,700
So you want to say like okay?

1032
01:04:51,600 --> 01:04:54,900
However, big the frame span is we divide by that to regularize,

1033
01:04:54,900 --> 01:04:58,000
everything to be between 0 and 1 and then we multiply by the pixels

1034
01:04:58,000 --> 01:04:59,900
fan to blow it out to the right number of pixels.

1035
01:05:01,600 --> 01:05:04,000
So that's the entire thing for the frame.

1036
01:05:04,000 --> 01:05:06,900
Scale going from the frames fan to the pixel span.

1037
01:05:07,600 --> 01:05:10,900
So all we have to do here is just say like the min max is just going

1038
01:05:10,900 --> 01:05:14,900
to be whatever our profile wrecked exes.

1039
01:05:18,200 --> 01:05:21,200
And then that's going to be plus the, the frame scale.

1040
01:05:21,500 --> 01:05:22,800
I guess we just called it scale here.

1041
01:05:22,800 --> 01:05:24,900
So I'll leave it that call that.

1042
01:05:25,800 --> 01:05:33,400
We're going to have that scale times, for whatever the open event was

1043
01:05:33,700 --> 01:05:37,900
that clock - the frames?

1044
01:05:38,100 --> 01:05:39,000
Begin clock.

1045
01:05:39,900 --> 01:05:42,800
Because that gives us the sort of the ordered version at right that

1046
01:05:42,800 --> 01:05:46,900
the based off of the beginning of the, of the frame and suddenly the

1047
01:05:46,900 --> 01:05:49,800
profile wrecked wise scale.

1048
01:05:50,400 --> 01:05:51,800
We want that to be

1049
01:05:56,100 --> 01:05:59,800
I'm sorry, the max X rather we want that to be the

1050
01:06:00,000 --> 01:06:01,500
Close the vents same thing.

1051
01:06:10,100 --> 01:06:12,100
So that's, that's that.

1052
01:06:14,900 --> 01:06:21,000
Just going to change that scale, not a great word and a great a great

1053
01:06:21,000 --> 01:06:21,800
word but oh well.

1054
01:06:22,800 --> 01:06:23,900
So that's scale.

1055
01:06:24,900 --> 01:06:28,000
Then let's see what else we've got.

1056
01:06:28,000 --> 01:06:30,900
Is we have the wise, have to be fixed.

1057
01:06:30,900 --> 01:06:31,800
So let's see here.

1058
01:06:31,800 --> 01:06:34,500
Oh let's debug state.

1059
01:06:42,400 --> 01:06:43,200
Oh right.

1060
01:06:59,600 --> 01:07:03,900
Okay, so yeah.

1061
01:07:04,100 --> 01:07:05,300
Region.

1062
01:07:08,200 --> 01:07:11,200
I don't know that this is something we can really do much about it at

1063
01:07:11,200 --> 01:07:11,800
the moment.

1064
01:07:11,800 --> 01:07:16,900
So I'm going to leave that as an undone thing profile wrecked.

1065
01:07:17,000 --> 01:07:26,100
We need our, I guess it's be armed in Acts left of clock.

1066
01:07:26,300 --> 01:07:28,200
I agree with that.

1067
01:07:28,400 --> 01:07:29,500
It's that.

1068
01:07:30,400 --> 01:07:32,700
And that.

1069
01:07:32,900 --> 01:07:35,200
So, we need our open event.

1070
01:07:35,200 --> 01:07:37,700
We should probably just also introduced a

1071
01:07:37,900 --> 01:07:38,700
This event.

1072
01:07:40,100 --> 01:07:41,000
Which is just.

1073
01:07:42,400 --> 01:07:43,700
The one we just found.

1074
01:07:46,400 --> 01:07:46,900
Stack.

1075
01:07:46,900 --> 01:07:49,000
Why is Undeclared identifier?

1076
01:07:49,000 --> 01:07:49,900
That's true.

1077
01:07:49,900 --> 01:07:51,500
So how is this working here?

1078
01:07:52,000 --> 01:07:54,000
We've got lay night, the lane index.

1079
01:07:54,000 --> 01:07:56,600
So we don't know the lane index at the moment.

1080
01:07:57,100 --> 01:08:01,000
So that's just going to have to remain like so.

1081
01:08:03,700 --> 01:08:04,600
Something like this.

1082
01:08:06,400 --> 01:08:07,400
And we know the lane height.

1083
01:08:07,400 --> 01:08:10,700
So this is this this is just going to be the profile recommend why?

1084
01:08:12,300 --> 01:08:16,500
Or it looks like we're coming down the lanes from the top.

1085
01:08:16,500 --> 01:08:17,600
So it's actually going to be the max.

1086
01:08:17,600 --> 01:08:19,899
Why is the way we did this?

1087
01:08:22,000 --> 01:08:22,500
Right.

1088
01:08:24,800 --> 01:08:27,600
Missing parentheses is that.

1089
01:08:27,600 --> 01:08:28,200
So,

1090
01:08:30,399 --> 01:08:30,800
so,

1091
01:08:32,200 --> 01:08:33,300
push wrecked.

1092
01:08:34,399 --> 01:08:43,500
We've got a region ranked 00 before our to V4.

1093
01:08:43,500 --> 01:08:44,899
What's the problem with that?

1094
01:08:50,899 --> 01:08:53,600
Render group is first.

1095
01:09:00,800 --> 01:09:02,100
That we're talking about.

1096
01:09:05,300 --> 01:09:10,100
Render group star object transform, we don't have an object transform.

1097
01:09:12,100 --> 01:09:15,899
So this is actually just old code basically.

1098
01:09:16,600 --> 01:09:19,600
So here's what we actually need, right?

1099
01:09:19,700 --> 01:09:24,200
And we've got this this no transform thing here, which is what we

1100
01:09:24,200 --> 01:09:25,200
would want to use.

1101
01:09:33,100 --> 01:09:33,600
We go.

1102
01:09:34,000 --> 01:09:36,600
So in fact we could just do this right?

1103
01:09:36,600 --> 01:09:38,600
Can look at this here, that's what it actually has to be.

1104
01:09:39,500 --> 01:09:43,399
We've got no transform or region erect and then our colors.

1105
01:09:43,600 --> 01:09:44,300
So there we go.

1106
01:09:47,600 --> 01:09:51,899
So, that's all good, this record.

1107
01:09:51,899 --> 01:09:57,100
I guess we just use open event at the moment and see what else we got.

1108
01:09:57,100 --> 01:09:58,800
Block names, not a thing.

1109
01:10:00,000 --> 01:10:02,300
In fact, I don't really want to look at this right now, to be honest,

1110
01:10:02,300 --> 01:10:06,900
this is just really going to format the information for the record so

1111
01:10:06,900 --> 01:10:07,700
we can do that.

1112
01:10:08,700 --> 01:10:09,300
In a bit.

1113
01:10:09,600 --> 01:10:11,000
Let's go ahead and recompile.

1114
01:10:11,500 --> 01:10:17,100
All right, so that's where we'll leave it for today.

1115
01:10:18,200 --> 01:10:19,600
We won't go any further there.

1116
01:10:21,900 --> 01:10:22,700
Oh, that's amusing.

1117
01:10:23,300 --> 01:10:26,700
That's actually correct hilariously.

1118
01:10:26,700 --> 01:10:27,400
I think

1119
01:10:30,800 --> 01:10:32,300
You can see that it's a yeah.

1120
01:10:33,000 --> 01:10:36,300
We don't have any way right now of actually ensuring that we're

1121
01:10:36,300 --> 01:10:39,800
drawing in the correct order to say the least.

1122
01:10:39,800 --> 01:10:45,300
But okay, so I'm going to leave it here because we've got more work to

1123
01:10:45,300 --> 01:10:48,500
do to do a bunch of stuff, we have to get the Sorting order, right?

1124
01:10:48,500 --> 01:10:51,400
And like I said, probably have to do some hardcore stuff because we

1125
01:10:51,400 --> 01:10:54,500
don't really know in order to draw these.

1126
01:10:54,500 --> 01:10:59,400
We don't really have any information, unfortunately, about like,

1127
01:11:01,200 --> 01:11:05,000
We don't have any information about who calls who and so stacking.

1128
01:11:05,000 --> 01:11:09,200
These up is going to be a little bit tricky to say the least, but

1129
01:11:09,200 --> 01:11:09,900
we're getting there.

1130
01:11:10,500 --> 01:11:13,100
So we'll pick that back up tomorrow.

1131
01:11:13,100 --> 01:11:16,700
And for now we'll go to some Q&A for a brief period here.

1132
01:11:35,700 --> 01:11:36,800
also, I suppose

1133
01:11:44,600 --> 01:11:50,400
if I take a pointer and I convert it down to something that we can

1134
01:11:50,400 --> 01:11:52,000
use, like,

1135
01:11:56,900 --> 01:11:57,400
This.

1136
01:12:06,800 --> 01:12:08,500
Must have.

1137
01:12:19,400 --> 01:12:19,700
Okay.

1138
01:12:47,900 --> 01:12:50,100
Could you answer, what do you think of using call tree to track

1139
01:12:50,100 --> 01:12:52,200
dependencies across multi-threading?

1140
01:12:53,100 --> 01:12:55,800
Well, if you're talking about the profiler, so the problem is a call

1141
01:12:55,800 --> 01:12:57,000
tree doesn't really help you.

1142
01:12:57,100 --> 01:13:03,700
What we actually need to know is which set of calls goes with which

1143
01:13:03,700 --> 01:13:05,600
parent call, which is kind of tricky.

1144
01:13:07,600 --> 01:13:11,900
I mean, we can actually have like I said, I'm thinking of storing

1145
01:13:11,900 --> 01:13:14,300
actual parent pointer each one which at that point is sort of a call

1146
01:13:14,300 --> 01:13:17,500
tree, but it's actually like a, it's more like an act.

1147
01:13:17,700 --> 01:13:21,500
Actually tracking every single call as opposed to just a call, call a

1148
01:13:21,500 --> 01:13:22,200
typical call graph.

1149
01:13:22,200 --> 01:13:26,500
Just has this function gets called from this other function sometimes,

1150
01:13:26,800 --> 01:13:27,300
right?

1151
01:13:29,600 --> 01:13:30,100
So yeah.

1152
01:13:33,300 --> 01:13:36,000
What command do you use to change from cutscene to game?

1153
01:13:36,500 --> 01:13:37,500
I was the spacebar

1154
01:13:39,400 --> 01:13:41,100
tomorrow's episode 0xff.

1155
01:13:41,100 --> 01:13:41,800
That's true.

1156
01:13:49,200 --> 01:13:50,500
Expansion pack.

1157
01:13:50,500 --> 01:13:53,100
How do you handle tasks that run in separate threads would take longer

1158
01:13:53,100 --> 01:13:54,100
than a frame to compute?

1159
01:13:54,100 --> 01:13:56,500
For example, I heard that in the New Forest of the rearview mirror

1160
01:13:56,500 --> 01:14:00,200
updates at half the frame rate as everything else, that's totally

1161
01:14:00,200 --> 01:14:00,400
fine.

1162
01:14:00,400 --> 01:14:06,600
At the moment, we wouldn't be drawing those, but we can do that as

1163
01:14:06,600 --> 01:14:08,000
soon as we get all this stuff straightened out.

1164
01:14:08,000 --> 01:14:09,000
It's not very difficult.

1165
01:14:09,000 --> 01:14:12,700
Because if you look here where we'd say, like, oh, if we found an open

1166
01:14:12,700 --> 01:14:16,400
Event, if we didn't find an open Event in this Frame, but we found the

1167
01:14:16,400 --> 01:14:19,000
close event in this Frame, that means that it was running since the

1168
01:14:19,200 --> 01:14:19,600
His frame.

1169
01:14:19,600 --> 01:14:21,900
So we could just draw from the beginning.

1170
01:14:22,000 --> 01:14:23,500
We just hard set.

1171
01:14:23,600 --> 01:14:26,300
This clock value to 0, right?

1172
01:14:26,500 --> 01:14:28,200
Or sorry, this offset 20

1173
01:14:46,200 --> 01:14:47,000
Necessary.

1174
01:14:47,000 --> 01:14:48,700
Why was I not informed?

1175
01:14:48,700 --> 01:14:50,300
That Krampus is in this game.

1176
01:14:50,300 --> 01:14:51,400
Are you kidding?

1177
01:14:51,400 --> 01:14:54,600
Dude, I sent you the picture of Krampus.

1178
01:14:55,800 --> 01:14:59,600
Before I think even was shown on this.

1179
01:15:00,400 --> 01:15:03,400
You have like an email in your inbox of Krampus.

1180
01:15:05,600 --> 01:15:07,900
I'm pretty sure maybe not.

1181
01:15:08,900 --> 01:15:11,300
I know, I thought I thought I sent you the picture Krampus

1182
01:15:12,400 --> 01:15:13,600
But he's in the game, man.

1183
01:15:14,800 --> 01:15:16,600
Krampus is not just in the game.

1184
01:15:16,800 --> 01:15:22,500
Krampus is like the reason the game even exist because Santa Claus is

1185
01:15:22,500 --> 01:15:24,200
basically just a dick, right?

1186
01:15:24,200 --> 01:15:25,000
Which is true.

1187
01:15:25,800 --> 01:15:29,300
And he doesn't like understand that a little boy, that doesn't have

1188
01:15:29,300 --> 01:15:31,500
any arms is not going to be very happy.

1189
01:15:31,500 --> 01:15:32,900
Just getting hats all the time.

1190
01:15:33,600 --> 01:15:37,400
Like he needs to be able to like, get out and like do stuff in the

1191
01:15:37,400 --> 01:15:39,100
forest and like have adventures.

1192
01:15:39,400 --> 01:15:43,500
And so when Krampus comes and he notices that he like, totally

1193
01:15:44,400 --> 01:15:47,300
Saves the Day by giving the kid because, you know, as you know,

1194
01:15:47,300 --> 01:15:48,700
Krampus dismembered his children.

1195
01:15:48,700 --> 01:15:49,500
That's what he does.

1196
01:15:49,600 --> 01:15:55,800
So he'd have a lot of hands around in his sack to give to the little

1197
01:15:55,800 --> 01:15:57,700
kid so that he could have a hand now.

1198
01:15:57,700 --> 01:15:58,800
And that's exactly what he does.

1199
01:15:58,800 --> 01:16:03,100
So it's basically like Krampus is like is great.

1200
01:16:03,200 --> 01:16:04,800
I mean, that's basically the moral of the story.

1201
01:16:15,300 --> 01:16:15,400
Too.

1202
01:16:15,400 --> 01:16:18,200
Freaky is talking to the chat, while coding helpful to work things

1203
01:16:18,200 --> 01:16:18,600
out.

1204
01:16:18,700 --> 01:16:22,900
No, it's the opposite of that talking, while coding, makes it really

1205
01:16:22,900 --> 01:16:24,600
very, very difficult to code.

1206
01:16:24,600 --> 01:16:30,400
And I find that a lot of times it's hard to do complicated stuff while

1207
01:16:30,400 --> 01:16:32,300
I'm talking, but I do the best I can.

1208
01:16:50,900 --> 01:16:54,000
Do you have a problem with Santa from your childhood?

1209
01:16:54,000 --> 01:16:54,500
Yes.

1210
01:16:54,500 --> 01:16:59,800
Actually I do when I was little like my mom took me to the grocery

1211
01:16:59,800 --> 01:17:02,300
store and I was in the little cart.

1212
01:17:02,300 --> 01:17:05,700
You know, how I'd like you to sit like a kid in, like, like into the

1213
01:17:05,700 --> 01:17:08,900
cart and they are, like legs dangle through and they like sit facing

1214
01:17:08,900 --> 01:17:09,500
backwards.

1215
01:17:09,500 --> 01:17:10,700
I think so, they can see their parent.

1216
01:17:10,700 --> 01:17:16,000
Who's like, pushing them around and like this weird, like, dude

1217
01:17:16,000 --> 01:17:16,700
dressed as Santa?

1218
01:17:16,700 --> 01:17:19,300
Like, wave to me and said, ho ho, ho or something at Christmas time,

1219
01:17:19,300 --> 01:17:20,900
and I didn't know.

1220
01:17:21,000 --> 01:17:25,500
that was and I freaked out and I screamed and I like banged my head

1221
01:17:25,500 --> 01:17:27,100
like my, my

1222
01:17:28,900 --> 01:17:33,700
Like my mouth on the bar, on the, like, bar of the grocery cart, and I

1223
01:17:33,700 --> 01:17:37,500
let it, like, my teeth went into my lip and I like bled everywhere.

1224
01:17:39,100 --> 01:17:42,300
So like Santa's like, no good like, Santa is just not good.

1225
01:17:42,300 --> 01:17:45,600
We should we should have Krampus mostly and celebrate Krampus things.

1226
01:17:45,600 --> 01:17:49,900
And then Santa is like forget, Santa is not good, Santa should not be

1227
01:17:49,900 --> 01:17:52,500
allowed to be in games, other than, as a villain.

1228
01:18:13,600 --> 01:18:16,200
All right, John is saying that you didn't get a picture Krampus it did

1229
01:18:16,200 --> 01:18:17,100
I just send?

1230
01:18:17,400 --> 01:18:19,000
Did I only send Santa?

1231
01:18:19,600 --> 01:18:21,000
I sent a picture.

1232
01:18:21,200 --> 01:18:25,400
I'm going to go back and find it but I sent a picture and I thought

1233
01:18:25,400 --> 01:18:28,200
had Krampus in it but I guess I'm wrong.

1234
01:18:28,800 --> 01:18:29,500
I'll look though.

1235
01:18:31,200 --> 01:18:33,800
Did you consider visualizing timing using flame graphs?

1236
01:18:33,900 --> 01:18:41,100
But well in case you haven't noticed we're just starting to draw

1237
01:18:41,100 --> 01:18:42,000
profiles now.

1238
01:18:42,000 --> 01:18:47,400
So something as advanced as a flame graph, is going to require a lot

1239
01:18:47,400 --> 01:18:52,100
more code to write for an in, you know, in thing profiler so we could

1240
01:18:52,100 --> 01:18:55,300
consider writing a fling graph further down the line.

1241
01:18:55,400 --> 01:18:57,900
I don't think I will because we certainly don't need one and it's just

1242
01:18:57,900 --> 01:19:00,300
going to, you know, we spent a plenty of time on the debug system

1243
01:19:00,300 --> 01:19:00,600
already.

1244
01:19:00,600 --> 01:19:04,200
It like I wanted to spend time in the architecture of it so you can

1245
01:19:04,200 --> 01:19:07,300
kind of see me working through a bunch of weird trade-offs and see how

1246
01:19:07,300 --> 01:19:10,700
that goes, but spending a bunch of time making like, you know,

1247
01:19:10,700 --> 01:19:14,100
gratuitous graphs is not probably a super good use of stream time.

1248
01:19:14,100 --> 01:19:17,100
So I don't think we would probably ever write a flame graph.

1249
01:19:17,100 --> 01:19:18,900
They don't give you very much actual information.

1250
01:19:18,900 --> 01:19:23,200
As a visualization, they're kind of like I said a little gratuitous

1251
01:19:23,200 --> 01:19:26,800
it's not to say that they aren't helpful but it's like in terms of

1252
01:19:26,800 --> 01:19:30,600
actually needing a fling graph to do a profile to profile your code.

1253
01:19:30,600 --> 01:19:31,300
code, it's

1254
01:19:32,300 --> 01:19:34,700
There's almost no case where it's like I couldn't have gotten the

1255
01:19:34,700 --> 01:19:35,200
information.

1256
01:19:35,200 --> 01:19:40,200
I needed from a simpler graph and I think a lot of times, the only

1257
01:19:40,200 --> 01:19:42,700
reason you would ever really need a flame graph is if you're in some

1258
01:19:42,700 --> 01:19:45,500
kind of nasty, super nasty crazy code base, where you couldn't tell

1259
01:19:45,500 --> 01:19:46,400
what was going on.

1260
01:19:46,700 --> 01:19:47,600
Maybe that helps you.

1261
01:19:47,600 --> 01:19:51,600
I don't know, but they're not super necessary, right?

1262
01:20:01,100 --> 01:20:02,800
Is this suffering the same time as tank?

1263
01:20:02,900 --> 01:20:04,000
No, it's not suffering.

1264
01:20:04,000 --> 01:20:08,700
I think it's just going through the like ridiculous number of debug

1265
01:20:08,700 --> 01:20:10,700
for elements, right?

1266
01:20:11,500 --> 01:20:14,200
We just have way too many, debug elements to sift through at this

1267
01:20:14,200 --> 01:20:17,600
point because we're recording, we're recording arbitrary numbers of

1268
01:20:17,600 --> 01:20:18,200
frames.

1269
01:20:18,500 --> 01:20:19,000
Right?

1270
01:20:19,400 --> 01:20:23,600
That's why I said, like, we kind of have to not do this the way that

1271
01:20:23,600 --> 01:20:24,500
it's being done.

1272
01:20:25,500 --> 01:20:27,600
Because this has to Loop through every frame.

1273
01:20:27,700 --> 01:20:30,000
Every time every event every

1274
01:20:30,100 --> 01:20:32,700
There's just there's hundreds of thousands of them at this point.

1275
01:20:32,700 --> 01:20:36,100
So it's going to be way too expensive so that's why it's a, I'm not

1276
01:20:36,100 --> 01:20:39,700
really sure exactly what we want to do about that but we'll need a

1277
01:20:39,700 --> 01:20:41,300
faster way of querying.

1278
01:20:41,300 --> 01:20:45,000
The information that we need because basically all of the time is in

1279
01:20:45,000 --> 01:20:45,300
this.

1280
01:20:45,300 --> 01:20:47,400
If for example, you were to just get rid of this

1281
01:20:50,400 --> 01:20:50,900
Right.

1282
01:20:52,600 --> 01:20:54,200
Then I think you would be fine.

1283
01:20:57,400 --> 01:20:57,900
Why did that?

1284
01:20:57,900 --> 01:20:59,800
Not reload because it's saying,

1285
01:21:00,000 --> 01:21:00,600
Trouble code.

1286
01:21:00,900 --> 01:21:04,900
Thank you so much for telling me that that code is unreachable and not

1287
01:21:04,900 --> 01:21:06,000
actually building my game.

1288
01:21:06,000 --> 01:21:07,900
That's that's what I wanted you to do.

1289
01:21:16,400 --> 01:21:16,900
There we go.

1290
01:21:17,900 --> 01:21:20,900
So you can see if you just disable that search, right?

1291
01:21:20,900 --> 01:21:22,900
Then then you're okay.

1292
01:21:24,600 --> 01:21:25,000
but,

1293
01:21:27,400 --> 01:21:30,200
We definitely have some kind of a string problem because our strings

1294
01:21:30,200 --> 01:21:34,700
are guarded now, like we do push them on here, but you can see that

1295
01:21:34,700 --> 01:21:39,900
we're not actually getting like that, got across the reload, it broke.

1296
01:21:40,600 --> 01:21:44,500
So something is not getting pushed on properly, and we should figure

1297
01:21:44,500 --> 01:21:48,200
out what it is because that's that's a bug.

1298
01:21:51,200 --> 01:21:53,800
Right, because code reload should work now and it mostly does.

1299
01:21:53,800 --> 01:21:57,800
But that's these are not being pushed on properly.

1300
01:22:37,500 --> 01:22:39,300
Looks like we're done with Q colons.

1301
01:22:56,400 --> 01:22:58,700
I need to scroll back through and see.

1302
01:23:11,000 --> 01:23:12,100
See here.

1303
01:23:22,200 --> 01:23:23,100
Yeah, I think we're good.

1304
01:23:23,900 --> 01:23:27,400
All right, so let's go ahead and close down here.

1305
01:23:30,700 --> 01:23:31,300
There we go.

1306
01:23:32,600 --> 01:23:34,100
And yeah.

1307
01:23:34,100 --> 01:23:36,700
So this is what we'll work on tomorrow.

1308
01:23:36,700 --> 01:23:37,700
I'm going to get that going.

1309
01:23:37,700 --> 01:23:40,500
I I think really we just need to figure out what data structure.

1310
01:23:40,500 --> 01:23:43,700
Lets us draw some useful things that doesn't throw out too much

1311
01:23:43,700 --> 01:23:44,400
information.

1312
01:23:46,000 --> 01:23:47,800
We definitely can't afford to search it all.

1313
01:23:47,800 --> 01:23:51,500
All the time, we could just double link those list, so we can just

1314
01:23:51,500 --> 01:23:58,700
look at just the current ones or whatever, but I'm not certain

1315
01:24:00,000 --> 01:24:05,100
That has to go if that makes sense, Agnes hold heard, you have a

1316
01:24:05,100 --> 01:24:08,600
secret phobia of writing game code, not really a secret phobia but I

1317
01:24:08,600 --> 01:24:09,600
definitely don't like it.

1318
01:24:09,600 --> 01:24:12,800
Like that is, there's no question that that will be the least fun part

1319
01:24:12,800 --> 01:24:14,000
of the stream for me.

1320
01:24:14,200 --> 01:24:19,200
I don't really like game code because that, in my opinion, is for a

1321
01:24:19,200 --> 01:24:21,900
game designer to do, and I am not a game designer.

1322
01:24:21,900 --> 01:24:22,900
I'm an engine programmer.

1323
01:24:23,700 --> 01:24:24,600
So,

1324
01:24:25,800 --> 01:24:26,600
you know, will

1325
01:24:31,400 --> 01:24:35,000
we'll be out of things to do in the engine before too long.

1326
01:24:35,800 --> 01:24:39,200
But yeah, am I interested in running game code?

1327
01:24:39,200 --> 01:24:44,900
No, I don't really want to do it because that's not what I like to do.

1328
01:24:45,400 --> 01:24:53,600
And so typically like the, you know, the parts of game code that I'll

1329
01:24:53,600 --> 01:24:57,200
enjoy are the parts that were actually just actually implementing em

1330
01:24:57,200 --> 01:24:59,800
engine pieces but which are

1331
01:25:00,500 --> 01:25:03,600
You know, premature to do prior to the game code.

1332
01:25:03,600 --> 01:25:09,100
So like some animation code and code for how we handle, you know, just

1333
01:25:09,100 --> 01:25:12,600
storage of the entities or like that that's you know, code that I like

1334
01:25:12,600 --> 01:25:13,400
to write.

1335
01:25:13,600 --> 01:25:16,600
But code that's like actually gameplay code like you know what should

1336
01:25:16,600 --> 01:25:20,600
this enemy be doing at this point like I don't find the I don't like

1337
01:25:20,600 --> 01:25:21,600
writing that code at all.

1338
01:25:24,300 --> 01:25:27,900
like I said that's that's really for game designers to do and not me

1339
01:25:28,700 --> 01:25:32,900
that makes sense game code is for game designers

1340
01:25:34,500 --> 01:25:35,900
Not for engine programmers.

1341
01:25:37,000 --> 01:25:43,500
So I'm going to close this down and yeah, we got like I said we still

1342
01:25:43,500 --> 01:25:47,600
have more stuff to do before this debug system is really correct and

1343
01:25:47,700 --> 01:25:50,900
to sort of I guess answer this the baby, perhaps just a question is,

1344
01:25:51,100 --> 01:25:54,700
I'm not writing more debug code because I don't want to write gameplay

1345
01:25:54,700 --> 01:25:55,200
code.

1346
01:25:55,500 --> 01:25:58,900
I don't want to write gameplay code, but that's not actually why the

1347
01:25:58,900 --> 01:26:03,200
reason it just because until the D-backs system is, is satisfactory to

1348
01:26:03,200 --> 01:26:04,100
me, I don't consider it.

1349
01:26:04,300 --> 01:26:05,200
On right?

1350
01:26:05,900 --> 01:26:08,700
And I don't plan on really revisiting the debug system.

1351
01:26:08,700 --> 01:26:11,700
Much certain things like Collision detection, we did a little bit of

1352
01:26:11,700 --> 01:26:15,400
just to have it in place and sort of see what was there, but it's not

1353
01:26:15,400 --> 01:26:22,100
like done right but I'm planning on wanting more game code in place

1354
01:26:22,100 --> 01:26:25,000
before we go back and make the final one of it.

1355
01:26:25,300 --> 01:26:29,400
Whereas the debug code should just be this is this is we know what

1356
01:26:29,400 --> 01:26:30,000
it's going to do.

1357
01:26:30,000 --> 01:26:33,600
So we don't really have much more too much more information, we need

1358
01:26:33,600 --> 01:26:34,100
out of it.

1359
01:26:34,200 --> 01:26:37,700
So, I want it to actually be done to my satisfaction before moving on.

1360
01:26:38,200 --> 01:26:41,200
And, like I said, this was one where I decided to do things, I wanted

1361
01:26:41,200 --> 01:26:43,200
to show how to work through architecture stuff.

1362
01:26:43,400 --> 01:26:45,100
So this is stuff.

1363
01:26:45,100 --> 01:26:47,300
That is not the way I've ever done it before.

1364
01:26:47,300 --> 01:26:49,500
Possibly not the way I would do it again, either.

1365
01:26:49,700 --> 01:26:52,400
I just decided to try some different things and see what we would end

1366
01:26:52,400 --> 01:26:56,200
up with if that makes a sense to y'all.

1367
01:26:57,900 --> 01:26:59,800
So, yeah, so no because there's plenty of

1368
01:27:00,000 --> 01:27:01,400
Engine stuff we can do.

1369
01:27:01,500 --> 01:27:04,000
It's not like I have to do the debug code and the only other thing to

1370
01:27:04,000 --> 01:27:08,300
do is gameplay code because we've got a couple other things on the

1371
01:27:08,300 --> 01:27:11,700
to-do list that are definitely not gameplay code, that makes sense.

1372
01:27:13,200 --> 01:27:13,600
So,

1373
01:27:16,600 --> 01:27:19,800
Gary Johansen, can we make games and Game maker and submit them to you

1374
01:27:19,800 --> 01:27:21,100
for the final game?

1375
01:27:21,300 --> 01:27:21,900
No.

1376
01:27:23,300 --> 01:27:24,400
The game is designed.

1377
01:27:24,400 --> 01:27:25,900
I did that, it's done.

1378
01:27:26,100 --> 01:27:27,300
And that's what it'll be.

1379
01:27:29,400 --> 01:27:33,900
And like I said, the gameplay code is, is not that interesting to me

1380
01:27:33,900 --> 01:27:35,800
because that's basically like, you know,

1381
01:27:39,200 --> 01:27:40,000
What was I going to say?

1382
01:27:44,300 --> 01:27:49,800
Yeah, it's just like oh you know how exactly should this thing, do

1383
01:27:49,800 --> 01:27:51,400
what it's doing in terms of feel?

1384
01:27:51,400 --> 01:27:53,000
Or should this enemy like attack?

1385
01:27:53,000 --> 01:27:56,800
This guy, how frequently or something like that, that stuff is, you

1386
01:27:56,800 --> 01:27:59,000
know, you can't design that on paper or anything.

1387
01:27:59,000 --> 01:28:05,600
Anyways and you, you know, you've tip you want like a game designer do

1388
01:28:05,600 --> 01:28:06,500
those things like that.

1389
01:28:06,500 --> 01:28:07,500
That's what they're supposed to do.

1390
01:28:07,500 --> 01:28:09,000
That's their job, right?

1391
01:28:09,600 --> 01:28:13,900
And so I don't really want to do those things because

1392
01:28:14,100 --> 01:28:16,700
As that's very game designee.

1393
01:28:17,200 --> 01:28:21,800
And so normally I would just say that's the game designers job to set

1394
01:28:21,800 --> 01:28:22,500
all that stuff.

1395
01:28:22,600 --> 01:28:26,600
But in this case, there is no game designer here because I'm doing the

1396
01:28:26,600 --> 01:28:27,600
whole stream obviously.

1397
01:28:27,600 --> 01:28:32,300
So, you know, that's the way that is, in terms of tuning, we can

1398
01:28:32,300 --> 01:28:32,900
always.

1399
01:28:33,000 --> 01:28:36,800
If there's things that are easy to expose as just a variable, then

1400
01:28:36,800 --> 01:28:39,700
that's simple because then you can always just leave that and send it

1401
01:28:39,700 --> 01:28:42,500
to somebody who's a good game designer after we're done and be like

1402
01:28:42,500 --> 01:28:43,900
tree tune, these variables as

1403
01:28:44,000 --> 01:28:48,100
Necessary, but that's not, that's like not the hard part.

1404
01:28:48,100 --> 01:28:51,700
The hard part is more, the more intricate decisions about what's

1405
01:28:51,700 --> 01:28:52,800
happening in the code.

1406
01:28:53,600 --> 01:28:58,800
Like, you know, about the actual maybe like, I don't want to say AI

1407
01:28:58,800 --> 01:29:00,700
programming because that's kind of a loaded term, but I mean, they'd

1408
01:29:00,700 --> 01:29:03,000
like game Behavior programming.

1409
01:29:08,200 --> 01:29:12,400
Having making the decisions about what the enemies are going to do.

1410
01:29:12,400 --> 01:29:17,300
And when and how exactly right, there's how do you program that?

1411
01:29:17,300 --> 01:29:19,900
Well and I can show you how to do that.

1412
01:29:20,000 --> 01:29:23,900
But there's how do you make decisions about what it should do in terms

1413
01:29:23,900 --> 01:29:27,600
of making the game the best game and that is not in my purview, right?

1414
01:29:27,600 --> 01:29:31,300
I don't that's not my area of expertise so that's the sort of stuff I

1415
01:29:31,300 --> 01:29:35,200
just don't enjoy because I'm not versed in it and I don't have

1416
01:29:35,200 --> 01:29:36,000
anything to add.

1417
01:29:36,000 --> 01:29:36,900
So it's going to be

1418
01:29:37,400 --> 01:29:37,700
I'm a stream.

1419
01:29:37,700 --> 01:29:40,400
It's gonna be like, well, here's what this enemy does because I said

1420
01:29:40,400 --> 01:29:44,300
so, and if you want to know what the enemy actually should do, you

1421
01:29:44,300 --> 01:29:48,700
should go talk to somebody who's a good game designer and ask them and

1422
01:29:48,700 --> 01:29:53,300
hopefully, they can explain it to you because I'm not going to make

1423
01:29:53,300 --> 01:29:53,600
sense.

1424
01:29:55,500 --> 01:29:59,100
Abner's asking me to for people to stay on the chat.

1425
01:30:00,000 --> 01:30:01,300
After I am done, which is?

1426
01:30:01,300 --> 01:30:02,000
I am done.

1427
01:30:02,100 --> 01:30:04,800
So, I guess he wants me to say, stay on the chat.

1428
01:30:05,100 --> 01:30:07,100
I don't know why you should stay on the chat.

1429
01:30:23,100 --> 01:30:26,200
Abner, do you want to tell people why they're so stylish it?

1430
01:30:26,200 --> 01:30:28,400
I don't think people are going to be that interested in staying on the

1431
01:30:28,400 --> 01:30:29,000
chat.

1432
01:30:29,100 --> 01:30:34,200
Just because I said, so, because I'm leaving the chat, so it would be

1433
01:30:34,200 --> 01:30:39,200
weird for me to say like, oh, hey, you should stay on the chat while I

1434
01:30:39,200 --> 01:30:40,200
don't do that.

1435
01:30:42,600 --> 01:30:43,500
Abner coimbra.

1436
01:30:43,500 --> 01:30:46,800
It has to do with Juan 3D and an interview with him.

1437
01:30:47,000 --> 01:30:49,400
Well, why is that not just announce then?

1438
01:30:51,800 --> 01:30:54,100
Just someone wants, what's going on?

1439
01:30:55,000 --> 01:30:57,700
Why would you have a secret interview with One Chun?

1440
01:30:57,900 --> 01:30:59,500
Why wouldn't you just say we're going to have an interview with?

1441
01:30:59,500 --> 01:31:01,700
Wanted a here is when it is.

1442
01:31:02,800 --> 01:31:04,400
Something's up, what is up?

1443
01:31:05,500 --> 01:31:06,600
So me, tell me what's up.

1444
01:31:24,900 --> 01:31:25,400
Okay, wait.

1445
01:31:25,400 --> 01:31:28,200
You're going to stream an announcement of an interview?

1446
01:31:29,500 --> 01:31:33,300
It's not alive and what I don't even know what you, okay.

1447
01:31:40,600 --> 01:31:42,400
Ladies and gentlemen, I'm going to close down the stream.

1448
01:31:42,400 --> 01:31:44,500
I have no idea what's going on on the chat.

1449
01:31:45,000 --> 01:31:48,100
I feel like probably what's happened is that Abner is had too much

1450
01:31:48,100 --> 01:31:52,400
chocolate wine and now, believes that launched on is talking to him

1451
01:31:52,400 --> 01:31:53,400
from New York City.

1452
01:31:53,900 --> 01:31:58,900
It's sad, really, but that appears to be what has happened, I don't

1453
01:31:58,900 --> 01:31:59,200
know.

1454
01:31:59,200 --> 01:32:03,400
I've been asked that to ask you to stay in the chat, so I asked you to

1455
01:32:03,400 --> 01:32:03,900
do that.

1456
01:32:04,000 --> 01:32:07,800
You should feel free to assess the level of drunkenness that Abner is

1457
01:32:07,800 --> 01:32:09,800
currently at for your own.

1458
01:32:10,400 --> 01:32:15,600
Make your own using your own judgment and then you can decide whether

1459
01:32:15,600 --> 01:32:16,000
Sanchez.

1460
01:32:16,000 --> 01:32:17,700
I will tell you that one Chun.

1461
01:32:19,100 --> 01:32:22,200
Is somebody worth watching an interview with?

1462
01:32:22,200 --> 01:32:24,300
However, I don't.

1463
01:32:24,300 --> 01:32:25,000
This is the first.

1464
01:32:25,000 --> 01:32:27,200
I really have heard that there was even going to be interview.

1465
01:32:27,200 --> 01:32:29,700
So I don't even know what it would be on or what's it's about, I have

1466
01:32:29,700 --> 01:32:35,200
nothing else to say, but if one is going to be doing an interview on

1467
01:32:35,200 --> 01:32:39,100
something, that is probably going to be interesting, he knows a lot of

1468
01:32:39,100 --> 01:32:40,400
computer science, see stuff.

1469
01:32:40,700 --> 01:32:48,200
And so any sort of theoretical things, it's usually I would assume if

1470
01:32:48,200 --> 01:32:48,400
you're going.

1471
01:32:48,600 --> 01:32:52,100
Talking about anything computer science theoretical that.

1472
01:32:52,100 --> 01:32:53,000
That would be pretty interesting.

1473
01:32:53,000 --> 01:32:56,900
But I don't actually know because Abner hasn't said.

1474
01:32:56,900 --> 01:32:59,600
So anyway that's what's going on.

1475
01:33:00,000 --> 01:33:04,800
And now, I will close the chat down and let the I'm sorry, I will

1476
01:33:04,800 --> 01:33:07,500
close the stream down and let the chat do whatever it is that the chat

1477
01:33:07,500 --> 01:33:10,900
is going to do, and I'm mildly terrified, but I have to go to dinner,

1478
01:33:10,900 --> 01:33:14,900
so that's, I guess I won't even get to find out.

1479
01:33:14,900 --> 01:33:18,600
The situation is thank you, everyone for joining me, for their sort of

1480
01:33:18,600 --> 01:33:19,100
handmade hero.

1481
01:33:19,100 --> 01:33:20,300
It's been a pleasure coding with you.

1482
01:33:20,300 --> 01:33:23,300
As always, if you would like to follow along at home with source code,

1483
01:33:23,300 --> 01:33:26,400
you can always do so by pre-ordering the game on handmade here at org

1484
01:33:26,400 --> 01:33:28,600
comes to the source code so you can follow along.

1485
01:33:28,600 --> 01:33:29,800
You can also go to our

1486
01:33:30,000 --> 01:33:31,100
Forum site to ask questions.

1487
01:33:31,100 --> 01:33:33,700
If you have questions, you want answered.

1488
01:33:33,700 --> 01:33:35,000
That's a good place to do it.

1489
01:33:35,000 --> 01:33:36,000
We also have patreon page.

1490
01:33:36,000 --> 01:33:38,500
If you want to support the video series, we have a tweet bot.

1491
01:33:38,500 --> 01:33:39,100
You can tweet.

1492
01:33:39,100 --> 01:33:43,200
The, you can subscribe to that if you want the schedule tweeted to you

1493
01:33:43,200 --> 01:33:44,500
so you can catch the live stream.

1494
01:33:44,800 --> 01:33:48,200
And speaking of the live stream will be back 5 p.m.

1495
01:33:48,300 --> 01:33:52,800
Pacific Daylight time tomorrow until then have fun programming and I

1496
01:33:52,800 --> 01:33:54,300
will see you guys on the internet.

1497
01:33:54,300 --> 01:33:55,200
Take it easy, everyone.

